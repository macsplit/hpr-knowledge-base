Episode: 3908
Title: HPR3908: Emacs package curation, part 2
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3908/hpr3908.mp3
Transcribed: 2025-10-25 07:49:38

---

This is Hacker Public Radio Episode 3908 for Wednesday, the 26th of July 2023.
Today's show is entitled, In Back's Package Curation Part 2.
It is hosted by DNT and is about 11 minutes long.
It carries a clean flag.
The summary is, let's go through every single package installed in my EMAX configuration.
File 2 of 3.
Alright, this is the follow up to the last show that I did in which I just read to you
my EMAX configuration.
How fun is that?
So we are going to continue now with the second file that I have, second out of 3.
So there's only one more of these, and you're not required to listen to it anyway.
So yeah, my name is DNT, the last episode, I don't know what number it was, but I'll put
it in the show notes in case you missed it and want to go back.
So in that first one, we went through my first configuration file that loads kind of
a bunch of what I see as the basics of that fancy EMAX experience.
And then it has some logic for loading the other two files.
So now I'm going to go through the second file.
This file will load on my Linux laptop and on my work laptop.
But it will not load on termics if I open this same configuration, if I open EMAX on
termics with this same configuration.
This file will not load.
So I have a section about writing.
So it's going to have a bunch of packages here to do with writing.
Obviously I'm not going to be writing on termics very much, so that's why I didn't include
those in the basics.
So first package we have is called OliVeti.
It is kind of like a right-room mode, it's like a focused writing mode or whatever.
It'll narrow your text block a little bit and get rid of some other UI elements here.
I add to it what I call typewriter mode, which is based on this other package that's coming
next.
That other package is called centered cursor mode.
And it does like what I would call typewriter scrolling, which is it keeps the cursor right
in the center of the screen vertically.
So as you advance through your document typing out, typing up a storm, the screen will
scroll automatically as if you were, you know, as if this were a typewriter.
I've always enjoyed those things for kind of quickly writing out a bunch of stuff.
So that's what that is.
A centered cursor mode is what the package is called.
And next we have right good mode.
So this, I mean, no, that's kind of silly, I guess, but it'll highlight some, some what
it thinks might be errors for you.
So it's not super smart or anything, there's no AI or anything going on there.
It'll just have like a list of what it calls weasel words, for example, that are words
that are just likely to be used sort of lazily, let's say, words that could be well replaced
by other words that'll maybe be more evocative or that'll just be better.
So that's right good mode.
It's kind of nice.
I like to use it from time to time and I do think it helps me make some useful edits
to what I wrote.
Next we have fly spell correct.
So fly spell, I guess, yeah, fly spell comes with Emax, it's like a spell checking package
that comes with, you know, it's distributed with what you would call vanilla Emax, which
is just the plain Emax without any configuration or anything.
So fly spell comes with it, that's the, the spell checking, fly spell correct provides
commands for you to quickly correct your errors, your spelling mistakes.
And next we have fly spell correct pop up, which is the same thing, but instead of showing
the corrections in the mini buffer, it will show them in kind of a tool tip in the buffer
itself.
It's a little bit better.
So next we have power the source.
So power the source connects to an API from powerthesaurus.org to get things like synonyms
and antonyms and similar words and things like that.
There's also kind of a nice interface for replacing a word with some other synonym.
So you can just have the cursor on a word and you say I want to replace it with a synonym
and it will show you some synonym options.
And then you can just quickly pick the one you want and it will replace it.
And powerthesaurus does it like with like some smarts a little bit.
Then next we have sinusaurus, sinusaurus is the same thing as powerthesaurus, but it
uses word net, which is an application you can install in your computer so it doesn't
rely on anybody's service on the internet.
It is not as sophisticated in the replacing as powerthesaurus, but it's just fine.
I could very well get rid of powerthesaurus, I probably will at some point I guess.
Next we have word nut.
So word nut is to get word definitions and things from this application that's called word
net.
Well, so word net I guess is the database and then maybe word nut is the Linux application
for consulting it maybe something like that.
It's pretty handy.
You can have the cursor over a word and run a command to see like a dictionary definition
of it.
It's pretty good.
Next we have unfill.
So you might be familiar with the idea of feeling a paragraph that's taking a paragraph
of text that's flowing, flowing forever to the right if you're writing in the left
to right script and then you want to break it up into lines up to a certain length that's
called to fill a paragraph.
So unfill provides a command that's called unfill toggle that will fill and unfill paragraphs
with the same command.
Sometimes it is useful to do that, especially when you're typing in some kind of a markup
that where it's nice to have the paragraphs filled to have them broken up into lines
of up to a certain width, but you need to paste it in somewhere that doesn't like that.
It's kind of nice to be able to quickly unfill the paragraph and then copy it.
Next we have markdown mode that is that horrible, horrible markup language that everybody
hates, but nobody can get away from.
So I had to add that thing to my EMAX configuration.
That's all I have to say about that.
Next I have some coding related stuff now.
So we start with flycheck, which is syntax checking.
It'll show me where I messed up and why and flycheck popup tip.
It'll show me where I messed up in a little popup in the buffer instead of in the mode
line or the echo area or mini buffer or whatever it is.
So yeah, that's pretty nice.
It's definitely handy to have that flycheck stuff working with you.
And then next I have some HTML and things about mainly for my website that's in Jekyll.
I have Emmett mode.
That's kind of like an HTML mode, then SAS mode for the style sheets.
Emmett mode is also HTML.
I don't remember exactly what Emmett mode does.
Oh yeah, Emmett mode is this cool thing where you can type in an HTML document.
You can type like CSS rules and then it expands them into the HTML.
And yeah, it's pretty clever the way it does that.
It's kind of ridiculous, but anyway.
Next we have Python that's scripting language, you know.
And it's just to have a Python major mode for editing Python files, Python scripts.
And next we have HL2DU, HL-2DU.
So that's a pretty nice one.
You can be editing like a Python file and then you can have those keywords like fix me to
do whatever.
And you can quickly navigate through all those keywords that appear in your file.
So yeah, it's cool to see it and be able to quickly go through these notes you left for
yourself in your file, whatever type of file it is.
Then next we have, well, I don't know how to say this one is in my Git or magic, or
I don't know, my Git, I'm going to say.
So that's Git for EMAX.
I mean, to me it's the best way to use Git, it is really, really good.
So yeah, my Git.
There is even like, there's a cool other package that I don't use, but it will show, I think
it's called my Git to do's.
It will show in your my Git buffer.
It will show right where it shows like the commit log or whatever it is.
It will show all the to do keywords that appear in your files, you know, that's pretty
cool.
Next I have Git Time Machine.
This one is really nice too.
You open a file that's under Git and you can really quickly navigate through the different
revisions of it.
Combine that with my Git Blame to show you who made the change and you've got a pretty
useful tool there.
So that's the end of init base.
So we finish it off with provide init based, tell GTS that this is what we're calling
all this stuff here and that this file is doing.
So it says if I were, as if this were a package and EMAX package that I'm calling init
base, okay.
All right, let's move on to the last file.
You have been listening to Hacker Public Radio at Hacker Public Radio does work.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording broadcast, you click on our contribute link to find out
how easy it really is.
Hosting for HBR has been kindly provided by an onstoast.com, the internet archive and
rsync.net.
On this address status, today's show is released under Creative Commons, Attribution 4.0
International License.
