Episode: 1141
Title: HPR1141: mumble client intro
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1141/hpr1141.mp3
Transcribed: 2025-10-17 19:41:09

---

Well, hello there. This is the fake Ken found from Hacker Public Radio. And I'd like
to invite every single one of you out there to Common Join us on New Year's Eve for
the Hacker Public Radio Internet Party at 24 hour blast. Common Join us, details available
on HackerPublicRadio.org. It will be simply grand.
If you're not familiar with Mumble, it's a voice over IP program, which is gaining
some acceptance as a tool for augcasting. I'm not here to sell you on it, but with
the HPR New Year's Extravaganza approaching, I thought it might be useful to briefly go
over some of the settings and gotchas that you might find while setting it up and using
it. Mumble associate usernames have registered users with an SSL certificate, which the Mumble
client can generate or it can be imported if you have one that you'd like to use. If you
register on a server, you will want to export your current certificate and back it up. Once
a username is registered and associated with the certificate, it will not let you connect
with that username without that cert. This is a fairly common source of confusion and
generally the first thing to check if someone is having problems connecting to the server.
Importing and exporting certificates is done out of the certificate wizard, which is under
configure. One thing to note is that when you export a certificate, it will not append
the file type automatically. So when you export your certificate, give it whatever name you'd
like to save it as and make sure that you add .p12 as the extension. Mumble allows you
to use voice activation or push to talk to trigger your microphone. If you intend to
use Vox, think twice about it. No one wants to hear your cats and heater, your wife throwing
dishes at you. If you've convinced yourself that Vox is the way to go for the love of
all that is right and holy, take a few minutes and carefully run through the audio wizard
first, which is found under the configure menu, until you're certain that your voice will
trigger the microphone and that any background noise won't. The audio wizard is fairly self-explanatory
and it will walk you through the steps involved. Once you've carefully gone through this process,
consider once more whether your surroundings are actually as quiet as you think they are.
If you've come to your senses and chosen to use push to talk, you can set the toggle key
under configure settings shortcuts. Click add and then choose push to talk in the drop-down
menu, which will appear in the function column. Then in the same row under the shortcut column,
click that empty field. This will prompt you to type your shiny new push to talk key.
I recommend choosing a key that you're unlikely to ever touch under normal circumstances,
something like pause break, which is generally easy to hit but rarely used. The space bar
is a particularly bad choice because you will be keen your mic every time you type when
your mumble client is running. If you would like to have your push to talk key act as a toggle,
go to configure settings, click on the advanced button on the bottom left of the window and
choose audio input and then adjust your double push time. I find 300 milliseconds or so
a reasonable value. This will allow you to toggle your mic on with a double tap of that
key and then one more tap will toggle the microphone off. While you have the advanced settings
open, have a glance at some of the other settings available on the audio input page. The quality
settings plus the audio per packet setting under the compression section determines which
codec mumble will use to communicate with the server. Most servers default to 72 kilobits
per second, although the settings can be raised to allow up to about 120 or so. If the
quality setting in your client is higher than the server will allow, your client will automatically
match the server requirements. So you can safely set your quality setting as high as it will
go and then let the server dictate which codec will be used. Provided you have enough bandwidth
to handle it. The highest codec and bitrate available for the settings you've chosen will
be displayed to you below the sliders. Below the compression settings you'll find a
couple of options for noise suppression and amplification in the audio processing section.
You probably won't have to touch these if you've gone through the audio wizard, but
they are a simpler way to fine tune your audio if you find your audio quality is not what
it should be. Allow me to stray a moment before coming back to these two settings. You
have two easy options to check your audio quality. You can either record a snippet of yourself
assuming you're running version 1.2.3 or higher, or you can enable one of the loopback
settings to hear your voice as you speak, which are found in the advanced audio output
section of settings. You have the option of local loopback within the client or loopback
from the server, and I'd recommend using the server loopback so that you will be hearing
what everyone else will hear when you speak. Now going back to the audio processing section
of the audio input settings. The first setting is for noise suppression, and this is very
handy if you're in a noisy environment and you want to cut down on fan noise or something.
The higher you set this, however, the more it will distort your audio, and you will
probably want this somewhere between negative 15 and negative 30 decibels, but it depends
entirely upon your environment and your recording setup. The amplification refers to how much
the audio from your microphone is augmented. Now I've never had a microphone that much
liked having its amplification set much above one, which is the lowest setting. If you
sound like you're peeking out, try turning your amplification all the way down before
you start adjusting your microphone settings in your mixer. It may take a little time
to find the right balance, but it will be time well spent in the end. There's one more
thing you might want to be aware of while you're poking around in the settings. In the
network settings, you'll find use quality of service. If you find that your connection
is flaky and the server keeps dropping you, you might try turning this off. Is there
been some issues reported where it doesn't play nicely with common home routers? A couple
more things and I can wrap this up. Mumble allows channels to use passwords, but the
implementation is a little odd, at least to me. Channel passwords are stored as access
tokens, which can be accessed under the server menu. If you have a password add, open
server, access tokens, click add, and then enter the password in the new entry, which will
be labeled empty token. You won't be associating that password with a channel. The access token
list is parsed when you attempt to join a password protected channel, and if it finds the appropriate
password it will let you in. This is something to bear in mind if you ever do decide to password
protected channel on the off chance that your password is the same as another channel on
the server. Finally, if you ever want to rename your account on the Mumble server after registering,
you can have an admin do that for you in the registered user list, also found under the
server menu. Right clicking on a username gives you the option of renaming the user. Incidentally,
if a user loses a certificate, this is also where you'll delete that old account. Mumble
isn't without its quirks, but it's a fairly nice system out of the box. Investing a little
time will improve your audio and save you a few headaches, and hopefully this will have
given you a few hints about where to get started.
You have been listening to Hacker Public Radio at Hacker Public Radio. We are a community
podcast network that releases shows every weekday Monday through Friday. Today's show, like
all our shows, was contributed by a HPR listener by yourself. If you ever consider recording
a podcast, then visit our website to find out how easy it really is. Hacker Public Radio
was founded by the Digital Dark Pound and the Empanomical Computer Club. HPR is funded
by the Binary Revolution at binref.com. All binref projects are proudly sponsored by
LUNA pages. From shared hosting to custom private clouds, go to LUNA pages.com for all
your hosting needs. Unless otherwise stasis, today's show is released under a creative
commons, attribution, share a life, lead us our lives.
