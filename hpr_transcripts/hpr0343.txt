Episode: 343
Title: HPR0343: Virtualization
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0343/hpr0343.mp3
Transcribed: 2025-10-07 16:50:55

---

.
Hello everybody and welcome to another episode. In this episode we're going to talk about virtualization.
I'm Mark Clark, I'm from South Africa and I'm an open source developer and solution architect.
The work I do is basically involves using open source components to build solutions
and also do a lot of coding in Java and PHP to glue the solutions together.
Sorry and my name is Darling Parker and I'm from Calgary, Alberta, Canada.
And I work with a Linux based development company and my role is to work with people around the world
to integrate open source solutions into various verticals such as schools, government, business and so on.
How's the weather in Canada today, darling?
Well, it was so beautiful over the weekend, Mark and now it's springtime in Alberta and that means it can be 18 above one day and snow the next.
So today's a little overcast.
Today's a little overcast, but I'm sure glad we're finished with our 40 below and you guys have had 40 above.
Yeah, it's been Easter weekend this weekend, yeah, so it's been weather session quite nice.
Yeah, it's getting to autumn. Yeah, I guess it's cold and miserable.
If you think dazzle, I only guess to slow it zero degrees, which we consider pretty cold over.
Yeah, but yeah, so you guys are getting summer and spring and we going into the winter this side.
Yeah, yeah, that's true. So when I when I plan my trip there, I'm going to come actually.
If you lay my trip a little bit, so I'm going to come the middle of July, August, I told I was told it's still not too hot.
So 25, 30 degrees, I can live with that.
No, no, that's mid winter. Yeah, it's a bit miserable cold.
It gets you about zero sometimes, you know, in the in the morning.
So let's meet up and get out a bit.
Okay, but today we're going to talk about virtualization.
So first, consider what is virtualization?
All right, well, it might be pointed where you can utilize resources of your PC processor and the server processor,
where you can allow multiple applications and operating systems to coexist.
And it's, you know, when it really reduces your power, your cooling and space requirements on your server room.
How do you see it, Mark?
Yeah, virtualization, as you say, it enables you to run multiple OSs of one piece of iron as a base metal.
So what you can do is you can have two or three server operating systems running over the same machine.
And the machine looks as if it's, you know, it's service serving those three operating systems all at the same time.
Obviously, it's doing multi-tasking and task-blasting at the processor level,
but it enables you to essentially install three separate operating systems in the whole field,
or even when you want, actually.
And it's all self-contained.
Operating system thinks it's actually running on on real hardware,
and it's not actually running on virtualized hardware.
I mean, that's in a nutshell, this is hard.
I understand virtualization.
Right. And, you know, and with the dual core and quad core platforms that we have now,
you're able to run, you know, like you say, the three or four OSs on there without any problems.
And as well, I know that we use the virtualization for our development of our software and testing the applications,
so that they can be deployed on a much faster basis with the high degree of confidence.
Yeah, I mean, that's one of the benefits of virtualization is that ability to take images of your environments.
And it's quite nice that you're saying for development,
because you can take snapshots of your production environment,
and use it to refresh your dev environments.
And now, you don't have that problem you just had in the past,
so trying to sync dev and production environments.
You know, so you always have some application,
some bug that only manifests itself in production,
and you can navigate it as you manifest yourself in dev,
and then how are you trying?
Now, that's a lot easier, because you can just snapshot the production environment and move it over to dev.
So there's got definitely got advantages in that.
I mean, the other advantages of virtualization,
as you touched on, include things like server consolidation,
so there's an immediate cost saving there in terms of, you know, having 10 servers,
now you've got one with 10 machines running on top of it.
Now, what I do find bizarre is a few years ago,
I remember when we did some work for the banks,
you know, they would always bar these machines just away over-spect.
You know, like they'll get like some small web server thing,
some internal department, and they'll have four gigs of RAM.
You know, the thing I need is, you know, about a gig of RAM,
and you'll have a quad-process of box or four-way box.
And that's overkill.
And now, suddenly, you know, all of the vendors and everybody's turn around and say,
oh, you know, you've got all this big capacity in your data center,
all this underutilized capacity, you kind of wonder,
well, you know, who's responsible for that?
Because I saw them all this hard, we're in the first place.
But yeah, and I think this is realisation now that a lot of the resources
underutilized in the data center,
and better use can be a bit more consolidated.
And so, instead of having three machines,
they're only using 30% of the resources.
You know, I have one machine that's using, you know,
an affinity to the resources.
So, there's a much, there's a cross-saving there,
and not only the cross-saving in terms of, you know,
not having to maintain 10 different boxes,
and having 10 different pieces of hardware they can fail,
there's also a much lower power consumption,
which is, you know, a big issue these days.
It was looking for more environmentally-friendly methods of carrying on business,
especially, you know, in most of the world,
these is non-energy crosses.
I'm going to get onto Africa, for example,
running out of power reserve margin and power stations
because of lack of planning.
So, all these things are issues that people, you know,
what people are looking at virtualisation.
Right, and along with the powers,
so having 10 less or 9 less servers running as well,
you're not cooling that server room for 9 more servers as well,
because that's always a big power draw.
Yeah, I mean, so Africa, you know,
so Africa had some of the cheapest power in the world
for the last 10 years,
and we won't realise now why,
because basically they weren't investing in infrastructure.
So, I mean, Africa, we're very, people are very,
what would you call it,
Lex attitude towards electricity,
whether it's having to change now.
And as you said, not only is this power saving,
because government just going to introduce penalties
just enough for heavy users of electricity.
But there's also all the savings in space,
you know, server room, cooling, everything.
So, yeah, it has a multiply effect on,
and also it's all like,
now you only have one administrator
as you can look off the one box,
as opposed to having, you know,
two administrators look off the, you know,
10 boxes or something like that.
So, all around,
it's much more efficient and much more productive
to consider virtualisation of your service.
Great, and also want to touch today too, though, Mark,
is that there are actually two types of virtualisation, right?
There's desktop virtualisation
and the server virtualisation,
which we've been speaking about.
So, maybe today I can talk a little bit about
the desktop virtualisation,
and Mark, you can pick up on the server side of it for us.
Okay, great, yeah.
All right.
So, I just want to say that, you know,
virtual desktop infrastructure,
it takes the concept of the virtual machine
and uses it to run multiple PC clients instances.
Most people think of thin clients
when they think of this.
But there are numerous products out on the market,
both Linux and Windows-based,
that allows each user
to have their own unique environment,
and you can customize them with different apps
and settings without impacting the other users.
And they're just, you know,
good for applications that were not multi-user-friendly
can be running this environment as well.
So, Mark, some of the versions,
so there's a couple of different ways,
different approaches to that.
There's some that have multiple OSs,
so like on my laptop,
I can run Bista and Ubuntu.
And so, those are products like virtual box,
VMware, Parallels,
which is mostly on a Mac platform.
And then you also have true desktop virtualisation products,
like the Linux-based ones,
such as user pool,
or Windows-based products, such as Soft Expand.
Mark, do you have anything to add to that?
Yeah, look, most of my experience
is with virtualisation on the server side.
The desktop side is very limited for me.
Any time I really use it on the desktop side,
when I'm trying out new Linux distributions
to see how they work off.
I want to try something which potentially can mess up my system
in our launch of virtual machine pool.
I typically use virtual box on Linux.
Virtual box is completely free and open-source.
And they're sun-borted and they change the last.
And I think they're open-source to completely know,
which is why I prefer it.
Another thing favorite with Linux,
of course, is VMware and desktop.
I haven't really used VMware that much mainly
because of its proprietary nature.
I just feel that once you start using it,
eventually you'll get trapped in it,
and you have to start somewhere along the line.
They're going to turn around and ask you for licensing fees.
But my experience with the way,
you know, there's definitely a difference in the way
the desktop virtualization works
compared to your server virtualization.
Because desktop virtualization basically runs on top of your,
my understanding, on top of the operating system.
So you load your operating system,
then you load the virtual environment
which will launch your virtual machine.
So the hypervisor sits on top of the base operating system
as it were, or the virtual machine manager.
Whereas with server machines,
basically the hypervisor loads first,
and then the host operating system loads,
and then the guest operating system when I'm top of that.
So there's a slight difference in how they work.
One of the things I do find is that in my experience,
you know, when I hear a lot of people talking about desktop virtualization,
they say how fast it is in our snappy.
And maybe I just got underpowered machines
and I don't bomb deep enough machines,
but I normally find that there's a different slowdown
in the desktop environment that you're working in
when you virtualize the machines, the desktop's there.
So, you know, to me, it's not practical to work in a virtual desktop constantly,
you know, as an environment you want to try
and test some various things, that's okay.
But personally, I don't find that that snappy.
But other say, maybe it's just because
in the typical machines I buy,
you ask Africa,
they only have like one gig of memory
and, you know, the entry-level processes
may be overseas.
We're here a lot more of these reports
some people can afford, you know,
more beefier, hard way.
Right.
Okay, well, Mark, so my side of that is that,
of course, you know,
we want people to try these on,
things that are dual core, quad core.
And if you're only doing one or two users,
I mean, you could get away with a Pentium D or something, right?
But for us, we've, my suggestion is like that the multi-OS is,
I'm just going to give a real life example,
but what I use it for.
So, I had a new salesperson who needed to learn some Linux.
But she had a, she has a VISTA,
a VISTA laptop,
and that's what she's familiar with,
and she was, you know,
but I needed to train her,
so I loaded on virtual box for her,
so I could have Ubuntu running,
so she could actually play with it
and learn a little bit about what she had to talk about to people.
And then on the desktop virtualization side,
you're right, it does load on top of the OS,
and expands it from there.
And yeah, this is where you need that higher processor,
even myself when I loaded a virtual box on this over the weekend.
I took the highest, you know,
the best quad processor we had in the building to load it on,
because I knew that the windows would drag it down,
and also I had four stations running on it with the multiple OSs.
But what I wanted to say, though,
is that the same thing we talked about on the server side applies
on the desktop side,
so with the green computing,
with the reduction in power draw,
so instead of 10 desktop PCs,
you only have one,
like say, for example,
instead of, you know,
you have to eliminate nine out of that mix.
You're not cooling down the office
or the classroom or the computer lab
where all these things are running,
and they tend to be left running.
I don't know about in South Africa,
but in North America,
school labs are left running 24-7,
and I heard that that's also the case in the UK,
because they're really moving towards
a zero-carbon footprint for their schools there.
That's going to say, I mean,
in South Africa,
it's a big deal of computers are left on 24-7,
but that's, you know,
that's because in the early days of computing,
everyone was told it's better to leave your machine running
than to turn it on and off every morning,
or turn off in the evenings,
and turn it on in the morning,
because of the power surge could damage the machine,
so it's sort of like a bit of a cultural thing,
that it would just leave the machines on,
because it's never been told that it's the best thing to do.
Okay, so anyway, so that's my input on the desktop side,
just that you're just utilizing,
because, you know, if you look at,
like you say, the bank,
you used the example of the bank that bought,
you know, the way too much hardware for what they really needed,
and in here, I know here in North America,
people are sold these,
I call them SUV computers,
they'll never use,
they'll never use the full capacity of those computers.
Great, the guy at the computer store will sell them the moon,
and so what we believe is that, you know,
organizations can actually utilize the capacity of those computers
by layering on top of these virtualization programs.
Yeah, look, there's many advantages in the hardware.
It's, you know, it can't,
it can't emphasize the advantages it has,
which is actually for users of your hardware.
You know, it gives you the ability to basically treat your hardware
like a resource pool,
that you can re-allocate, you know, almost at will,
to ever need the processing power.
So, you know, the move happened a while ago
with disks in terms of sand, disks,
and, you know, central, central disk storage,
now it's happening with CPUs and memory,
and you can allocate, you know,
resources to get vacations,
but it's clicking a few buttons.
So this is also obviously in the,
predominantly in the server environment,
where you can just dynamically allocate resources
to your machines.
It's a typical scenario that people use
as like a machine that's a process that runs during the day,
like let's say, at the bank,
and, you know, you have your online web server
processing all the transactions,
but in the evenings,
another machine has to start up,
and, you know,
it takes over most of the resources
and starts doing this batch processing.
Now, you can have one machine that's busy 24 hours a day,
or rather than having two machines
and a busy half the time.
So that's what we're,
for me,
we're the most exciting,
especially with server virtualization,
actually, actually a lot.
It has the ability to allow for my great dual servers
from one machine to the next.
You know, and it also has the advantage of hardware fails.
It doesn't mean that your server goes down.
You can allow for my greater to another machine
that will take over,
another virtual machine will take over the processing
of that application.
And so you have a lot more redundancy,
a lot more flexibility with applications
and higher deployments.
That's one of the advantages on the server side.
And one of the things you didn't talk about
was running Windows as a guest area
on top of Linux,
because in ESO Spain,
there's a couple of,
there's full virtualization
for the first virtualization,
which came out,
which basically, you know,
emulated the entire virtualization,
the entire hardware stack.
And that was extremely slow.
So you had QME,
and also one of the first ones that came out
and VMware as well did it.
But you would have,
you know,
you really just,
apart from machines,
processes that guests are interested in
any sort of reasonable speed.
And then what happened was
called parapertualization.
A parapertualization does,
it needs,
it needs the kernel
of the guest areas to be aware
that it is running in a virtual machine.
And therefore, it's got special APIs
that it talks to the,
to the host areas,
to the hypervisor,
rather than,
rather as APIs.
So essentially what it does,
it doesn't virtualize all of the hardware,
it only virtualizes some of it.
And this, you know,
gives a great speed improvement
to virtualization.
So the, you know,
when I first became aware of,
or the sort of explosion in virtualization
was when they started talking about Zen,
Linux,
and Zen was a parapertual machine.
So a hypervisor.
And then you could see it definitely,
you could run servers,
you know,
they're three servers in one machine,
and they're quite snappy and responsive.
However, you couldn't run windows,
guests,
because windows,
you'd have to modify
the kernel,
so they became aware
that it was running in a virtualized environment.
And of course,
because windows is not open source,
you can't do that,
whereas with Linux,
you could.
And of course,
it wasn't the markers of interest
to allow people to do that.
Right.
But then what happened is
the hardware manufacturers,
Intel and AMD,
basically introduced hardware switches
or hot,
is in the CPUs,
they introduced some hardware changes,
which enabled you to run windows
in a guest environment,
because windows are actually unaware
that it's in a guest environment.
So I'm not all familiar
with the whole technology around it.
I know it's got to do with the Ring Zero,
which is a protected mode,
with running in the kernel,
and hardware,
the kernel nodes,
and Ring Zero,
and all this kind of stuff.
But essentially,
it fools the guests,
they're just into believing
that it's running securely in Ring Zero.
So yeah,
and so now that you have that,
you have what's good,
hardware-assisted virtualization.
So if anybody's buying CPUs
and the one who,
you know,
want to use virtualize,
I just want to make sure
they get the best speed out of it.
Just look and see,
I find that exactly the extensions,
the Intel and AMD CPUs are support
to provide this.
But yeah,
you must just make sure that you're buying
prices with those,
with those extensions.
In fact, I mean, most of the modern prices,
I think all of the modern prices
have those extensions
by default these days.
Yeah, I have some notes here that says,
Intel VT or AMD V,
so maybe those are the,
the X86 processors
that they have,
this virtualization done for.
Yeah, and normally you can go
like you can just less
prox CPU info,
and then you'll see it there.
And you've got to look for those,
those strings that you mentioned,
and then you'll know if your CPU
supports it or not.
Okay, so one of the things
I'd like to talk about quickly
is give a quick overview
of the virtualization technology
that are available on Linux.
I have an experience with Xen,
Harper Vase,
and then also KVM kernel module.
Xen was the first Harper Vase
that I started using on Linux.
That was back in the days
when you had your compiler
and install it from scratch
and all of that kind of stuff.
Now, there's a lot easier,
most distributions
have a Xen enabled kernel
on the video available,
so you can just
get it or yum,
install it,
and that kind of stuff
and it's there and it's running.
So Xen was the one
that sort of brought it to the floor
in the Linux world,
although there was a whole
history behind it,
as you mentioned,
or a lien before that.
And I must say Xen
found quite usable,
easy to use, easy to set up,
and you managed everything
from the command line,
and you know,
of course it wasn't small,
small installations,
and it was very stable,
and you know,
delivered on what it,
what it said it did.
Then,
it wasn't officially included
in the Linux kernel,
of course.
And eventually,
the Linux included a KVM
with a kernel,
kernel virtual machine,
which essentially is a kernel
that runs on top of Linux,
or runs in Linux.
You know, not that much of a,
of a kernel developer
or knowledgeable in that area at all,
but the way I understand
that KVM basically,
then,
would load the hypervisor first,
and then it would load the Linux kernel
on top of that,
what is called DOM0,
or the host operating system.
So essentially,
the hypervisor would have control
of the whole,
of the actual hardware.
Whereas the KVM essentially
in Linux loads,
and then it loads the virtual machine,
and all the hypervisor is a module
in the Linux kernel.
So it's much more
if the Linux kernel is in control,
rather than,
rather than the hypervisor in control.
And I've used KVM as well,
you know,
in both of them,
or as much of a much of this,
they basically both work.
One of the differences is that KVM
doesn't support
parapertualization.
So if you wonder,
you can't run,
if you have a CPU,
it doesn't support the,
there's extensions that we talked about,
and then ability to run,
unmodified windows,
or ASUS,
as guests,
you can't run windows in it,
because it requires that,
that the CPU is,
whereas Zen allows it to use
all the hardware,
where you can,
in virtual hours,
windows,
and other Linux operating systems.
So, yeah,
as I said,
much of a much of a much of this.
It seems that,
you know,
the distributions are all
picking and choosing,
which,
which virtual machine,
you know,
they're going to support.
So it looks like,
Susser is,
is sort of stacking up
behind Zen,
where that was using Zen,
but then Zen got bought up
with Citrix,
and now they're moving more towards KVM.
So, yeah,
that's the,
that's my experience with the
server side virtual machines.
I haven't used VMware at all,
and I haven't used Parallels,
or I'm not even sure
Parallels is a server
virtualization environment
with just the desktop virtualization environment.
Okay, Mark.
So,
do we want to talk about,
maybe some of the pros and cons
that go with virtualization?
Yeah, I can,
I think we've got a lot of the,
the pros of virtualization already,
but on the cotton side,
networking,
you know,
because now you're working in a virtual environment,
and you have virtual network cards,
all of these different
virtual machines,
sometimes that can become
quite complex.
And one of the,
the key things in is
how you handle a routine,
and your firewalling,
and your, you know,
you know,
like let's say,
you've got Alfie Tails,
set up how you handle that
to make sure that you're
working.
So, one of the issues,
a lot of the vendors
don't really have a proper response to it,
is around security,
around virtual machines.
And because now,
if you have,
after you're done,
let's say your,
your host operating system gets hacked,
your,
all your guests operating systems
are basically vulnerable then,
because that obviously has
special access to the,
the guest operating systems.
And also, you know,
you can imagine,
these nightmare scenarios,
where you've got a huge data center,
with virtual machines,
has been migrated from,
you know,
because a machine no longer
stuck in a particular piece of hardware,
and somebody,
which has launched a,
a fake virtual machine,
or hacker virtual machine,
that is migrated
around the data center
and it will be almost impossible,
to stop,
if they're smart enough
and handling it.
I think at this point,
we're,
we're stopping a lot of,
you know,
things are happening,
because there's still new technologies,
and no one's really,
up to speed with all of its,
vulnerabilities,
and issues at the moment.
But I'm sure we'll see
that coming through,
and obviously,
there will be a response
from the security side,
and how to deal with that as well.
But I think it's a,
it's a young technology,
and we're still yet to see the,
you know,
there is,
how are we going to deal
with that kind of scenario?
And also, maybe it's not an issue.
You know,
I remember,
I went to a,
in a,
in a world,
Microsoft Interop meeting,
you know,
and one of the guards,
they asked the,
the Microsoft guard,
so, you know,
what about security
on your virtual machines?
And the chap said,
no, you know,
it's a very small kernel,
it's really paid down,
and it's basically,
it's unhackable,
you know,
how are we going to start laughing,
you know,
so,
yeah, so,
I guess what I'm saying is,
I wouldn't run Windows as my,
as my half of ours,
I think,
then you're looking for troubles, so.
Right.
But actually,
it's funny that you would say
that it's a young technology mark,
because actually,
as I was reading and preparing for today,
IBM had been working on virtualization
for the last 40 years.
Can you believe that?
It just doesn't become mainstream,
and,
but it's been,
it's been around in the background
and building ever since then,
and,
I think it's pretty cool.
But to talk about some of the things
that you mentioned,
about the cons here,
one is,
I think that,
make sure that you're staff,
your technical staff,
understand the principles,
because you bring in new skill,
but, you know,
to a new environment,
you want to make sure
that people are there,
so we're incident
and problem management.
It's well,
I think also, you know,
because we have virtual servers,
you know,
we can control our physical servers
in the room, you know,
for, for sprawl,
but,
as we're adding all these virtual servers,
if too many people
have their fingers in the pie,
and it's not managed well,
you can actually have
virtual server sprawl as well.
Yeah, you've got to be careful there,
because, you know,
you get so excited,
when you start playing on
a virtual machine,
that,
next minute,
you start launching a virtual machine
for every application.
You know,
Exactly.
Yeah, and then it becomes
unmanageable,
and then,
so the whole management side,
where I think,
where they're really the,
the competition's going to heat up,
because that's where you need to know,
what's running,
how you shut it down,
clearly, can you decommission?
So the whole process,
let's say,
when you had a physical thing,
of commissioning a machine,
running it,
maintaining it,
and decommissioning it,
you know,
because of the physical machine,
it was,
your certain processes
and policies in place to do that.
And I think,
management these
has an art infrastructure,
and you make sure that,
virtual machines are still,
maintain those same policies
and principles in place.
You know, commissioning
and decommissioning machine,
because it's just quickly,
one of the benefits of,
obviously,
to almost instantaneously,
provision,
service for,
for business units
and larger corporates.
And typically,
in the process,
if you were,
running a project in the bank,
and you said,
like, let's go to infrastructure
and get a machine,
you know,
then it's, oh, well,
we have to order the machine
from our VM,
and it wraps two weeks later,
then they have to,
put the operating system on it,
and, you know,
that takes another week,
before the machines are available,
to be used.
Now, with virtualization,
you can,
provision these machines,
because you can have templates
for the machines,
that can be,
provisioned within minutes.
So that's an advantage there,
but it's also a danger,
as you say,
by, you know,
virtual machine sprawl,
where you just have these,
these road machines,
running that no one knows about.
And the other thing I want to talk about,
too, Mark, was,
it's kind of a pro,
and it's kind of a con,
all at the same time.
So, at the tell call that I worked out,
we actually used
a virtual machine
for a legacy application
that we had,
that was DAW space.
But has you replaced your,
has you replaced your equipment,
we weren't able to find a server
that would run that program,
we had to run it,
we had to run it virtually,
because we hadn't,
they had not designed a program
to replace it yet,
for that application.
So that's,
that's a pro, right?
You can run some legacy programs,
on a virtual side.
But the con was,
it comes back to a single point of failure,
when you have multiple applications,
running virtually on one server.
And I know that,
one day,
our server room,
actually overheated,
and it affected half the country,
but the security guard,
I just didn't,
he didn't record,
he didn't realize the alarm was going off,
that the heat was building in the server room,
so everything shut down.
And,
and you would think we had some redundancy build,
but I guess we can go into that another day.
Have a building redundancy into your systems,
but it brought down our whole data center
for half a day,
and it was,
you know, that's,
that's pretty serious,
when you're talking about a national telecom.
Yeah, I've heard this,
because a lot of the infrastructure guards,
I think, you know,
they locked,
they just look at the hardware side,
so they lock all this redundancy
and backups for hardware failures,
and which,
and they,
you know, to the degree
there are probably virtualization,
because I see it as,
now you've got a single point of failure,
and always machines running on it.
But I mean,
if you architect,
I can obviously,
if you've got,
depending on the amount of money you've got,
but let's say,
you take your solution in such a way,
that you've got a sand discs.
I mean, obviously,
a sand disc is all of that
hardcore redundancy
and snapshotting
and everything that can happen there.
And then you have your,
your machine.
So, you know,
in fact, you've got,
you've got a lot of redundancy now,
because essentially,
instead of having redundancy,
all in,
let's say,
each machine had to be said
to be redundant.
You can just set up,
essentially one,
you know, the discs,
the one sand server to be redundant,
and all of the lightest and greatest technology there.
And then,
in terms of the,
the CPUs and the,
and the,
and the,
memory and stuff,
well, now you've got redundancy,
because you can just migrate your virtual machines.
So, you know,
you've got the complex,
management,
infrastructure for your virtual machines,
and all the tech.
And it almost becomes,
like, automatic clustering,
and failover,
and all of those good things.
So, it automatically detect that the CPU is failing
on the one box,
it will migrate the,
the machines on the one server to the next.
So, all of those good things.
I think, you know,
the potential,
even therefore,
for uptime and,
power availability,
all of that with,
with virtualization.
It really exceeds,
it was currently available,
you know,
once this architecture is right.
But,
and I think that's the key thing,
and if people have to learn lessons,
their hardass will done,
hard to architect it,
in such a way that you do,
that redundancy.
And we were going to talk a little bit about networking,
how come,
you know,
if it can be kind of tricky
with virtual machines,
is that correct?
Yeah, because the virtual machines
can be tricky,
in the sense that
it, obviously,
you're not going
But let's say in theory, you've got one ethernet quite as connected to the network and all these virtual machines are talking through that
So then you know each of the virtual machines need their own RPs
You need to also root between the the host OS and the guest OS's
And so especially on the desktop site and you often hear the complaint that people have difficulty accessing
The the share is on the virtual machine from the from the host OS and stuff like that because of the difficulty around networking
It is it is becoming easier
But it is it is quite complicated and you know as I said earlier, especially around the firewall rules
And you know one of the approaches we take is we don't virtualize the file when you're only in a physical box
I mean virtual is a series behind the firewall. Some guys you get you know
They'll actually virtualize a firewall and run there
Yeah, typically what they call their DMZ zone is virtual machine within the same box as running the the virtualize firewall
You know for me
That's so complicated all the rules and whatever's going on there
That is not worth the risk of getting one rule wrong and then having your whole system compromised
You know I'd rather stick with a dedicated firewall sitting on the you know the permits of your network and then your
Your service new DMZ, you know, they can be virtualize but let the letter
Let the firewall handle all this stuff in a normal manner
So yeah, so I think it is extremely complex around networking and then people have to learn how to use it
So maybe also tools have to be developed to make it easier and you might have to rethink the way we conceptualize
You know firewalls and rules around networking these days, you know because in the past it was harder physical machine
You know, you would also say okay, I want to block this particular machine in access and you knew it was one machine
It was the machine sitting in the rack five, you know row two kind of thing
And also it's easier to do now and this machine can be sitting anywhere in your network
So there's a lot more complexity and issues around that
Look, I'm not a big networking guy. So, you know
Maybe some people have to you know more about networking. It's much more easier than it seems
But you know, I could quite easily handle physical networking when machines are sitting on their own
They're on their own dedicated hardware. Now it's a lot more complicated and the firewall rules. What's in what's going on?
Um, you know, what virtual interface. Oh, there's a lot more complicated than it used to be now
I think that's the biggest challenge actually
Virtualization will be around security and the whole network inside of it and it ties back again to what I said about
You know proper training and getting the knowledge
Developing your existing skills and competence so that you can enhance your systems with virtualization
Anything else you want to share Mark? Yeah, just look
One interesting thing because of having a virtualization is that it's you know
All these virtualization technologies that are there's basically a commodity
You know, let's think to open source otherwise you'll be paying
You know hundreds of thousands of rents or dollars
Just to get to get access to this
But where everybody's been forced basically to give the virtualization technology away for free and from Microsoft to VMware
Um, and I think what you see happening is it was really where the competition is going to heat up between the vendors is around the management tools
Especially for these data centers
You know if you've got a small office with one or two with one service virtualize is not an issue
But if you've got a massive data center with you know with thousands of virtual machines
You need a tool to help you manage provisioning those machines monitoring them taking them done
Decommissioning them and migrating them if there's any issues that kind of stuff
You know, and that's where I see a heating up so
Um, for example, the values got a platespin product art which they bought recently
And I think that's going to get them quite a bit competitive advantage
Now I know also red hats bought out their virtualization management software as well
And so what you find happening is the key thing is that everybody and this is the
Advantage for the open source community last is that you have to be agnostic now
I'll tell them what operating system you dealing with and that's great because open source has always been agnostic
You know, we feel it's up with any other operating system
And that's really a mark of the challenge now because now they have to
You know, if they're going to do virtualization they have to allow you to run Linux on top of off top of windows
Um, who'd want to do that? I'm not quite sure
But you know, that's one of the things they have to allow and and how you interact with with Linux
I think it's also part of the reason why they you know with their own their value agreement as well
Because I realized that the customer's tomorrow is in sorpability
And if they fart it, they're just going to, well, they're going to fart as long as they can
But in the end, they know they can't they can't resist it. They have to
They have to basically learn to cooperate with other operating systems that they so yeah
So I can't see Microsoft's virtualization technology
Taking off because of its
History of security and its lack of reliability
You know, so I think it's a great advantage for Linux to actually move into the space and take a virtualization and run
The windows are as is where it's necessary as guests machines and in the
And operating in the Linux hopper vaza
Right. Yeah, I agree with you on that mark
Basically the all of virtualization technology is it's really available in all of operating systems
So the competition is really around managing of the other virtual and machines
Uh, and what you see happening on Linux for example
Radio to bought a libvert which is quite nice. It's an APR which because all these virtual machines have their own APRs
Of course, you want to manage it from the application
What libvert does it create a abstraction layer across those various APRs?
So if you program you can program to the libvert APR to control the the various virtual machines like VL account memory
Um start and stop the virtual machines
You know again you could get resource usage um stats on the virtual machines using
libvert and it's one of the core
Live which is going to be used in building the
Uh, the sort of technologies around the management tools around around virtualization and another
Another um thing about virtualization is what's called containers. That seems to be the next the next phase of virtualization
But container is a much larger weight
Form of virtualizing your machines
So for example, it's mainly being like Linux with virtualizing a Linux machine
Um, but it's it's a really large weight and and it's much easier to to manage and maintain
Um, so for example, one that you want to just currently using
uh
Containers is is open vz
Open vz. I haven't used it myself. There's something that I want to have heard a lot of talk about in one trial
Um, because essentially it allows you to do a lot of migrations of of your virtual machines without the need for
central
disk back in you know because most of these machines that say we're going to show you a live migration of the machine
it works because it is
Is a centralized disk at the back of those of those machines, but open vz doesn't require that
So that's one thing that which intrigues me especially for you know, like smaller business smaller companies
We don't have the money to go and bar big
It's been a sand solution
Um to have have centralized this sort of back in there and so your container is apparently will be coming in the later
You know in the virtual come will be in the Linux kernel as well
Um, you know, I think this has been another form of virtualization which might be a little bit simpler to use and manage
Then in the current virtualizations that we have all right
Well, Mark. I just wanted to add my final comment in that you know
I think virtualization is rapidly becoming adopted only because as you previously mentioned
I think it's a cost effective and with the the crunch everyone is feeling
budget crunches around the world that
You know to be able to reduce
Again, your hardware costs your power costs
You know the the infrastructure costs and behind all of that is a very attractive and maybe that's why this
Maybe that's why it's been dormant for 40 years and now it's finally coming to the forefront
I think it's also been dormant you know in a CPU is not reached that
Level of speed was actually quite easy to you know
You don't know there's a big degradation in performance when you when you start up the virtual machines now potentially
Whereas years ago, maybe the hardware just wasn't fast enough to handle it. Yeah, that's a good point and
You know, and I also had touched on that with the shared desktops
I feel that in in my experience anyway that each user wouldn't even know that they were actually sharing a machine
I know that we've had some issues with flashlights, you know flash intensive games and and so on
But generally for the ordinary user there's really not a degradation in their performance
But especially for desktop virtualization most people don't use a tentative machines that got anymore
And that's especially true now that you know a lot of the applications have moved to the web
It was before it was this we had a client server environment where you had these
bloated software like mark offers that would run on the on the client machine
You know you need a quite a potentially powerful desktop to run it
But now a lot of the applications or yes, almost moving back to the main thing there is running on the central server
All the power is sitting so they also reduce the need for all of that excess power on on the desktops
Right has removed into things like cloud computing and you know things like google docs and and all those that kind of applications
You're right. We don't need to load anything and have it natively on our desktops anymore
And I know that it wanted which you know you really mentioned about
You're talking about your dev environment running in a virtual machine and advantage of that
You know as the advantages of virtualization will include the ability to snapshot your
And backup your entire
environment
You're production your dev environment you know in the last state because obviously using
Disk back into knowledge is a largely take disk snapshots
And that's what's what's greater about one of the advantages of virtualization is the ability to do that
ability to quickly and easily backup your entire
Operating system and since this running in a virtual environment is quite easy to get up and running again
You don't have to go and find a specific hardware that was running on you know
Typically if you if you backup your machine in trying to install to the machine has got different different hardware different
Raid controllers let's say yeah, all that kind of stuff. It was difficult to do that now because all of the hardware is essentially virtual
You know once you've got your virtual environment set up
Um, you can quite easily restore virtual machine
Um, and more and more you noticing as well that all the different server technologies virtual and ascetic rallies aren't they can read each other's disk images
Uh, so especially between kvm and zen for example kvm can run zen images
Um or this work on that i'm not sure if it's art yet
But i know where that was talking about it where they can run zen or kvm
Images within within kvm or the next release that's coming out
So you know that that kind of stuff is
Really is it's really beneficial. I mean you can take essentially now you can take
A server home with you to test or to different environment that you can test it and you know with art too much
Shelf or hassle to do that and another thing we also see with virtualization is coming into its own is in terms of these virtual appliances
And if you're a company and you've got some product that you want people to download and test it
Uh typically it was a bit of a mission because people if you download it or have to install my SQL then I have to install a patchy
The four-year web service, you know install your database schema all of those things
Which could you know for a lot of people who want to try it out like business people is trying out the application
That was a challenge
Because you know you need a quite a bit of knowledge to configure it now you can just provide a virtual image of your application
If you can download that and run it in test application
So it really it was quite good for a marketing point of view
Yeah, because I know when I downloaded jumla to chart testing it
I had to do all of the things you were talking about
I had to configure my sql and I had to do a patchy and do all these things and yeah
So it might be little daunting for people to be to be doing that all right
Well, I think that's what all I have to add mark
Yeah, that's all I'm just trying to think if there's anything else that we've
That we missed to have a look because it's quite a broad subject and it's actually
Yes, moving so fast that
I mean I have lost sort of depth virtualization
Probably oh probably about six months ago, but it's moved a lot since then
So it's a lot happening in this space
Yeah, sure is
And I'm sure that we'll be able to do another episode in six months from now and things will change as well
Okay, I don't know if I have much more to add to this
I think it's been really a good session today
And I hope that our listeners got some good knowledge
And we look forward to some comments on the episode
How will you mark?
Yeah, I think that covers a, you know, a lot of what you want to talk about
In terms of the pros and cons of virtualization
You know, why would the company want to do it?
And what is virtualization and we cover the different
Different aspects of what we assisted virtualization
Par virtualization and full virtualization
Um, yeah, so I think that that's correct
You
Thank you for listening to Haftler Public Radio
HPR is sponsored by Carol.net
So head on over to C-A-R-O.N-E-C for all of her singing
Oh
Oh
