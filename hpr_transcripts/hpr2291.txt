Episode: 2291
Title: HPR2291: Arch on CELES
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2291/hpr2291.mp3
Transcribed: 2025-10-19 00:55:32

---

This episode of HPR is brought to you by Ananasthos.com.
At 15% discount on all shared hosting with the offer code HPR15, that's HPR15.
Better web hosting that's honest and fair at Ananasthos.com.
Hello, we're installing Arch Linux on a Samsung Chromebook 3.
Code name Celeste, Charlie, Echo, Vima, Echo, Sierra.
The tools for this are a screwdriver, an install medium, a USB keyboard, internet connection,
and I think another device.
A screwdriver is to remove the hardware right protection screw.
The install medium I'm using is Arch Anywhere, which is an Arch Linux installation helper script.
The USB keyboard is because until we have the PIN, CTRL, TAC, CheriView, PAT to apply to the kernel,
the built-in keyboard doesn't work, so that's why we have a USB keyboard.
The internet connection is to download things and the other device is I'm playing pathos on my Android device.
It also helps because I have removable media and an OTG cable, I make mistakes, and it makes them a little more easy to recover from.
Mostly to play a rogue-like game, though, also instructions and manuals and I have to look up things.
So, if you're going to go any further and if you're actually doing this, the show notes are more valuable than my voice.
If you're just trying to get sold on thought of maybe grabbing one of these Chromebooks, it has up to four gigs of RAM.
The one I have only has two.
It's not too shabby.
I mostly run Chrome as my browser.
I have Docker. I'm about to use Docker to flash my pocket chip from it.
I'm usually just using Google Docs. I've been writing Go on it. That's been my new thing to just keep busy.
It's good for YouTube. I listen to music on it.
It's got, after I got some basic stuff set up, it had about 8.5 gigs left.
It's got microSD, HDMI, two USBs and audio. That's all I seemed to need.
One of the USBs still happens to be USB3.
It also doesn't have F keys, but it does have, well it doesn't apparently have F keys, but it has a Back Forward Refresh and Fullscreen, which are F123 and 4 respectively.
Let's see. I told you about some of the things and the stuff.
There are nine screws on the bottom of the device.
In order to get the hardware right protection screw out, I've got to remove those and the base.
There are more screws holding down the motherboard, and there are connectors attached to it.
I chose to remove all the connectors aside from the screen.
The screen looks scary. Everything else looks less scary.
You can also choose to remove all but power, or you can remove all of them.
What have you? As long as you're able to remove harder right protection screw and I chose to put electrical tape over it when I was done.
Then patch it up. Please don't forget to attach your speakers.
I forgot to attach my speakers and then got to learn how to undo it again and only put half the screws in while in a hotel late at night.
Just to fix my speakers.
After you've got the hardware right protection screw removed and the device put back together, it should still be off.
To enable developer mode.
We're going to have to press Escape and F3.
Then we'll rather hold Escape and F3 then press Power.
That'll enter the recovery mode and then it'll give you a bit of time where you can press Control D and it'll ask you to confirm.
That'll take you to developer mode.
Once you're in developer mode, you can go to your second frame buffer or other stuff.
I opted the second frame buffer so I could draw a lot of F2.
Log in as Kronos, so Charlie, Hotel, Romeo, Oscar, November, Oscar, Sierra.
From there, I elevated my privileges to route to CDUTAC.
I is what I did. They said you should do Bash on the Arch Linux Wiki.
I chose to not listen to them and I do CDUTAC eye and you can be a rebel just like me if you try.
So from Mr. Kronobox.
It's in the turnouts.
There is the Kronos firmware utility script which will allow you to set the legacy boot option which will give you as it's Cebu.
Cebias.
So some things that I did when I was there was I installed RW Legacy which will allow me to actually get my boot loader.
The GBB flags I set to one second and Cebias slash legacy because if you don't your clock will drift by 100 years.
And TLS does not work when your clock is drifted by 100 years and some hours.
It's just messy everywhere.
And remove the Kronos bitmaps.
So when you boot, it says developer mode with a black background and white text and I felt really cool when that happened.
So after that, that finishes up everything I had to do in Kronos.
I was unable to use Archiniware USB install medium.
With that in hand, I was able to reboot.
I went about installing Archlinux.
In my case, I used Archiniware to do it.
I think it's yogurt and French.
It's basically you can go to the whole Archlinux user repository from your command line.
I used it to grab which would be Y-A-U-R-T, Tak-G, Linux, Gallium, OS, Brasswall.
Which is the kernel that has the chair review patch.
And allows me to actually use the built-in keyboard.
So to actually, it's a cool thing that I learned before I got here,
was that I can use modprods.db and local mod can fake when I'm building my kernel.
Which allows me to build the kernel with only the modules I need.
So I, with my USB keyboard into, began messing with Docker, writing up a go in my free time.
Using my Ubiki setting up encrypted home directories,
going to websites, doing everything I could to be active on it.
But I thought I would have to do to load every module I thought I would have to load.
I still forgot someone had to go back and it's okay.
But that was so I had a smaller, so I could overall spend a little less time building modules each time I built modules.
It was also so I could have a smaller kernel.
See, scrolling back down through my notes. I went too far.
Oh no.
Okay, so that's why we have that kernel.
I talk about installing it in my notes. If you want to know how to do that, there's a way to do that.
You also have to install GaliMLS Browswell config, which has pulse audio stuff.
So if you already have pulse audio installed, you're going to have to force install, or else it's going to complain about how there are files already existing.
But it just drops in the files with the proper configurations for whatever someone painstakingly set up that I didn't have to do.
Thank you, other person.
Yeah, after doing that, I generated my grub config, made sure to change some things in my grub config, like declaring the GFX mode as 1024X768.
So I didn't have a graphics glitch that prevented anything from starting, so it would say grub and then it would get fuzzy and go away.
In the event you didn't use arch anywhere, I dropped in U.
Okay, yes, in the event you didn't use arch anywhere. I put my pack man config in the bottom of it, and it has the repo in the bottom of it there anyway.
I just grab it out of there, or my grub config, and go from there.
Let's see, before I let you go, I guess I will say I run a value for value podcast. I don't matter, but some people that matter to me are Brian of the Breaking Down Security podcast for the audio hardware.
My friend Nick, who was very kind, and gave me a Chromebook to hack around on, hackers everywhere for hacking on, and the people at suckless.org for proposing a distro that seems pretty cool, a window manager I like, and a terminal I think I prefer over everything.
The podcast I've been listening to are no agenda unfiltered congressional dish breaking down security embedded the doll up my favorite murder and mysteries abound also never forget listen to hacker public radio. It's like awesome.
I think that wraps up everything if it didn't there's stuff in the show notes. I hope you have wonderful and safe whatever you go into next. Thanks for your time and take care. Bye bye.
You've been listening to Hacker Public Radio at HackerPublicRadio.org. We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by an HBO listener like yourself. If you ever thought of recording a podcast, then click on our contributing to find out how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the infonomicon computer club, and is part of the binary revolution at binwreff.com.
If you have comments on today's show, please email the host directly, leave a comment on the website or record a follow-up episode yourself.
Unless otherwise stated, today's show is released on the creative comments, attribution, share a light, 3.0 license.
Thanks for your time.
