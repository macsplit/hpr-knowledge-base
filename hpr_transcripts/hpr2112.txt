Episode: 2112
Title: HPR2112: My old home server
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2112/hpr2112.mp3
Transcribed: 2025-10-18 14:27:43

---

This is HPR Episode 2112 entitled My Old Home Server.
It is hosted by MrX and is about 16 minutes long.
The summary is a show about My Old Home Server.
This episode of HPR is brought to you by An Honesthost.com.
Get 15% discount on all shared hosting with the offer code HPR15.
That's HPR15.
Better web hosting that's honest and fair at An Honesthost.com.
Hello and welcome Hacker Public Radio audience.
My name is MrX.
Welcome to my 15th HPR podcast.
Today's show is going to be about my old trusty home server.
How I came by it, what I use it for and finally how I use it now at its uncertain future.
But before I continue, I'd like to start by thanking the people at HPR for making
all this possible.
I would never have pulled my first podcast together without them making this service available.
It's truly a wonderful and valuable resource on these heat inter tubes.
If you have something interesting or some bursting passion, why not share it with the rest
of us?
It really isn't that hard and even if you only manage one show, that's fine and great.
But who knows, you might even go on to enjoy the challenge and produce more shows.
If I can do it, anyone can.
My old server, the slightly unusual piece of hardware, is a compact iPAC desktop computer,
not to be confused with the iPAC Windows CE-PDA device.
It's a vertical free-standing device about 13 inches high by 5 inches wide by 8.5 inches
deep.
I always think it looks a bit like a fan heater with this big girl along the top.
I think they're fairly rare as it's the only one I've ever come across.
According to Wikipedia, the iPAC desktop personal computer in its various incarnations was
as a legacy free PC, produced by the Compact computer corporation around a year 2000.
The Compact iPAC was primarily designed to be a portable desktop computer that can
be used as a simple internet-gaple computer.
The iPAC had very few limitations in upgradability, hard drives, RAM, CPU and multi-bay drives can
rarely be interchanged, although iPAC did not contain sockets for expansion cards.
It featured an interchangeable multi-base slot that could accept 3.5 inch LS SuperDust
drive, the only way to do the floppy disk, standard multi-bay floppy drives did not work.
Fortical drives are second and hard drives, the devices, computed this way.
The slot was the same as those found on many Compact Amada and many other HP Compact laptop
computer systems.
By method of convection for cooling, these computers are commonly found in office environments
due to their low noise output.
The iPAC can run on either an Intel Pentium 3 processor or an Intel Celeron processor,
ranging from 500 MHz to 1 GHz, processor in a PGA 370 socket.
The internal RAM was upgradable to 512 Mbps of 100 MHz or 168 pin SDR at SD RAM.
Due to the RAM limits of the Intel 815 series chipset, the BIOS and iPAC prevents the
system from booting if there is more than 512 Mbps installed, instructing the user to
decrease the amount of RAM in the system to no more than 512 Mbps.
The first version came in two different models, Legacy 3, which is the one I have, had
no parallel serial or PS2 ports, and instead three additional USB ports on the back.
And with the additional one which included the parallel serial and PS2 ports but only had
USB ports on the front.
The second version had different styling and had a backpack which added the legacy ports.
iPAC desktop computers were typically sold with Windows 98 or Windows 2000 already installed.
When I bought mine now is looking for a custom built headless server, something not too
noisy, not too heavy in power and the compact iPAC fitted the bill nicely.
I have a mains plug in power meter and from memory I think the server used about 25
watts for an idling which isn't bad.
iBlock made an amateur radio rally in blackpool.
The general idea I had was to build a headless server that could be controlled remotely
by intention was to use it to download and play podcasts.
A smug I came across early on was that there was a bug or oversight in the BIOS which requires
a keyboard be connected in order for the computer to boot.
This was overcome by fitting a small PS2 to USB converter cable which filled the BIOS into
thinking a keyboard in mouse was attached.
This was my first headless server and I initially found it frustrating not knowing what it was
doing.
For one thing I run into problems if I tried to connect to it too early in the boot
sequence before the screen session was up and running.
I switched on the server at a bit of a beep and that's when I got the idea to use the
Linux beep command to let me know what was going on.
With the beep command you can control how long each beep is and the frequency.
I discovered that the server had a tremendous load PC speaker which meant it could be heard
all over the house and in fact it worked far better than I expected.
I tended to switch it on when I first came in from work and then turned it off just
before going to bed.
After switch on the server I made 4 beeps to signal that server was fully up with a
detached screen session running ready for remote login.
The server then waits 10 minutes and signals with an ascending scale that the podcast downloads
are beginning.
This gave me plenty of time to log in and cancel downloads if required.
At this time my internet speed was very poor and it took quite some time for the podcast
to download.
During my podcast finally downloaded the server signaled this by letting a descending scale.
From time to time I were done arcing backups on various directives on my server.
At the time I thought it might be good to have some idea how far along the backup was
so this again was signaled with the beep command.
For the number of beeps indicated how many directives were left to sync.
The completion of the backup was signaled by 6 slowed beeps.
I get this could be had all over the house, I made it easy to know what was going on
and when the backup was complete.
Finally at the end of the night the server was turned off to save electricity.
Getting an operating system on it could have proved very difficult as when I bought it
I didn't realise it didn't include a CD-ROM drive and worse still it had a special
compact multi-based CD drive bay which would not support normal CD-ROM drives.
This could have been a disaster but luckily at the time I happened to have a compact laptop
which is the same multi-bed drive.
I just pulled out the drive and shoved it into the iPak allowing me to install anything
I liked.
At a much later date my old trusted compact laptop failed, I retained the CD-ROM drive
and a memory module both of which ended up in the server.
The first OS I installed on it was Ubuntu server addition but I couldn't get sound to
work.
I then discovered that the sound wasn't included in the server addition.
I think the server addition used a different kernel which had no sound support.
At this point I gave up and installed Ubuntu LTS and ran it as a headless server.
I upgraded the internal drive twice, I'm not sure but I think from memory it came with
a 60GB internal drive.
I initially installed 120GB for more breathing room, this went smooth enough and then later
I upgraded it for a massive 500GB hard drive.
Both times I used the excellent open source software Clonzilla.
When I was thinking about upgrading the second time I was concerned the server wouldn't
handle a 500GB drive, when I looked into the device it certainly didn't support 500GB drives.
Luckily Linux came to the rescue yet again, reviving a piece of equipment that would
be consigned to the bucket using other well-known operating systems.
After some investigation I discovered that Linux bypasses the BIOS and so hard drive size
wasn't a problem or so I thought.
I cloned the hard drive and decided to fit the larger disk.
All the fine details are lost in the midst of time but from my imperfect recollection the server
no longer booted and gave me an obscure error about geometry of disk.
After much head scratching and research I realised that during the early stages of boot the
BIOS needs to have access to the root boot folder which was part of the root partition.
This had now moved further up the disk I was not visible to the poor old BIOS.
I finally got a thing working again by creating a new boot partition and placing it at the
beginning of the disk. This is all a bit hairy and by this point the server had been running a
number of years with lots of changes to it and the thought of rebuilding it filled me with red.
Over the years I've gone through numerous as I've been to LTS upgrades without reinstalling
and I'm still running this today.
Everything was fine until as I've been to started using Pulse Audio.
The sound started playing up I had to be very careful not to disturb the volume control
as this would break the audio. Eventually though one of the LTS upgrades did
completely break the audio. Luckily this was about the time the Raspberry Pi became available
and this has now largely taken over from my compact iPack server. It's now only switched on
occasionally to download my podcast feeds. My podcast client of choice is HPodder. I badly covered
this client in a recent podcast and as I mentioned before I chose this for the single reason that
it was able to import my large existing collection of podcast feeds from iPodder.
Next I had to decide what I was going to use to play my downloaded podcasts.
I stumbled upon the excellent audio player mock that I still use to this day.
I think I haven't installed on every machine in the house.
The package name on Debian system is mock but confusingly the command to run it is mock P.
I believe mock PMOCP stands for music on the console player.
It's absolutely fantastic. It's super lightweight, has loads of features and works
flawlessly on the Raspberry Pi. It can be controlled from a really nice intuitive
incursive GUI which is super easy to navigate. One of the many great features is that you can
close the GUI at any time and the sound server continues playing. mock can also be controlled
from the command line allowing endless scripting possibilities. I could go on much more about this
wonderful player as I just can't present enough. If I get a chance I'll cover it in more detail
in the later podcast. While downloading and playing podcasts was in menus for the server,
I beat it to other uses as time went on. I added Samba so that an old second-hand
internet radio I purchased could play music from it as radio was able to access Windows shares.
My cheap second-hand internet radio eventually stopped working on Wi-Fi and so I gave it to my
mother who still using it today, having hooked up directly to her router. This was impractical for
me due to its position in the house. By this point I had become rather fond of having an internet
radio so I went out and bought a rather expensive Robors internet radio. There was no denying the
quality of the new radio, however it didn't work with Windows shares and instead used UPNP.
I sold this by installing MediaTomb which is a UPNP Media server which allowed me to stream audio
to my new Robors internet radio. I think MediaTomb worked more or less out of the box with very little
fiddling. I don't tend to do this now as my old server is used so little. I did toy with
an idea of using my downstairs Raspberry Pi to stream music as it has excellent code media player
on it which usefully includes a UPNP server option. I tried this but although my internet
radio could see it and even start playing a track, second later the radio would crash.
So I very quickly gave up on that idea. Over time I also used my server as a print server
allowing me to print from multiple devices around the house, though now my printer is attached
directly to my PC. As I've mentioned before, the future of my old trusty servers now uncertain
as my Raspberry Pi has mostly done away with the need for this server and it's only turned on
occasionally to download my podcast feeds. I'll need to decide its future soon as it's running
our pretty old Ubuntu LTS version and I think it's due to expire sometime early next year.
I'm rather attached to the old thing, I will miss it if I decide to retire it.
I think the longer you keep something the more it shows you value it. I have a feeling it's time
hasn't passed just yet. Okay that's about it for this podcast. I hope you've enjoyed the
podcast. Remember as I said earlier, if you have an interesting story or passion, why not share
it with the rest of us? There's a vast community view out there, give your bum and give us a show.
I'm sure you would all find it interesting. If you want to contact me, I can be
contacted at MrX at hpr at googlemail.com. That's mrx80hpr the at symbol googlemail.com.
So until next time, thank you and goodbye.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an hpr listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out how easy it
really is. Hacker Public Radio was founded by the digital dog pound and the infonomicum
computer club and is part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on the website
or record a follow-up episode yourself. Unless otherwise stated, today's show is released on
creative comments, attribution, share a like, 3.0 license.
