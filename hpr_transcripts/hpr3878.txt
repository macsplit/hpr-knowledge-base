Episode: 3878
Title: HPR3878: Linux commands to gather information about your system
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3878/hpr3878.mp3
Transcribed: 2025-10-25 07:09:46

---

This is Hacker Public Radio, Episode 3878 for Wednesday, the 14th of June 2023.
Today's show is entitled, Linux commands to gather information about your system.
It is hosted by JWP and is about nine minutes long.
It carries a clean flag.
The summary is, you need this information to understand your system better.
Today, my name is JWP and today on Hacker Public Radio, I want to talk to you about Linux,
commands to gather information about your system, get information about your CPU, storage,
RAM, BIOS, and more without leaving the terminal.
There are many situations you need to obtain information about your Linux system, whether
it's hardware and better software such as the BIOS or how they relate to the operating
system.
You need this information to understand your system better, install appropriate software
and drivers, apply patches, obtain vendor support, plan expansions and upgrades, and
use your system fully.
In general, Linux distributions provide many tools you can use to display system information.
Often, you can query one of the virtual file systems like slash PROC or slash SIS directly,
but they may provide basic information that's hard to understand at a glance.
In this podcast, I'll look at seven commands that provide details about your system's
RAM, disk, CPU, devices, and firmware, and it's direct easy to understand why.
These utilities can file information from different sources to present relevant information
that aids you in understanding your system's capabilities.
Let's start by looking at the CPU.
So to display CPU information, you use the LS CPU utility and it provides a comprehensive
summary of your CPU's capabilities, including model information, number of cores, speeds,
flags, virtualization capabilities, and security migrations applied.
You can also use the LS CPU with the minus P option to print specific fields only or minus
capital J for the JSON output.
Both these options are great way to phase with other programs or scripts.
Let's gather some disk information, okay?
So most of us know that DF is, you know, the general one.
You can also get information from FDISC or you can get information from Mount.
These are great options for gathering specific information, but you can also use LSBOK
to get an overview of your block systems at a glance.
This utility provides much more information and you should be able to check all of its
options using ManLSBLK.
Often use the two options minus minus FS to include the file system type and the output
and minus capital J for the JSON output to parse using other programs.
Okay, and now we want to know about the USB information.
So you may use the LS USB Utilities together information about available USB devices on
your distribution, you may not include these utility out of fault.
You can install USB Utils package to access it to, you do this by doing sudo, DNF, install
minus Y USB Tills or sudo apt-get install USB Utils.
Okay, then use LS USB to list your devices and it'll miss a bus and then device one and
then a bus and device two and for detailed output use the minus V or minus T option to format
as a hierarchal tree.
Okay, so what about the PCI?
What about the bus and the back?
So the LS PCI gives you information about the PCI devices.
This utility is part of the PCI Utilities package and you may need to install it depending
on your distribution and again you can use DNF install over sudo apt install or there might
either be a snap of it.
Okay, so let's run it.
LS PCI and it starts talking about first you see a host bridge from, from usually from
Intel, usually from Intel and then you'll see a VGA compatible controller and then
there'll list who that is, it could be Red Hat or Sousa and you have PCI bridge and again
your Linux vendor will be there and then it comes your audio device and your controller.
So basically anything that's back there on that PCI bus is there and again you can use
the slash V option for more detailed output or minus K to list the kernel module that's used
by the device and minus S for Pacific devices based on their ID.
For example to list the kernel modules for device 5 colon 00 dot 0 use LS PCI minus S
0 5 colon 00 dot 0 minus K and then it'll show you the things and it'll say subsistone
Linux distribution device 1000 and it's a virtual PCI thing.
Okay, so let's let's talk about RAM, okay, and of course the RAM is used by the free command
and you can do, I use the minus H to get human readable out of that, but
for additional information about your RAM including the number of top of slots,
manufacturing, information sizes or other physical details, you can use something called the
DMI decode utility. I haven't ever used this but it's very good, it's a generic utility that
provides information about many hardware and firmware components. So if you don't have it,
again you can use DNF or you can use Cyper or you can use Sousa Appget and then you say
install and then it's DMI decode. Since DMI decode provides a huge number of information,
you can filter its output by using the minus T to type list specific types only, for example,
to display only RAM related information, use minus T memory and the word memory.
And this is a pseudo command, so you have to do a pseudo DMI decode minus T memory and it'll
show you the complete thing. Okay, so what about the BIOS? And again it's with the DIMI decode,
so it's DIMI decode minus T and then space BIOS and then you get all the information about your
BIOS. Okay, and so what about the system information? So you can use again DMI decode minus T
slash system and you get again it's a pseudo command, you get everything from the symbols,
you get the manufacturer, the product name, serial number, the UID, wake up type, the whole thing.
And so what's next? Some command line utilities that help you understand the system in hardware
where you run on your Linux operating system. Some of these utilities are specialized while
DIMI decode is generic, you can see all of that by using the DIMI decode minus T.
And so if you do that, it lists the valid keywords that you can use with that utility.
So you can get a BIOS, you can get a system, you can get a base board, a chassis, a processor,
a memory, a cache, a connector, or slot. Other high level utilities that provide detailed
information about hardware like HW info or GUI tools such as CPUX. And maybe we'll have
another podcast to talk about these in the future. Well, hey, this is JWP and I hope
where you all have a nice day and that you're nice to one another and that you'll be blessed.
If you need reach me, please reach out at JWP5 at hotmail.com. Thank you so much. Bye bye.
You have been listening to Hacker Public Radio at Hacker Public Radio does work.
Today's show was contributed by a HBR listener like yourself. If you ever thought of recording
podcast, you click on our contribute link to find out how easy it really is. Hosting for HBR has
been kindly provided by an honesthost.com, the internet archive, and our syncs.net.
On the Sadois status, today's show is released under Creative Commons,
Attribution 4.0 International License.
