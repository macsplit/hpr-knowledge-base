Episode: 393
Title: HPR0393: Wine
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0393/hpr0393.mp3
Transcribed: 2025-10-07 19:42:43

---

3
The Utah Open Source Foundation presents
The June 2008 meeting of the Ogden area Linux user group.
Do you know someone in Utah who is always contributing to open source?
The Utah Open Source conference is looking for excellence in business technology and community for the second annual Utah Open Source Awards.
To nominate someone, please send an email to awards at utos.org.
Streaming and podcast hosting bandwidth for this and many other presentations at podcast.utos.org has been provided by Tier 4.
This presentation was on wine by Seth House.
Okay, so thanks for coming.
So, talking about wine.
I'm not trying to get out of here before one.
So, as you guys both know, wine is not an emulator. So, it stands for. It's just not an emulator.
By the way, if I was an emulator here, the question is just an author.
I don't know.
I hope familiar ideas with wine. I'm curious if you could use it before.
I've used it. I haven't tweaked it a whole lot to learn specific applications.
What applications have you used before?
Actually, I worked with Linjie and he told me over there like to program lots of internal applications for just windows.
So, it really takes me off, but they weren't good enough.
No.
That wasn't bad for me.
Yeah?
Was it, was it, was it kind of a thing?
Oh, no, but it didn't work out.
Really?
I can't.
I'm pressing the button.
I think you were in the war, yeah.
I don't know, but I recall a very recent version of one broke battle.
Yeah.
I got, you know, I got a bit of a mental, but I thought I was a bunch of you.
Well, I think I've got something else.
Okay.
Okay, so,
So specifically, wine is an open source implementation of the Windows API on top of X, OpenGL, and Unix.
There's a quote from the wine website.
I think wine is a compatibility layer for running Windows programs.
A little bit.
As you guys know, wine is, it is fast, much faster than any Angular could be.
In fact, Windows applications that do not make system calls were just as fast as on Windows.
And it should be noted that speed is not known or haven't, nor has been a goal of the line project.
It will eventually eventually get the kind of speed that they do without paying attention to it so far.
So what is wine?
So what is wine?
One is two things.
Wine and then wine lid.
Wine, of course, runs the program's live wine lid.
It lets you compile with those programs against the wine libraries to produce native executable 401s.
For instance, Google did that with the cost of Google, higher code readers to get the cost of running on wine.
And then they compile it against wine lipsets.
That's why there's only a version of the cost of the Linux that does not require a wine being sold.
I guess if you compile something against wine lid, will that find everyone in Windows?
I don't think so.
I think you would compile it normally for Windows and compile it against wine in a couple of minutes.
I don't know if you want to talk to me about that.
I was hoping to give a short rundown of wine history, but it's been around for 15 years.
That's not a short version.
I'll try to speak through it.
So I, in 1992, some microsystems had a program called Urbada Company that had a program called...
Probably on the slide, but it's on my note.
Wavvy.
And Wavvy allowed users of Salaris Act 86 and Salaris Spark to run Windows applications out of the bots.
So Wavvy was unique in that of all that.
Windows, Windows calls, but they did directly to X Windows calls.
At the time, chances of Wavvy being reported by Linux were slim to none.
So in 1993, a mailing list was formed to discuss a similar project for Linux.
Several of the early developers of wine were some of the first Linux for Linux.
And you know, at that point, Linux was just too feasible.
Let's see.
Within the first six months or so, they got...
They got...
Wine, Wine and Solitaire.
And they were pregnant ever since.
So in 1994, things stepped up a little bit.
Microsoft began releasing 32-bit code.
So they made it move down from one to three-one.
And they started out a new functionality on the operating system.
So it was no longer enough for the wine products that below it.
Microsoft partners and run them.
More sophisticated integrations needed with the underlying operating systems,
such as support network connections, and we're just familiar with that sort of thing.
So let's see.
Yeah.
So in 1996, Word and Excel were reported to run.
So we just started up in milestone.
And then in 1990s, they created the WineHQ.com website.
It was eventually taken over by Corel.
And then the company was back to that Corel.
And I get to Corel in just a bit that played a big part in the WineHQ history.
Yeah.
So, yeah.
So in 1998, Corel jumped on the Linux badwagon.
Big time.
So let's see.
Corel's, obviously, the word perfect.
They wanted to get that running on wine.
And it demanded a high level of wine sophistication.
So whether it started pouring money into wine.
So this was the first time the wine was being somewhat commercially.
Let's see.
And Corel was actually the people with contract code rebus.
So let's do work on wine.
Yeah.
So that's what Corel just comes up to.
In 2001.
Is there anything you want to go to?
I don't know.
They did not create code rebus, they did the contract code rebus.
So they must have been around in some capacity.
I don't know what they were doing before that.
So in 2001, Corel had the idea of buying a shop.
So the particular is where.
Anyway, they spun off their Linux division.
And they did pretty much turn the tower on Linux.
So Corel could be very big in developing their own products.
And putting a lot of polish on wine.
They just kind of went off to their own thing.
Their own version of wine included graphical management tools.
And an easy setup.
The first product, crossover plugin, allowed Linux users
to run that's the plugins that were designed for Windows.
And you know, newer versions of that added more plugins.
And then they released crossover office in March of 2002.
So it provides support for office applications
like Excel and Lotus Nose.
And you know, that was there.
That was our product.
It was supported.
You know, companies that were called the market,
but they had problems.
In addition to that, Trends Gaming,
was started by MX Corel, employed in Gabriel State.
You left the company, some company, Trends Gaming.
And their goal was, so limited direct back support had been in wine since 1997.
But Gabriel's not to make it more robust.
So he released Wine X in 2001.
And initially has support for six games.
Some of the early Trends Gaming work,
so it's not to include support for coffee with it.
So that was, that was the goal of Trends Gaming.
Also in 2001, Windows, the company was formed.
And Windows, as you guys probably remember,
was formed to make it very simple.
And it's best out that they could run Microsoft programs,
just natively.
But they quicker to give up that as goal for the project.
But before they gave that up,
Windows was responsible for sponsoring the very first wine comp,
the wine conference.
And that was in March 2002.
And that brought it, that was our world by conference.
And I don't know exactly how wine comp has been since.
But there's been at least one fairly recently.
And let us get that off.
Let's see.
There was another conference in 2004.
So an important point for understanding wine history
is that licensing debates played a project for several years.
In the beginning, it was under our BSD-style license around 1999,
which is all I'm pointed out that it was incompatible with the GPL,
which potentially caused problems with,
and the open source project, so should we use wine code.
So there was a big debate online.
And the wine project ended up switching in 2000 to the XLM license.
Let's see.
And then shortly after that in 2002,
sorry, not sure after that, 2002,
there was another poll conducted among the core line developers
and commercial entities that were invested in wine.
It's about switching licenses again.
And I guess at that time there was,
it was starting to be, it was starting some growing concern in the community
that wine would be taken by the company
and do a proprietary set up that it would be better.
Good work, Senator. You're pretty worried about that.
So to find the switch to the lesser GPL.
And the reason I was cool is,
is that meant that changes to wine,
meant that you had to re-release those changes to the community,
but any programs that you would pile against wine live did not.
So that can take the way for companies that,
you know, to compile some of the games.
They didn't go on the other way.
And wine development picked up a bit of speed after that.
Also, this isn't quite wine history,
but it's an interesting side moment.
I'm not sure where else to put it.
Microsoft has never really come up publicly and mentioned wine at all.
That everyone said,
Microsoft Update Software has a 2005.
Somebody discovered that Windows Update is specifically checking for wine
and only registration fees and providing access.
So that was kind of a big event
because it was Microsoft essentially breaking rating assignments.
And also the Windows Genuine Advantage system.
But other than that,
they've been completely inside.
So some features.
Sorry, I'm in June 17th tonight.
There is a wine one, I hope.
It's 15 years to do that one.
Yeah.
Actually, I'm not sure about that.
Maybe steam pipe,
but that's a recognized table.
It's a little bit loose.
We're fixed upon just stuff.
Yeah.
In fact, I was missing a random point.
Just to see how the baby Photoshop CS3 derived.
Photoshop CS2 was in the wine,
was in the wine 1.0 state of goals of program compatibility.
But CS3 was a little touch with whatever reason.
And let's take one point ten.
Is that some of these features?
I have tried it since I approached them.
Did you guys hear it?
I've done one of them.
I don't know.
Okay.
Send them to the demo.
Yeah, the demo.
Yeah, 30 days to try it out.
So, some features.
As you guys know,
loads Windows 98 and T2000XP,
Windows 3.1 and DOS programs and libraries.
They had a bug for bug compatibility with Windows.
Now, the point of interest here is,
it will happily run Windows in our way.
Yeah.
So, keeping an eye out for downloading strange binaries
and running them in wine.
Because wine does in fact have access to
where you want to supply systems.
You know, just because you're running wine
isn't in the computer safe.
It has direct access support.
OpenGL support.
Sound card device interaction.
Networking.
And it permits the mixing of
ELF Linux binaries and PEG Windows binaries.
The whole list is,
is this,
is this,
this,
this,
this,
quite along with.
So,
there's a lot of versions of wine.
There's wine proper.
And then there's the code we've been sweet.
Code weaver's,
code weaver's employees,
the lead wine developer.
His name is Alexandria Giulio.
And,
as far as I know,
they employ one other guy as well.
But,
it works heavily on the wine project.
And,
code weaver's has a fantastic
reputation of
contributing back to the wine project.
So,
they,
as I mentioned before,
they initially came up with
cross over plugin,
the cross over office.
And now the products are just
cross over Linux,
cross over Mac.
And then they very recently released
cross over games,
which,
in the only difference there is
cross over games
has a faster release cycle
and less advantage systems
to build it.
So, for example,
cross over Linux and Mac
have,
have a list,
the final list of supported applications.
And so,
whenever I know wine versions
released before code weaver,
this is a new version of crossover.
They test all of those applications
to make sure
that nothing broke.
Because wine will do that
from time to time.
If you look through,
say,
like the FTP,
and on user comments,
a lot of people say,
well, it works in this version of wine
and on the certain,
you know,
so you're going to have to
downbreak another network.
That's,
that's a fairly common,
common.
So,
code weaver's
is very careful about
those supported list applications.
Anyway,
cross over games,
fast release cycle.
So, game design is
one extra
version.
Yeah.
Although that having been said,
there are two versions
of crossover,
the standard and professional
development tonight.
And but if it's there,
is the professional version,
it provides and has
deployability,
manageability features
for corporate users.
It also allows multiple users,
the standard version of wine
only allows the single user.
Okay.
So,
there's also a trend
gaming.
Trends gaming has two products.
Sidega and Sidega.
Sidega was formerly
called Blind X.
And Sidega is a port
of the last version
of the X11
license wine.
So,
that was several years ago.
At this point in time,
there's not a whole lot of
things in common
in 2021,
from Brent and Sidega.
At the top of that,
Trends Gaming has something
of a bad reputation
for not contributing
back to a plan project.
And I think one of the reasons
the community is so bitter
is they initially promised
that they would contribute
back their improvements
to DirectX,
improvements in
medicine.
One notable thing
about Sidega is they
have license coffee
features.
From, you know,
from the companies
that create these
types of connections.
So,
that's, you know,
it's,
Sidega is a proprietary
and, you know,
this change as well.
Let's see if I can do it.
You know,
you know,
you know,
it's all proprietary.
In fact,
this is kind of a funny
quote from the wine fact,
which shows
a bit of anger.
Trends Gaming,
this is an actual fact,
which is just being
on the website.
Trends Gaming currently
goes back very little
code to wine.
Sidega is not wine
with more gaming support,
because wine is
at the years of development.
Since Sidega was
made, many games
actually run better
under wine than
on the Sidega.
Currently wine is
advanced Direct3D,
more advanced Direct3D
support than Sidega.
But Sidega still has
more advanced coffee
protection court
supported a transgaming
salizing of
close source code
from a handful of
coffee protection companies.
Unlike crossover,
most improvements
don't end
to Sidega,
due to a license
differences between
Sidega and wine.
So, clear bias
for the code reverse.
Quick rundown.
Oh, there's also one
other which is
ReactOS.
ReactOS is a project
to run.
It's kind of like
a free copy
of Microsoft Windows.
A free
open source copy
of Microsoft Windows.
They have their own
custom kernel,
and they use
an awful lot of wine
code.
So,
crossover standard
and crossover games
are both $40.
And crossover professional
is $70.
And of course,
Sidega,
you can get a six-month
subscription.
I think it does
on subscription.
crossover has
that subscription
support model as well.
But Sidega,
you can get a six-month
subscription for $25,
and that's $1.
$15.45.
Yeah.
So,
yeah, so let's move on to
how to get started.
As you guys know,
you just type in
wine,
and then the name of the execute
on the wine will start
up.
In addition to that,
you can type in wine,
and then in quotes,
you can give it the windows
pack,
you can see call-in-back slide,
whatever.
See the thread.
So, here's a quick note
about wine prefix.
And crossover,
almost enforces
this kind of convention,
in crossover they call
in models.
And what this is is,
is it,
is it kind of puts,
so,
you would install a specific
program to a certain
wine prefix,
or a specific set of programs.
Those are wine prefix.
What that is,
what that does is
that makes those programs
or program fairly self-contained.
So that they,
so that they,
you know,
if anything goes wrong
with them,
they don't take down the rest of,
you know,
all of your wine install programs.
So, for example,
you would create
a specific directory,
you know,
say,
in your home folder,
you create a game,
a directory,
you put, you know,
work directory.
You'd make a work
directory in that.
And,
in previous versions,
to wine 1.0,
you had a run-it-man called
wine prefix
create,
which created
some basic files
in that directory.
Such as the drive-c directory,
with, you know,
the windows layout,
programs,
files,
factories,
and the windows
directories.
And then,
so, registration.
So,
but,
post-wine 1.0
of the creative
automatically,
it doesn't already exist.
So,
so, if you export the,
the environment variable,
wine prefix,
and I'm given the,
the path in that directory,
but the role is
all out there.
If you don't do that,
then I'm going to solve it
to your home directory,
you know,
the top one.
But,
this is a,
this is a good habit to get
into,
because, eventually,
something you don't
solve is going to take down
the rest of,
whatever is in that particular
1.0 prefix or bottom,
does that call it
in Sadega?
Or in,
of course,
sorry.
So,
quick note about
configuration.
I,
this was the demo part
of the,
the presentation.
Sorry,
I'm going to solve it.
No, maybe.
But,
if you type in
wine prefix,
and you can prefix that
with wine prefix,
again,
to pull out
just wine config
for that,
that prefix,
a little,
a little windows,
window will pop up,
and in this window,
it lets you configure
quite a few things.
I don't want to
wait for this.
The window's
version of the wine
is pretending to be,
so,
when it's 2,000,
when it's
pending,
there's xp,
and different programs
work better,
or faster,
or different wine
versions.
So,
it's definitely worth playing around,
especially if you have
any problems.
Other things that,
that this window,
let's you configure is,
that's you,
wine has the ability,
so wine has
native versions
of likes at the LLs.
Let's see.
Let me give a little
check that I'm
getting that terminology,
right?
terminology right? Anyway, so one has its own versions of a lot of Microsoft DLLs.
Of course, that's the point of the one project to recreate those, but it can use DLLs from an actual industry.
Yeah, I was trying to get portal running, runs on the steam engine, and I got it running, but to get direct X, the way I needed it, I had to copy some DLLs straight out of a Windows installation into why, and it works great.
So, I'm sorry, I got the terminology wrong. The wine has built in DLLs, and then I can use a Windows native DLLs.
Let's see, and yeah, so in order to use Windows native DLLs, you just copy them into the Windows system 32 directory.
And then, in this wine config window, you put that DLL in the original way, so you use the native version, you put it in the original version, and all the things that are in this window,
and you can kind of see it here on the tiny screen.
You can put in an application, and you can specify that application runs in a specific Windows version, or specifically LLs.
So, you can set up a specific application in wine configs to run in different areas of the applications.
That's another thing about wine configs. You can set it up, you're going to be very particular, where you might want a set of programs to do that particular.
And then, in the graphics tab, and this is kind of an important spot to come for troubleshooting problems, is you can set how wine runs the programs.
You can set it so that it runs the Linux window manager, manage the window, you can create a little Windows desktop with the service eyes, and that contains all of your wine with us.
And sometimes, in troubleshooting wine problems, it's useful to come in here and change that.
So, is your starting up wine, a wine that complains about missing the LLs? You can check whether an LL is publicly available.
And I'll give you that to it then, just do a search on the report.
There's a lot of those LLs that you can download to free, you know, from the places free and legally actually type.
Let's see. Also, quite a sight now, it's easy to install, true type fonts, from Linux to the Windows, to the wine configuration, just by copying those fonts.
It's the C Windows fonts, right? I'm not going to support it.
So, the other command here is, just do those rage edit.
So, if you have a rage edit, it will bring up Windows rage edit and it works just as it does on the Windows.
I haven't been said.
Sorry, I'm not sure if that's a good way.
It's a smooth road.
Yeah, nice. Sometimes you're just going to refresh an S5.
So, in wine prefix, or if you don't specify one in the .1 directory, there's a couple of files.
So, the system.rage user.rage and user.rage.
These are the text files that represent the Windows registry.
So, when you fire up rage edit, it's actually reading these files.
And, you know, if you're familiar with the Windows registry, system.rage contains the hkey local machine section.
User.rage contains the hkey current user section.
Kind of time, for example, with Warcraft 3.
In order to get that running, you can make that rage 3 and 3.2.
Have Warcraft 3 run with your . . . overcale rendering.
It's not a great 3D.
Or less important.
So, yeah.
So, in order to run wine, of course, I know wine will pass on your shallow environment.
So, if you run a Windows program that requires, you know, certain environment variables to exist.
If you set those up, you know, when it's environment before I'm working wine, they'll be a show up.
The exception to that is the path system and variables.
And those obviously are a little bit more important and have to be set in specific ways.
So, I'm going to run out of this one quick.
So, quick commands and configurations that I'm going to use for one run wine.
First is uninstall it.
This is, you know, an electric prefix.
This is what the wine command is.
It's a command uninstallable.
It'll bring up a graphical uninstallable interface.
So, you only have programs that have installed into that wine prefix with.
And I'm just reading it with this installer.
And you know, show up in the starting menu.
So, we'll show up in this uninstallable program.
So, you can uninstall that.
Then this is a big one.
If you type in the wine command, space eject.
It will eject the CD without announcing you don't have to worry about unmounted components.
So, for example, if you're installing a program that has multiple CDs,
you just type in wine eject.
It'll eject the CD and put the new one in.
And wine will just pick up where I left off.
So, you don't have to worry about unmounted things.
Because that can be a little tricky.
Oh, a side note that also works with ISOs.
Wine boot.
This command simulates a Windows reboot.
There's a manual way to do it, which is just removing a file in your wine brick.
I call it a wine mitt that I have, I believe.
I think that might show up in the movies.
Anyway, this will simulate a Windows reboot, which is occasionally useful.
Let's say you're wine control.
If any programs that you install have their own control panel configurations,
then they will show up here.
So, that's the way to get to the Windows control panel.
But the default Windows control panel is not sure.
It's just an audition.
Wine console is a variant of wine that will run command line Windows programs.
If you just run command line program that does text of the screen,
the base wine, executeable is fine.
But if you're running something a little bit more interactive,
like an open-source command line program,
it's been written in cursors.
Probably one of you is wine console is that.
Let's see.
Wine file.
I'm sorry I didn't make a note about this one.
Anyway, the Windows line debug is an environment variable.
So, if you like prefixing the wine command with the wine prefix,
if you prefix a wine debug, you can specify, you guys are probably
going to run wine in an environment for it.
And by default, there's just a little bit of a lot of stuff that applies to the wine line.
So, for example, if you export wine debug equals minus all,
what do we do?
We don't have a couple of important messages.
You can also pipe those messages to the demo,
but this is kind of a built-in way to do it.
And anything specify other things besides minus all.
So, just interesting specific parameters.
You can continue them here.
I'll come back to that.
And also, if you're running OSS,
you can export audio debt.
If you're running OSS, you have multiple audio libraries.
You can export that to specify why you should use a particular one.
So, giving it a trouble, you guys are probably
what we're on wine before in the end.
I had a pan.
I used 100% of the CPU and I really died.
And there's two good methods of getting out of that.
The first is typing in wine server dash k.
So, wine server is kind of a bad game.
So, wine works over the regular,
X-E-L-N-Client, and the clients of the model.
So, wine server runs on the background there.
If you pass dash k to wine server, it should just kill you.
It doesn't.
And you left them kill on minus nine.
And this is kind of tricky kind of a pain because
some programs like, for example,
in an explorer start up multiple years.
So, you know, you're going to have to kill them all.
Up to the top of my hand, I'm pretty sure that Internet
Explorer starts up.
IE is something.exe, as well as Explorer.
That is, you need to kill both of those.
Then you've got to kill wine processes in wine server.
That's kind of a pain.
So, try wine server dash k first.
So, solving problems.
If you're running wine, especially the things,
you're going to come up with,
you know, agribatabilities, and that sort of thing.
Your first line of defense should be checking the activity.
It's got ratings from us with this program.
You know, let's say, how well they work,
and the certain versions of wine.
And those user comments about, you know,
instructions, this works for me.
That's what I think.
So, that's our next little first place to start.
Like I said before, in the wine good thick window,
used different windows versions.
Also, interestingly, it makes a difference of you
to use different starter pets, so typing, you know,
so, you know, Linux, CDing, too.
You know, the wine prefix, slash drives these,
slash program files, slash whatever.
And I was typing in wine,
and the executable name straight out of that,
is different than running,
that's supposed to be after different wines.
But that's different than running wine, you know,
and in quotes, the windows pack, you know,
for whatever reason.
You use different gooey bugs.
Like we talked about before, one, two thick,
and then you integrate a desktop board,
or whatever they're doing today.
And also, fill with DLL configurations.
This is a little bit more specific, too.
If you've already known that the program,
you've tried your own bunch of some random,
you know, with this program,
but if you work in a company that makes a program,
for example, this might be a little bit more important.
So, for example, you even set wine debug
to plus load DLL.
A little just output error messages
that have to do with loading DLLs.
So, you can see, you know,
you can load it once we remade it,
when you're working on content,
and we can use it.
Are all of the possible wines
of the auction standard man-made recipes?
It's not a man-page.
It's not hard to find.
I was just doing research on the wine inside of the wine wiki.
But it is, it's hard to find.
Absolutely.
And then, DLLfiles.com is that the site that has free
and have legal deals?
If you switch up.
If you can't solve the problem line you're already in
the search for a solution,
really best for its place to start Google.
There's a lot of excellent wine resources,
but there's also quite a few of them.
So, Google is a good kind of interlining place.
The wine fact, if you haven't read it,
it's not a bad read.
It doesn't take very long.
And that's not a lot of tips and tricks in there.
The wine wiki has a search,
not a bad place to start.
And there's a website called Frank's Corner,
which is a little bit more specific,
but that's a good resource to get.
It's a really good job.
For example, I've got some pages on how to get more
of a trick.
So, lastly, when we're done here,
what are we doing on time?
So, some helper tools.
And I'm sorry to say I'm not as prepared for this,
as I'd like to be,
because I have invested two of these.
The first is wine doors.
Wine doors is an application manager
to work with no guest talk.
And I'm a little fuzzy on what it does.
I think it's some kind of aspect
across the world for wine house.
It kind of integrates into the like,
no guest talk.
This next one is really important.
If you don't use it with any wine install,
it's probably making a mistake.
It comes up with a lot of 12 wine drinks.
It's just a little shell script.
Good you can download it.
It installs us a very basic components
to the clean Microsoft LL response,
that sort of thing.
Yeah, I think I had to use that one,
to get the XML version 6 support,
sort of in wine.
I think we were trying to get .NET,
the Windows version .NET to work under wine.
Okay.
Yeah, that sounds about right.
So if you just type it by itself,
it'll bring up a little X message by a long time.
I can't even show it to you in my little EPC,
because it doesn't wrap.
So just scroll up,
but two sides of the screen.
It's really long.
There's quite a few programs in here.
If you do dash that shell from the command line at all,
it'll output all of them.
A quick example of core fonts,
Microsoft core fonts,
DECOM,
a DMX video called DirectX9.
Adobe Flash.
Yeah.
I think it's quite a big list.
So you'll probably almost always want
to install some stuff from there
into a new wine prefix.
I don't know.
I don't have a bullet point for it.
Oh, I guess.
IE is for Linux.
This script is awesome.
It's great finding out in the results.
It's,
it's a little script to help you install IE on Linux.
I can install multiple versions of IE.
It's four, five, five, six.
It has beta support for seven.
Oh, yeah.
Yeah.
It's a little funky.
A few times I've tried it.
I didn't work very well.
Because,
up until fairly recently,
IE seven required that when you went
to Windows, you didn't want it back.
But now,
in the longer class,
so it's easier to run a new one.
But the IE's
Linux guys still have to
chew on the Windows seven rendering engine
into Windows,
or into an IE six kind of interface.
I don't know.
It's a little funky.
But the bug went works.
It's nice to have.
And a quick side note is,
IE's for Linux installs.
It's a specific wine prefix.
And you're hungry.
IE is for Linux.
It's what's easy to make.
It makes this one.
Now, this is the one I really regret not testing
before giving this presentation.
I didn't find out about it.
So, just recently,
it's called Play on Linux.
It's a Play on Linux.
It has an application of easy installation
of Windows games using one.
It uses an online database of scripts
to apply them in settings
for specific games.
For games in specific configurations.
I work through the game itself.
So, if the game is not in the Play on Linux database,
then you can do an IE installation.
So, this is kind of,
I'm sorry,
do you know what's best known
if that uses IE file?
Prefixes as well.
So,
this is kind of similar to how
Sadega and
Procible work.
They've got a list of supported applications.
So, for example,
when you're running
Procible,
if you want to install
Microsoft Excel,
you don't just fire out the
setup file.
You can't do that.
The best way to do it is
when you go to the install software,
the window,
which we can show you, actually.
Let's see what it is.
I'm going to cross over
install wizard.
So, cross over standard
is that free?
No.
No, they're all free.
But,
and on that note,
you might wonder why
why you would pay for cross over.
Instead of just running,
it's not going to work.
And the answer to that is,
is you can run pretty much anything,
if not everybody,
under the NO-1 that you can run
across or
it's just,
not the matter of tweaks that you actually do.
So, for example,
here's the list of supported software
and cross over.
So, you know,
if you need to install any of these,
instead of just firing up the setup out of the city,
you start them up out of this list,
and then it'll fire up the setup.
Why and specific settings?
And presumably that's a plan,
as well.
It, you know,
it knows the specific settings are needed
for specific programs.
So,
so far at the moment,
cross over games
has a very small
number of how many,
anyway,
what's the column that has some supported games.
And that's a pretty different
between cross over games,
and it's the day I get to know this.
It's a huge list of supported games,
or express some of the games
which are just getting started.
And those are just pretty small.
I don't know how many of them said
sometimes I'm kind of thinking about them.
So,
I totally skipped over,
I'm talking about Transgaming.
Transgaming creates
a created side,
although I'm murking inside of that into
the city proper.
But,
Transgaming was kind of a big deal
when Apple switched over
to X86 processors,
because that enabled one
to work on Mac OS.
And Transgaming
and Kobe
was as well jumped on that in a big way
as they should have.
So, for example,
if you go to the Apple website,
Apple.com slash games.
It changed the spread of the
race of my butt,
but if you go there now,
a lot of those games will see a little
graphic mix of the games.
That's going to tell all of them.
And it's not a given,
but that's because it was
that game was compiled against
a lot of the more
when that became,
when that first became a big deal
for running games
on Apple Hardware,
Apple Games actually had a special
like specifically
for Kickstarter,
to kick your product
for the boys in the city.
And, you know, just see how
the top of, you know,
just know what we can do.
This is compiled with some
sort of, you know,
yeah, so same kind of deal with
Transgames,
Citigr,
Get a install game,
you know, come up with this little
graphical install.
It's like the,
the application has a list
that will do all of that configuration
necessary to get it up and running.
And, depending on,
you know,
what you're running,
you know,
because, as I mentioned
before,
they pay attention to
backward and
have really great
project design.
That's it?
Any questions?
No, I think that
you're not getting it?
No, I saw that
on the list of
additional tools that
you guys find, but
it never tends to be
about it. Do you know
anything about it?
What is a premise?
I don't even know.
I don't even know that.
What do you do here?
You said it's going to come
from Windows software.
And, actually,
the way you're doing it,
you're just going to have
a parallelist virtual machine.
The parallelist virtual machine
utilizes some
line direct X code.
Over, you know,
the future of backward project.
But,
you know, so I don't know
specifically how it runs, but,
because it somehow
performs
a lot of stuff I read
about line and
became the virtual machines
and, you know,
able to run
hard work-celerated graphics
that will be for
why it will be
evaporated.
I guess we're seeing it.
Cool. Thanks,
everyone.
Cool.
I'm
getting my right to think of these
two minutes. I want to
give this feedback.
And, I really
actually just focused on
the last chapter
we talked about.
And, one of the last chapters
we talked about.
He asked
how you can figure
he asked and everything.
And, it was really
interesting the ways that you can
customize X for,
you know, publicly used
computer with them
and we
have lots of
kiosks and we
got them
pasta and I did
use them in my
life for the
missed church.
And, they are talking about
having a
public kiosk in some of the
vision centers.
So, I was, the kiosk
chapter is very interesting.
I went into a public
area using the kiosk
and realized what I think
this is very
Linux and got that little
you know,
demolish green on my face.
What would I do to try to
quickly compromise the system?
But, I think the first thing I
do if I had a control
on all buttons is I try to
change the virtual
terminal.
So, the next thing I think
that I have probably
tried to do is
zap it. See, if I get a
log in, you can turn up the
control on the backspace.
Zap it.
I don't know, what would you
do from that point if you
want to get a function?
I think that I would
try to maybe
lots of distributions
that all have two will
be running up a run
dialog or an all that four will
kill the running application
you can, and in the
XOR cuff, you can
map mouse buttons
and keyboard buttons to
other commands.
So, you can say a mouse button
to actually render this
mouse button once. So, you can
take off right clicks
really easily. You can
map, you can
map the off button
maybe being controlled.
The control button
or just the escape button
or something like that.
So, it can't get
to all that four. So, lots of
little things like that.
Put them all together.
You could probably have a
pretty secure
as far as being able to
quickly, you know, put the
kill application
in, you really
can. I will
find you got one
machine with
on-board video and two
dual-headed video cards
and a bunch
of USB 2 more demise
to run five separate
kiosk
stations.
And it was really cool.
Each one is just like
its own desktop.
It was really
a separate
one. You know, I hope
a little bit
Sam works with me over there
and he got it going.
He spent most of the time
on it. It was a hairy
scary ISO.com.
But the problem that we ran
into was
USB devices
and what it's
passing through. Don't
always come up with the same
way.
So, like, you know, you
will say keyboard
too and mouse too
and will associate you with
screen too and lay out too
on x1.com. Well, on the next
reboot, this mouse might end up
being the third one that comes
up in the keyboard. The first one is
really annoying. Is there any
good way around that? I have
an indesity of it
too much. Just thinking
about it.
The two will be
a lot easier than five.
It's probably your
point.
It was not like a small
little mini i-fx
and there was always
one of the users
just checked down
and it just craps the
CPU. So, there was lots of
content. I don't know
where to put it.
I didn't read that chapter
at all when I went through it.
Yes.
Are there any,
kind of
default configurations you can
download something
up in the
PS mode? Or do you pretty
much just have to
kind of stick to the chapter
and do what's best for you?
I had it from across. I didn't
did that.
There's a lot of
stuff for
specific applications.
I think there's a
key-house plugin for
Firefox.
We'll put it
in full screen and make
it so it can't
right click.
I think it will
ring that to control the
content.
That might be why you did it.
It's just the internet.
Yes.
Cool.
Okay.
No problem.
As far as future topics,
there's been a couple things
that I'm kind of interested in.
Some of my
Linux friends, like me,
just have all these extra
boards laying in the
house with don't know what to do
with them.
I think it would be interesting
if, has anybody
replaced Linux files?
Opened by a stop?
No.
But kind of interesting though.
There is a super short list
of a really short list
supported by the board.
So I was almost
surprised everybody.
Check your other boards if you
have this model.
Let us play with Linux files.
It's really easy to back up
your files and
restore it.
So I'm going to be dangerous
thought we could easily back up
their original files and play with
Linux files.
I don't know.
Some websites are
claiming you get to a full
project.
It's going to be
built on.
Oh yeah.
That's a whole
another really neat project.
Splash build.
Where they have a whole
X-server and Firefox
building to the
files.
Yeah. It's going to be
built on.
People keep trying to
keep the files
storage big enough that
you can stay in the Firefox
in there.
Yeah.
You can be running this trail
of the BIOS.
But they say they have to
boot up time.
Most BIOS is probing
the hardware which
Linux is a pretty good job
doing itself.
It's loading support for
this kind of shit.
Yeah.
Thank you for listening to
Hack or Public Radio.
HPR is sponsored by
Carol.net.
She'll head on over to see
ARO.NC for all of her things.
Thanks for watching.
See you next time.
Bye.
See you next time.
