Episode: 1751
Title: HPR1751: How I got into Linux
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1751/hpr1751.mp3
Transcribed: 2025-10-18 08:49:31

---

This is HPR episode 1,751 entitled How I Got Into Linux.
It is hosted by Steve Mitchell and is about 19 minutes long, the summary is How I Got Into
Linux, LFS and where are you Linux now?
This episode of HPR is brought to you by an Honesthost.com.
Get 15% discount on all shared hosting with the offer code HPR15, that's HPR15.
Better web hosting that's Honest and Fair at An Honesthost.com.
Hi, my name is Steve Bickle and here's my How I Got Into Linux episode.
By the late 90's I'd moved into IT as a project manager.
The trade press and PC mags occasionally mentioned Linux, so I knew it was around and I often
saw piles of 3.5 inch floppies accompanied by red hat books around the place, but I never
saw a working installation.
It's hard for me to imagine now, but there was a period during the 90's where I didn't
have a home computer at all.
Well, it's not actually quite true because I had a sign organiser, well several but that's
another story.
Oh yes, we had an old Atari ST with a box of games for the kids to play with.
That was a real bargain, £10 from the school fate.
We sold the Atari at the same event a couple of years later to raise another £10 for
the school.
Anyway, it wasn't until 1998 that I bought a nice new Windows 98 PC with a Modem and 3D
graphics card.
I'd previously hacked around in the 1980's with home computers, 6502 and Z80 assembly
code and early Amstrad 1512 PC clone, so I considered taking a look at Linux but never
really did anything about it.
I think that it was 1999 or 2000, I picked up a Nopix CD off the front of a PC mag.
The Nopix CD was among the first Linux live CDs and on loading it gave a choice of early
versions of Nome or KDE desktops with some applications pre-installed.
Nopix was only a partial success for me.
Since my PC had a Hercules Terminator Beast graphics card which had the rather cleverly
engineered but relatively unpopular Savage S3 chip, it meant that I could only get the
X server running by typing what were to me at the time arcane commands at boot time.
The Nopix CD and I would need to have a good look at both Nome and KDE, both seemed to
do the job and were not as awkward as the OS2 workstation I'd had occasion to use.
At that point, Linux for me was an interesting but short interlude between playing G-Police
and populace at the beginning.
Fairly soon I lost a little bit of paper with the arcane commands and Nopix joined the
shiny coaster pile along with the other PC Mag and ALO discs.
From here on my timeline gets a bit muddy but this is how I think things went and how
my use of Linux became increasingly significant.
Much later now in early 2007, having read good things about Ubuntu, I decided it might
be time to look again at Linux, so I downloaded Ubuntu and installed it as a dual boot on
my relatively new desktop PC.
It worked fine but I couldn't get the wireless network card to work so I had to buy a compatible
network card from Linux Emporium.
Like many of us, I often get asked to sort out PCs and laptops for family and friends.
On one of those occasions I had to resort to using a rescue disk, I picked Trinity Rescue
Disk.
It's a bootable Linux distro that includes a bunch of handy command line tools that can
be used to read NFS and rescue XP machines.
So there was another chance of Linux being of practical use to me.
My aging Athlon powered Acer Personal laptop had reached the point where XP was grinding
to a halt in the way that XP machines pre-service pack 3 used to do.
So it was a good candidate for Linux.
I downloaded Ubuntu Gutsi Gibbon, burned it to a disk to install.
This proved an interesting challenge, not because of Linux but due to my own earlier
stupidity.
The Acer machine used to have a nice simple memorable BIOS password.
But one of my older teenage daughters had managed to guess my password to use my machine
to get to the internet when her laptop wasn't charged.
A teenage daughter's internet habits and XP vulnerabilities proved not to be a good mix,
so having removed the file sharing software and malware from my machine I decided to upgrade
the login password to something unguessable and while I was at it I did the same to the
BIOS password.
As it turns out, an unguessable password also meant unmemorable, so thereafter I was never
able to get into the BIOS to get the Acer to boot from a CD.
The BIOS proved uncrackable, I tried all the usual tricks removing CMOS batteries, shorting
reset pins on the motherboard etc.
So to install Linux I did something that's just not possible with Windows.
I took the hard drive from the Athlon powered Acer and stuck it in an Intel-based Fujitsu
laptop.
This is the one that wasn't charged earlier.
I installed Ubuntu on that machine, then put the drive back into my Acer laptop.
Much to my amazement it booted first time into the desktop with the correct resolution
and no errors.
That's something that just won't work with Windows install.
Windows ties itself to a particular hardware set.
Much of it refuses to run if that hardware significantly changed, whereas the Linux
kernel largely uses the correct drivers dynamically from the selection it was compiled with.
I still had to get the wireless network working, which was a bit of a song and dance back
in 2007.
After much googling and a weekend messing about with command line network commands and
different drivers, I eventually discovered a piece of software called FWCutter, which
wrapped a chunk of Windows driver code in Linux driver code and made the wireless work.
So it was no longer leashed to the router under the stairs but I catfived cable if I needed
to use my laptop.
Switching over to Linux gave my laptop a new lease of life and after a couple of months
it was no turning back.
I had my music collection loaded into Amarok and I had installed Compass Fusion to get the
desktop cube and all the other Linux bling working.
In 2008 I was given a PC in return for fixing someone's laptop.
PC was an old 800MHz Salaron with 128MHz RAM, which was struggling to run XP.
With a 10 minute plus boot time it was neither used nor ornament unless you had a use for
a disk thrashing sound effect machine.
But I really needed to provide a PC for my youngest daughter who was 8 then, as she could
never get her hands on the laptop that her elder sister shared.
And frankly some of the content on that machine was probably not suitable for her.
Initially I tried damn small Linux and puppy Linux on the machine.
They both ran okay but they were dissatisfying to use after Ubuntu.
So I spent a five on some second hand RAM for me but I had to get it up to the minimum
for an Ubuntu install.
Ubuntu worked first time, not quickly but quite reliably.
I switched it to the Zubuntu addition to speed things up a little.
Because the XFAE desktop needed less resources.
I needed to put it in the kitchen but there was no network port there and no way my wife
was going to stand for Ethernet cables being trailed around the place.
So I splashed out on another new wireless network card from Linux Emporium.
Then that too just worked.
So daughter number three had her own computer and was able to play with TuxPaint and write
stories in multicolored 24 point text in Abbey Word.
The Ubuntu lasted a month or two but curiosity got the better of me.
I wondered if it was possible to get the desktop cube running on such an old machine.
So I picked up an Nvidia graphics card for 15lb on Ebay.
By this time Ubuntu Hardy Heron was out so I reinstalled with that and went back to
a known two desktop.
By this point Ubuntu was able to automatically install the non-free driver for the Nvidia
card.
With the addition of Compus Fusion on, the old machine that could barely boot XP had
the shiny spinny desktop cube and could play most of the Linux games.
This old machine lasted a couple of years before it died of repeated power supply failures.
Later that year I made my son's XP machine into a dual boot Ubuntu with Compus Fusion
installed.
On the basis that it was there to use if he wanted to use it, I had to replace the wireless
network card again though.
He did use it and preferred it over XP, although laterally he went back to Windows 7.
I wanted to try something different so my desktop PC got converted to CrunchBang after
hearing good reports about it on the now sadly finished Linux Outlaws podcast.
So now I'm using Linux at home from time to time and also at work.
These days for my job I work with document management software which installs against
Unix Linux or Windows.
So over the last few years I've had occasion to work on all three types of operating
system.
I've had to install this commercial software on both Sous and Red Hat Linux and installing
this kind of system software it can often be slightly more complex on Linux than Unix
than on Windows since it's not packaged in their repositories and it involves writing
your own start-up scripts rather than relying on vendor-provided Windows services.
However, the power of the GNU command line tool makes life so much easier when working
through log files and fixing problems.
So I think it's worth the additional effort to have installed onto Linux.
I've always needed to know how things work.
So during a period when I was doing a commute on the train every day I decided I would
use this commute time to build Linux from scratch also known as LFS.
This is both easier than it sounds and harder than it sounds.
It's easier than it sounds because there's a Linux from scratch book downloadable from
Linux from scratch.org website.
The book walks you step by step through the process of creating a bootable Linux instance
from the source files.
It's harder than it sounds because you have to follow instructions precisely, really
precisely.
If it doesn't work it's because you're not following the book.
When building LFS you can make any excuse you like but it invariably if it doesn't work
it's because you didn't do exactly as you were told by the book.
I built LFS to teach myself a bit more about what's going on under the covers in Linux.
Yes I learnt about the major packages and the tool chain required for the build but
I probably learnt about as much about improving my weakness in reading comprehension and
concentration as I did about Linux.
If you choose to walk this particular path building your own Linux from scratch I would
recommend using a virtual box or VMware virtual machine to build it.
Taking snapshots at regular intervals during the build process.
This way when it dawns upon you that you once again have not accurately followed the
instructions you can rewind to a snapshot point and you won't have to resort to starting
back at the beginning.
I used VMware for my LFS build since at that time it was available on my work laptop but
I probably used virtual box if I had to do this again.
The sense of achievement on booting your first Linux from scratch is amazing.
It's a bit like completing a big air fix model.
As an artifact it's about as much use.
But you do come out the other side slightly more knowledgeable person.
In all seriousness though LFS has been used as the basis for some real projects and can
be taken further to produce more useful builds by using the associated products also found
on the LFS website.
I also had a bit of a play with a Tenedo plug.
It was an early small arm powered device running a Ubuntu server which I used with a
one terabyte portable network to back up all of our media.
It could do a number of other things, some more useful than others such as running a server
based torrent client.
It was also really handy to be able to download albums from my music collection to my phone
using the Tenedo Android app when I was away from home.
However the Tenedo update process killed all the Tenedo services which were subsequently
never recoverable.
Although it still backs up all the music in the house until this day.
A Dell 1520 laptop was discarded by my oldest daughter after she broke the screen.
I installed a new LCD screen that I picked up off eBay, making it ready to reuse.
My son needed a laptop for his A-level schoolwork so this old Dell fitted the bill nicely.
Although I could have reinstalled and then service pack the original XP operating system
I didn't really want to spend two nights installing updates and rebooting.
So it had to be Linux.
At the time I didn't want to install a Ubuntu as Unity didn't really seem fit for purpose.
I hunted around for a suitable alternative.
I considered Debian and after trying Mint and a couple of other distrues I ended up with
Fedora 16.
I did wonder if Nome 3 would be acceptable to a discerning teenager using a Windows 7 PC.
However after two minutes of show and tell about Nome there was no problem.
The only issue with the default Fedora install was getting all of the multimedia up and running.
It required some googling and a bit of command line cut and paste.
It was all working after about 30 minutes of extra effort.
After a failed up Fedora update killed the installation, Fedora was replaced by CrunchBank.
Some three or more years later my son still uses CrunchBank on that laptop but also has
an XS7 and a 13 inch Chromebook.
Although my youngest daughter has a Chromebook she still keeps an old Dell 1525 with Linux Mint
to watch her DVDs on.
Because of the high dependence of the UK University system on Microsoft Word, my oldest daughters
are both Windows 7 users.
Which it instantly is also more consistent at consuming media than any Linux distray.
I need Windows 7 for my work laptop.
Windows 7's proved robust functional, though occasionally annoying.
I often resort to CrunchBank or CentOS running in the virtual box to do things I can't
do on the host OS.
I also have two CrunchBank laptops.
One I use as a laptop and music player in the kitchen and another an old Dell D410 which
sits under the stairs as my home server.
So that pretty much brings me up to date with where I've got two with Linux.
The next toy for me to play with with Linux is the recent Raspberry Pi 2 which I managed
to get connected last week and has a rather interesting music toy called Sonic Pi which
I'll need to explore a little more.
And may even do follow up episode on Sonic Pi.
Well that's it from me, thank you, bye.
You've been listening to Heka Public Radio at HekaPublicRadio.org.
We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by an HPR listener like yourself.
If you ever thought of recording a podcast then click on our contribute link to find
out how easy it really is.
Heka Public Radio was founded by the Digital Dog Pound and the Infonomicon Computer Club
and is part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on
the website or record a follow-up episode yourself.
Unless otherwise status, today's show is released on the Creative Commons, Attribution,
Share a Light 3.0 license.
