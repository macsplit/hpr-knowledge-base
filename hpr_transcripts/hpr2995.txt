Episode: 2995
Title: HPR2995: ActivityPub Conference 2019 - ActivityPub: past, present, future
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2995/hpr2995.mp3
Transcribed: 2025-10-24 14:36:43

---

This is Hacker Public Radio episode 2,995 for Friday 24 January 2020.
Today's show is entitled Activity Pub Conference 2019 Activity Pub. Past, present, future,
and as part of the series Social Media, it is hosted by Ahuka
and is about 16 minutes long, and carries a clean flag. The summer is
Activity Pub Conference 2019 keynote.
This episode of HPR is brought to you by An Honest Host.com.
Get 15% discount on all shared hosting with the offer code
HPR15. That's HPR15.
Better web hosting that's honest and fair at An Honest Host.com.
Hello, this is Ahuka, welcoming you to Hacker Public Radio
and another exciting episode. And I'm going to continue my look at
some of the new things in Social Media and particularly the Fediverse.
And what I want to do now is going to be actually a series of programs,
probably a little shorter than mine usually are.
But I want to talk about things that went on at the Activity Pub Conference of 2019.
So that was in September of 2019, and this conference happened in Prague
and the Czech Republic. I was not fortunate enough to be there.
But they did post videos of all the talks online, and links will be in the show notes.
And I just want to basically report back to everyone at Hacker Public Radio
about some of the things that were discussed there that I thought were kind of interesting.
You know, I have mentioned previously that I think Activity Pub is very important.
Fediverse is very important. So that's why I'm doing this.
Now, I'm going to start with the opening keynote.
But I remind you that all of the links to these talks and anything else that comes up
are going to be in the show notes. I always put lots of links in my show notes.
So you should be able to follow up with any of this stuff.
I'm going to start with the opening keynote, which is by Christopher Lemmer Webber.
Now, you know, this guy has a fair amount of credibility.
I don't remember all the exact titles.
But he's on the W3C's social committee.
And he is one of the core developers of Media Goblin co-editor of Activity Pub.
So, you know, this guy knows what he's talking about.
And so he kicked off this conference with a talk called Activity Pub Past Present Future.
So, you know, what are some of the things that he talked about?
Well, Activity Pub is built on a client server model.
And in that model, there are various actors.
And actors could be people like you and me.
And they would then perform activities on various objects.
And the messages needed to do this use an addressing that is very similar to email.
In fact, you've already seen some of that.
You know, my address on mastodon, which is an Activity Pub.
One of the places using Activity Pub as a protocol is atahookaatactodon.social.
So, you can see that's very similar to email.
Now, an actor could be an application, a group, an organization, a person, or a service.
So, a lot of options there.
Activities, there are many activities, but they include things like accept, add, join, reject, read, and so on.
And then finally, what are the objects?
Well, there could be things like an audio, a video, a place, a document, and so on.
And all of this is extensible using JSON-LD.
So, this is just a little quick background on what Activity Pub is.
This is not a real detailed technical description, because I'm not a detailed technical.
I'm not a programmer, frankly.
But, you know, how does activity, why does Activity Pub arise?
Well, it's a response to the fact that in the early days of federated media, things were very fractured with different protocols that could not talk to each other.
It's still an issue to some degree, but I think Activity Pub is doing a great job of resolving that as much as it can be resolved.
And, in fact, Activity Pub was promoted by the Worldwide Web Consortium through the Social Working Group.
After three years of work by this group, Activity Pub became a Worldwide Web Consortium recommendation.
As a result, it has grown to over 2 million registered users, and has over 50 implementations.
So, it has been successful, no doubt about it. That does not mean it's done.
There are some problems to be overcome.
And, in fact, a lot of this conference was devoted to taking a look at potential solutions to some of these problems.
Okay, well, what are some of the problems?
Users suffer when nodes go down.
Okay, nodes are essentially servers, and each user has an account on some specific node.
If it goes down, content is lost.
If it goes down permanently, the user must rebuild their network when they find a new node to join.
So, you know, that's not ideal.
You know, you don't think about that with a monolithic service like Facebook.
Although you do think about it with a monolithic service like Google Plus suddenly say, yeah, we're just going to pull the plug.
It's been nice to see you later.
And so, you know, it is an issue, but the activity pub people are at least thinking about that and saying, is it really necessary or, you know, could we find a way to preserve all of that information?
Another issue, breadth versus depth.
You know, corporate surveillance capitalism in the form of social media has conditioned all of us to focus on who has the most followers and even mastered on his fallen into this trap.
And really, why does that matter particularly?
You know, are you participating in social media to accumulate bragging rights?
That seems kind of weird.
But, you know, the media sometimes gives us reasons to focus on it.
The censorship in community is another thing that is a potential issue here.
Freedom of speech implies or is complemented by freedom to filter.
And when we talk about community, that becomes an issue.
If I have a way to stop you from saying what you want to say, then you're being censored.
But deciding not to listen to you is not.
That's simply filtering.
And it's part of my freedom to decide who I want to listen to and tools to do that are very necessary.
People like to form communities of like-minded folk around common interests.
Consider an email server versus an email list.
Which one is the true community?
And many of us are members of multiple communities because we have many interests.
So, we're all members of the hacker public radio community.
But some of us may participate in other podcasts or, you know, Linux users groups or, you know, who knows what.
We're all members of multiple communities.
Now, understanding where these communities live becomes important and helping them to thrive is important.
This includes recognizing that different communities have different norms of behavior.
And that leads to the question of whether peer-to-peer or client server is the better approach.
Peer-to-peer facilitates different communities.
Now, one way to think about this is that in peer-to-peer, everyone connected to the network is both a client and a server.
Chris Weber gave an interesting example of this, a place that I didn't really know anything about.
Something called Electric Communities Habitat from 1997.
And this was kind of a virtual reality place that anyone could create their own world and do whatever they wanted inside of it.
Interesting stuff there.
Now, security is another issue since communities form around shared norms.
How do you provide security to enforce those norms?
In the corporate media of surveillance capitalism, they're grappling with that right now as I write this or record this trying to stop Russian manipulation of elections and other destabilizing behavior to deal with hate crimes, Nazis, white supremacists, and so on.
So far, they've not been doing well with this problem.
I just saw that Facebook announced some kind of prohibition of deep fakes.
But I don't know how they're going to make that work.
I'm not sure they know how they're going to make that work.
They'll be interesting to see.
Now, in a peer to peer environment, what kinds of tools do we need?
So Chris Weber first offered the rule, only prohibit what you can prevent.
But notes that we have ways to deal with things that we cannot prevent in protocol, but we can do enforcement out of protocol, such as by social requests, social shaming, legal enforcement, and expulsion.
So he then revised his rule instead of saying only prohibit what you can prevent.
He says maybe the rule should be we must not claim we can prevent anything that we cannot prevent.
So in a peer to peer environment, you know, what happens if someone joins the group and decides to.
Basically attack other members, you know, maybe it's a racial thing or a sexual thing or what have you.
You know, what do you, can you stop that from happening? Probably not.
Can you take action when it does happen? Yes, you can.
Some things may in fact be illegal in your jurisdiction.
You could in fact take it to law enforcement. You can definitely expel whoever is doing it.
You know, can you stop them from coming back with a new account?
Well, we all know how difficult this all is.
Now, the point is that as we talked about before when we were looking at some of the specific examples, such as mastodon,
is that different nodes have basically set up standards that this is the community standard for this particular node.
And it can be very different. Some of them can prohibit a range of behavior and throw you off if you violate that prohibition.
Others may have very, very few rules and say, you know, we're more like anything goes around here.
And if you want to be here, grow a thick skin.
So one of the things Chris Weber pointed out, he took a look at some examples and there's something interesting called emergent behavior.
Emergent behavior is not directly explicitly something that's in the rules, but somehow seems to arise out of that combination of rules.
And when designing social networks, we need to take this into account.
What patterns of behavior do we have reason to expect will arise?
And is there anything we can do in the rules to shift that behavior?
Another issue we have agency, what kind of rules can we write that maximizes the agency of users?
In other words, are we empowering users to have control over the things that affect them?
That's one of the interesting things when we talk about free culture.
And one of the things I have learned from following Chris Weber and some of the other folks is that they're not just interested in technology.
They're very interested in free culture.
And one of the things about free culture is that we should be looking at things that empower people.
And that can be the distinction for instance between something like open source and free software.
Are they the same thing? I would argue they're not.
Open source is a business model. Free software is a free culture issue.
And that only happens if you can empower the people that use the software.
And finally, we'll close with a quote from Bradley Coon who is not the executive director anymore president or something of the software conservancy.
And I have met Brad. I've been at some of his talks. He's a very thoughtful fellow.
And he has a saying, revolutions are run by the people who show up.
And I really like that. You know, back when I was teaching, I used to tell my students that 95% of success in life consists in showing up.
And so I like this variation from Brad. Revolutions are run by the people who show up.
So if we're going to be the revolutionaries, step one, we have to show up.
So this is Ahuka for Hacker Public Radio. And I'm going to remind you as always to support free software. Bye bye.
You've been listening to Hacker Public Radio at HackerPublicRadio.org.
We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by an HPR listener like yourself.
If you ever thought of recording a podcast and click on our contributing to find out how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the Infonomicon Computer Club.
And it's part of the binary revolution at binrev.com. If you have comments on today's show,
please email the host directly, leave a comment on the website or record a follow-up episode yourself.
Unless otherwise status, today's show is released on the creative comments,
attribution, share a life, 3.0 license.
