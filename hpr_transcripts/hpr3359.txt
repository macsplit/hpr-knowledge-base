Episode: 3359
Title: HPR3359: Linux Inlaws S01E32: Politicians and artificial intelligence part 3
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3359/hpr3359.mp3
Transcribed: 2025-10-24 21:40:51

---

This is Hacker Public Radio Episode 3359 for Thursday, 17 June 2021.
To its show is entitled, Linux in Laws S0132, Politicians and Artificial Intelligence Part,
3N is part of the series Linux, in laws it is hosted by Monochromic, and is about 47 minutes long,
and carries an explicit flag. The summary is, Part 3 of the Miniseries, on deep learning,
politicians and other approaches to intelligence or not.
This episode of HPR is brought to you by archive.org.
Support universal access to all knowledge by heading over to archive.org forward slash donate.
Support universal access to all knowledge.org.org.
Support universal access to all knowledge.org.
Support universal access to all knowledge.org.
This is Linux in Laws, a podcast on topics around free and open source software,
any associated contraband, communism, the revolution in general,
and whatever fence is your tickle. Please note that this and other episodes
may contain strong language, offensive humor, and other certainly not politically correct language
you have been warned. Our parents insisted on this disclaimer.
Happy mum? Thus, the content is not suitable for consumption in the workplace,
especially when played back in an open plan office or similar environments.
Any minors under the age of 35 or any pets, including fluffy little kilobannies,
you trust the guide dog, a lesson speed, and QT rexes, or other associated dinosaurs.
So welcome to next in Laws season 1 episode 34, the one with the framework.
Marky? Power things. Things are wet, cold, and windy,
and in a typical UK, some. I see. Well, hang on Martin, I just got a mail from the
Metropolitan, no, so not Metropolitan, Metropolitan Police Force, yes.
We're currently on your face again, are you?
Who not only are running all these pipelines?
Who not only run the government these days in the UK, but apparently I'll turn
in charge of the weather.
Excellent, that's what you need. Metropolitan office, well done.
So Metropolitan Police Force, well done. No, the Met Office, yes, got in touch and said that
please tell Mr. Vister that as usual, this summer, it won't happen before the 13th of August
around 12 o'clock midday. Oh, it's usually over by then.
No, you're confusing that with 1 p.m. on the set date.
There is a difference, you see. That's true, that's true. I thought I stopped a lot earlier than that.
Yeah. Okay, jokes aside, yes, indeed. How are you?
I'm not too bad. Well, the weather isn't great here though, so.
But apparently our summer is now planned for, sorry, between July, sorry, between July 30th
and August 22nd, so that gives us almost three weeks or something in contrast to an hour in the UK.
Right. Yes. But then you wanted, you did want to live in this country, Martin, right?
Yes, got some, the advantage of not so much Lager and stuff like that.
Yes. But we won't go.
What a wonderful weather. Yes, we won't go down the avenue of lukewarm kit pads.
Catfish for change.
It was a kit pass, yeah. That's a very good question, sorry. Catfish.
I also known as real ale. Camera, if you're listening, this show is about you.
You're clearly after that sponsorship again, aren't you?
I do, and you have huge high attempts to introduce a real beer into the world,
which other people, no, no, no, we don't want to introduce it to the world. It's some,
they don't appreciate quality. Quality.
Interesting. Do the cats know that you're taking weather pills?
Yeah. Okay, before this degrades any further.
Yes. Well, we can always invent the degrumpy old cars.
We won't let it. Yes, but they're busy tonight, so it's not lunch.
Grumpy is if you're listening, I can't touch it. We need you.
Okay, back to, back to today's subject, which is of course the third installment, sorry.
The third installment of the 27.64, yeah, many, many, many years.
Paths of the mini series about artificial intelligence and other humorous aspects.
And this one will be about frameworks. Okay, maybe we should do a very quick recap for the
two listeners who are not in the loop with regards to what has been happening so far with
all the two superheroes in terms of what we do, what we did rather for the first two episodes.
You know, wow, isn't it? Why don't you go first?
By all means, during the first episode Martin tried to introduce the foundation of artificial
intelligence without using maths. That of course was crowned by success.
I'm almost tempted to say, no joke aside, in the first part of this of this mini series,
especially we tackled the theoretical foundation. So what our backpropagation networks, how they
work in principle, what are the different entities that make up a backpropagation work and why
they're supporting for the machine learning. The second part introduced two major frameworks,
namely TensorFlow and PyTorch, two infrastructure projects in the area of backpropagation networks.
The idea behind these two frameworks is essentially to give you a programming model at your disposal
so that you don't have to reinvent the wheel, but rather can get started right away.
Because most of them, for example, would provide a passing integration right out of the box.
Meaning that you can start to compose your layers,
interconnect them all the rest of it with a few simple commands. This is the idea behind these
kind of infrastructure layers, no one stands afloat in PyTorch. Did I forget anything?
Sounds bad, right? It's been a while. Yes, but it's a good thing about that. Full
full disclosure, Martin is over the age of 42. Yes, just, anyway, 42 is a good one.
Sorry, 40, too, exactly.
You know that, yeah, anyway, that's not going to 42 today.
Okay, and continuing in this kind of frame of thought, let's put it this way,
there are, of course, additional frameworks on top of said PyTorch or Torch,
where that matter, and in terms of flow. Okay. What are you particularly thinking of there?
The old time, as in terms of at least my favorite comes from on Carras.
Okay, why do you like Carras? And what's it going to do? Because that's the first one I met.
Eight ages ago, ages ago, yes, traditionally. Indeed, very much so, yes. Why do I like Carras?
Until version, I think it was 2.3, it supported multiple backends after some,
if I say no more on people would send nasty comments or I won't say more on, but some steering
committee decided to just pick tens of flow as the only available back end for Carras,
which kind of limits the infrastructure behind Carras a little bit. But the idea behind Carras
is essentially to give you functionality on top of generic tens of flow, or for that matter,
other back propagation network infrastructure frameworks prior to version 2.4.
The idea is, for example, at the end of the day, machine learning is all about pattern recognition,
and Carras is pretty good at something, for example, called image recognition, say.
Well, there's other things you could use for that, but yeah, Carral.
Absolutely. So, and the idea behind image recognition, for example, if you want to spot,
or if you want to spot the difference between, say, a human and an animal,
one of the easiest things, basically, to do a friendship between these two beings,
is actually to take a look at the phases. Well, but that would require some intelligence.
Well, hence the word deep learning or artificial intelligence, no.
So, the idea behind, you say that, you say that, but if we, I don't know if we touch
something on the previous episodes, but in a way, the deep learning frameworks are very primitive
in the way they learn, right, compared to humans. I think we may have touched upon that,
that you'd have to feed them thousands and thousands of examples before you get a decent
error rate out of them. And that was, of course, before SkyNet 3.0.
Well, you mean humans? No, generally speaking. The idea is, basically, if you want to spot
the difference between, say, an animal and a human being, all you have to do is being somewhat
intelligent entity, you have to take a look at the phases, because human have a certain,
what's what I'm looking for? Facially expression that you cannot find in animals.
Class the composition of said phases is different. How did that, that seems like a very
odd thing to do. You may so look at, are they wearing any clothes, right? That's not much easier.
That's a distinction. In that case, you would have to have access to the whole being just instead
of a phase, but sometimes you only have a certain part of the of the atmosphere. So,
and if you get to choose, of course, your preference would be a phase, because humans have a phase
that is easily recognizable. Are you having a tease? No, no, no, no, why not go for the shoes,
because then you have a definite. It's wearing shoes. It's a human, isn't it? This is Martin's
female side, full disclosure. How many shoes have you bought today, just 20?
No, I don't buy shoes very often, since my feet are not growing anymore at my age.
Now, if I was in less than 20 years old, then I would be buying shoes on a frequent basis.
Martin, I get all these complaints from your wife that actually your shoe collection is bigger
than hers. That's unlikely. Well, we won't go into the final detest, but I haven't been writing
as pretty as this way. Anyway, going back to the much more safer ground of facial recognition,
for example, facial recognition. Yes. Humans have normally a nose. Humans have two pair of eyes.
Humans also have ears and humans have a mouth. Only have one eye. They're not human.
When we go into the borderline, it gets us in a minute, Martin. If you take a look at the
so-called animal kingdom, only a few, very few species come to Martin, that have a somewhat
remotely similar facial composition, namely what are called primates. Any other animal looks
quite different. For example, elephants have trunks. Well, and lots of them have fur as well.
Yes. Lions basically have really different ears, if you can see them at all, and so forth.
So, the idea is essentially with that pattern recognition stuff as an image recognition,
what you want to do is actually you want to extract certain features. If this feature is done
match a certain predefined pattern, you can derive by taking a look at the composition of
set features that you have a certain class of image right in front of you.
And this is essentially how image recognition works. And for doing so, you need special layers
in your bad propagation network. Because you need a special, let's put it this way,
configuration of layers, for example, for something called feature extraction.
The way it works essentially, if you have a bitmap, you simply start to extract shapes.
If you progress this far enough, essentially, you can match these extracted shapes against
predefined patterns. Should these shapes to match to some extent, you can be sure that these
shapes fall, especially with the shapes at a certain position, of a predefined kind of form of
the shape, that you have a certain class of animal right in front of you. Or entity, let's put it
this way. And because of the different composition of these bad propagation layers,
they have different sizes, the connections are different all the rest of it. These are normally
known as convolutional networks, because the different layers in charge of feature extraction,
feature composition, feature recognition, that's the whole thing, are composed differently.
Different sizes, different connectivity between the layers and all the rest of it.
You will find the links in the show notes with regards to further details, because we want to
keep this to offer our length with regards to the overall episode. I won't go into the details.
There is actually a case for using those types of applications, not just for image data,
but using whichever data set you have and representing that as an image, because those networks
are tend to be quite well performing at certain tasks, which can be represented even in the
image, for example, I don't know if you familiar with the fraud detection use case for mouse movement.
As a matter of fact, I'm not. Why don't you do a little explaining? Actually, that sounds
very interesting. I can do some explaining. So if you track the coordinates of people's mouse movements,
you can imagine that as a picture in front of you over time, so lots of lines move up and down,
left and right. Just checking, is this petacompliant?
Is this petacompliant if you move your mouse?
Well, if you haven't asked, yeah, why not?
Petar rings a bell, it's this end of a protection organization.
So if you want to move your mouse very often, you want to make sure that this is petacompliant?
No. Well, if you're using that kind of mouse, you probably want to fit it with a tracker so that you
can make sure it's your mouse with machine learning based on its movements. Now we're getting
some of them out. Please do continue.
Yes. Anyway, so that's one of them, right? So use the plot the mouse movement as an image and use your
image methods to recognize whether it fits previous behaviors for that user.
So that's one, and it was another one.
What's the advantage of tracking mouse movements apart from having petar breathing down your back?
No, the advantage is that everybody has very unique mouse movements based on
So this is user identification?
Yes, yes, yes, yes. Instead of extracting eyeballs and tracking them and stuff and whatever.
But the point is that the mouse movements can be represented as an image over time, right?
So you can imagine a picture with lines of set movements because they're just coordinates,
right? On a grid? Indeed, yes.
Yes, so this is something that's interesting enough,
people used to build all sorts of different systems to try and do for detection on
state mouse movements, not based on images where someone had the clever idea to shove it in an image.
Recognition method instead and found that is performed a lot better than any of the previous ones.
Interesting, yeah, and use a backpropriation network infrastructure for this.
Indeed, indeed. Do you know which one?
I don't know, top of my head. I think they actually had created some IP around it and started
the company and all sorts of stuff. So it's not exactly up the source?
No, no, but we're not specifically talking about the source of the AI.
And another one you can consider is if you, I think someone did some research in the area of
of malware, malware. And again, if you, you can imagine your zeroes and one as a binary picture,
right? You can just turn your bits on off. And again, when people investigated or
researched this area that they found that using the image recognition on the image representation
of the actual bits and bytes of them all was quite successful compared to lots of other methods
that they used before. So yeah, so as a kind of side note, there are a lot of ways that you can
think about to represent something as an image and use the image recognition once networks for
purposes of obviously through the training that you want to get out of it. But yeah, makes sense?
It does indeed. And I mean, the beauty with kind of these more abstract frameworks like
running on top of your pie torches on top of it and the flows is, of course, they provide you
within with an abstraction there with an infrastructure abstractiveness, but this way,
that you would otherwise have to do yourself. For example, using carrots, convolution networks,
as in how to define them, how to implement them, tens of flow come with the come with the framework.
So this is essentially just a few API calls and then you have your convolution network builds,
including feature extraction and all the rest of it, with plain tens of flow or with plain pie torches,
the implementation of what would be quite higher because you would have to do it all yourself.
Yeah, yeah, very true. Do you have any other
ones apart from carrots that you can say? There's quite a few. This is a links will be in the show
notes, but all of them basically have their different advantages, different disadvantages.
The reason, basically, as I said while mentioning cows, is that it runs on tens of flow and it
used to also run on pie torches natively. And these would be the most, the two most prominent
backpapulation infrastructures currently used in the industry with regards to deep learning,
machine learning, all the rest of it. I mean, there are quite a few other approaches, just in
them, a few, if I recall them, if I can recall them kind of correctly. For example, there's a
patriproject called MXNet that gives you similar functionality like convolution networks and
other stuff. Of course, there are also other approaches like recurring net. You have what are
they called again, deep leaf networks. You have. What do we need to recur? It's a typical
set of pattern recognition that is modeled by a recurrent network pretty well.
Okay. And this is because a convolution network doesn't store any state.
It does down to how the how the individual neurons or the how the individual model entities
reflecting neurons are composed. Taking this onto that technical level of detail probably would
confuse most listeners. So the show notes will contain links to a level of more detail that you're
happy to take a look at, if so, a quad. And a deep leaf network is essentially an extension of
what I'm looking for. The deep leaf network is of a neural network essentially that covers
particularly the particular covers a particular set of use cases. Okay. That's not
yes, it's basically it's good at a particular set of classifications. Again, details will be in
the show notes. Okay. So different, the point that I'm making here is that different deep learning
frameworks cover different aspects like some of them implement deep leaf network, some of them
implement convolution networks, some of them or most of them basically would implement
recurrent nets. So the idea is essentially as usual, if you have a particular use case at hand,
simply take a look at the technology that that's fitting your thing and then just go for it.
The thing is the thing of course is that the emerging standards are pretty much
type PyTorch and TensorFlow. Because for example, if you take a look at cloud environments,
most of them would support one or another out of the box. You get something called
TPUs as a TensorFlow processing unit and something called Google. Microsoft has something similar
and other hardware scalers, please check the offerings if you're so inclined.
Also, support TensorFlow and PyTorch out of the box.
As you say, there is obviously a there is a
depending on what you need from in terms of use case application. You're going to look for
but most of these frameworks will support your CNNs, RNs, etc. If you want to do image
recognition or if you want to do generating text or music or whatever it is you want to do,
then you need to look at which one is the best one and so on. But yeah, we've spoken about that
in the first episode about the typical applications and so on. Okay. What is of course important,
most of them actually would offer an interface is something called Python.
Given the fact that this is a program language rapidly evolving as one of the premier choices
for machine learning and big data in general, things like notebooks and all the rest of it
are readily available for the majority of these frameworks. So it's fair to say with Python,
you have a head start when using them. Definitely. To be frank, I can't think of any other.
Well, there was, yeah, some years ago people used to use different types of software right before
the more recent rise of the PyTorches and the TensorFlow's. But yeah, that was a bit more bespoke
and that was more like SkyNet 1.0, right? Indeed, indeed. Yeah. Now, I guess, yeah,
yeah, sorry, I will mention the hardware in this case, but since we were one of them. Why not?
Well, we're on a framework since episode. If you want to plug on video, that's fine,
by me. I don't want to plug in video. Well, still thing is that.
And Nvidia, if you're listening, there's a special email address for you. It's called
Nvidia, I'm just, I'm just got a sponsoring at Linus in Loser. Are you free to get in touch if
you will send this money? Yeah, I mean Nvidia obviously the biggest GPU manufacturing world,
I think. Yeah, that's a couple. We've got to be true. Until I'm trying a bit, but
the likes of Google, as you say, have built their TPUs, right? If you're counting built in
GPUs into the SOC, correct? Yeah, that's not here. No, true, true, true.
Well, I don't know, there is a distinct takeover or not takeover, but Intel is on the decline,
right? I think it's Apple, Build is M1, and AMD is doing quite well with its such
repair CPUs and so on, which are. Intel is on the decline, okay? So have you sold your share?
The Intel shares Martin. How many? You don't know, and now, of course, because you've sold
them all, right? I see. I've put this all in Nvidia, no. Very good Martin, smart move.
Yeah. Intel, if, if you're listening already, no, no, before hands.
Intel, if you're listening, the email address, Intel underscores sponsoring a Linux
in Los Adi is no longer valid. You heard it here first.
Well, I don't know if they say email as we could do this special episode on how they are
turning everything around and becoming the manufacturer of future.
Well, Martin, I wouldn't go as far as, as, as rooting is about completely yet. I mean,
they still have a kind of marginalized right for existence, no.
Yes, no, it's very true. I mean, I don't, yeah, I think I'm almost stuck from
so many Intel. I mean, yes, especially if given the fact that, especially given the fact that
not all hyperscalers actually use M1s in their and their cloud environments, not yet anyway.
Right? Apple, if you're listening, your stuff is just too expensive. If you lower the prices,
the hyperscalers might be tempted to take a look at you, but at the moment, forget about it.
Oh, it's always going to be too expensive, isn't it? Well, it's Apple, right?
Yes. It's overpriced bling. Exactly. It's marketing. Just going to put the iPhone's
like it's working, marketing.
Right. Yes, Apple, the email address to you is Apple underscores sponsoring as limits in
lots of EU. In case you want to get in touch with something, I don't know. And yes, of course,
we will review some of the kit if you just send a decent spec to us, a decent spec that would
be an M1, a terabyte of this of this drive and at least a terabyte of memory.
So we can do something with the machine. Yeah, unlike this, but I can go with it.
I'm pleased. Good. Please make sure that you do not send this before the fourth quarter,
so we can, so we can actually put limits on it because the chip support is just entering the
kernel now. This is it. Needless to say, because we don't want to run all this except that machine.
Not ideally. Yeah. Okay. So we could add gris to this. Yes. Indeed. Back to the topic at hand.
The topic at hand. Where were we? I think framework on top of spec propagation infrastructures.
Yes. Yes. Okay. Right. So you mentioned image recognition for carous. What else can you do with carous?
Well, any any part and any any pattern recognition comes to mind, right?
Is that the main? I mean, you mentioned you mentioned for detection. Yes. I mean, at the end of the
if you're looking at organized crime during fraud detections, all about pattern recognition,
because as you want to correlate single incidents. Okay. At the end of the day, take a look at a
credit card fraud. I mean, if you use the same credit card numbers, say simultaneously in Singapore,
Berlin and New York, there's little points at looking at the individual transactions in isolation.
Only if you correlate the timestamps as an if you identify a pattern, you can detect credit card fraud
on grand scale because it's that sort of timestamp association that gives you that pattern that
actually a credit card has been a credit number has been stolen and is used simultaneously all of
the shop or as a planet. So your argument here is that rather than having a rule based
system has a built in compared timestamps for transactions scenario, which is one way of doing it,
you would have a instead the use your machine learning model to determine patterns on all sorts
of different attributes of these types of transactions. Absolutely, because credit card numbers as
maybe a few listeners know are allocated in blocks based on geographies, based on credit
companies, nor the rest. And throughout this really home message, if you can predict actually
based on certain pattern, the next fraud, you can fraud incident, you can actually send the cops
to that location before the fraud actually happens. Yeah, it used to be the case, but master
card, these are for the final details, please get in touch. I'm sure we can work something out of
a commercial level. Yeah, it's called my minority report, isn't it? That may be okay. Yeah,
but that's 20 years old, no? Oh, it seemed to have been implemented by master card.
It's real life. Yeah, okay, cool. What about something like Skykit Learn? What's this?
Well, it's a very kind of popular framework on top of Python that people use instead of
say Keras. I only know Keras Martin, why don't you explain the whole thing a little bit?
Oh, it's just something that a lot of Python people, they've signed this that I talked to
they since they were used that. And if you knew why, I don't. Okay, no, I can't tell you,
I will ask the question next time. I think it's more, it's a toolkit to do many of those tasks
that you mentioned like classification and clustering. Again, it's a Python on top of Python,
including, I mean, you must know about the SciPy, no? Of course. Yeah, so it's using SciPy,
using NumPy, all kinds of stuff. It's just kind of a, yeah, a big library of things that you can
use to do your machine learning. And using, you know, the underlying, some of the underlying existing
stuff like the SciPy and Macboblib and stuff like that, that's already NumPy, of course.
Putting it all together in one handy library for machine learning. Interesting. The links,
of course, we'll be in the show now. Yeah, there's that's spoken to a few people recently,
and that's the one that they tend to look at first before they go anywhere else. Okay. But
so this is the hip seco, not charismatic anymore. It's, it's a small sample I've spoken to you
say. You know, it's right. It depends on who you speak to Martin. I mean, if there's
are movers in the checkers of the industry, you might be on to something.
Yes. Yes. Well, I mean, I'll say certain, certain companies dealing with GPUs.
I think some of the top of that are the future as you may know. Until until the winter blows.
I can't take any minute now. I can't be too long now. Okay.
Well, so you're saying that nobody's going to use Redis anymore? No, I'm talking about this,
this GPU database swindler. Well, I think, I don't know, Nvidia's got a pretty big market cap these
days, right? I don't know what it is, but I think they didn't pretty well.
They're clearly benefits to using GPUs, specifically for machine learning.
Absolutely. Never mind doing SQL database queries. Indeed. Yes.
Who needs no SQL? This is rubbish. Exactly. Yes.
Going back to the real SQL stuff, of course. Yes. Yes. Yes.
Well, don't forget about this new single, no SQL stuff, exactly.
Not that new anymore, right? But before the weedy ray of this episode,
even further, I think we should just stop. No, yes, maybe.
Yeah. Why not? Why not? Good plan. Many links in show notes.
Yes. Okay. Well, before we do that, what is your, where do you use any of this in your
in your infrastructure? I can't really talk about it because that would imply that each and every
listener would sign in separate NDA as a non-disclosure agreement. So please, to list us out there,
please, please, please, please, please, please, please, yeah, get in touch.
We even have this feedback on Linux in loss of the U. Please send your details to feedback
on Linux in loss of the U. We send you an NDA and then we can talk about this.
Sorry. I can't talk about this. Yes. Yes. Yes. Okay.
Fair enough. Sounds like a good result. So you don't use for anything. You can talk about
that sounds. Then I can talk about exactly. Well, I mean, we had a previous episode on the speech
recognition, right? So that's obviously one application. It's a bit difficult doing a
a podcast on English speaking in the show. We won't do that one, but it is another application
that I use it for. Do you want to tease the final episode of this 27-part mini-series
mountain before we wrap this up in terms of boxes and stuff? If you'd like, if you'd like.
Sorry. The question was, if you want to tease as in the emphasis is on Martin. I'm sorry.
I don't want to tease it. Okay. Yes. Well, so yes. Okay. Now this is obviously aimed at
100% of our audience. All two of you. Yeah, episode 27 will be a
podcast on image recognition. Wait, wait, wait, wait, you cannot see anything.
Very good, Martin. Very good. That will be clear.
Yes. That would bring down our listenership to one listener for enough.
Well, no, okay. So the reverse process is also possible, right? So you can represent sounds as
images, which people do to do speech recognition. So you can also do the reverse, right? You can
turn an image into sound, but then it may be just some noise. Be prepared for an hour of noise.
Excellent. For more noise than usual. Which not which nicely leads us to the boxes,
of course, and the boxes in the boxes of weeks. Yes. So Martin, what's your box?
My box of week is live on Mars. Is that live on Mars? No, it is a television series.
Ah, sorry. Sorry. Okay. It's quite amusing. It's a few years old, but I'd never seen it yet. And
it is now available on something called BBC iPlayer.
What's BBC iPlayer? BBC iPlayer is the streaming service by the BBC.
Ah, that probably will require British IP address, right?
It does. I don't. It's IP address, but you know, it doesn't know how to come by.
Ah, VPN providers. If you want to get access to sponsors,
first one of the sponsors we will name your name.
What about yourself? Oh, I haven't told you what it's about. Anyway,
no, just go ahead. Yes, well, you may like this. Anyway, it's a story about guy who is a policeman
in current date time and he has an car accident
and when he wakes up or thinks he wakes up,
he is in 1973.
And so the end of the story isn't clear yet,
but so the question is, is he in the coma?
Has he really gone back in time or is he on Mars?
I'm not sure when the Mars connection comes in yet,
but is a really good story
because it's kind of 1970s policing in the UK
depicted very well, so it's quite using that way.
And how exactly does Mars feature in the whole thing?
I don't know yet, I haven't got that.
I haven't done zero yet.
I don't have the answer, yeah.
Okay, so listeners, if you're listening,
don't send feedback on this or I will carry you.
So the email address and listeners to send,
that's all my feedback too, is teaser ads.
Yeah, send it to the next tweet.
So that mark, your box of the week.
In a minute, so that Martin can enjoy the fool.
And of rest of the episodes without having to watch them.
So that's always appreciated.
Of course, my, yes, my, my box would be a living under sneakers
or living next to twigs or something.
No, yes, maybe.
No, I'm not eating that many Mars bars at home.
I don't know.
Some people get the puns and don't.
That's okay, no worries.
Nope, it's actually a movie called Limitless
where a guy called Bradley Cooper.
That was very familiar.
It's renamed now, not a character, he portrays.
He plays a guy who, after a certain indulgence
of a specific drug, changes his life.
Let's put it this way.
What's it called?
Limitless.
It's about, I think, at least 10 or 15 years old.
I think I've seen this.
White funny, actually, in certain parts.
And for example, it teaches you how to bang your land,
land, the wife of your landlord
by just remembering certain law books
for the rest of the YouTube, please check out the movie.
Of course, links will be in the show notes.
It's quite, as I said, it's quite funny.
And it tells a story about how to broaden your mind
by chemistry.
Let's see whether that...
Are you looking for sponsorship by the cartel?
That's already in place.
Yeah, whatever.
And with that, of course,
we feedback is always welcome.
Negative positive, yes, doesn't matter.
Even on Mars, Snicker and Twix,
the email address is feedback and little signal.
So do you.
We would like to thank, as usual, HPR
as an HK Public Radio for hosting us.
And if you're listening, I'm sure you will, apologies,
if the infrastructure screwed it up recently
or will be fixed, I hope, during the next upcoach.
Did you break something?
I'd normally do, yes.
Okay.
Now you were doing some QA testing of HK Public Radio.
Indeed, yes.
Okay, well, I think we probably end there before you expire.
Yes, an expiration is soon.
Thank you for listening.
Thank you for listening.
And see you next time.
This is the Linux Enlars.
You come for the knowledge.
But stay for the madness.
Thank you for listening.
This podcast is licensed under the latest version
of the Creative Commons license.
Tap Attribution Share Like.
Credits for the entry music go to bluesy roosters
for the song Salut Margot
to twin flames for their piece called The Flow
used for the second intros
and finally to the lesser ground for their song Sweetjustice
used by the dark side.
You find these and other goodies licensed
under Creative Commons at Remando.
The website dedicated to liberate the music industry
from choking corporate legislation
and other crap concepts.
Thank you for listening.
Yeah.
Shall we get this going?
Yeah.
Sure.
Sure. Sure. Sure.
What are we doing today?
What nonsense is that usual?
Oh, by the way.
Yeah, so Intel's market cap is
doing 26 billion.
And what's bigger and video or Intel?
I'm trying to say IBM.
IBM.
But that's my personal opinion.
I'd be able to exist.
Yes, they do.
Oh, no, even smaller.
Smaller than Intel.
Smaller than Intel.
An Intel is smaller than Nvidia.
By what?
Two dollars?
Maybe three?
Right.
So Intel is around 30 billion roughly.
Sorry, no, IBM.
Intel 226.
And then video is three.
Something of a 360.
There you go.
Yeah.
And the reason for this is that Nvidia
bought quite a significant amount of shares.
I don't know about that.
Because if you do this,
basically shares come more expensive.
And of course we create.
We increase the market cap.
Where have I heard this before?
Michael, if you're listening,
it still works.
So for no SQL database comes to mind as well.
Does it know?
Okay.
Yeah.
Not not not not the one that you work for.
No, because they have.
They have noted.
Get modern.
Well, yes.
Indeed.
Indeed.
Indeed.
Indeed.
You've been listening to HackerPublic Radio at HackerPublicRadio.org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast, then click on our contribute link to find
out how easy it really is.
HackerPublic Radio was founded by the digital dog pound and the Infonomicon Computer Club.
And it's part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly.
Leave a comment on the website or record a follow-up episode yourself.
On this otherwise status, today's show is released on the creative comments, attribution,
share a like, 3.0 license.
