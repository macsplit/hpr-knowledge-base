Episode: 512
Title: HPR0512: Uber Leet Hacker Force Radio 3
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0512/hpr0512.mp3
Transcribed: 2025-10-07 22:16:16

---

ç‚™
MSG
.
MSG
MSG
MSG
MSG
MSG
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
Ah! I'll take a bite more, another dimension.
Ah! I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a bite more, another dimension.
I'll take a break through another dimension
I'll take a break through another dimension
I'll take a break through another dimension
Hey, close the tension
I'll take a break through another dimension
I'll take a break through another dimension
Hey, close the tension
I'll take a break through another dimension
I'll take a break through another dimension
I'll take a break through another dimension
I'll take a break through another dimension
I'll take a break through another dimension
I'll take a break through another dimension
Hey, close the tension
Hello, and welcome to our show
You are listening to the Uberly to HackerForce radio.
My name is Sig Fluff. We have a number of things this week.
I have an announcement to make.
It turns out that DeepGeek is interested in hosting our website,
which makes DeepGeek number number two of the Uberly to HackerForce.
Now, part of my goal with this was to...
Well, you remember how you used to see like all these hacker plans
and hacker groups in the mid-90s to maybe late-90s?
The Legion of Doom and the Masters of Deception loft to a lesser extent.
And well, probably to a greater extent.
And all these people, it seems the only thing that's left is the cult of the dead cow.
So, leading another group and the Uberly to HackerForce will be it.
If you want to join our ranks, you certainly may.
You have anything to contribute whatsoever,
as far as technological things are concerned.
But before we begin with the rest of the releases and whatnot,
I do have a bit of a poem.
I haven't listened to the actual radio in a while.
You know the one with the antenna?
Quick tour of the FM dial, all this pop music is absolute crap.
50,000 watts of lady Gaga shoved in the atmosphere
and people rapping about how the yellow brick road is paved with $100 bills.
I'm just happy this doesn't come through my dental work.
The radio goes to shit.
The television tells us how we're all going to be idols and movie stars
selling that American dream like a fucking carrot on a stick.
You're telling me that this is not going to happen on the internet?
You're telling me that the internet's special.
You're telling me that we've learned our lesson.
The people who take the internet from us are going to play us like a fiddle,
just like they always have.
Obama enforces trade embargo against open source.
What the fuck is that?
Encryption as munition and YouTube bleeding all your videos.
DMCA, the DM fucking CA.
Comcast block in your torrents,
making sure the rich get paid first.
Pack it stifled because they're not from CNN.
Your book's being snatched from your Kindle.
It's Fahrenheit 451.
People in the States being afraid to break all this primitive encryption
and restriction mechanisms.
The Meetry Skry law of being held in jail for trying to free the e-book.
Copyright extension because of a goddamn cartoon mouse.
You're telling me the internet is not going to be taken.
All right, so that's my poem.
We are going to be releasing a couple of things,
kind of a couple of older things.
The first thing is called mega-soup,
you might get a happy sprite,
which is a sprite editor for the Sega Genesis.
This edits can edit V-RAM dumps directly if you want it to.
And that includes the S-RAM dumps and C-RAM dumps as well.
Now, if you want to download this,
the URL to download it is HTTP colon slash slash H-O-B-O-N-E-S dot D-O-G S-O-F-T dot N-E-T slash M-E-G-A slash M-E-G-A underscore D-I-S-T-R-I-B dot T-G-Z.
This is a graphical editor, of course.
It's a sprite editor, why wouldn't it be graphical?
But you can edit the scroll planes as you would a frame buffer,
which is kind of nice.
You can draw lines directly onto your screen space,
and it will fill the patterns automatically.
And comes with a number of art samples.
Actually, it comes with one sample.
If you want art samples, I'll give you art samples.
It comes with a dump from Sonic the Hedgehog.
That's in a file called example dot mega.
Now, if you open example dot mega in a text editor, it's text.
Pretty much.
The different binary RAM sections for the graphics chip
with the Sega Genesis are represented by UU end codes.
All the other configuration where scroll A begins, where scroll B begins,
is in text, and you can change it pretty easily.
So, I hope this spread out to the works out for you.
I haven't really released it anywhere else, but the presentation about it,
I haven't really released it.
I've gotten a lot of use from it myself,
so it's pretty useful.
Now, the other program that we're going to release is called pits,
which stands for pits is the sucks.
And this one is a questionable usage, although I have sort of gotten to use it a little bit.
It's a patch editor for patches for the YM2612 sound chip.
Now, we have a little keyboard on the bottom.
I mean, you can hit keys, and you can change the octave,
and you can change the low frequency oscillator and all sorts of different things
regarding every operator of your FM channel.
And you can change the algorithm, and there's a button on the right called luck.
You push that, it fills everything randomly, and usually get a better sound.
Then you can configure yourself.
And this one also reads YM2612Dumps, as well as writes them.
So for these two, if you have an emulator, and you dump out these memories,
you can edit them directly.
And so the third thing that we're going to do,
and this is going to encompass the remainder of the program,
is we're going to play this song.
We'll be right back, and this song has significance.
It's not just a random song, but we'll be right back.
Now, let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Let's play this song.
Oh, OK, we're back.
Now, that was a two-kilobite synthesizer
that runs on OpenBsD.
Now I just realized that I didn't give you the URL for pits, so let me give you where
you can download that.
The address is http colon slash slash h-o-b-o-n-e-s dot d-o-g s-o-f-t dot n-e-t slash p-i-t-s
underscore d-i-s-t-r-i-b that t-g-z that's hub-o-n-s dot dogs-off dot net slash pits-distrib
it.
Now all of these temporarily before we get on, before we get on deep geeks computers, temporarily
we have a website at uberleet dot atari dot org.
That's uberleets with no space dot atari dot org and there are links to all the releases
we've had so far as well as what we're going to do for the rest of the program.
Now the song that I just played this synth, I held a piano actually a couple of days
ago regarding its construction and in general putting together small programs.
The sound is a little bit quiet and this presentation I recorded it but hopefully you can make
me out.
Now if you want to see this presentation because it does have some slides and it helps
if you see you can see it at hub-o-n-s dot dogs-off dot net slash bump dot avi and there will be
a link on the uberleets dot atari dot org main site for that, our temporary site for
that.
And so a bit, a note of trivia before I gave this presentation, I came all prepared.
I brought my own amplifier because I was worried about the place not having a PA system and
then I typed, because I'm a complete get right, I typed rm-rf slash or actually dot slash
in my trajectory as a root and deleted everything on my computer moments before the presentation.
I've been using Unix now for 10 years and this has been a problem only recently and I figured
out why, it's because I can't talk and type at the same time.
Like when I'm alone and no one's talking to me, I can multitask like a multitasking
mphobion if that makes sense or when the banging tech and music is in my ears but the you
know the second someone says hi sigflub I start typing rm slash rf like there's no tomorrow
just I don't know I can't really type while I talk so I really have to be careful if
I'm root I was mounting and unmonding stuff so that's the reason why it's root if I'm
root not to be careful if I'm talking to someone about typing so it was fun it was a community
it was a tc log great so it was a bunch of Unix geeks and so we kind of made a challenge
out of recovering everything or recovering at least the presentation material before doing
a fresh install of BSD so that's the story about the presentation but I hope you can make
it out I hope you can understand what I'm saying because I'm awfully quiet I try to love
a little bit but I'm off of quiet so this is regarding the song that you just heard so we won't
be back after that we'll take care so enjoy the presentation bye bye
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm
I'm glad I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm
glad I'm glad I'm glad I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm
I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm
glad I'm glad I'm glad I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad
I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I'm glad I am glad I'm glad I'm glad I'm glad am glad I'm glad I'm glad one great
So this is the colon alone with no grip.
There's a file in between, it comes out to be a 12k.
And that is the 2k, but we have 12k of fairly useful texture practice.
So there's one thing that we can do, and that is to,
without modifying the files actually made, we can...
This is, we can compress the files.
We can tag on a little line at the beginning, which is actually a shell strip,
to scale out the remainder of the files with the compressed.
And that is undifferent and run, what you just like to press,
is the trick, but it's extremely valid, I would completely shell our files.
So that same with a little bit of space, so, with the shell our files,
we have 3k, 3k, so, it's only thing in there,
let's do it all the time.
So, hello world, how big do you think hello world is going to be?
But this is, pardon me, on our page,
you see a lot of it, I like see a lot of it, amazing.
So instead of hello world is going to be,
and you say 150 times.
Oh, I haven't seen anyone use the item about 15 years.
Oh, we just see the presence all mean, like, how many?
Every go all the time, what's that?
The eye.
Then, the door is closed,
then we say 150 times,
or it gets back to the eye.
50 people.
Oh, oh, I can't see that.
That's the last one.
Yes, she is.
Look at the mind of God.
And why is this thing?
Hey, we have,
I know, I will be fine.
I will be fine.
Here we use close to,
that's all we have.
That's all we have.
You know why we are doing things like that?
I don't know.
I use it.
Yeah.
It's a picture.
66 pages.
Well, when we come to the 3D,
that's our start to be able to laugh out there
and come get them coming to you.
Thanks, Max.
And those are the,
often make you talk to often,
not to do that,
but that.
So, I do this.
So, how are programs compiled?
Probably you would have mentioned it for a lot of years.
That's all.
We have explode.
Explode that.
Explode that.
Explode that.
Explode that.
Explode that.
Explode that.
Explode that.
Explode that.
Explode that.
Let's do this.
Which one are you talking about?
I do.
Do you remember?
What are you doing?
I've done something to you.
Do you remember?
I used to.
I've been using text editor.
That's all.
I've...
I just moved over the years and graduating undergraduate school, moved away from Munich, but the last two years I've been using Linux, but what they're doing.
So, in addition to that, I'm just interested.
I think it's all very simplified. We have the first color, you know, the compiler, a linker, a two-breast officer, a compiler, an infee, a linker, a linker.
And I have some odds as well. Before we go to the linker, we have some odds as well.
Back on to the linker, we always pretty much get into this static library. Let's see, notice that there's a little library that's pretty much always there, with DCT, or architecture, that can't be, like, 30 to bit devised and things like that.
So, let me have a program right now. And while the program runs, we, of course, have all of this. We have a one-time linker that can have it in the program.
We have simple names and all sorts of information to how the one-time linker, how to program together, and the one-time interview in the program.
So, given all that, let's go back to our example. And we can hide DCT, lack of verbose, to be all the seeded of different highlights.
This is the policy, the free practice of this stage, the policy to be the link that's on this stage. Here's where's the linking.
It's the linking with unlike two, it's probably a thing for a year, let's leave it in the bucket.
So, we have a whole lot of craft here. We have the linker or argument, but I have a linker, we have a task to that ammetender.
We have the linking with this library, the ARC0, the ARC begin, the ARC end, and all sorts of other things.
Let me give this example on program, which again is fairly big.
It's quite big.
It's one of them. It looks rather big.
Yeah, it's better out. So, we have a lot of craft there, if we can put out the bottom.
Is it a rule?
This is our rule. This is the actual code we looked at before, where we all print out, and what we call the stack detector is a stack of code stack lever.
And a lot of other codes are stackable. We have the CLD, CLC, which is used as a young reference for dynamic libraries.
What do we look at? The binary or a link?
Yes, the dynamic load binary. If you still have a link, we don't have a static binary there, and it still has all its other facts.
I think one of the other points, with any point, is called constructory.
Well, as a client, with any point, and then with any point, it's responsible for building up some of the constructors.
And the constructors are doing dynamic.
And both look up, and whatnot.
And it's a whole lot of craft.
So, what we do is we can write a structure about a library, and unfortunately, to do this, there are some things to do.
There are some tools to do this sort of thing, natively. So, we can do it manually.
The first thing we can do is we can try and get complete control of our binary.
But before we do that, let's describe a little bit what's in active field looks like.
This is our program, as it looks in memory. We have code, data, text, text, text, text.
And he can usually maintain it by the curl, and give the code splinters to every independent cat, or the thing came by the malloc.
So, let's use the standard link malloc. And eventually, the fact that the barrel that grows the heat, like that, we have facts that use, or the figures that have local variables,
those figures where it's back, we have the code that actually uses, of the text, of the program, what actually gets run.
Now, if we take a look at our binary again with object dumps, they can encapsulate a binary unit called in-house, an active table load, and the idea is just to encapsulate through different sections,
and encapsulate through your data, text, text, text, and code for it.
So, let's take a look at our binary real quick, and we see that there are a whole household instructions.
We have a hash section, that's the speed up look up, we have the unit section, or a pattern section, dump table section.
You only get all sorts of stuff, all sorts of unnecessary stuff.
And certainly, the instructor is the dump pad, and the SS, which is zero, that's going to allocate.
But, taking a look at our diagrams from before, these are most of the sections that are in it, the dump table, text, bylining is in code that for data, they have three seconds,
and then, consistently, a lot is for that, we have real only data, data that gets initialized once, but is not available, that you have in your lonely space, in actual table 12, actual table 12 is in data,
and then, they have a zero, that will be in this section, which is uninitialized, the reservoir of where your data can be.
Okay, now, if you open up a binary, this is the very first thing we have, at the beginning of the text of the binary, we're just looking at the raw file here.
We have an IDF file that is in health, 7.5 health, which is usually designed to be, we have one-on-one, which usually is in the item, but it's actually the doctor's specification, and the end unit's specification.
But that's usually one-on-one. We have different things, the file we're doing, we have an entry point where we're going to actually begin, we have the program header table assets and a segment table offset.
You can think of, this is our program header, this is our segment header. We actually have two tables used to represent how our programs are well-known in memory.
One of them, the program headers, can be information like where in memory will the speed, and then the section is above the settings of the program section.
So we don't have where memory will be, that's calculated from the program section.
So do you really need a section, and it turns out we don't, that's a lot of space that we're going to save if we just forget the faculty, forget meeting those sections.
So program header offset, we're probably going to have that always be there.
We can put that in here, but we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to
have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it like we're not going to have it
I'll be put with you.
It's right in a program like this.
That's the code segment.
It's all below this text.
Asked your own,
haven't asked you straight.
I'm like coming there.
I'm very much like coming there.
So,
I'll be the out of that
field
of file
adjusted back.
While it turns out a linker
follows a linker's script.
This is a
language that ensures
don't change the linker,
the linker,
and accept the linker,
how to put together the connection.
And this is what
is difficult.
The default linker step looks like.
No wonder our programs
are so big.
So, what we can do is we can
have our own mistakes.
That's much, much simpler.
Our outputting is a binary.
It's going to be a 3.6.
Our entry point
is going to be beginning
because the
input is similar. I'll try to begin.
And then we're not going to put the text like this.
And that's it. We're not going to make it a 0.
So,
how you want to compile this is using
the file with
the key argument
that you want to compile it with your script.
And then have another argument
no standard library.
We're not going to link to anything.
No standard
division. We're not going to link to anything.
So, that's smaller.
That's 20 fights.
That probably
are strange.
So, we just
want to compile
and assemble a program
to a screen
that says that you like gummy bears.
So, now we can do whatever we want.
We can
manually write
and ask how it
and ask us that.
So, this is what our output is like.
To have our data
picking by symbols
and pretty much all remain the same.
And we activate the symbols
between one
and two points.
It starts from
the bottom there.
The number of programs
entry we only have one.
And then we have
the
program entry. This is
a multiple
often bureau in the file
in the file.
This is our usual
assembly address.
It can happen anywhere
to the default problem.
Yes.
We can have it all this time.
The boundary is two big
bytes and something.
We can just have the
program anywhere in memory.
So, I'm not going to talk
about the
variable.
The file is
in the file
and we can look at the bottom.
We're going to
check that from
the outside.
It may not be
a bureau.
It may not be
a bureau.
It may not be a bureau.
It may not be a bureau.
It may not be
a bureau.
It may not be a bureau.
It may not be a bureau.
That's the format OH
in that case.
There's a
Miller called
we can't call anything, so we have to do direct system calls.
This is system calls number one, which is exit, pretty much.
And we call the system calls for the intro.
That way the processor goes into the supervisor mode,
can go into the trail space, whatever we call, for the system calls.
Aside from the intro, pretty much they call it any procedure.
You put this thing on the back of the call.
So that's a program, and we can compile it.
And you can hold it.
And it's going to crash.
It's valid.
It just ends it.
But that's good, we have a very small program.
A 92 byte worth of exiting program.
But it's valid that they're actually doing a program called true and false.
And they do the same thing.
And they are probably better.
What?
I think they got a bit smaller.
Funny, nice.
I think they're going to see a bit smaller.
I'm not exactly sure what phase is.
This is the first time actually.
This is the first time.
This is ignored by the software.
Take it to call it that.
You don't have to load a code from the end of your author.
Or you can go from anywhere.
So it's very useful for that.
It's very long.
That's the only one I know right now that's for sure that's ignored.
There are only things that are not here.
If you move differently.
So move that.
So let's make a program that has seen it.
Instead of just assembling.
We have our outputter again.
We have written an assembly function to pop this.
We will simply type it into call.
We have the first argument being still called.
This pop that off is back.
We may keep everything else is back.
Calls the interrupt.
And we turn whatever code we're going to have.
There'd be another topic again.
So that's a function.
We look at means.
Now we're doing this.
We have a system call number 4.
It's right.
This is call number 1.
We can bend it.
Call number 4.
It's right.
All over all.
And that happens to be 15 by 1.
And then hand it.
How many worlds?
That's cool.
The only difference here in the outputter is.
The entry point is going to specify a name.
You don't have to do any sort of instructions or anything like that to one name.
It's back and set off.
Everything is set to one.
We program it.
The only thing that's really used for is dynamic libraries.
But we don't care about that so much.
So that's not too bad.
How do you indicate it?
A little bit bigger.
So we go back to our original code.
And we can take a look at it.
Now we do a lot of things here.
That's so much of a lot of things.
We're opening up a stop.
Opening up that volume.
That can be done with the system call.
Where we have the format structure that we're doing.
We have a macro that's still that large.
The macro actually calls immense.
That's still the library is a macro call.
So if you replace that, you don't need that library.
That happens.
I can kill.
We write a lot.
Great idea.
That's it.
The first step up came where we're only not doing much else.
So we do pretty much the same thing with this call.
It has been called.
The evidence is right.
The evidence is wrong.
I did write for them, I didn't think that.
And when we're placing all the infringers, we're not just talking, and it should disperse.
The problem is we're also calling the math library as well.
As you can see, we have written that set, so we're placing that, and the only other thing
that we're doing is we are calling it fine, so we can inflate that, but we're starting
on the stack to our 20.5, or the stack to the right in the correct, and the back to the
places are fine.
If you look at it in the family of fine, a lot more so than that, I'll be using the code
in the kind of frame, and the right to call it really doesn't call it that.
And then at the very last bit, we need to prep it, which is our own compressed header
on foot, make adjustments.
We have our program, which is 2.3K, but that's not bad, and it runs, but that's cool.
We refresh the program, though it's 50K, and it's 50K.
And it has to be a little short, but I believe I'm done with my presentation, do you have
any questions?
I've been self-strewed for a long time, but I'm just a very cold, how do you reactivate
things?
About the reactivation?
Yeah, there's some demo programs that I've heard, so I'm going to have to read a couple
of demos.
I have to read that one.
I have to read it one more time, but we're fortunate in Linux because we can do that.
We're fortunate in Linux because we can do that, we're fortunate because we have a relatively
consistent path.
We can make this path relatively easily.
Now, what do you think of the Windows being the primary, and maybe they have, as it is,
way they're called, but knowing that, and I suspect knowing it's been a big change in
versions.
I'm sure it's like, I've never been able to make this possible, but you know, it's going
to have a, yeah.
Yeah, sure.
I can.
But I'm going to drive there for you.
Any other questions, Anne?
This is my section header.
We have a name index.
We're not going to be a section, but we have another section that is devoted to Linux
and then we have an index in the next section of the string, so we don't have to put out
it.
We don't have to put out it.
We don't have to fix it.
This happens to be a long, fixed size run with string data.
Amitage isn't active-fuel.
It isn't taking loads.
We can specify what it is.
We can use it as a string data.
We can use it as a string data.
We can use it as a string data.
We can use it as a string data.
We can use it as a string data.
We can use it as a string data.
We can use it as a string data.
Additionally, we can adjust what we basically could is if it's a string data.
In address, there's the address relative to what is the program that has a string data.
Last, we can find out if it has a foreword and it says, we can do this.
Added alignment, add info, and you do not use private data, info, if that's a single single.
I believe that 16 bytes would probably change your value.
And also entry size, you can have different size of affection versus the size that it is in memory.
You can have affection with the zero size, that's the DSF section, which is just zero.
If you're not in the file, you need to still memory with the zero.
This is our program section.
And, for example, we have a memory alignment with a load of affection in the load of the program segment.
The virtual address is a physical address.
The reason why we separate the virtual address is physical address is if we're loading something from a long pass.
And we have the data segment.
If you're beginning with a ROM, then find the fact that it is loaded somewhere off in memory.
So, you want to have the symbol match where it is in memory.
Family size, Bob size, you have those three different.
And, not realignment.
And Bob.
So, they're very similar affection.
We have another question.
A little question.
Yes.
If I wanted to start doing this stuff, where do I start to look to find out all this stuff about L file?
Democene.
Democene.
This is not to be taken in case it's used in New York.
Democene is just like a bunch of demo.
Is the article file, like how to do this stuff?
There is a, actually, what is part A, in part A, that's under one.
You and me are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are, we are,
We ask, ask me. WÃ®lprinx? WÃ®lprinxin? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®l,prinx, WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®lprinx? WÃ®l
The problem is, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes,
it takes, it takes, it takes,
it takes, it takes, it takes, it takes, it takes,
it takes, it takes, it takes, it takes, it takes,
it takes, it takes, it takes, it takes, it takes,
it takes, it takes, it takes, it takes, it takes,
it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes, it takes
it takes, it takes, it takes, it takes, it takes, it takes, it takes
It's possible, it's like, I'm not picking that theory,
it's like, what kind of graphics are do you have?
Maybe you can show it to the ACI.
For mention, on the three three things,
ignore the polyon model, and this is,
here's a pixel follow-up back.
You know what I mean?
What you did, you get a pixel.
I mean, that's what the shit is,
you get a pixel.
So from that standpoint, that's what the math involved
with following a new group.
Very quickly, you have to follow the light back,
and what if you involve the flexion,
and other stuff like that, I think that's a number of questions
that you've too much to talk about before I have to say something.
It turns out, this is actually funny,
but I'm interested in there, there is a new problem
that is being used for graphics cards,
all three functions.
Where, yeah, you know, I was playing a portrait
doing a little bit, basically what you said,
you have a pixel, you have a camera,
you have the camera's order,
you have every pixel being set away,
and then you take that, and you find out,
because the intersection is an object,
you can mean an object breathing,
figure out mathematically through that intersection,
that the sphere of the intersection is facing.
So you're in a second of the sphere.
From that, maybe you take a vector
from your intersection point to the center of the sphere,
and that becomes the normal of it,
from the right of the sphere,
and that becomes the normal of it,
from the right of the normal,
and it's reflective, and you continue.
Right, I mean, is that how you're like talking about,
you have to be a monkey,
and how you're differentiating it.
How are you reflective, and how many are reflective,
and how are you reflective, and how are you reflective?
I'm not just putting this thing in.
Yeah.
What about my sense of perspective?
The view technique of everything.
All right, while I was going back to the MRI,
I'm going to be having a...
So, do you actually consider the rendering?
You actually get a render,
and if you want to do the omni-induclusion,
for example,
and you have a range reflecting a point
to be having not a lot of bounded off,
and it bounces off in one location,
that's not very omni,
you have to have a scatter,
and people trick around this
and bring the off to this,
but that's an entirely different rendering technique.
I hope you'll let me try to come through
and talk about that in a moment.
And both of my math and radiosity
is rendering,
you're going to need to add a point
when you're rating it,
and then that is sort of your theoretical algorithm rate.
But with ratings marching,
for this,
you have an entirely different way of figuring out
how you can affect the mafia.
You have...
You can do stuff like that to me to say,
am I able to do it? Am I able to do it?
Am I able to do it?
Am I able to do it?
Well, once you find an intersection,
bring off the satellite.
You don't have to scatter rate.
You can just have a volume around it,
and say, am I in the object? Am I out of the object?
Or is it wrong to panic?
And so instead of
a thousand twenty-fourth rates that are coming off in this,
you can have
four in the object,
or the other out of the object,
or two. You can do it that way.
And it's...
We're moving from
a great rating,
to the problem of secondary rates,
which is what you're paying,
and it's the problem of secondary rates,
mostly the actual volume of secondary rates,
which is very problematic,
because the pixel of kids
has millions of rates.
Right.
Well, it is a number of rates,
because it's huge.
Yeah, you're saying.
Let's go backwards,
but that's an entirely different problem.
The more you move the closer the primary rate,
the more you move the closer the primary rate.
And I don't know, I suspect that
drawing the pictures
in open primary rates
than you realize.
You don't see it.
Here, it's going to be planted,
right? You're being like that in your life.
No, that's cool.
Yeah.
It's just...
It's totally...
It's totally great.
I can help you.
I can help you.
Oh, it's good.
Okay. Yeah.
Yeah.
How to save there.
Okay.
So, if you want to know about that,
this is a good database.
You can look up programs,
fantasies, even
working that way that have been working
hard for the last 10 years.
And what happened?
So,
let's take care of it.
One is called Steven Steven.
And then,
that data.
There you go.
The fellow RGDA
that I still,
above this RGDA,
is like,
you're going to send it to someone.
So,
you've got a lot of
good folks here.
What are you?
I can show you a
single bracket question.
This is a first thing
to see the bracket to do with
single areas.
Right.
And, uh,
you're going to send it to someone.
This is a global folder.
Yeah.
Because you still,
it's a really good thing.
What do you mean by that?
It's not present.
I mean, it's not present.
It's present.
It's present.
It's present.
It's present.
Now,
there's a real time rate
criteria.
Because you can already
have the one
that you use in.
So, this is a really
long story.
I don't know what you're talking about.
But, you can really know that.
On the party,
the randoms on a DCF-8800,
they see me down in your time.
100?
No.
No.
No.
No.
No one.
Okay.
What is this for Windows?
There's an advantage you can purchase for Windows
because you can access the general.
You can access the, uh,
it's, uh, it's, it's using,
it's in the Boston.
There's a sample of the general, uh,
many sound ways back.
Which you can do in Windows
that's the reality.
For the thousands of max
fathers, but this is real time.
At the moment, you show me the confidence.
Right.
You have been working for a small month before.
Yeah.
Am I great with this?
Yes.
Great.
So, that's, uh,
ESC can be
fine.
It's close to that.
It's working.
Yes.
Right. Yeah.
At first, it's going to be the bottom of the hill.
So, I think that the bottom of the hill
is the best.
Right.
There we go.
So, you can
enter that door.
Be brave.
Okay.
Wow.
Okay.
Ah.
Okay.
Happy?
Happy...?
Okay.
Okay.
Okay.
Be around the side and have a look a little bit.
This is 4K.
It's that in mind.
This entire thing sounds, everything is working.
That's what it's like.
Ah.
It's actually completely down there.
Everything has to be completely down there.
Hello?
Hi.
Hello.
Oh.
I may not make it.
No, I'm at a meeting here.
You may go to school.
Yeah.
Yeah.
Go back to school.
Okay.
Bye.
You're on your own.
You're going to see that.
You're going to school?
Yeah.
I'm going to school.
Hi.
I'm going to school.
Hi.
You're going to school.
Hi.
Hello?
I'm going to school.
Hi.
Hello.
Hi.
Oh.
Hello.
You guys should be a teacher.
I'm sitting there.
I'm sitting there.
You guys should be a teacher.
Hi.
I'm very proud of you.
So, I want to come in today.
You may want to make your own small living or like the local area.
Okay, right.
I think, uh,
I mean,
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
I'm not going to have to take this again.
Can I get some attention?
Can I get a attention?
Can I get a attention?
Can I get a attention?
Can I get a attention?
Is it there somebody down there?
Is it there somebody down there?
Is that down there?
Is it there somebody down there?
Is it there somebody down there?
Is it there somebody down there?
Is it there!
Can I get a attention?
Can I get a attention?
I will feel good at Hypes?
Gracias!
Thank you!
Okay you're welcome here.
amusement, okay?
What?
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
I don't know.
Those are what I want.
Those are what I want.
Those are what I want.
I don't know.
Those are what I want.
These three models.
They're je dafÃ¼r queodes.
The Underworld.
There's a high-tech phone.
There's a high-tech phone.
The one you just dropped on it.
You were pretty little on my bridge.
Actually, no.
It's been a long time since I've been here.
It's been a long time since I've been here.
For as long as it's been kind of like,
it's been a long time since I've been here.
I think I really really find the code.
I think it's kind of like,
it's been a long time since I've been here.
I'll go back and I'll see if I can find an example
of red marker.
I feel really good.
This is it.
Yeah, that's pretty much it.
But it doesn't look too realistic.
You can have fun on the picture here.
The thing with red marker is,
the code thing with red marker is,
they're geometry to be a pop-up to do on it.
You can write a formula and figure out
what a grid inside of it and out of it.
You don't have to figure out the vector in fact,
where you can use it straight.
Should we use the one with the top two segments?
It looks like the one with the top two segments.
It's a pretty, well,
I mean, it's a pretty cool language.
The state of language,
there's a state of compliance,
and I'm not sure.
I guess that's how big it's greater than it is
but you can use it.
There's a lot of vector in that.
You can do a lot of vector stuff.
You can use it.
You can use it.
You can use the dot pod.
You can use it in any way.
And then the shapes that we're looking at
from what it's working on.
They're probably on it.
So again, this is real hard.
I get the video,
because this is real hard.
Your requirements is that if you know
how to use one of the parts of the grid,
of course, you need a little bit more of that.
It's hard to do that.
Is that the way to get on with it?
Yeah.
I do support it because it came up with the idea
of having a volume and then figuring out
the variance that our audience is doing.
It's a pretty obvious idea.
It's a very obvious idea.
It's a very obvious idea.
It's a very obvious idea.
It's a very obvious idea.
It's a very obvious idea.
It's a very obvious idea.
I got to hit it.
I think this is a fractal off that feels a lot
of stuff you think that's all.
I'm not sure if all that is all.
It's like I've really have to study
some importance mentioned on pumpkins.
of course, the next thing we have is that I'm going to show it to you.
Okay, excuse me, this isn't this time.
This is a call of the studio graphic.
This isn't a media.
It's both pull-up by program.
That's a draw.
A picture.
The picture is a draw.
It's a draw.
It's a draw.
It's a draw.
It's a draw.
It's a draw.
It's a draw.
It's a draw.
It's a draw.
It's a draw.
It's a draw.
It's a draw.
It's a draw.
Okay.
They go back to the horse and buggy days and talk about nonsense.
Have you ever heard of the manual broadcast set?
Okay.
Okay.
So in August 1986, Douglas Haustetter wrote a pseudocode to draw the manual broadcast set.
Yes.
So I had a Commodore 64.
Yes.
So I wrote invasive.
Yes.
And how are the paths of flow out the set, the repeat that would flow out the set, would
assign a different number?
You know how long it would take to do one little window?
It would take eight hours.
I'm not going to take it.
I'm not going to take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it again.
Take it.
Take it.
You were in school, right?
Take it.
Take it again.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Take it.
Don't go like that, you'll see.
Yes.
Take it.
Just go like that.
Take it.
I've really raised my mind.
Hey.
I'm a pot.
You TÃ¼rken?
remember this horse and buggy stuff. It's like when my grandfather used to walk back and
work for 10 miles, I can go there now in a couple of minutes and I got it.
Oh, I think there's a, um, like, uh, yeah, it's on the imaginary numbers, the complex
plane. Yeah, yeah, yeah. If I don't want to go there, there's a video about the ride.
That might be a practical, you know, right?
Yeah, that would take over eight dollars and then you'd go again and again, so I'd let it
run for a week.
It's okay. I'm here in the second day, um, but I think it's still running through the
cold because it's a 50 per day, the size of the program's memory size.
It's very small. It was just a real small because you only had 64k memory divided into
four places. So where would you put it under the kernel or where it was, you know, but
I mean, I'm stuck stuck in the time work. So it is very difficult. But I thought that
Mount O'Bosset was really neat and I did something with post grit and it would draw a picture
and I had a Commodore Amiga, which was whole lot faster. And I was a picture with Dr. H.
Peace, you know, now with the sound you put the energy and come up and say, you know,
the Amiga would take a, you know, maybe 10 minutes to draw a picture, but now it's just
instant.
But you might be appreciating it, you might be appreciating it, but then you have a Commodore
64. There is a Commodore 64. It's also so perfect on a Commodore 64.
Yeah, it is just basic.
Oh, no. It's better than it is.
Well, no, I use it. I mean, there's a zillion languages, I think, isn't there?
Yeah, I mean, you can use it all, but I remember when I had Commodore 64, I remember
it was a Commodore 64.
Oh, we can talk, yeah.
We can talk, yeah.
Well, he was going to say something.
Well, I was just going to say back in the days of the old Coco, the Tandy Car Computer,
the Coco, the rainbow magazine used to have a concept to see how much it derived in one
time.
I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean,
I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean,
I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean
I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean
I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean
I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean
I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean, I mean... I mean, well I'm here to understand a more specific way to pronounise myself. What do you mean 250? It feels like I can Ð±Ñ‹Ð² here's a helt differently.
I don't know if you remember, like, an adventure was coming to see you a while ago from Portran, I think.
Portran? No. That was, I don't hear it well.
Oh, an adventure was coming to see you a while ago. I believe it was Portran.
Yeah.
And if you look at the view close, the adventure is horrible.
But it's like a sewage case, don't you? It's like, case 12, don't you?
What?
Well, I guess you'd call it so convoluted. You can't figure it out, huh?
Yeah, your adventure was hard to figure out what your article would have been for,
how it'd do with something.
Yeah, this is what I came up with to be honest with you, how it'd be worth it.
Back on steam kedders, I can get first time here off now.
Yeah, great. Very good.
Before we run the little lager, sorry little lager.
Thanks for coming. I think next month I'm going to talk about making DVDs.
And when I...
Oh yeah!
Yeah, I know I'm going to do that. I might have figured it out out of there.
So, this is a little fun or problem.
And when we wrap this thing back next month, we're walking the same off the rest of this one.
Thanks for coming.
Thank you for being here with me.
Yeah.
Thank you so much.
Thank you so much.
Thank you very much.
Yeah.
Thank you very much.
Thank you.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you very much.
Thank you so much.
You
