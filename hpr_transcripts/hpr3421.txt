Episode: 3421
Title: HPR3421: BlacKernel's Journey Into Technology: Episode 1
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3421/hpr3421.mp3
Transcribed: 2025-10-24 23:06:35

---

This is Hacker Public Radio Episode 3421-4 Monday, 13 September 2021.
Today's show is entitled, Black Cornel's Journey into Technology, Episode 1.
It is the first show by Newhost Black Cornel and is about 16 minutes long and carries a clean flag.
The summary is learning about assembly and social engineering before I could read.
This episode of HPR is brought to you by archive.org.
Support universal access to all knowledge by heading over to archive.org forward slash donate.
Hello and welcome to Hacker Public Radio. My name is Izzy Lee Boots. I'm 25 years old.
This is going to be a story of how I got into technology. I'm a long time listener of this show,
but this is my first episode, so I thought it would be fitting to do a sort of introductory story.
Now the main beats of this story have been already told by Clat 2 on his podcast New World Order
Episode 379, and I will link that episode into the show notes. It's going to be a link to the
org file of the show just to warn anyone who thinks that it might be a landing page or something.
It's going to be a link to the direct org file, so if you're on a library or something,
make sure that you have headphones in or whatever so that you don't blast the audio all over without
realizing it. But this is going to be a bit more in depth. I'm going to go into each stage of my
development in technology, so it's going to be more than one episode. This episode is going to be
just sort of the introductory, so this is going to be up until the age of five, which in the
United States, at least in the part that I'm in, that's typically when kids would join school,
and this all happened before I was in the first grade of school. So when I was a kid,
we had one computer. It was a Windows 95 computer at the time, and I have five siblings,
three sisters and two brothers, so we didn't really get a whole lot of time on each
on the computer all at once. It was divided up into you when you started using the computer,
you had to set a timer for 30 minutes, and then when that was over, then the next person got to use
the computer. Or nobody got to use computer if everyone had used the computer that day,
and then you would have to go outside, learn how to play marbles, or read the encyclopedia
Britannica, or other books, or what have you. So that was basically the systems that I had
available to me when I was that age. But one of the things that my parents would do is they would
really encourage exploration of different information. So we would not ask them a question.
No matter how simplistic the question would be, why the sky was blue, if they didn't know the
answer to it, then they'd look it up on the encyclopedia Britannica, or they'd look it up on
the computer, on various things, or we'd go to the library and look at, like, go look at the,
I mean, if it was a history related question, we might go look at the microfiche,
or if it was, as in what science technology, we'd go and look at the journals and books that were
written by various authors in the field in order to figure out like what the answer was. In the case
of the sky, the reason being that the light from the sun scatters on the oxygen molecules,
which produces a blue effect by scattering all of the lower wavelength of light. So that would be
a thing that would be very typical. In my family, it would be to be able to ask a question and get
a very detailed and accurate response, or at the very least a complex discussion of the various
ideas in the field, what people thought about that idea and a very secretic sort of method of
discussion on those types of things. Now one of the questions that I asked when I was a kid,
when we had our computer was, how does this work? Like, I'd heard stuff about ones in zeros and
I've heard stuff about it running on electricity and stuff like that, but that doesn't really explain
anything. That just says, it's a little better than just saying it's magic. But my dad, when I asked
him this question, he sat me down and he pulled out some paper and he would draw circuit diagrams
of transistors. And what that basically looks like is that it's a circle with this kind of three
pronged line in the center. And the way that a transistor works is that when one particular prong
of that is energized, it allows for electricity to flow through the other two prongs. And when it
is not energized, it blocks the electricity from flowing through the other two prongs.
It's a little bit more complicated than that. There's different types of materials in a transistor
and a concept called forward bias and reverse bias. But that's the basics of it. If one,
if this very particular end is energized, then you can send information through the other two
if it is not energized, then you can't send energy through the other two. So it's an electronically
controlled switch like that because it's a switch and on an off source that you can control
with another electronic source. And then if you hook multiple of these transistors together,
you could make what are called logic gates. And this was something that he showed me on the paper. He
would draw out the transistor diagram for a AND gate and then draw out what the circuit diagram,
the schematic diagram symbol for an AND gate was. Then he would use AND gates or transistors to
sort of show how you would make a AND gate or an OR gate and then sort of build up the idea of a
full adder from that, a full adder being something where you can take two different inputs from two
different, what are called RS nor latches or any kind of memory addressing. So anything that can
store an electronic signal and output it. So you can take two memory addresses and put it into the
ends of an AND gate and it will add it together essentially. You'll have to take into account
carryover bits for the adding process and that's one of the things that you can do with computers
just by feeding the output of an AND gate at the end of the adding process into the next
sort of segment of the adder to act as sort of the carryover bit. I'm being a little bit
hand wavy with a lot of this information but there's a YouTube channel and a content creator
that I discovered after the fact more recently that does a very good job of explaining in much more
detail a lot of the stuff that I'm talking about. His name is Ben Eater. I'm going to put a link to
his website in the show notes and he has a whole show on how to build a computer from scratch and
it's very interesting and a lot of this is the sort of things that my dad was telling me at the time.
Although when I was a kid I didn't worry about the details too much. I was just mostly interested
in the main beats of like this is how the information sort of flows through the computer. One of
the things that that didn't really explain though was so if you have this stuff in memory addresses
then you can do add it addition to it or you can do any one operation to it if you know what
operation to take but how does the computer know which operation to take on a given piece of
memory and what my dad would do is he would sort of draw out the different memory registers
and he would talk about this thing called the accumulator and he went over a couple of things
with assembly and the way that assembly works is that you have this central processing unit
that has a bunch of hardware predefined operations that it knows how to handle as well as an
operation for essentially looking at a particular memory register like it'll it'll be able to index
okay if I'm given this number then that means to go to that memory address or that register and
memory and because of that if you have one of those registers set to what was called the accumulator
you could have that walk through the breast of the program and tell the computer which instruction
to take at which particular time so if the memory or if the program accumulator started at zero
then you would run the zero with program or the zero with code in the program then that after that
program ran it might get some input from some external peripheral that might influence the way that
it handles the logic gates and then it will modify the the program accumulator to what the next
instruction that it should run is now dealing with ones and zeros dealing with the raw data of this
program of this sort of memory type of these registers very cumbersome so programmers develop
something called assembly language which is a way of making this at all human readable I mean it
was still literally the ones and zeros just translated it into different keywords so like for
if you had something like MOV or move I don't know CDX comma ADX or whatever then you would be
essentially moving the the memory address CDX move whatever the contents of that were into the
memory address ADX and when you run that program when you run it through an assembler it literally
just takes move translates that into the binary code that is move takes CDX and ADX and translate
those into the binary equivalents and just feeds that into the computer because those are literally
the instructions the computer understands now this these were the things that he kind of went over
to me on his kid since then I've learned a lot about higher level programming languages so programming
languages that themselves translate into assembly so that way we don't have to deal with essentially
the raw ones and zeros of the actual code which is what you're doing with assembly like C is probably
the next one up where each individual instruction in C translates to a phrase in assembly directly
and similar things can I don't really know how rust which is my preferred low-ish level programming
language I don't know how that actually compiles per say I assume it's pretty close to C but I
think it's a little bit higher levels than C in that it has some automatic code that it generates
for garbage collection all of that you don't even know what any of that means I'm kind of rambling
at this point but that those were sort of the things I was thinking about when I was a kid
and sort of why I sort of got interested in this idea of computers as well as understanding the
computers they're really dumb they don't know a whole lot they're not very wise or knowledgeable
things they just do what you tell them to do and that's it they only do what you tell them to do
so you better know what you're telling them to do otherwise you're gonna have a bad day
but anyway about more about the computer that I was using at this time as a kid it was a Windows 95
computer and had a sort of overlay on it that was called kid desk kid desk was a program that
essentially limited the permissions of the various users like you could set different permissions for
what programs each user could use and all of that and all of it was controlled by the parents profile
and all of that when I was a kid I was set to essentially the strictest setting so I only had access
to like a text editor and that's about it really I had a text editor a very very weak like even
weaker than the encyclopedia Britannica which my family owned so I would usually use that but a
weak encyclopedia software that was not very complete at all and maybe maybe a few games like
pong or something but mostly my parents didn't want me to use the computer because they wanted me to
use the encyclopedias or they wanted me to learn to play outside or read books which I did quite a
bit but I did really like using the internet because there were a lot of there were a lot of
games and stuff on the internet that I really enjoyed playing like I don't think this was
available at the time like most of what I would do on the computer back on that when it was
Windows 95 was go on webmaster forums and IRC chat and AOL instant messenger and sort of just
talk with people and get information that way about different computer stuff because I was always
really interested in that stuff but I didn't have access to any of that on my account so once they
installed kid desk because they didn't always have it once they installed kid desk I needed a way of
sort of circumnavigating the protections that it offered and the way that I did that was through
a combination of social engineering and sibling library essentially promising that I would do my
brothers my elder brothers chores for like a week and then he gave me the password to his account
so that I could do whatever I wanted to on that and that worked well for while we had the Windows
85 computer but when we got Windows XP it was a little bit different so when we got Windows XP my
parents put on it a what I remember reading at the time was an enterprise grade a web protection
or content content filtering system called canine web protection which my parents bragged about all
of its security features about how oh if you even try to touch the install of this even if you access
the Windows registry then it will stop all internet traffic completely and then you can't even use
the internet at all I don't remember if I tripped that I think I did which meant that I couldn't use
the internet on at the home anymore and the reason that I did was because I was trying to find a way
to break it and then try to find a way to exploit it which I eventually did find and what I ended up
having to do was I went down to the library to use the computers there and I took a compact disc
that my sister would use to burn mix tapes and such but I used it to burn onto it I went to a one of
those hacks cracks and wears sites and I was able to find a exploit for canine web protection
it was a privilege escalation exploit that would essentially allow you to impersonate a
administrator and delete canine web protection and it would do all that for you and so I took that
home and I used that on my computer and it did do what it said it deleted canine web protection
and it was after that point after my parents figured out that I had deleted canine web protection
from the computer and could now access the internet as much as I wanted that they stopped caring
about restrictive my access so I had free reign to play the as much club penguin as I wanted to
for the rest of my childhood that's basically what led to sort of my interest in
hacking and in technology in general the next major thing that happened in my life was that I got
a computer of my own which was essentially my parents were sick of me messing up their computer
so when my eldest sister who was not living at home at the time when she was about to throw away
her old computer that barely functioned they were going to give it to me and that would be my
computer that I could do whatever I wanted to do it and that way they my parents didn't have to
worry about me you know contaminating the home computer with all of my hackery nests and that's
where we're going to start next time in this series I might do a couple of video or rather a couple
of episodes between on various subjects but I just kind of wanted to start out with this introductory
episode um if you want to get in touch with me you can contact me at you can email me it is
at pm.me that's India Zulu Zulu Yankee Lima Eco India Bravo Oscar Whiskey India Tango Zulu
at Papa Mike dot Mike Echo or you can or you can talk to me on mastodon I'm black kernel
at nixnet dot social that is Bravo Lima Alpha Charlie kilo eco Romeo november echo Lima
at november india x-ray november echo tango dot social thank you for listening and I hope
to talk to you next time my good bald you've been listening to hecka public radio at hecka
public radio dot org we are a community podcast network that releases shows every weekday Monday
through Friday today's show like all our shows was contributed by an hbr listener like yourself
if you ever thought of recording a podcast then click on our contributing to find out how easy it
really is hecka public radio was founded by the digital dog pound and the infonomicon computer club
and it's part of the binary revolution at binrev.com if you have comments on today's show
please email the host directly leave a comment on the website or record a follow-up episode yourself
unless otherwise status today's show is released on the create of comments attribution share
like free dot olises
