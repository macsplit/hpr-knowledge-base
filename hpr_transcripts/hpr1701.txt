Episode: 1701
Title: HPR1701: FOSDEM 2015 Part 4 of 5
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1701/hpr1701.mp3
Transcribed: 2025-10-18 07:59:09

---

This is HPR episode 1701 entitled Fostom 2015 Part 4 of 5.
It is hosted by Ken Fallon and is about 43 minutes long.
The summary is Aggravoting.
D-Book Scanner.
Open Embedded.
Amateur Radio.
Cody Formally XBMC.
This episode of HPR is brought to you by an Honesthost.com.
Get 15% discount on all shared hosting with the offer code HPR15.
That's HPR15.
Better web hosting that's Honest and Fair at An Honesthost.com.
Okay, this is Ken, we've just done duty Linux and now we've come next door to something
that is not related at all and that's Aggravoting, is that correct?
Yeah, that's correct.
And you are?
I am Eduardo Rundes.
Tell me a little bit about this project because I'm actually quite interested in this.
Okay, well this project has started around five years ago and our idea is that we needed a
boating system that is secure because it has started in a small bodyguard part in Spain that
wants you to go to the elections and since then we have well we made the project independent
as it's up and now we are running a company based on this boating system called Aggravoting
and it's been used in Spain mostly by political parties and we have had elections, well,
quite big elections with more than 100,000 votes already.
Okay, and is this using boating machines or are you voting over the internet?
Mostly boating over internet, it could be used as an electronic boating system, not via internet
but electronic but for now it has been used only for e-boating, internet boating.
And how do you verify that the person who is voting is voting?
How do you verify that the person who is voting has voted?
How do you verify the fact that you don't know who their political party is?
How do you maintain anonymity?
And how do you do traceability?
Those are many questions I would try to ask.
Take one.
Yeah, well the first thing is that the software is flexible, it's modular, so
we had know the ones that tell you as an organization which authentication system you need to use.
So we tell you which authentication systems exist and which are the advantages,
security advantages and for example usability disadvantages of different both authentication
systems and then as an organization you have to choose.
So for example you send somebody a four digit ID in the post or what are my options there?
Well we have used a range of authentication systems, for example one very easy and not very good
but it works is via email with an email link that's one system.
We have also used electronic identity cards because we have that in Spain
but the problem with them is that they are not very usable, it's difficult to use,
you need a car reader, etc, you need to remember the pink code, something you have probably
not never used.
Then we have used for example SMS code send to your mobile phone so we at least verify that
that mobile phone is yours.
We have even used scanned IDs or a photo that you send to the system and then a set of
administrators verified so the election is yours, you have to choose and if we don't support
the authentication system that you want to use then we just we can add support for it.
So then we know who's voting so what's the next step?
Well the next step depends on if you are voting the important thing about the software
is that it is fully verifiable and true and verifiable.
So you can verify how good is the when you vote if the ballot is correctly
codified and it's correctly encrypted because that's one of the questions when you are using
a machine if it is working properly right.
Well there is the Agora modifier which is a piece of software that you can use to verify this
and you can you can execute it in another machine if you think your machine is compromised
etc and then you send your ballot to the ballot box, the trony ballot box and then you can check
that your ballot has been correctly cached and is in the ballot box you can search your ballot
using the locator which is a hash of like a photo of the of the ballot and then there is a process
so a tally process when the election stops then the tally process begins and actually the ballots
are encrypted for us it's very important the privacy of the vote not even us as a election
administrators that have access to the ballot box for example not even us can have access to the
to the the plaintext of the ballot it's impossible for us because it's encrypted with a key
that is owned partially by different authorities election authorities we call it it's similar
and then the tally process is run by these election authorities because they have the keys
of the of the election so and the tally process is in two steps the first step is to
anonymize the ballots so we don't know we we don't know this ballot where it came from and then
when the ballots are anonymized then they are decrypted and then you can treatively know the winner
right no and the whole process is verifiable so by anyone that's that's why we call it it's called
universally verifiable and you can verify that the decryption was done correctly even if you don't
access to the decryption keys and you can verify that the anonymization session process was
currently currently done and also you as I said you can verify that the ballot is in this in this tally
so as a as a voter I could verify each of the steps along the way as well exactly anyone can
verify this tally but as a voter you can also verify that's why that's why the tally itself
is universally verifiable even if you didn't vote you can verify it but also the voter can
verify personally that his vote or her vote was currently cast was was currently encrypted and
currently codified and the thing is that we didn't invent all this system where we're we're
not invent reinventing the will this is based on more than 30 years of research on a secure
so what we have done basically is use some software for example from the from Harvard
some from other universities and then what we have done is just bring this to the real world
and in open source because there are other companies for example that have
similar voting systems but because this is a bit complex it's difficult they usually
you need if you want to use this software you have to pay more than a hundred thousand dollars
just to do this kind of election in our case it's open source you can be running yourself
or you can contact us if you want to be a professional so how how are you getting to do the
and on how can I verify that I voted for person X and still have the assurance that my vote is
anonymous or well you can verify that your ballots that may it may be even signed
cryptographically signed electronically inside your ballot is inside the ballot okay so your
question is if someone can know this is my ballot and they can know that the content of the ballot
if I voted yes or no for example how how does the tally work how can you get a result right that's
that's the question well that's because you can there's some mathematical properties of
cryptographic systems that allow to do something like you have this ballot we don't know the
contents these are the ballots and you can sum this with the ballots and then they creep only
the sum yeah okay that's fine it's like a PGP message I guess so you you have an encrypted
message and you know that's whatever's in there is hidden and I can verify that it was me but at
a certain point that message the encrypted part is decoupled from the sender yeah it's going
to have to be because and now it goes into another bucket so you have yes and no one's
decrypted so how do I am I just do I know that between those two points that certainly my
known has turned to a yes how do I can I verify it to the end well there is a process that is
called a mix net and and this is a mix net specifically was by anonymizing the what is
shuffles the ballots and reencrypt them in a way that allows them to decrypt it only once okay so
basically it's more or less what I said you can have two ballots and one of the ballot for
example is imagine that they are numbers because actually the encryption works with numbers
so the the basic idea is that you can have two things you can send them so they are anonymized
you you kind of then they couple them and then you can decrypt the result okay so this way you
are anonymizing the content of the ballots and then it's secure to decrypt the the the
resulting encryption without knowing that this ballot is yours or this ballot because you've
done this so yeah because it's time so you still know that your ballot is a learn of course
because you can sum anyone can sum the encrypted ballots because they result this also encrypted
makes perfect sense you're given a talk tomorrow on this way yeah tomorrow we're giving a
lighting talk of 50 minutes in building I don't know in for a for a room guys thank you very
much what you're doing is good work we need more of this we've had enough people playing chess
on voting machines that needs to end and have a good fast them thank you very nice thank you
and we have come over to the AW building the secret building with all the hacking stuff
and I'm now talking to Johanna Spider and what are you here doing you're beside the DIY
book scanner well what what are you here doing I'm here doing with with the with the project mainly
I try to see some talks but I don't think I'll make it no chance too many interested people
yes so basically I'm trying to demo the book scanners that we are presenting here that we built
and when you say book scanners what exactly do you mean it's basically a open hardware solution
where you have a how did I put it you have an appliance or you have a cradle where you put the
book in you have a lever that lifts the cradle and presses it against the glass plate and then so
so you're converting analog boots into digital so the game is basically if you have a book
that's not available in as in a digital format and you want to read it on your iPad for example
that you have a low cost solution that you can do at home to convert that those paper paper pages
into digital images so you can OCR them so you can kind of put them through a stream reader if
you're blind for example or just kind of copy and paste for your paper to university okay so
I've I've some study books and I run to the same situation that I don't want to be carrying them
everywhere I just want them you know you've got five minutes in the smallest room in the house
you know what I mean and you want to be able to read the read the book exactly but the pages always
go a little bit fuzzy and scanning so how have you fixed this problem we fixed this a lot of
ways for example usually probably you have is that the pages get warped if you take a picture with
a digital camera the inside of the page will kind of be distorted because because of the physical
properties of a page that's why we have this glass plate and where the book is pressed against
so the pages are flat let's walk over to it so we're standing beside a we're standing inside
a MDF device which is how do I describe this this is a picture in the will be in the show notes
and he's there's the book is resting on a cradle at the bottom in a sort of V format and the book
is German but it's got a b c d e f it's got the
book about typography so if you want it to scan this book yeah with it no if you if you're
foreign for example you put it on the table flat yeah and then you would see that the inside of the
page it gets kind of distorted in the image because of the because the whole thing is flat yeah
exactly and your solution to this that's why we have this cradle in the scanner
so it's like a v shape a v shape cradle that's attached to a lift yeah and you put the book in
you attach these the I don't know how to so there are two planks of more or less 45 degrees
and they can go in and out leaving enough space for thicker books they can be adjusted
yeah so it fits the spine of the book yeah and once you have it inside you're pushed a lever
and the lever raises the v up to two last plates and pushes and pushes the pages against the glass
plate and it's also an 45 degree angle or 90 degree angle in total yeah so you know and now
you see the pages are very flat completely flat and if you took a picture now
yeah we could drop them very easily and as in pdf it would look like the actual physical page
absolutely yes yeah so that's basically what what we the main goal of this project was to kind
of resolve these problems and as for the fuzziness we have two digital cameras so the pictures
can take about two consumer cameras yeah you can just hook any camera you have at home
it can be controlled from a computer put it into the scanner hook it up to your PC where we have
some software running the controls to get the scanner the cameras and then you can either set the
focus manually so you basically do the distance to the page or you can take an initial measurement
with the autofocus engine of the camera yeah and lock it at that value yeah so for every next
capture the focus will be locked at that position so you won't get any fuzziness okay because you're
going to have a consistent distance between exactly exactly you're going to have consistent lighting
conditions exactly so the scanner is actually designed so that there's no reflection of the light
just it is at the top of the scanner on the on the glass how do you manage that it's it's because
of the distance between the lights and the glass yeah so the guy that designed the scanner is
actually actually he has a degree in optics so he knows his stuff and he spent over a year
designing the scanner so the actual light situation in the scanner is optimal for book scanning
so with the this is a new model with the old model you see that the distance between the light
and the glass is a bit a bit shorter yeah so with some larger books you would get reflections
on the upper side of the image that's why with the new model we increase the distance so basically
you don't have the problem anymore I'm not driving in this at the back end and the back end we have
well we have one one reference solution which is a software running on a Raspberry Pi
yeah so the cameras are attached to Raspberry Pi the software is written in Python
and it can be controlled either via the command line via a graphical user interface or from
another computer or you tablet with a weapon interface is it not just possible to put it in and
have a bottom that you press here on the yes yes you see we have a foot pedal that's not hooked up
yet yeah but you would basically start a software or you would have it running anyway on the
Raspberry Pi then you would create a new workflow for the book in the weapon interface put your
settings into it and once you're done you say I want to start capturing now and then an event
loop starts it waits for presses on the foot pedal every time you press the foot pedal two pages
to the cameras with the trigger and you can capture an image and then once you have the image done
it's a PDF file well once you're done with the capturing you can put the book into a post-processing
workflow yeah so basically this is done by a plug-in system so you can basically customize
the workflow as you need it for example what I usually do is I binarize the image so it's not
no longer grayscale or color but black and white which is very good for classical books where you
don't have any much illustrations yeah then I crop the pages so for example in this case you see
we have lots of white space around the page yes yeah and we crop that in software then once the
pages are binarized and cropped I run them through an OCR engine so optical character recognition
so I get the text the actual uscutfh text from the from the page image what's what else your text
use this is also done by a plug-in system so basically currently we have a plug-in for Tesseract
yeah but I'm planning to write one for Okropi which is a new one new kit on the block so yeah
this is also the nice thing about the software because almost everything is done in plug-in
we have a very very small core and everything from the device drivers to the interfaces to the
post-processing stuff is all done via a Python plug-in API so if you have any needs you can do it
yourself I'm not sort of the licenses this whole thing it's well the I don't actually know the
exact hardware license but it's open hardware and there are no patents involved so we're strictly
anti-patients also for the hardware the software itself is AGPL so free software is the speech
my wife would have a fit if I come home with something like this largely because it's massive
it is quite big yes is there any other solution that will be more yes actually we have one guy
from our community who is working on a automatic Dwarfing solution so the idea is in his project
he has laser laser diodes at point at the page and you had me at lasers yeah and what he's basically
doing he's I think it's like eight lasers that point to the page and with those eight lasers you
can kind of make a grid on the page yeah so you can basically see the physical outline of the page
what he then does is he takes one one picture with with the lasers out of the page image then
immediately after that a picture with the lasers on and he increases the contrast he only sees
the laser lines and he runs through an algorithm they kind of readjust the picture without lasers
it devops it yes and the idea is basically that you have a much smaller device yeah so you don't
need a plate anymore you don't need a cradle anymore because you can just put a camera on a
strategy understand exactly and just point it downwards and just capture the images with the lasers
okay fantastic yeah there's also some ideas about some new android phones have special image sensors
that can capture some some of the space three-dimensional pictures you know kind of sends the
can can can can can take multiple pictures and kind of deduce from that how the
how the room is structured yeah and one idea is to use that information to debug books as well
okay just so we always thinking about how we can make it smaller I'm actually more involved
with software sites and not really the hardware site but there are people working on it and
we try our best okay well thank you very much for for for this are you giving any talks or
I'm not we're not giving any talks but the people who are writing a custom firmware for the
cameras they are just giving a talk it's called CHDK it's a custom firmware for Canon cameras
with which you can do much more stuff than with usual firmware so okay fantastic and
thank you very much for the interview and have a good show yeah thank you
hi your name is my name is Ulf Sam Yosam hi and where you from I'm from Sweden Stockholm
excellent and you're here with the open embedded project could you tell our listeners what
the open embedded project is the open embedded project is a project that helps people to create
a complete Linux distribution so you can build the kernel you can build the boot load or you can
build a file system as well as the compiler to build everything so why couldn't I just download
the door for instance or devian well if you want to customize your system it's much easier if
you have total control here it's very easy to extend the file system with your own application
and it's really targeted towards embedded devices so people that build embedded devices will find
it easy to work with this time and this is supported by Intel and other people or is it?
if you look at the total electronics industry for people that create electronic devices like
microprocessors they all are using open embedded I used the work for semiconductor companies
they are really focusing this project this was also the project that Nokia used when they were
planning to use build a Linux based mobile phones okay or a variant of this open embedded project
okay so what we're looking at the table here what sort of things can you can you walk me through
the table well what we have here is different kind of development boards for a different kind of
process Intel they have a lot of stuff here yeah so whenever you want to do embedded stuff you
want to have a board around right these are just examples that people in the project are working
on that at the moment and that's a really small so maybe we can go over here and so we're looking
at some Intel Edison stuff yes that's a relatively new that was released this year was
yes I'm personally not involved with Intel Edison stuff I've usually worked with ARM processors and
powerpeasings so this is the Intel's attempts to yes to get into the embedded market yes okay
so what are you using for well open embedded or yokto is used for
wide things right now I'm working with yokto together with Ericsson Telecom and they're
using yokto for radio based station controller so the core of the mobile network is built using
open embedded so are you giving any talks here today or I'm not giving any talks there are
other that will think about the open embedded and yokto project that's for them so it's been the
whole thing for the last couple of years incidentally people that are working with commercial Linux nowadays
like montavista and wind river they are also adopting yokto so it's really become the
industry standard there also yokto is well some people say that yokto is the marketing name what
engineers call open embedded so what you have in yokto is a way of organizing your build environment
but they're all basing it on the date that is provided by the open embedded project so if you
want to build a Linux kernel in yokto you're using the open embedded recipe for Linux yeah okay
I got you okay thank you very much for the interview and good luck here with the rest of the show
we're talking to Chris and you're from hot project I'm not from the project from the ham radio
community are you now yes we're promoting ham radio here to the software guys to the software
geeks so what is ham radio oh good question okay amateur radio is a technical hobby that makes
it different from CB which is more about pop amateur radio is purely technical hobby which deals
with radio and all aspects it could be voice which could be data which could be data networks
uh long long distance communication short distance satellites everything weird everything
special radio but you need a special license in order to operate ham radio that's correct you
need to have a license to do that and there's a technical exam linked to that but for instance
in Belgium where we are here the technical exam is quite well for the lowest type of license quite
easy yeah I have a daughter which is 16 which is in uh language direction studies latins is
not technical at all and actually has a license so it's a possible for people with very technical
not that much technical background to actually get a license okay um so what are you what are you
showing here what what sort of equipment where do the two worlds meet well my my goal is to show
that amateur radio connects with a lot of other hobbies so we have some equipment the radios
brings we have over there are radios for what they call the ISM bands if you have a weather station
or a wireless mouse or whatever so this is the kind of radios that they use for that now due to
luck let's call it that way there's actually an overlap between ham radio bands and the
ISM bands yeah that means as being a ham I can use more power board power I can use directly
on tennis I can use all kind of stuff additional stuff which people do not have do not have an
item a ham license cannot have do which means I can work I can do this much more distance I can do
machine networks I can do everything hiki what else there is um other things that we have for instance
the local club where I work where I am part uh remember um we there's also an astronomy club over
there yeah we work with them for things like uh the textile meteors so if you meet your
answer the atmosphere to reflect the radio signals for certain time and we there's a radio transmitter
and we use that they use that we would have to detect the meter or um other things for instance
we have technology called weak signal propagation which is technology designed to
pick out a very small signal below noise below noise also you'll mean that your noise is larger
than your signal itself and it turns out the guys who do astronomy with the pictures use the same
technique to take photographs of very weak signals or very weak uh objects in the sky
yeah by taking multiple pictures and average it out and so it's them so there's a lot of
over up with all kinds of stuff and we're trying to show that ham radio is an interesting hobby
also for people if you're interested in all the stuff you do interested in electronics
or if you just want to use it if you want canoeing and you want to use ham radio infrastructure
or what else do you have how would you what's the best way to approach the hobby
what how would you how does somebody get into it how to get into it um well the organization is
that you have local clubs and a top of that is a national club the best way if you're interested
in this go to the website of whatever national club there is you can probably find out if you do
search for ham radio when your country is going to find something yeah and then you have a list
of the club the problem is that not all clubs are interested well the club lives by the people who
are the member of that club so you can have clubs where people are just interested in radio
long distance communication and a uh freak out because they have a connection with uh talk to
somebody on tartica which could be nice but if you know the electronics will probably not
be interested that much so it's it's more to say that you try to find or ask the organization
say i'm interested in electronics what club can i go to but uh what's a lot of ham's who are
member of hackerspacers why when your university is such a one so if you look around then
probably well if you're interested in radio you're probably going to pop up somebody who likely
ham exactly what sort of uh free and open source software do you use in your hobby and my case i
write codes i have things for box-ac paging so i have uh projects which i use to send box-ac messages
paging messages sorry paging messages you know those old things that nobody used anymore
that's no reason not to send them well that means up but there are all the equipment that you
can change the frequency you can change them to the camaraderie frequencies yeah so there's a
library of Arduino to interface Arduino with box-ac i have software for digital voice there's an
amateur an australian uh radio amateur called a David Rowe who has written a voice codec a low
bit noise voice codec on one thousand two hundred bits per second yeah it's um if you want
something else patent gonna cost you a lot of money actually the guy wrote an open source i've
developed a vhf modern for that i've done stuff and it's all on guitar okay very good
excellent stuff um are you gonna be given talks or anywhere is there a website that you can
send people to uh i don't know we actually have this info booth here but this year we got
this idea about two weeks ago so it was kind of sudden yeah i think one of the german guys
on the givetimes gonna do the talk in the uh web from the sdr conference like this um i don't
know if it's gonna be about time radio or wait i think i've seen something um do you use glue
radio uh well we use radio a lot that's the basic for uh software defined radio and of course
that's big big for what we do for everything we do also for a radio strongly by the way with
software the beta detection the software the use is also for new radio so this is no overlap
between everything okay and that's uh what we're gonna do thank you very much for the interview and uh
have a good look at the show here and now we're coming over to for the project hi and al
claire from kody project so the kody project nobody's ever heard of that before what is this and uh
what has it been released from right um well i think most people still know us as xbmc uh
formally xbox media center formally xbox media player um change your name what was the reason for
that the the reason to change our name was actually very simple um we had some issues with
piracy uh being associated with piracy we have an we are on uh open media center um and we have
an open platform for uh add-ons um which are written in python so it's possible to extend the
functionality of the media center by writing a python add-on and many people have done so we have
a big repository of those add-ons um about 1500 and those are all legal feeds so we have a youtube
add-ons showing youtube feeds we have several website add-ons showing website feeds or radio
feeds stuff like that um what happened is that there are also people who are writing add-ons
to access illegal media so piracy video streams um which is fine with us we don't have an opinion
on that it's an open platform you could do what you want but people were selling these add-ons
on box of pre-installed as xbmc so we did have a problem with that because of course we want to
continue the project and we are actually uh a non-profit american foundation as well uh like
mozilla's uh for Firefox we have the xmmc foundation so what we did was we tried to register our name
trade market um and we probably should have researched that better because there was another
company that had a very similar name and by law of course they're uh obliged to protect their
trademark which is exactly what they did they objected against our trademark application um
and basically told us you're not allowed to use this name we don't want you to trademark it
and you have to seize using it okay um so what happened well we made an agreement with
I'm a legal agreement um that we were gonna change your name and we would stop using the old name
for publicity so basically we wouldn't release a new software version now um due to the
agreement i'm not officially um able to publicly tell which company it was and it doesn't really matter
it it does need to be mentioned that they were very friendly because they could have just
annihilated the the entire uh program project and they didn't okay they gave us more than a year
to change it et cetera et cetera we're still allowed to use the old website names et cetera and
the new name is codie codie k-o-d-i kilo us per delta indigo for everybody out there but just to tell
our listeners if they don't know what it is um what it does right um we're in an open source media
center basically we are an application that you can install on a variety of operating systems um
basically any operating system really if you have a video card that can do OpenGL okay um
the program itself is designed as a media center so it's the front end GUI to access your media
which can be locally stored media or online media um it enables the fetching of metadata for this
for this media so for instance if you have local tv show episodes and movies you can
automatically download metadata if you have named your files following a certain scheme
uh several options available um and it will scrape sites like the tvdb.org which is an open site
um i'm db which is a close site and many other sites to scrape metadata from that fanr.tv
uh to get pictures tvdb to get uh episode information and actor information i'm db to get
actor pictures stuff like and then display this in a in a nice GUI so it's when you turn it on you
got uh three main headings pictures videos music problems yeah you basically have
pictures tv shows movies um live tv because we have interaction with uh uh pvr backends like a tv
head end yeah so if you have a satellite box and you are able or or a satellite dish and you're
able to configure it in tv head end basically turning it into a variety of streams yeah then we have
an add-on that interfaces with our GUI which you install in our GUI which interfaces with this
back end so you get a nice uh view of all your tv channels what's on tv and you can switch from
our GUI as well i love it also work with tvbt i guess yes i have it on i run it on a Raspberry Pi yes
yeah it's pretty cool i can't say anything more about it it works Raspberry Pi is basically one of the
most popular um platforms of the moments yeah but it's it's a little bit limited in what it
actually can do especially in GUI update speed or if you have if you want to have one of the dynamic
skins that we have let it give a lot of extras uh you will notice that it's not as fast as in
intel x86 based vc like a intel knock or a chromebook or anything like that okay very good uh
so what are the plans for the for the coming time um well we have several plans we're working on
uh creating the well to properly explain this what we can currently do is that if you have
several instances of codey running we can share the library so you can either um use the normal
library system which is as cool lights and then have another system that interfaces with your
first codey system so you get the same method out there you don't have to re-scrape it and
everything just uses the same library you can also use a library back end uh like my as well
so you have a shared library over several versions but what we can't currently do is to have
a codey version running to do the scraping that doesn't actually have a GUI okay so we are working
on doing that because there are people who are running uh who want to run codey as a scraping
engine all low power platforms like um masses yeah the synology NAS box would be nice to have
codey running there as the back end do all your scraping and your library management there
and then just control that through json rbc with the remote control or from another codey device
so this is the direction we're going it's one of the things that's changing um where we're
modifying another thing that we're doing is we're taking existing code out of our codebase
and modifying it into binary add-ons yeah so that's the existing codebase um become smaller
um and more maintainable because the codebase is a cross-platform uh um
um
compilable uh on about eight platforms right now so we use the same code for all platforms
oh wow what's written it sorry what uh what language is a written it uh it's mainly written in C
um but there is i think we use a total of like 28 languages but i think let's say 90 percent
of it is written in C sharp in C++ okay it's a lot okay very good thank you very much for
taking the time and uh good luck with the new name and uh it's a great project everybody loves it
you've been listening to hecka public radio at hecka public radio dot org
we are a community podcast network that releases shows every weekday Monday through Friday
today's show like all our shows was contributed by an hbr listener like yourself
if you ever thought of recording a podcast then click on our contributing to find out how easy it
really is hecka public radio was founded by the digital dog pound and the infonomican computer club
and it's part of the binary revolution at binrev.com if you have comments on today's show
please email the host directly leave a comment on the website or record a follow-up episode yourself
unless otherwise stated today's show is released on the creative comments attribution share
live straight out live since
