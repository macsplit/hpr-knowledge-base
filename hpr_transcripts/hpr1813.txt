Episode: 1813
Title: HPR1813: Apt Spelunking: surf, lightyears, and fbterm
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1813/hpr1813.mp3
Transcribed: 2025-10-18 09:37:51

---

This is HPR episode 1,813 entitled, apt-pearlunking, surf, light-years, and FB term.
It is hosted by Windigo and is about 15 minutes long.
The summary is, Windigo introduces several applications he found by wandering around Hervebian repositories.
This episode of HPR is brought to you by an honesthost.com.
Get 15% discount on all shared hosting with the offer code HPR15, that's HPR15.
Better web hosting that's honest and fair at an honesthost.com.
Good evening, hacker public radio.
I'm not sure what kind of daylight you're enjoying, but it's quite late here, so good evening from Northern California.
Anyhow, to the meat and potatoes of today's episode, I kind of enjoy apt-spellunking, which is a term I made up, I mean coined,
for the act of randomly searching through an apt repository, or RPM I suppose if you prefer those,
and trying out random projects that you find in your distributions repositories.
This has led me to three packages that I'd like to discuss today, surf, light-years, and FB term.
Now, these are the Debian package names, so if you do apt-get install, surf, or light-years, or FB term,
you should get the applications that I'm talking about.
So first of all, let's start off with surf, because the little tiny Lego man that I talked to when I podcast
to make myself seem less crazy is on a surfboard.
So we'll start off with the surf package, which is a lightweight graphical browser.
Surf uses the WebKit rendering engine, so it's just like older versions of Chrome or Safari,
and it is a GTK-based application, not that you can really tell.
It is extremely spartan, there aren't any widgets, no buttons, nothing, you just get a window essentially.
So surf is part of the Suckless project, which I've discovered using minimal window managers,
and surf takes the Unix philosophy to its extreme pretty much.
Essentially, you just get that root browser window.
There aren't tabs, or bookmarks, or any other real interface.
If you do want to interface with the browser itself, you use a couple keyboard shortcuts that it has documented.
You can also use the in-page elements, so if you wanted to click on a link, it'll take you to the next page.
It's a completely functional web browser for the most part.
It's just very, very bare bones.
So about those keyboard shortcuts.
For instance, Control-H will take you forward in history, and Control-L takes you backwards, so it's like the back and forward buttons.
If you'd like to visit a URL, you can either pass it in as a command-like argument.
So when you launch the surf browser, you could do surf, space, and then the website address you would like to visit,
or you can use the Control-NG keys.
And that brings up a very bare bones de-run-like text input that lets you send in a new website to visit.
And that'll replace your current website, so it's just like the old days of pre-tabbed browsing, where you only get the one window.
And that's it. That's surf.
Surf is very good for extremely lightweight systems, because it doesn't take a lot of resources.
And it really does do it just enough to qualify as a web browser.
If you're easily distracted, like I am, surf would be a great way to keep yourself on task, because you can't really get off task without completely losing yourself.
So it kind of enforces that discipline to stay on the one site.
It's also very useful if you have a web app, and you just want that as kind of its own floating application.
So I have several different web apps hosted from my VPS.
I use RoundCube WebMail. I use GNU Social.
TTRSS for my RSS reading.
Lots of other web-based things that really are their own applications.
But if I just hide them away in a browser tab, that doesn't really give them the respect that they deserve in what they do.
You know, it's my web mail could be its own application, like Thunderbird or Clause mail, or Mutt even.
And isolating it in a single browser tab among my C of browser tab seems silly.
Currently, I use Firefox's AppTab functionality, where it takes a single browser tab, makes it permanent and in its own separate section.
But Surf would be a much more official, much more streamlined way of doing that, I think.
One word of warning with Surf is I don't think it supports things like Flash plugins or any of the stuff that gets tacked on to a full browser.
It'll support HTML, CSS, and JavaScript pretty well, and anything built into WebKit.
But I don't believe it does plugins and things of that nature.
Now, moving swiftly onward, there is a very quirky, very particular game that I enjoy in the Debian Repos called Lightyears.
Now, the package name is Lightyears, no space, just L-I-G-H-T-Y-E-A-R-S, and it stands for 20,000 Lightyears into space, similar to 20,000 leagues under the sea.
It's a strange game to have to describe, so it builds itself as a single player real-time strategy game with Steampunk sci-fi, which is kind of hard to conceptualize.
So what you start out with in the game is a kind of a square plot of alien landscape dotted with steam vents.
And your home base, your settlement, right in the middle.
So this settlement that you have starts off with a single steam well and a pipe connecting back to it, and your settlement runs on steam, hence the Steampunk nature of it.
So if you want to do anything, including staying in the game, you need steam and more importantly, steam pressure.
Where the game becomes interesting is your task of keeping the steam flowing and increasing steam pressure and volume.
So to build up steam and keep your settlement running consistently, you build steam nodes, which actually build on top of a steam vent, and capture the steam that rises up from it,
and then connect them back to your settlement with pipes.
And since you can't just build an enormous straight length of pipe, you build nodes in between.
This game is kind of unique in that it takes into account how long your pipes are, and anyone who's dealt with pipes knows that the longer the pipe is the decreased throughput or the more resistance you get.
And that's no good if you're trying to run your settlement on steam power.
So daisy chaining these nodes together helps prevent an extremely long pipe length, and each of these nodes stores a bit of steam inside it so that if you get cut off from the network,
and your settlement is all of a sudden short, a couple steam vents, you don't immediately lose the game.
So that's the basic mechanics of how 20,000 light years into space works, but there's always a catch because it wouldn't be that much of an entertaining game if you just built out these networks.
So since you are on an alien planet, you face lots of different hazards, including aliens, surprise, surprise.
You also can run into inclement weather, seismic instability, and all of these damage your steam network.
So aliens will come through and take out single items so they will shoot out a pipeline or they will attack a node and damage it so it won't be able to function as well.
And all of these damages via storms and earthquakes and aliens can increase the risk of your settlement losing steam pressure and you losing the game.
So you have to build in reliability into your network or else you're pretty easily wiped out.
But if you have a very robust system of these pipes and nodes, you can weather the storms and deal with the different adverse conditions without losing the game.
I think that might be one of the reasons I've liked this game so much.
It reminds me an awful lot of network engineering where if you build a single point of failure, you are most likely going to lose that in a storm or it's going to get hit by aliens and you are going to be kicking yourself when the alarms go off.
However, like networking, it can also be very, very frustrating and I tend to take games like this personally and I have been known to get very grumpy when aliens will knock out my steam in a very unsportsman-like manner in my opinion.
If you like strategy games or you like networks or you like little green lines that happen to represent steam pipes, I would give this one a shot.
It's lots of fun, it's deceptively complex for such a simple game mechanic.
So that brings us to our third package which is called FB Term.
So this package is another in the lightweight category.
FB Term is a terminal emulator that works in a frame buffer instead of running on an X server.
So a frame buffer is a very low level method for displaying text or graphics and is used most often from the console skipping the overhead of a full X session.
What I have done with FB Term is I've used it to start up a very nice anti-aliased, customizable terminal straight from the console.
So the way you run FB Term from the command line is by replacing one of your console lines in your init RC with a little utility called Run Getty that will run an application once that
TTY is brought up and switching it to FB Term which will launch and be available.
I'm going to put a link in the show notes to a super user question that I worked on a little bit that explains how to do this because it gets a little bit in depth.
So like I said I use FB Term for lightweight systems where I just really want a terminal but I want something a little bit more than your pixily Linux console at the lowest common denominator resolution.
It can also be set up as a nice failsafe so you can have a full X session but you can have FB Term running off of one of your TTY lines and if you need to debug something or you just want a terminal to use that's outside of your X environment it this will be running in the background.
I for one use a lot of Unicode characters and things in my bash prompts so having a Unicode supported font on my TTY lines is a very nice option plus like I said not having to work at that 80 column resolution that the console is default to is very nice if you need to page through a lot of output or read through logs or X debug messages.
So I usually have one of these things just in case so that's just a quick sample of some of the random Debian packages I've bumped into while doing various searches of the app repositories if you found a cool utility in that very same way why don't you make your own HPR episode and let me know about it.
I would love another weirdo utility to put in my toolbox and I happen to know there are a couple Fedora fans out there so if Fedora has this same kind of experience where you're searching for a package and you run into a very out of the way uncommon utility that you'd like to bring some some notice to why don't you record an episode about it.
So until then I think I'm going to sign off so this has been when to go if you have any feedback you can catch me on GNU social at micro dot frag dev dot com slash when to go or you can email me at podcast at frag dev dot com there are lots of ways to get in touch with me.
You've been listening to hecka public radio at hecka public radio dot org. We are a community podcast network that releases shows every weekday Monday through Friday. Today's show like all our shows was contributed by an HPR listener like yourself if you ever thought of recording a podcast and click on our contributing to find out how easy it really is.
The hecka public radio was founded by the digital dog pound and the infonomicon computer club and it's part of the binary revolution at binwreff.com. If you have comments on today's show please email the host directly leave a comment on the website or record a follow-up episode yourself unless otherwise status today's show is released on the creative comments, attribution, share a light 3.0 license.
