Episode: 1468
Title: HPR1468: A Whole Lot of Nothing: Chromebook EOL, CentOS WTF, Non Mainstream GNU/Linux Distros and more...
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1468/hpr1468.mp3
Transcribed: 2025-10-18 03:41:27

---

5
There we go, 3, 2, 1, and all right, so what we got Sunday, February 23rd, 2014, 10
45 a.m. EST, that little, that fainted music in the background is some stuff from free
music archive.org, still Pluto, bitter pill featuring bossmoid, you know, I don't know, enjoy.
Anyway, so here's another episode by, by me Roberto, you can contact me, B-E-T-O
at havenfoundme.com or have, or you can reach me on Twitter or Identica at havenfoundme
among Google Plus as well, you can track me down there. Anyway, I just want to say
hello and hope everyone's having a good Sunday. We're just gonna go over a couple
things that I've kind of, that I've kind of noticed in the past week that I
felt that okay is some pretty good stuff. I'm not sure what I'm going to be doing with
my podcast recordings, but I did see on the hacker public radio site that there were topics
that they wanted some individuals to, or they, you know, topics that you can contribute
information or content on. One of the top few, a few of the topics that interest me and that I've
definitely maybe providing some content for is R4. Let's see, I see one here for an introduction
of Wireshark. What I would actually like to do is just do an introduction at TCP-Dump
because if you can work with TCP-Dump, then once you dive into Wireshark, you'll understand
you'll understand why Wireshark exists and, you know, where it came from. So yeah, TCP-Dump and
Ellipsi Cap libraries. Yeah, I think those two pieces right there are going to be just absolutely
amazing if you can just wrap your mind around those tools. Once you get into Wireshark, then it's
like, it's like, oh, it's like wonderful, it's like, it's just wonderful. Anyway, so another one
that I noticed was installing a VPN to your home network, the episodes for the LPI or the
networking series. So I wonder if the LPI is just LPIC-1, LPIC-2, LPIC-3.
It's a, there's a lot of information there, especially in like the LPIC-1, LPIC-2 series
because there's just so much, and there's just so much that you can experiment with.
Networking series, I wonder if they're kind of like, you know, like a CCNA type of series,
like, or just, you know, OSI or TCP-IP layer breakdown. Information, a breakdown of the TCP-IP OSI layer.
Information, I don't know if that's kind of what people are interested in, but I am interested in
creating some episodes based off of those. Another one that I think was very interesting,
well, two more that I, two or three more and I feel that really interesting was how to fix a car.
I think it's really important. It kind of sucks nowadays because you have a lot of, you have a lot of
a lot of cars rely a lot on the computer codes or the error codes or reporting codes you get
from the cars, so I don't really know how to work with cars in that fashion because I don't have
I don't have that module that you can connect into cars and then you can connect it to your
Linux laptop and then you can actually read the codes from the car using some command line tools.
I've seen that on YouTube and I thought that was pretty cool because then if you wanted to,
if you were into like, dynoing your own car and you could understand the output
from your car, you could optimize your car or whatever, but I think how to fix your car,
how to change a flat tire or some common tools to have in your car,
also just changing the oil or when basic stuff like windshield wipers,
checking your fluids, adding some fluids, what's the right and wrong things to do,
what are the resources to go to, usually the car manuals like the best thing to read,
that thick gas manual, that's in your car, that they give you, usually the best thing to read,
it gives you a lot of good pointers and it helps you identify all the parts on the car or all the
places on the car. But yeah, I mean, how to fix a car in a sense of how to repair a transmission,
how to repair an engine, doing things like that, yeah, that's tough. I don't know how that's
going to be done on audio, that's going to be really tough. But there's a how to set up a GPG
and OpenPGP. I mean, I can set up my own keys, but if this is talking about setting up a server,
then okay, you know, I can kind of understand and see where that's going. But the what I do with my
Raspberry Pi, yeah, that's really interesting. There's so many things you can do with a Raspberry Pi,
it's just, it's pretty ridiculous. Yeah, so those are some of the ones that interest me a lot,
and I think, you know, as time goes on, I hope to make a couple of episodes based off of them,
definitely on the Wireshark and definitely on Wireshark VPN and the Raspberry Pi because
those are three things that I've I've dived into heavily in the past couple months. Some of the other
ones that pop up are the Grub 2.0 Introduction and Customization. I like Grub. It works
you know, there's Lilo or Lilo, however you want to call it, but I don't know if Lilo,
does Lilo boot into other than Linux OSs? I don't know. I don't know anymore. All I know is Grub.
All I know is that Grub can boot into other OSs and that's that. And then I like the one that says
how to build a house. That's really interesting. I know someone who they're really good,
they're really excellent handyman, and you know, I wonder like just if I can talk to this
individual and say, hey, you know, hey, can you know, we record like how to videos or something on
like caddy repair, busted pipe, or how to repair, or how do you, you know, what are some of the
household things you need, you know, to kind of have like a to be energy efficient or something
like that. Like I don't know, it's just, that was really interesting because, you know,
and nowadays we kind of do spend a lot of time. Once we do, I don't have, I don't live in a home,
I don't have a home, but you know, I'm pretty sure that there's a lot of work and a lot of self-education
that goes along with having a home and building a house is cool. That's awesome. Like, you know,
right, you got, you build a foundation, you know, you build a framework and then you just,
you know, slap everything on, like that's just, you know, that's just amazing. But then just
maintaining a household, now that's really interesting because it's like, there's just so many
things you can do to maintain a household. I mean, it's just, you know, like, there's just so
many things you can do. Like if you have like a gas boiler, I'm not a gas boiler, but it's a boiler
or, anyway, hot water tank, you know, you got a gas, you know, if you use gas to heat up your hot water,
you know, that's, you know, sometimes that thing that goes out, you know, sometimes, you know,
you're not home to, you know, to turn that on and, you know, you've got to explain to your wife,
like, okay, you know, you've got to turn a knob here, hold it down, hit the igniter, and then the
igniter is going to start the, is going to start the, is going to start a flame and then you
got to turn it into the on position and put the cover back on and then, you know, wait like 20
minutes for the water to heat up and then you can, then you've got hot water, you know, or you've
got like the electrical, the electrical hot water tanks or heating hot water tanks, whatever
water heaters, there you go, electrical water heaters, you know, they just, you know, they use
electricity to heat up the water, but then like, now your electric bill goes up, you know, so how do
you, you know, how do you combat against that? Like before, you know, it was like, oh, now I got
another bill because I got to pay for a gas and I got to pay for electricity and I got to pay for
water, you know, okay, I got rid of the gas bill because, you know, I've got a electric stove and
an electric water heater, but now, you know, you know, now your electric bill is going to go up a
little bit. So, it's just interesting, it's just kind of interesting stuff and even like,
even like with central air, like, you know, some people, you know, I understand a lot of people
don't really have the fort, are not fortunate enough to experience central air
in their household. A lot of people have to have like AC units or they're, or they've got the
electrical heaters or they've got boilers, you know, like the heating pipes that flow around your
home, you know, some people are in that scenario, but sometimes, you know, newer homes, you've got
central air. So, in the winter, you've got, you've got a, you've got high air coming out from the
vents and in the summer, you've got cold air coming out from the vents and then depending on your
household or the size of your household, you know, if you're like that, if you're like the furthest
room, if you're in the furthest room away from where that air is being pushed out from, you know,
you're going to get like a little bit of air, you know, you're going to get like the,
you know, think of it as, think of it as, you know, everyone that's closest to the to where the
air is being pushed out from is going to get, you know, the nice cool air. But if you're in that
one room that faces like that weird, you know, east, it faces east and it can, the sun hits it like
from the morning to night and it's just, you know, you're trying to stay cool, but you're in the room
and then the sun is just heating up the room from morning to night and you can't escape the
rays of the sun all day until it's nighttime and you're the room that's furthest away from where
the the the air is being distributed from, you know, you're going to be sweating in that room
because it's just going to be too hot and if you doing closed events to like some of the other
rooms that aren't being used or to like the bathroom or something like that, you know, like basically
to force the air to push itself towards your room, you know, it's going to suck. So, you know,
it's just how to build a house is just interesting, but then like how to maintain a household, you know,
like what are some of the nuances that you experience in your household and what have you done to,
you know, to solve those? I think that's a really cool topic. But anyway, yeah, a lot of the other
ones are interesting. I don't know how they're going to be done without video, but how to solder,
how to weld, that those are those are going to be pretty interesting. The FM transmitter hack to
listen into internet streams, that sounds pretty cool. That I, yeah, that sounds pretty cool.
Anybody who can do that is, yeah, you're, you're, you're an inch in it and system D. That one's
pretty cool. If you've, if you in the past built your own in its scripts, I, I think you should
definitely contribute to that topic because just building in its scripts is like, it's, it's
awesome. But then now we're going to system D. So it's, you know, you better start learning those,
those system D commands that start up services and stuff. So anyway, those are just a lot of,
those are some of the few requested topics. And if you would like to record a show on one of these
topics, please email admin ad hacker public radio and they will take it off the list. So if you go to
hackerpublicradial.org slash contribute.php or just go to the contribute page, you'll see the
list there like, like three quarters of the way down from the, from the site. So, yeah. So anyway,
what I want to talk about today are a couple things. As you probably read from the, the episode
title, it's going to be X face and X Ubuntu. It's going to be a Chromebook end of life,
Santos. Let's see, Bridge Linux, Ben Rockling, Red Rock Linux, Indiegogo, some YouTube channels
that came across and a couple of other things here and there. So anyway, the first thing I want to
talk about is X face and X Ubuntu. The crew, I've, on my last episode, I talked about X Ubuntu,
I like X Ubuntu, I support X Ubuntu. I am, I do know that I'm not going to stick with X Ubuntu
just because it's just, I don't know, it's just my nature. I'm probably going to end up doing
something else or looking for something else. It's definitely not going to be committing to Chromebook
because later on as I explain or Chrome OS because later on as I explain, Chromebooks are going
to reach an end of life, which like, it's like a WTF moment. Like, you know, I like, I bought this,
you know, $200 laptop because I wanted to save money. I like the hardware and I buy stuff because
they're going to last. Like, you know, I have, you know, my laptop here, I've had it for two years now,
it's, I buy these things because they're going to last and I want them to last and, and that's what's
important to me is, you know, when, when you start looking at like Linux distributions that
can support, you know, 128 megs of RAM or Pentium 3 processors, you start to ask yourself like,
okay, why is, why does that even exist? But then it's like, well, there's a lot of old hardware
out there and that old hardware can be clustered and used and, and better in, in, in efficient ways.
It's just, you know, I just think that's, you know, I think this is, I think that's still a value.
No matter, you know, you could recycle it, get rid of it, whatever, but still it's still valuable
to someone. So end of life in Chromebooks within like a five year or six or seven year time frame.
I mean, okay, I kind of understand that like, all right, that makes sense, you know, five years
it should already be old and outdated. But I mean, there's some people that are running MacBooks
that are like over five years old. Like, you know, they're running MacBooks right now that are
over five years old and they run just fine. You know, they've got eight gigs of RAM and
them things. They've got like, as they're running like, you know, SS, they're running 128 gig,
you know, SATA2 SSDs and they still got Core2 Duo or Core Quad, you know, processors in there
and it works. It functions. It can, it can, they survive, you know, the hardware can continue.
Yes, Apple does end of life. They're hardware by, you know, deprecating them through their software
updates. But that doesn't mean that you can't still use the laptop with Linux or even with Windows.
Because I mean, you know, and you could still use it with all the West, but then you have like,
you know, security vulnerabilities because you may not get, you know, updates anymore or security
updates. But still, I mean, you can still bootcamp the thing and maybe use Windows if you want it to
just to, you know, for shits and giggles. But I'm just saying, it's still kind of weird for me
because with Chromebook, I mean, it's really, it's not, it's not like you're able to easily install
another OS. I mean, yes, you have cruton. Yes, you can install X Ubuntu on top of Chrome OS. But
I haven't really seen, I mean, unless you're really hacking away at the Mario, at the Mario stuff,
what is it? Is it Mario bootloader? I think it's the Mario bootloader or something like that.
I don't know. But anyway, anyway, if you're really, really, really like hacking away at the,
at like the the core boot stuff because the core boot stuff is like what secures the Chrome,
the Chromebook and stuff. I mean, it's like, all right, I kind of get it. I understand, you know,
I kind of understand what's going on there, but my problem with that is just, again,
I want my hardware to last, you know, and if I can't do anything else after this thing's end of
life, and if it becomes, you know, a hassle or some sort of issue or, or just doesn't let me start
up the machine, you know, that's going to suck, you know, that's really going to suck. So anyway,
so yeah, so X-Face and X-Abon2, they're really good. I really enjoy them.
LXDE is cool, but I just had a lot of problems with using that. And the reason why I'm using
lightweight, the reason why I'm using lightweight desktop environments is because I really like
running a lean machine. So, so like, for instance, you know, if I'm running free, you know,
if I run the command free.shm or VMStat, you know, I want to see that I'm using nothing, you know,
like right now, I'm using nothing. Like, if I have the browser open, yeah, I've got Chrome,
I've got Firefox open, and all right, it's using a hellacious amount of resources, but you know what,
that's just Chrome. I mean, that's just Firefox. Chrome is the same scenario as well. You know,
lots of resources used, but whatever, not a big deal. I'm not, you know, too bummed about that.
I just really enjoy having a very lean desktop. And at the same time, I don't want to have to,
I don't want to have to max out my RAM like nowadays, or today, or like in the present time,
in order to satisfy, you know, my working, my work habits. You know, if let's say, you know,
if I had this desktop for two years, this laptop for two years, and then three years from now,
it starts to get really old and really slow. And then I can add another four gigs of RAM to it.
Now I've got my eight gigs of RAM, or 16 gigs of RAM, or whatever is the maxed out, you know,
RAM capacity. And you know, the fastest SSD I can put on this thing, you know, just clean it out
real quick and say, all right, it's refreshed, you know, I install a new distro, lightweight
distro environment, lightweight desktop environment, it should run perfectly fine. So that's kind of
my mentality. That five years, this thing should still be running. And I shouldn't, I shouldn't,
I shouldn't really have too many issues. But you know, who knows, who knows what could happen, right?
But anyway, so X face and X Ubuntu is good. Cruton for Google Chromebook is awesome. And I just love,
I just love the fact that I get X face and X Ubuntu when I, when I use Cruton. So what's next?
Let's see, I'm not going to want, I'm not going to stick with Ubuntu much longer. I came across this
site that has a, I came across as Wikipedia, this Wikipedia page. And it's, it's a layout of the,
it's called the GNU Linux distribution timeline version 12.10. The authors look like their
London, London QVist and Rodic. They're at futurist.se forward slash GLDT. And it's published
under the GNU free documentation license. So basically, it's a, it's a timeline from 1992 to 2013
of all the major of all the distributions. It seems like it's all the distributed, all the Linux
distributions, GNU Linux distributions, you can, you can think of and more. It's tons and tons of
stuff with their start dates and kind of like they're faded out end of life slash, you know,
what the hell's going on. The reason why I said, I don't think I'll be sticking with Ubuntu
from a personal, like from a personal desktop perspective much longer is because a couple things.
So Debian, I really love Debian. I've always loved Debian. It's a pain in the ass, but you know,
I really love Debian. But I've always had an interest in Slackware. And I don't know if maybe it's like,
you know, the joke could be, this is the year of the Linux desktop. This is the year of the Linux
desktop. And then the next that like the like a meta joke could be, this is the year of Slackware.
You know, like this is the, this is the, this is the, this is the decade of Slackware. You know,
I don't know. This is something to think about, but, but I think what's kind of disrupted,
Slackware's progression is arch. So arch is becoming a very, very, very popular and a very good,
a very good distro. It's, it started from its own origin, which is, okay, that's really cool.
I like that. And then some of you may be thinking, well, what about Red Hat? I was like, well,
the recent, not acquisition or buyout, but the recent integration of Santos with Red Hat,
kind of, you know, it, it puts, it makes me, it makes me think about some things.
It makes me think about some past assumptions I had, you know, because Oracle Unbreakable Linux was,
you know, it's like the very best alternative to Red Hat, because it's supported by Oracle,
and it was cheaper, and it's just Red Hat with the, with the rebranded stuff from Oracle.
And then the other option you have with CentOS, with CentOS, which was just the stripped down
community version of Red Hat. So it's like, okay, you know, that's pretty cool. And, you know,
the packages are maintained from the community. So, you know, in my mind, in the past,
I thought that CentOS was the committed OS for enterprise solutions, where if you knew Linux,
and you understood what you were doing, and you knew how to build, you know, clusters,
and storage, you know, sands, or whatever, if you knew how, if you knew what you were doing,
basically, I felt that CentOS was like the best option, because it could provide that upgrade
path for any organization to say, all right, we're going to spend money on really good Linux
admins, and have them build stuff with open source and, you know, free and open source tools,
and applications. And as time goes on, if we do need support, or we do find ourselves in
a bind where we do need, you know, special packages, or something of that nature, you know,
at least they can make that, that next step going into Red Hat wouldn't be that bad.
It wouldn't be that difficult, I felt. So that's kind of what I was thinking, was like,
CentOS is like the first step, and if you needed to make a next step into a more professional,
and we need to show, you know, from a disaster recovery, and this assurance, and this, you know,
CIA, and, you know, this infosack perspective of, hey, you know, I need to assure our investors,
or our backers that, you know, in the event of a disaster, or any event of a vulnerability
were covered. You can move onto Red Hat, get the Red Hat updates, you know, and get the,
get the Red Hat support, and you're good to go, or get the Oracle stuff, and you're good to go.
So now that CentOS and Red Hat are, you know, it's, CentOS is not Fedora. You know, Fedora core is
the bleeding edge, it's the stuff that, you know, makes your head go around and around, trying to
fix sometimes, but, you know, once you understand Fedora, and you work with Fedora, you're like, okay,
wonderful. I can, I see where Red Hat is going. I see where most of, most, most Linux distributions
are going. This is really good. CentOS is like, this is, this is Red Hat, like, this is
REL, you know, 6, or REL7, you know, CentOS 6.Whatever is Red Hat 6.Whatever, you know, it's not,
there is, or is REL 6.Whatever is, no, if ads are about to about that. So, I don't know, I kind of
just thought that it was a good option, and if you had the resources, it was a good distro to commit
to, and to return, you know, to, to put back, you know, to put back what you took out of it,
but, you know, this whole, this whole, like, integration of CentOS with Red Hat now, it's,
it's interesting. It's interesting. So, so, but anyway, going back to the, to the timeline, this,
this timeline page, it's just, it's just beautiful. It's just, it's just beautiful. You can read through,
you can read through all these OS's that you're just like, wow, like, you know, whatever happens to
them, you know, like, nox, you know, nox is still out there, but it's just not as big as it used to
be, you know, like, like, five, six, seven years ago, nox was like the thing to use. Like, don't mess
around with anybody, like, seven years ago, if you had a nox CD, you, you know, someone was like,
wow, this guy, this guy is going to fix everything, you know, and, you know, it's just, it's just,
it's just, you know, that kind of mentality. So, and then it's also a little, it's a little
educate that you gain a little bit of education out of it as well. So, you know, for instance,
I didn't know this, maybe I did, but I definitely didn't think, don't think I knew this, but you have
nox came from Debian. So, you have Debian. So, nox came from Debian, and then
Connotics came from Nox, and then Auditor Security Linux came from Connotics, and then Backtrack
came from Auditor Security Linux, and then, as we know, well, I don't see Cali on here, but
Cali Linux comes from, we know it's sourcing, it's, we know, underlyingly, it's Debian. So,
it's kind of interesting, it's kind of interesting, you know, and so, anyway, so,
and a damn vulnerable Linux, if you are looking into, you know, focusing more on security,
or trying to, you know, you're interested in doing some sort of hacking and stuff, damn vulnerable
Linux, if you can revive that, that this show, that was a good this show, it was damn vulnerable,
I could tell you that right now. So, anyway, so, this is a good, this is a very good page. Of course,
this will be on the show notes, but if, again, if you want to go to it, it's a, it's a futurist.se-gl-dt,
and again, it's called the GNU Linux Distribution Timeline, version 12.10. All right, so, up next,
I've got, I've already talked, I already expressed my stuff about Santos, but, but I have here,
like, Santos, WTF. So, server side, what's next? That's my question, like server side, what's next?
What's the next major dish show we're going to commit to for server side stuff? You know,
are we going to start rebuilding? Are we going to, is everybody going to start from, you know,
is everyone going to start from, what is that, what is the, the Linux from scratch,
just build their own distro and then, you know, make their own server, make their own server software,
and that's it, or their server OS, and then that's it, use any packages they want or whatever.
I don't know, that's kind of, you know, that's kind of my question about CentOS and Red Hat,
like, what's going on there? And, you know, Fedora is not, you should not use Fedora as, like,
a production server, unless you're really good at, you know, what you do. I mean, you, maybe you can,
you know, no big deal, if it's not, like, if it's not, you know, high availability or anything
like that, like, if it's, if it's priority is not, like, you know, high, you know, maybe medium,
medium to low, maybe you should be okay, just because, you know, from a disaster recovery perspective,
you're going to be like, oh crap, you know, I can't be using Fedora as, you know, my production
environment, that's a little too, that's a, that's a, that's a big, that's a big chance you're
taking, especially if you're short staffed or, or if the learning curve is really high for some
of your system admins or anything like that. Anyway, so anyway, so, so building your own distro from
the ground up, it is a lot of work. I've been looking at two distros that have, that I feel that
are, that are kind of interesting. The first thing I want to do, I do want to say is that Marcus
Ranham, he's a, I think he's a chief security officer at Tenable Networks. No, I'm sorry, not
Tenable, Nessus. Yeah, Tenable makes Nessus, right? So Marcus Ranham, he had a, he had a really good
talk in the, in the past about his, I would say like the, his, his, his naming of Bastion Host,
like he, he, he, he coined the term Bastion Host. And, you know, if you're not, if you're not
familiar with what a Bastion Host is, just think of it as a dedicated OS to just do one thing
and one thing only. You know, you build a Linux OS to do one thing and one thing only. So like a
firewall, you know, if you build a firewall, it's a Bastion Host, you know, like just build one
OS or server to just do that one thing. You strip every other package out of it. Just take every
single package out of there that you don't need. You know, just, you don't need, I don't know, like
just, just think of it like that. You just, you know, I, I don't want to take, you can take the
art firewall tables out because maybe you still want to use the art firewall, art,
art tables or art firewall tables. But, uh, but just think of it as you just build a dedicated firewall
and that's all that it does. It does not do anything. It's not a web server. It's not a, uh,
it's not a syslog server. It doesn't, it doesn't do anything else except just be a firewall.
A back, that's what a Bastion Host is. Um, he's kind of re-nicking on that, on that term now,
where he's like, he feels that, you know, it was a good concept in the past where you just had one,
one system do one thing and one thing only very well. But the landscape of security is becoming so,
it's just becoming so overwhelming that building one dedicated system to do one, to do only one
thing and one thing only could actually be like the Achilles heel for your entire, you know,
security infrastructure. And that sucks. That, you know, it really sucks because it's like,
you know, you got to think about it. It's just like, damn, that sucks. Uh, so,
I have here make way for clusters, customized systems, but generic and widely supported
desktops. Sounds like slackware to me. So this goes back to my whole premise on, you know, I,
I feel slackware arch or some, some OS's that are going to start to become really, there,
some OS's are going to start to bounce back for some reason. And I don't know, I don't know why,
I'm just saying that, but I just have a feeling that some OS's are going to start bouncing back.
There's, you have, you're going to have the easy OS's, like the easy desktop environments,
like Ubuntu and Mint to spin up and you'd be good to go, but, you know, you got to really start
thinking about if you're a cis admin or if you're like, you know, if you're knee deep into like
infrastructure stuff, you know, it's everything is about clustering high availability and just,
you know, seamless, like, like seamless, what would you say? Like a seamless service transitions,
right? Like, or, or, or, or seamless upgrades or, or whatever, like, you're, like, you're not going
to know, like, there aren't going to be outages the way we see outages today, like, oh, you
know, this server's down, you know, for 20 minutes, we bring it back up and whatever, like, I don't
think we're going to have outages like that in the future, but, but clusters wise, like, you
know, like clusters and, and stuff like that are going to be really, really important stuff to,
to focus on. But, um, customize systems, uh, I think we're getting, I don't know, I think we're
getting there, I don't know if we're going back to like the whole Bastion hose concept, but we're
getting somewhere where there's customized systems. Uh, because like, just look at, um, archers,
Pac-Man and stuff and, you know, I, I don't know, but, I mean, Jensu is still popular. It's still
very popular and, you know, that, that's all I can say. That's all I can say is that a lot of these
things are, they're just, I don't know, there's something in the, there's something in the pot there
and it's, it's, it's brewing. It's brewing. So, um, with that, the next thing that leads me into
is, uh, two OSs that I'm interested in, uh, bridge linux and bedrock linux. Um, so, if something's
brewing in the pot right now, then right now is a good time to start either committing to a really
young, uh, a, an either young branch of a distro or some totally new distro that does something,
you know, different. You know, because it's going to have a low amount of developers, a small
amount of developers, a small community, you know, just that's, that it's, it's a small, it's a small,
I would say, um, it's a, it's a small OS or it's a small kind of like, uh, it, it takes up a small
amount of space in, in, in what, in the size of linux and, and, and the good new linux distribution
timeline. Like, when you look at the good new linux distribution timeline, you just pick one
distro there and you're like, yeah, this thing is like, this thing is like so small in comparison to
what exists out there. But if you think about it and you start like saying, you know, yeah, it's,
it's really small in comparison to like what's out there. But the opportunities for you as like, uh,
if you're interested into working with linux or if you're already in linux and you just want to be
part of like a community and actually make a name for yourself, the opportunities are like
ginormous because it's like, you know, you could do whatever you want. You know, you can,
you want to be the site admin, you know, say, hey, I'll be the site. I mean, you want to be the,
the, the, the forum, you know, monitor, you can be the forum monitor. You, you want to be a
kernel developer, you know, you, you want to start, you know, optimizing the kernel for this
distro, you can do it. You want to start building packages or you want to be a package maintainer,
you can do it. You know, if, if you want to do the, if you want to do technical documentation or
the tech, or if you want to, um, be like a quality assurance tester, you can do it, you know,
especially on the distro that's like just coming up where it's just, there's, you know, there's like
three or four, maybe five key developers, you know, committed to it or maybe just one guy and just
helping them out and, and committing to it and, and, and just learning along the way, all these
things that you've probably never heard about or never knew about. Like, I just think that that's really
I just think that that's really, um, really important now, because we can all flock to like a
Bantu or Fedora or Arch or, you know, any major community supported, any major distribution that
has a large community base, but I think some of these small ones need some, you know, tender love
and care in the sense or, or attention, because some of these guys are doing some really interesting
stuff. So bedrock lin, bedrock linux, they were in Ohio linux fest last year, and I didn't want,
I just read over their, their stuff on their website. They've got an awesome website, by the way.
So it's a bedrock linux.org, um, awesome website. I, uh, I'm not saying it's like anything
magnificent in, like in terms of ACMLC, it says, I just like the plain fact that it's, you've got
a couple ASCII, you've got bedrock and ASCII on the top left hand corner, you've got menu navigation
and some external links on just below the, uh, just below the, um, the ASCII, the ASCII art,
and then you just have, um, it just seems like static site content on, you know, just to, to,
to scroll through, and it's just, you know, it's just, it's just wonderful. I just like it. Uh,
but anyway, um, so these guys are doing something pretty interesting. Uh, what I like is that
they're saying, okay, you like, you like arch, you like a bunchu, you like red hat, you like this,
you like that. But, you know, your package manager, you know, but when you're in a bunchu, you know,
maybe the, the example that they had on their site was for, um, was for a game. Oh man. So the
example that they had on their site was for, I can't believe I forgot that they have games name.
But anyway, the example that they have was, uh, bedrock, let's see, uh, how is this different
from preferable to using a virtual machine? So basically what they're saying is that, you know,
what they do in bedrock is they, they use like a charute and charute to contain different,
different versions of an OS. So you can basically have a bunchu running in one,
one, uh, one path. You can have Firefox in that a bunchu version running in that path,
or you can execute Firefox to run in that a bunchu version, or have Firefox run, or run Firefox
within like, Sentos in another charute directory. So it's, it's kind of interesting. And that's why
the question here in their FAQs and one of their FAQs is like, how is this different from, or
preferable to using a virtual machine? Because that's what you're doing, right? Like why don't you just
use a virtual machine? And then you can know you could just do whatever you want with the,
in a virtual machine. You don't have to deal with, um, uh, statically linked libraries.
But anyway, so the example that they had was, um, it's just, it's just, uh, it's just an easier
transition. Um, and, uh, and they had a really good example here about a game where the libraries
were available in a bunchu. And because the game was built, or the game was, uh, was a debug, or,
it was debugged or tested on a bunchu. But the, the stuff didn't work in Debian because Debian
wasn't using the same libraries that a bunchu was using. So it was just kind of this scenario where,
okay, now you have to spin up, you know, if you're using Debian, now you have to spin up a bunchu
just to play this game. But then their argument is that, well, you can just to root into your,
into your, a bunchu, uh, directory, um, and now you're in a bunchu, and then you could do whatever
you want in a bunchu. And if you would need to go back to Debian, you should root into Debian,
and then you could do whatever you want to do in Debian. So it's just a really good concept and,
you know, just, you know, stupid, simple, crazy stuff. So, uh, so yeah, so bedrock Linux, um,
check it out if you want. Um, another one was bridge Linux, um, and I just like them, they're small,
uh, and uh, they're small and they're up and coming. Um, I think their site is like MillerTechnologies.com.
I think, but uh, but anyway, so moving on, uh, Indiegogo, uh, I, uh, I haven't been able to,
I haven't donated anything to any like Kickstarter or Indiegogo, um, startups, but there was one
that I wish I had the money. I wish, I wish I had the time and the money because it was like,
I didn't know about until like, there were seven hours left. And what I would have wanted to
contribute for, I, I just didn't afford, I couldn't afford it. But there's this, uh, I hate being
single season two. It's an Indiegogo project and it would, they had like seven hours left when I,
it was like seven hours left the other day, and I was like, oh crap, I was like, I wish I knew
about this thing ahead of time. Oh no, they've just expanded it. So they, I, okay, so it's four days
left. Okay. Or maybe it was seven days. Anyway, so you've got a couple options here. And if you,
you know, I hate being single, it's just, you know, it's just comedy. They're bunch of Brooklyn
hipsters and well, to me they're hipsters. They don't want to clean themselves with hipsters. But
anyway, um, if you, you know, the different donating, I forget what these are called, but the, um,
the perks. So, uh, the contributions. So you can have like three thousand dollars, you can be,
at a bit, you can be a video party or producer cred, um, one thousand dollars to be in the show,
five hundred dollars to inspire a short episode, two hundred fifty dollars, a diggy day or
workshop with Rob, a hundred bucks, uh, team single, fifty bucks, Instagram video from on set,
twenty five dollars personalized sad buying five dollars access behind the scenes.
I think this is really awesome. I think this is really awesome for video. I think this is,
I think this is really great. Um, so yeah, so I would definitely would like to be on the show. So
that, that's a, but uh, it's not, it's not there. The funds aren't there. So hopefully I'll be
ready for, you know, season three or maybe they'll extend this and, you know, maybe I'll, uh,
I'll be able to contribute. But yeah, so, um, what I'm getting at is, uh, the same thing with the whole
Linux and with the whole Linux, um, stuff I've been talking about is, you know, there's a lot of,
there's a lot of mainstream stuff that you can commit to. You can put your time and energy towards.
And yeah, of course, you're going to put your time and energy towards that mainstream stuff because
it's going to, you know, there's a large backing. There's a large, you know, there's a large
amount of people and there's a high success rate, you know, from, you know, from a risk analysis
perspective, right? But at the same time, you know, you're just kind of like joining the herd,
right? You're just, you know, you're just going along with everyone else. Now, it may make me sound
a little hypocritical because I'm here recording an episode on hacker public radio, but I don't know.
I guess uh, to which is on. But what I'm saying about the Indiegogo is that if you haven't done so
already, please go ahead, find something and contribute because, you know, this is just the,
I kind of think about the, um, uh, pure-onage series and how great that was. And once they went
into a Canadian television, I was so sad because it was like, oh man, like, you know, they're now,
you know, they can't, no more web series. It was like, man, you know, that's, that sucks, you know,
these guys were, they were really funny and it was really entertaining. Um, and, you know,
it's just, you know, I hope they do end up making the movie and, and uh, so, so yeah. So, so,
find yourself something to contribute to, find yourself something small, big, whatever, just,
you know, commit to it, work with it, and, and work towards your next goal, expand, expand your,
your, your knowledge, expand, you know, you know, apply yourself, it's, uh, you know, dive into
things that you haven't really done before and, you know, learn new things because, uh, you know,
that, that's gonna, that's definitely gonna be, um, that's definitely gonna be very helpful
for anybody in the future. So, um, so yeah, so those are pretty much everything that I have,
uh, a couple things, uh, that I noticed on, uh, YouTube, uh, NCIX, com. So, I guess this is a
Canadian distributor, like they're kind of like Tiger Direct, but they have a really good YouTube
series of, of just all types of, uh, hardware stuff. Uh, so dive into it. It's, it's, it's
sim, like Tiger Direct used to have kind of like the, hey, check this out. This thing is like so
cool and expensive and buy it. These guys are a little different. They're like, hey, you know,
how do you build like a, you know, this, is the difference between 40, you know, like a big coin
mining, you know, they'll explain it, they'll talk about it, you know, they'll show you hardware,
they'll show you their rig, they'll show you, you know, a couple of, of, of the stuff that you could
buy from their site, but at the same time, it just seems like it's more informational than anything.
They did have one. It was like, it was like the, um, the frames per second. And it was like 120,
120 frames per second versus 40 frames per second. Like, and people tell the difference.
And it was pretty good. It was a pretty good little test. They did. But anyway, um, another one I
have is a duck dot go, uh, duck dot go slash goodies. If you haven't checked this out, it's,
I highly recommend duck dot go slash goodies. They have a whole bunch of cool stuff here.
Under cryptography, you can say generate a password 15. They have like these modules or,
or something. I guess they're modules. Um, and one is called like password 15 strong. So it gives
you like a randomly, a randomly strong 15 multi, uh, a random password 15 characters, you know,
uppercase, lowercase, uh, special characters, numbers, everything. So, you know, it's pretty
cool. They've got a couple of other stuff like a UU, a UUID generator, a, uh, a hash,
a hash computer. Um, so basically if you wanted to create like a cryptographic hash of, you know,
it's just really cool stuff. It's really cool stuff. The one that I like is the league DB module,
which is like a, you can create like a, um, you can create like a hash based off of a plain
text value. Um, so I thought that was, I think it's actually the reverse, but I think it's the
reverse. I think it's the reverse. But anyway, um, they have like a binary to ASCII converter. Um,
they have, uh, anagrams, they have, uh, under cis adamant tools, they have the Unix time converter.
I know from epochs, I've come across this a lot, especially if you don't have pearl available on
your system where you can use the actual pearl.e. Oh gosh, I forgot the command, but the,
it's a, there's a converter and pearl that you can use to convert from epoch to, you know,
to, you know, uh, um, what is it, Julian? Or they had, they say text here, but I forget the,
the, the, the calendar system. But yeah, so they have that there. Um, they also have like a data
rate conversions for system admin stuff. They show you the private network blocks. Um,
a lot of cool stuff there, uh, under travel, um, they've got like, uh, USD to Euro conversions.
Um, they got time, time conversions. They got Fahrenheit to Celsius conversion stuff. Um,
they have some web design goodies. So ASCII table color codes. I know that's, that's a big one, uh,
once, you know, if you are doing web programming, I know you guys are like, what the hell's
damn color code for, you know, you know, I don't know ultraviolet blue or something. I don't know,
or ultraviolet. I don't know. So, uh, HTML characters, um, lorem, Ipsum. So if you need to generate
some, you know, some blog, some blah blah blah stuff, you know, there's your lorem, Ipsum stuff.
Uh, there's a lot, I mean, there's a lot, a lot of cool goodies here. I mean, you can just,
you can just use this stuff for days and days. Um, yeah, uh, this food and drink one is pretty
cool. I think I might have to tell my, uh, I might have to tell some people about this one. This is
the, you know, teaspoon, the tablespoon conversion, uh, how to mix a Tom Collins, you know,
bartending information. This is really good stuff. So anyway, check it out. That's a duck.go.com
slash goodies. Um, another, another, uh, another thing that I came across, uh, let's see, let's see,
um, so recently on packet pushers, packet pushers podcast, um, it's a, it's a, it's a,
it's a net on the packet pushers network or packet pushers podcast. Uh, anyway, so there was,
that I was listening to a, um, to an episode, uh, based on, on the packet pusher,
on the packet pusher network and, um, and the podcast was about software-defined networking or
automation and it's like, uh, programming, uh, in networking. So, uh, so basically what I've
noticed is that you can do a lot of, you can conduct a lot of automation, um, using software-defined
networking, but in the traditional networking infrastructure where you have like a CLI, you know,
you really need tools or you really need like a vendor, a vendor, um, proprietary, uh, command
line, not a command line integration, but like, uh, like a configuration management system,
you know, so like for HP, you know, HP has like HP, oh, then they've, they've got, uh, they've got
two versions. It's like, I am I, I think it's, but they've got two versions of their configuration
management suite and that's the, that's the help, um, so that's the help I minister like HP
ProCraft switching hardware. Um, so the problem is that sometimes those tools don't work as well
as you want them to work. So then you've got a, you know, you've got to go back and use, you know,
you know, you got to like SSH into the, into the switch, undo config or redo config or reload
config or reboot the switch or manually have to, you know, go out there and, and do all this crazy
stuff on, on a switch, but they're the, the, the, the episode that they were talking, the episode
that I was listening to was talking about, um, using programming to help automate a lot of,
you know, a lot of these, uh, nuances, a lot of these deployment, um, or a lot of these procedural
things that, that, that can be automated. So Python is a very, very good tool for, um, for automation
for your network. Um, there's a lot of good modules involved there, but in show 176, uh, it was
called intro to Python and automation for network engineers. It's the packet pushers.net and
it's the weekly show that they have and it's show 176, intro to Python and automation for network
engineers. They talk about, uh, it's, they're very network, the, the guys that are on that
episode are very network centric, but if you can follow it and listen to what they've got to say,
you'll kind of understand that, all right, you know, programming is, programming is definitely
important in it, programming is definitely going to be important. If you're a network engineer,
a cis admin, whatever, you know, or DevOps, uh, DevOps engineer, anything that involves the
infrastructure or just, you know, just networking and systems a lot of. So one of the things that
they, that they mentioned in that episode was Ansible. So if any of you have, have ever used like
a configuration management or configuration deployment tools such as like puppet or, um,
puppet chef, you know, uh, or Ansible or, um, damn, there's another one. Uh, I, I can't think of
the other one. But anyway, uh, if you use these two, these type of tools before, you know, you're
already like 50%, you know, on your way to like the next, you know, stratosphere, I don't know,
uh, but, or maybe you're already there, I don't know. But the thing is that what I'm trying to say is
that I've looked into puppet, I've looked into chef, I, you know, those are really good tools. They're
really awesome because the way those, those, the way those tools work is that, uh, you go into an
environment, like I started an environment, they tell me I need to automate, you know, the, the,
I need to automate the, um, the provisioning of, you know, a thousand switches in like, you know,
whatever timeframe. And, or I need to pull the reporting from, you know, a thousand switches
and, you know, off of, you know, off of uploading interfaces or something like that. You know,
they want reporting, they want, they want report metrics on, you know, some information.
The, the key is that, you know, these environments, what they do is that they can build these puppet
modules or these, they can build these modules to help in puppet or chef, whatever, or these,
or these, um, I think in chef, they're called, uh, cook recipes and then, and puppet, I forgive
what they're called, an Ansible, they're called playbooks. But anyway, there's, it's basically
it's kind of like these, you know, the, the, there, you can think of them as scripts, um, but just more,
they're more like modules. And what you can do is just, you know, build a module or, or whatever
that, that can go to every single switch in your environment. It, it connects to the APIs,
to these networking, to these supported networking devices, um, pull the information they need from
there, whether it's off of SNMP or whether it's off the API of the, of the device or whether it's
like manual, like SSH, you know, like manual labor SSH, uh, um, you know, uh, SSH, what is that,
uh, like I forget as a SSH, but anyway, um, whether they're, um, however you're pulling that
information, you know, you can build those modules and then you can put it back into, you know,
the puppet or whatever community, the configuration management, configuration deployment
community that you're using. And then someone else can use that same module, modify it for their
environment. And then, you know, boom, they're, you know, they're, they're able to, you know,
aggregate the downlink that they're able to aggregate, you know, like the northbound, southbound,
you know, metrics of their infrastructure. Instantaneously, you know, because you contribute it back
into, you know, the community of whatever configuration community you're, you're, you're using. So
if, if you're lost at this point on the things that I'm saying, I apologize, but I highly recommend
packetpushers.net show 176 in show to Python and automation for network engineers.
If you don't want to listen to that one hour and 10 minute episode, not a problem. Go to Ansible.org
I believe or Ansible works or something like that. And just check them out, you know, it's,
it's their playbooks are built on YAML, which is a markup language. Very easy to read, very easy to
write. And you will be surprised at how simple it is to automate your, you to automate anything in
your infrastructure using like a configuration management system. So I highly recommend you,
you guys look into that. But at the same time, don't let go of those 10, don't let go of those
really important skills, such as, you know, script writing and, and just, you know, like basic salt,
like basic computer science concepts too. You know, a lot of the times you hear people say,
oh, you know, I just got to learn some code, code, code, code. I would say like there are some
fundamental computer science concepts that you're going to need to know in order to make, to be
a little more successful in your, in your script, in your script development or your configuration
development or whatever. Anyway, so I hope that was enough information. I hope that was,
an enjoyable hour. But anyway, I hope everyone has a good, a good week and, or a good month,
a good year and just keep, keep at it, keep working towards whatever you're working towards. Remember
to, to subscribe to the hacker public radio, RSS feed. If you, if you want to, if you want to email me,
my contact information is B-E-T-O at havenfoundme.com. You can get, you can connect with me on Twitter
at havenfoundme or idensica at havenfoundme. And thank you for listening. Have a great day.
You have been listening to Hacker Public Radio at HackerPublicRadio.org. We are a community
podcast network that releases shows every weekday Monday through Friday. Today's show,
like all our shows, was contributed by a HPR listener like yourself. If you ever consider
recording a podcast, then visit our website to find out how easy it really is. Hacker Public Radio
was founded by the digital dog pound and new phenomenon computer club. HPR is funded by the
binary revolution at binref.com. All binref projects are proudly sponsored by LUNAR pages.
From shared hosting to custom private clouds, go to LUNAR pages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under a creative commons,
attribution, share a like, lead us our license.
