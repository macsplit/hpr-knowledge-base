Episode: 3833
Title: HPR3833: Software Freedom Podcast
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3833/hpr3833.mp3
Transcribed: 2025-10-25 06:16:55

---

This is Hacker Public Radio Episode 3833 for Wednesday the 12th of April 2023.
Today's show is entitled Software Freedom Podcast.
It is part of the series podcast recommendations.
It is hosted by Ken Fallon and is about 40 minutes long.
It carries a clean flag.
The summary is another excellent podcast for your consideration.
This time it's news from the FSFE.
Hi everybody, my name is Ken Fallon and you are listening to another episode of Hacker
Public Radio.
As you know, we have a sister project called the Free Culture Podcast and today is going
to be a sample episode of one of the podcasts on our sister network.
Today is the turn of the Free Software Foundation Europe Podcast.
And as you know, the Free Software Foundation is a charity that empowers user control
of technology.
They were our neighbours during Fostem and Bonnie pointed out that we have never aired
an episode of their show on Hacker Public Radio.
So today is today is the day that we fix that for once and for all.
So ladies and gentlemen, boys and girls and everybody in between the Software Freedom
Podcast No. 14, The World of Mesh Networking.
Welcome to the Software Freedom Podcast.
This podcast is presented to you by the Free Software Foundation Europe.
We are a charity that empowers users to control technology.
I'm Matthias Kirschner, the president of the Free Software Foundation Europe.
And our guest today is Elektra, who works as a software and hardware developer and is
involved in the development of Mesh Networking and the Freifong Initiative.
She's a philosopher, I think we can say, yeah.
The author of the book Mesh, co-author of the book Wireless Networking in the Developing
World and moderates the Freifong Radio and Radio Shows of Microfm at Collabor Radio
on 88fear.de.
So way more experienced than I have with Radio and Audio Recording.
Hello and welcome Elektra.
Enough with the flattering, thanks for inviting me.
So Elektra, both of us are from Berlin and at that time lived in Berlin.
The first time we met was actually in Brazil at the Free Software Conference Fisley there.
And yeah, so I am wondering actually how you got involved in Free Software before we met
there.
So that's already done.
Over 10 years ago, but I realized we haven't talked about how you actually got involved
in the first place.
Well, my first computer was the Commodore 16 and that sucked because nobody was bothering
to write software for it.
Everybody wanted a C64 back then.
Then I had a PC, a 386 without co-processor was using DOS 5.0 for Microsoft and I actually
was only doing text editing and designing printed software reports.
Then later I bought my first Pantsum PC and that used Windows 95 and it was just a bummer.
Nothing did work.
And then yeah, since I'm an electronics person, I often shopped in electronic stores and
they had breadhead Linux and Susie Linux in a box and at one point I bought Linux in
a box and the first thing was the command line is so comfortable and I got an entire planet
of opportunities like all the universities, all the machines, all the stuff you need to
do something.
It was all there and it was all open waiting for me to play with it like a big planet
official technique but in software.
It's also interesting because like for myself, the first GNU Linux distribution I got, I bought
myself or I got it landed from a friend and I bought others and we landed around.
Nowadays most people they just download it and often confuse free software with creative
software and for us we had to buy it from the beginning, it's this association isn't
so present there.
So for you it was the getting this large tool set empowering you and what you want
to do.
An open planet with all the resources for free and it also rang the bell of Mutual 8.
You probably know the book Mutual 8 by the Russian anarchist Krapodkin.
I have to admit, no I don't know it.
Well this is like a huge gap, you should read Mutual 8 because it's an anti-social Darwinist
book and he's proving that for the flourishment of the species it is important that
the individuals from the species they help each other.
So survival is not the battle of the fittest and only the fittest one survives.
The fittest species is also that one where the individuals help each other.
So that's in a nutshell.
So when I think about how we first met that was when you were, when people asked you to
help with setting up machine networking also there in in Brazil right.
So we're in the favelias there and looking where could we build the antennas.
How did you end up in this area of work?
Well I was fascinated with wireless communication with radio.
I think I was like eight or nine when I built my first radio.
It was a simple detector radio.
And probably a bit younger when I first built my first circuits.
And radio always has fascinated me.
And that was also the reason why I got involved in electronics.
At first I was more involved in electronics rather than in programming and computing.
But computers of course, the Department of Electronics.
So it was also fascinating and yeah then the came the internet and I mean it in the internet
was like two cents back then.
And so you had to count the minutes and yeah.
And then the first DSL lines came and there was the opportunity to share those lines via
radio.
And so I started to build some wireless technology.
There was pre Wi-Fi, Wi-Fi was already there but it was an affordable.
And so when Wi-Fi became affordable and there was a budget for that community, I was
involved in the low tech.
It was like before the term hacker space, maker space was coined.
There were these groups of like squatters basically in the Netherlands and in Germany that
were setting up internet cafes and training centers for open stores, teaching people how
to use GPG, how to install Linux or open BSD or free BSD or whatever.
So that's now more than 20 years ago, 25, 26 years.
And that was also the time when you Electra got involved with Batman.
Oh no, Batman was an invention I made together with Thomas Lopatik in 2005, 2006 because
I was hacking on mesh routing protocols because routing and forwarding is a natural extension.
If you do radio communication because every radio communication device has a limited range.
But if there are other devices that mutually help in the forwarding data, then you can
build a cloud like a beehive where everybody is connected to everybody else, regardless
of the individual range.
So all the machines are contributing to build an infrastructure which is based on multi-point
to multi-point networking.
Radio communication is always a broadcast.
It's an artificial limitation.
If Wi-Fi networks provide hotspots where all the clients need the central hotspot in
order to communicate with each other.
And since the Wi-Fi protocols, since the beginning, at least in theory supported the
ad hoc mode, which is basically multi-point to multi-point communication in 800-2.11.
I got the idea that we need some kind of software that organizes the interconnection between
those devices so that every device relays traffic for every other device if needed.
And this can be done over multiple hops.
So you can cover an entire area with such a network.
And it would be license-free.
It can operate in a license-free band.
Yeah.
And so this idea was ripe even before I joined Freifong.
But when I joined the Freifong community, at its really beginning, I wrote a wikipedia
– a wiki article in the Freifong wiki – and explained the idea.
And to my surprise, there was a crowd of people that were excited about the idea.
And that's how Meshnet working at Freifong essentially started here in Berlin.
And can you explain again what Batman, then, exactly is with Meshnet working now?
That's the – you explained that.
That it's enlarging the range of a network and all the peers help each other to reach
the other peers.
Well in the field of Meshnet working, so radio-based Meshnet working with multi-point to
multi-point, capable radios, there are different types of protocols.
Some are proactive and some are reactive.
Reactive protocols we can just skip there only trying to learn about the existence of
the network and how they can get from A to B if there is a demand while proactive networking
protocols, they always try to have an idea of the network so that if you want to send
something from A to B, you already can scan the network to see who is there and then
you decide I want to send something to B. And in the field of the proactive protocols,
there were – yeah, there are the link state protocols and they try to calculate a graph
involving all the vectors between all these individual nodes in the network.
And calculating this graph is immensely costing in CPU and RAM and also in network traffic.
And on top of that all, the optimized link state routing algorithm OLSRH, which is one
of these link state routing algorithms, it created routing loops, it didn't work
as promised.
So it was one of the protocols that we tried in Berlin and at least Berlin is still using
it.
I didn't manage to convince the Berlin community to make the switch from OLSRH in Tyrelitzu
to Batman back then.
It was like 2006, the first Batman code was written.
And so the idea is to have proactive protocol that is loop free and consumes less networking
overhead in protocol messages, less CPU power and less RAM.
And yeah, the Batman algorithm has achieved that.
So I mean, maybe it makes sense that you explained to some of the listeners who aren't familiar
with Reifung from out of Germany what that is and that you accomplished in Berlin with
that.
It's a community network where people built their own infrastructure based on radio.
Not all open community networks on the planet are only using radio, but at least here,
for Berlin and for Germany in general, it's based on Wi-Fi because here regulations
and so on and such are so complicated, it's easier to set up wireless links than to dig
up streets and areas and put your own fiber into the ground.
The other communities like the GIFI network in Catalonia, in Spain, they dig their own
fibers and there are other communities, probably as well, that do this, but yeah, we're building
our own infrastructure and it's basically also a technology to deliver services to the
last mile.
That's when you roll out internet connectivity or a network, then yes, of course, you
can have a fiber line from a major city to another major city, but then you have to distribute
it to the households, for example, to the individual people wherever they live.
And one way to do that is of course, with radio and machine networking can help that.
So what we're doing is not local area networking, we're doing like metropolitan area networking
or yeah, in a certain district, people can use that technology, yeah.
And of course, there's much more to explain to that, which would be way out of the scope
of your podcast.
And I mean, for CDs or like Berlin or also countries like Germany, the aspects you talked
about before that you need more CPU, more RAM for the other protocol before that might
not be such a big issue, right?
Because a lot of people they can afford to have that, they have enough energy resources
often available to do that.
I could imagine that this is completely different for the other work you did in some of the developing
countries where it's way more difficult with the energy or yes, it's the field where I'm
operating in, please everybody don't get me wrong.
If you can afford to put fiber to every household, please do so.
But if you're in an area where money is limited, where energy resources are limited, where
you want to have a basic service quickly, you can roll it out with wireless technology.
It doesn't have, it's not always only mesh, it can be point-to-point backbone links and
a backbone network.
And the mesh is then that part that delivers it individually to the households, so solving
the problem of the last mile.
That's also why I got involved in South Africa with the Council for Scientific and Industrial
Research.
They had a program last mile, first inch, there was a development program where they were
looking for delivering internet access to households in South Africa.
And besides being a software developer for a very long time now, you're also developing
open hardware there for accomplishing those projects.
So I am dead as one part that you create mesh networks with powered by solar power.
Can you explain a little bit how hard that came to happen and what the challenges there
were?
I think you're referring to the mesh potato, maybe.
While I was working in South Africa at the Meraka Institute in Chvane, I got in contact
with Steve Song, who's working for the Shuttle War Foundation, and he had the idea to
project Village Telco, the idea of providing voiceover IP services over a solar power
mesh network or in general for mesh networks.
And since I'm an electronic person, I got involved in developing parts of the electronics
of the device.
But this is the history now, this happened in 2008, and it's already an exhibition artifact
here in the German Technical Museum here in Berlin.
What are the current challenges in this field to make sure that more people get network
connection in places where you can't have fiber that easily?
Solar power and suitable radios, but there's already a number of people that are involved
in that field.
I'm just one of them today.
So I was kind of pioneered in that field.
There are not people doing stuff with lower radios, like a text communication in disaster
areas and stuff like this.
Yeah, I'm one of my projects that I'm doing at the moment, this device.
It's the Fryfunk Open Maximum Powerpoint tracker.
There are several generations, one is based on an old 8-bit microcontroller, and now
I'm using ESP32, which is not 32-bit, and has Wi-Fi and lots of other gadgets built
in, and it's essentially to design, to build independent wireless nodes operated with
solar, where you can monitor the solar system from afar.
And if you have a Wi-Fi device, an extra device connected to it, you can monitor that as
well, and you can turn it on and off, for example, if it has a software hanger and so on.
So that's stuff that I'm doing at the moment.
And you already hinted at it a bit, but I mean, you're traveling many countries.
I used to.
You used to, at the moment not.
Yes.
When I was working in South Africa, I probably, yeah, I was one of these people that created
an awful lot of pollution already.
When we met at the Fisley, I wrote to the people, thanks, nice for inviting me, but I usually
don't fly like 20,000 kilometers just for a weekend to give a talk.
Are there other things for me that you want me to do so I can stay for at least a month?
And so they had, and so I started to work in Chile and since I go to Chile.
And later in Valparaiso, so I was already back then, I was aware that my traveling activity
was contributing a huge amount of carbon dioxide to the planet and that we should try to
avoid this.
So I had a personal feeling that I'm also responsible for it, which you could criticize and say,
hey, it's not you that is the problem, but yeah, I was aware of this.
And at the moment, I'm no longer working in South Africa and I will only travel if it's
really necessary for a really big and important project.
So I reduced my number of flights by a great margin.
And I mean, for me, it was the question I had there was mainly, I mean, the travel part
is one part, which is a bit sometimes difficult and you have to spend a lot of time on that.
But I mean, in general, I was thinking about your involvement and all the energy you put
into all of this work in the last years where it's usually not done by some few hours
a day where you are involved in that and you get some money for that and that's all
why you are doing this.
So I mean, you are working on this for other reasons and that was the question I was getting
at what, why are you working on all of that and putting so much energy and time of you
into this?
Well, my idea was like that democratizing communication, so giving communication to
everyone and sharing knowledge according to the principle of mutual aid, coming back
to Krapotkin, works for the betterment of mankind.
We are all standing on the shoulders of giants, the language that we use, the knowledge
that we have, the maps that we use, all that has been created by other humans in the past
and we are all building on top of others and there are people on this planet that are
pretty much excluded from that because the resources are not there.
So my idea was to improve the betterment of human society by democratizing communications,
but on the other hand at the moment I am also a little bit depressed because with the
ability for everyone to communicate, it was also increasing the level of where people
start communicating hatred and disinformation and so on.
So it's a two-bladed sword, but I hope that that edge that supports mankind will finally
prevail.
I think that's something for many developers when they see that there's also things done
with what they created that they don't think that is something fitting into their worldview
or how people should behave, that's very difficult.
On the other hand it's then when you are for open communication and you want people to
work together and the question is like if you start limiting some of the things that can
be done, what good things would you prevent in the world?
Yeah, well this is like you are either promoting open communication which I still do whole
heartedly or you don't, or you don't.
Well which would bring us to other fields of censorship, control, surveillance, once
you have an open communication system where people share data and talk about themselves,
they can also be the target of surveillance and so on.
So this is an even another aspect, but I still stand by my optimism that it is for the benefit
of mankind and it's just something you can offer back then when I had the idea to Batman
to get it with Thomas, I got so excited that it would be such a beautiful protocol and
then it took me a couple of hours until I realized, oh, but if that mesh communication protocol
is really so powerful and can do so, can organize communication so well sooner or later
the military will also look for the protocol and that's what happened.
And back then when we started the website open mesh org and open mesh net, we registered
both URLs and I'm still keeping it.
We came up with a license where we took the DPL and we added some comment that the protocol
is only legal to be used in non-military and non surveillance activities.
We actually asked the free software foundation and we got to reply, don't do it, don't
add more licenses and yeah, well in the end the military guys that we saw in our IP logs,
one of them approached us and said, I'm sitting on the board and I try to convince my fellow
people that they use your protocol because it's cool, but with that name Batman nobody's
taking it serious, can you please change the name of your project?
So he never got a reply to that email and there's also people that complained that we did
that step and removed that part in the license, non-military and non surveillance.
So that's now removed.
We removed it back then after getting feedback and yeah, some people are complaining that
we did it.
Yeah, it's not a free software license than any more from the definition, but yes, it's
very hard and I think that you're approached then that's something which I hear from a
lot of developers that they choose a free software license because they want to make
sure that all the positive things can develop out of it and that we don't go into a direction
where then people are adding other restrictions and then after some time you disable people
to actually work together, but on the other hand, it doesn't mean that you have to fully support
things that you don't approve and you don't have to reply people, you don't have to give them
support, you don't have to do special development for them just because they offer money and all
of that.
Well, the conclusion is that we have drawn back then was we're not going to patent the
algorithms, so when they see what we're doing, they can study what we're doing and they
can just re-implement it and since it's military and they can just keep it secret, you can
just copy our code and I guess a legal fight would be pointless.
One topic I wanted to quickly go into as well, now some shift from I'm sorry, but actually
maybe it's not too far because it's also about others controlling you.
So at the FSFE, we work on initiative, it's a router freedom where we want to achieve
it that the ISP, the Internet Service Provider cannot tell you what router you have to
use at home, but that you can decide yourself.
So from your perspective, is this a huge problem in Europe that the ISPs can just decide
there or for mesh networking or is that something where you think that this doesn't have a huge
impact on the possibility of more community networks?
Well, when you talk about the router lockdown, what immediately comes to my memory is that
I signed a letter to get rid of Tim Berners-Lee and other people against the idea of the Federal
Communications Commission trying to ban OpenWRT and open source.
Can you quickly say what OpenWRT is?
Well, back then, Linksys, they had a router WRT 54G and some folks discovered, hey, this
is using GPL software, so for fuck's sake, you have to publish your sources.
And so they had to comply and they actually did at one point.
So people starting hacking these devices and they were immensely useful because they were
like 800 to 2011 G hardware with two antennas, quite actually quite good hardware.
And so it was possible to liberate the hardware and for like 60 euros, maybe 80 euros, it
was a lot of bang for the buck back then these days, it's like a wireless router, it's
like 10 to 15 euros, the cheapest ones.
So that enabled us to build tri-phone networks at a much higher pace and much higher penetration
and made it much, much more easier.
Some clever guys from the open source community came up with patches and so on.
So it was a big success and thanks to the GPLing and publishing the sources, a project was
created and since it was a project about hacking that wireless router from Linksys and it
was to WRT 54G, the project had to got the name open WRT.
But of course, these days, that's the history and it's now for all kinds of wireless devices
and it's a very great Linux distribution, it's a meta distribution that you learn to
use in order to support your wireless device and not only wireless devices, there's also
going into the Raspberry Pi and so on.
But clearly the focus is on wireless routing technology, that's what they refer to today.
So today, don't think of the Linksys anymore, think of wireless routing technology, open
Linux distribution.
And you were at explaining that you wrote a letter or signed a letter with Tim Bernstein
together?
And others against the Federal Communication Commission of the United States because they
initiated an attempt to ban open WRT altogether from devices in the United States and unfortunately,
the European Commission is following that.
So they're coming up with regulations, they say a virus radius can do damage, they
can do harm and so software freedom has to be abandoned because yeah.
So and of course, why I mentioned this in this context is the argument is that banning
open source would make networking infrastructure more unsafe.
And this is of course a problem that you also mentioned on your website.
One provider has like 1 million devices rolled out and there is no updates from the company.
The company lost interest in updating the hardware.
So you have to use an unsafe hardware that now in times of war with people, even from
state actors, start attacking networks.
This is a clear no go.
On the other hand, if you are ISP and you have the same device everywhere, it's easier
to roll out updates and so on and so forth.
But users should not be forced to obey to a hardware lockdown.
For most people, they are not too involved.
There are not many people on this planet that start to configure their own device, they
just sign up a contract and they just use whatever they get.
And if it's not working, they call the hotline and the hotline tells them to restart the
device and then everything is going to be fine.
I mean, that's also one of the aims there for us in the area of device neutrality that
well, some people might decide that they just use what they get provided.
But on the other hand, that individuals, organizations, sometimes even larger organizations
or even countries that they are able to choose other devices and still be able to communicate
and still be able to interact with those devices and accomplish their goals with that and
that's something with the route of freedom and the other part you mentioned with the
radio equipment directive on the European level where we are also working on where there
are sometimes really strange arguments why it should be prevented to use other software
on radio capable hardware.
It's completely overarching.
The FCC was completely overarching and Europe just follows blindly and the problem is
this is technology from technology device is even not feasible what they're planning
and it will make the planet more insecure.
And it's ludicrous because the Raspberry Pi, for example, is completely FCC approved.
But you can just use the GPI open from the device and you can broadcast whatever you like.
Because modern day technology, modern day microcontrollers, CPUs, they are so flexible,
you can modulate whatever you like at what frequency you like and so this is like tell
the sun to stop shining because it's too hot, it's ridiculous, it's ludicrous.
And that's also a lesson that I think some bureaucrats in the United States and in Europe
have to learn and they hopefully learned it soon.
It's a long way and I think about all the meetings we participated in and the arguments
you hear there, it's something which really requires long, long time to explain it again
and again and then some things happen and then under arguments that you brought before
are then better understood and yeah, but it's yeah, a lot of work to get those arguments
through.
But their idea of control, where does it end, you kind of just stop there.
Then you have to to ban on the electronic components that you buy.
Yeah, you have to limit compilers.
What where does it end, where does it end?
This is like, it's still, it's utterly ridiculous.
And yeah, that's let's hope that there is still a rest of sense in your brains.
That's why it's so important that people like you, that many other people who who joined
us in those, in those discussions there that they continue to talk with decision makers
about that or support others in doing so, so that we get those points across against
the sometimes very big, large lobby from other companies there.
But yeah, I still, so you I'm exploding the amount of time that you want to dedicate to
that story, we have to come a little bit to the end.
But so one, one question I wanted to ask you is with all that work in all that different
countries and for such a long time, what was the funniest, most memorable, exceptional
thing that, that you think about, when you think about like free software?
Well, the most memorable moment was when I reached the lowest south of South Africa in
the area of Cape Town. And I went to a very poor area and there were the blue links
to boxes running, the fry-funk firmware from Berlin. And so that's when I really had to
realize what we had done, what we had achieved, that people living in a township had entered
access thanks to software and ideas that were initiated somewhere here in the Western
world. And I had the idea, I would like, I would love to just travel around and see this
type of installations and maybe do a film about it. That would have been cool, but of course
it would involve a huge amount of traveling. But it clearly was like a very inspiring moment.
I can imagine. Then I have to come to the last question and that's always when I talked
people the same one. So on the 14th of February, we always celebrate the Alafry software day,
where we ask people to thank other contributors, other groups, organizations out there for their work.
And I don't think we have to limit that to one day. So I'm always asking my guests,
are there any developers, contributors, organizations out there who we would like to thank for their work
for free software? Oh dear, there is too many to mention actually. I can only talk about people that I
was working with personally, but already to people whose names I cannot remember because there
are too many that provided me with that Linux experience, with that Linux kernel and all the stuff
that I had access to when I started using redhead Linux and later Slackware.
But in particular, I would like to thank some folks that I have been working with,
like Thomas Lopatic, who was coding with me, OLSR and Batman. He was actually the major coder.
And Sven Ola took it from the from the Berlin Freifold community for his hacks on the WRT-54G,
and especially in the Broadcom driver. Axel Neumann, who supported me in Batman hand later forked
to his own Batman project, Simon Wunderlich. Sven Ekelmann, you know, there's many names to
mention. And I guess they're all driven by this idea to share and contribute, because actually this
is what we humans, in a positive sense, are we all share and contribute, and we create something
that others stand on, and we're already standing on the shoulders of giants, like Albert Einstein
has put it once. Elektra, thank you very much for talking with me about all those interesting
topics. So pleasure. Thank you very much for all the work you did. Yes, thank you.
So this was the software freedom podcast. If you liked the episode, please recommend it to
your friends and subscribe to make sure that you will get the next episode. This podcast is
presented to you by the Free Software Foundation Europe, where a charity that works to promote
software freedom. If you like our work, please consider supporting us with a donation. You will
find more information under fsv.org slash donate. Thank you very much.
You have been listening to Hacker Public Radio, at Hacker Public Radio does work. Today's show was
contributed by a HBR listener like yourself. If you ever thought of recording a podcast,
you click on our contribute link to find out how easy it really is. Hosting for HBR has been
kindly provided by an onsthost.com, the internet archive and our syncs.net. On the Sadois stages,
today's show is released on their creative commons, attribution 4.0 international license.
