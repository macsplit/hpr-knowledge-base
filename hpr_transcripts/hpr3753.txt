Episode: 3753
Title: HPR3753: Some thoughts on "Numeronyms"
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3753/hpr3753.mp3
Transcribed: 2025-10-25 04:56:54

---

This is Hacker Public Radio Episode 3753 for Wednesday the 21st of December 2022.
Today's show is entitled Some Thoughts on Numeron Eams.
It is hosted by Dave Morris and is about 12 minutes long.
It carries an explicit flag.
The summary is aka Alphanumeric acronyms, Alphanumeric abbreviations or numerical contractions.
Hello everybody.
This is Dave Morris for Hacker Public Radio.
Welcome.
I'm going to do a quick show today, hope is quick anyway.
We're getting very low on shows so please step up if you can.
This one is about Numeron Eams, it's a word I discovered recently and I've called
it some thoughts on Numeron Eams, I'll explain what they are in a minute.
So what prompted this was a discussion with Mike Ray about accessibility and he was
using the term A11y, which we all, well many of us were puzzled by, I certainly was,
and we're pronouncing it Ali and things of that sort.
So I've been wondering about these.
These are built from, these are the Numeron Eams and they're built from the first letter
of the word followed by a number and the last letter where the number represents the
count of letters between the start and end.
So accessibility is A11 that is Y, but I found this A11y thing very, very clunky, it's
much easier to say accessibility than is to say A11y, looked it up, just recently found
the Wikipedia article and as I say it's called a Numeron Eam, so a name with a number in
it.
They may be referred to as alphanumeric acronyms or alphanumeric abbreviations or numerical
contractions.
You can see all of those being contracted, eh?
The Wikipedia points out that these types of abbreviations are almost always used to
refer to their computing sense.
So G11n for globalization and that's in the context of computing, not in the general
context.
Anyway, this thing, this abbreviation method, jared with me a little bit and except me
thinking, fully sympathise with the motivation behind using A11y to mean accessibility.
I do find it old and counterintuitive, often find myself pondering the acceptability of
this type of abbreviation.
How many other words in common English fit patterns like this I wonder?
What a few I would expect.
How does this affect the admissibility of such abbreviations?
Not only they adventurously strange to my simple brain, but I find them to be aesthetically
displeasing.
My experiments with the standard Linux dictionary, looking for words that fit this pattern,
I find firmly supportive of this view.
I described this experiment later.
Algebraically it is to be expected there are many dictionary words of 13 characters which
start with A and then with Y, looking at them allegorically such numerous names can
vary little meaning except in very limited context since the motivation seems to be to reduce
the need to type long words.
Alternatively they were accepted by data entry software and expanded automatically, but
a case could be made for applicability, but only one word could be assigned to a numerous
name.
In my mind there is a certain artificiality in the use of these abbreviations.
So you might wonder what I was going on about in the last bit, a strange running-bling
section.
This is my admittedly small joke to try and use as many of the words that match the A11Y
pattern, which I made total sense, so there was a certain element of sense.
So I've transformed that paragraph and put A11Y in all the cases, and I'm not going
to read them out, maybe it should have done, but I don't think I want to.
But you can look at it, it's in the notes and you can see what it looks like.
So being a computer programmer and enjoying writing in bash, I had to write a bash script
to do some of this stuff.
So I've given an example, it's just a three line thing, which is basically a while loop.
And what it does is it scans the file user-shared-dicked words and picks out words which match
the A11Y pattern.
In other words they need to start with an A and have 11 letters after that and then
a Y and then that's it.
So the little script, which is actually just a sort of command line, I think you type
in one line, but I've laid it out, so it's easier to read.
It writes the word that it's found and the numerator and num that's generated from it,
which it computes, so it's unnecessary in this case because they all generate the same
numerator.
I did this way because I want to apply the algorithm to other words.
There's a process substitution which uses GREP to scan the user-shared-dicked words
file, and it actually removes all instances or it doesn't return any instances that end
in apostrophe S.
It seems to be quite a lot of them there, but I've said this before, not quite sure why.
Then it pipes that result to another GREP, which looks for this pattern of A, followed
by 11 letters and a Y, and that is being fed into a Y loop, which reads into a variable
called word, and then the contents of word are printed out using print F, and then the
first letter of that word, the num, the count of the letters in the word minus 2, and then
the final letter of the word, and this all uses bashes quite neat character string manipulation
features, and also the ability to count the length of a other word.
So I also wrote one which looks for all words which are 8 to 20 letters long, picks 20
of those at random, and then applies this same numeronym algorithm, and it's pretty
similar except that the process substitution at the end is so different, it's looking
for words of 8 to 20 characters in length, and it uses the Schuff command to get a random
selection of 20 out of this long. I've used this trick in loads of my bash episodes,
so nothing new here really. I give an example of some of the words, non-political turns out
to be N, 10, L, and optimizations is O, 11, S, and so on, you know. Have fun with this
if you find it musing it musing me, so that's why I did that.
So in researching for this episode I came upon an extremely long word which I found on Wikipedia,
and it's a fake word, it's a made-up word is meant to represent some sort of lung disease,
but it's not a thing that actually exists, and I'm going to try and read it and give myself
a sort of crypt sheet to do it with, but I've also linked to the spoken version of it on Wikipedia,
which incidentally I disagree with it, no mind. The way I pronounce this is Numenol,
pertaining to Nulums, ultromicroscopic, very very tiny,
silico, relating to silicaceous dusts and stuff. Volcano, relating to volcanic ash,
cogniosus, Numenol, ultromicroscopic, silico-volcano, cogniosus. So I think this is made up for a
quiz or something. I applied the algorithm of turning it into a numero-nim, and it turns up
with P43s. So here's my conclusion then, numero-nims don't be able to do it when you're already
gathered them. Notwithstanding my little jokes above, I know the proposal is not to replace all
longer words with them, this would cause chaos. However, as a means of denoting long words, this
seems wrong. I assume that their evolution occurs like this. We use a word often in a particular
context. The word is long and not easy to type. With a sake of speed and to avoid typographic errors,
we make a numero-nim. We tell the world that i18n, as an example, means internationalisation.
Those in the know have no problems with it, but many people who are encountered later,
encounter it later, puzzle over it, as I'm doing here. It seems fair to say that this obscure
process has fulfilled the need to abbreviate this awkwardly long word, in the limits of the
context where it's evolved. Whether it's not conveyed information very well, it has mainly
benefited those who write or read documentation relating to the context. It's hard to speak
it is basically the thing. Many editor and word process replications have the facility of expanding
abbreviations like this in my experience. I use them all the time and there's an abbreviation
command where you can say use this sequence of letters to signify this phrase or word or whatever,
and I've got loads of them. There's a very nice plug-in which does a really good job,
so I can point you to if you're interested. I'd rather use this than embed the coded abbreviation
into the language. On the other hand, I'm okay with the pneumo thingy being replaced by P43s,
so I must just be, I've still got a lot of people, but I must confess that I had a similar
reaction to XKCD's exercise in using a limited number of words to explain things. He did a thing
called Upgoer5, which explains the Saturn 5, which he says is explained using only the
ten hundred words people use the most often. He might disagree with me about what I'm saying here,
feel free to add a comment to the show or, indeed, record a show of your own. In my links,
I have included all this stuff that I've mentioned, and also one of my favourite fake words,
which is the Welsh village, which I used to be able to pronounce very, very, very long,
and abbreviate to L64H. I'm not going to try and pronounce it. I can do it if I'm,
if I'm going to give myself enough time if I run up to it slowly, but I've been there,
and one of the, it's quite a nice little village in the north of Wales on the island of Anglesy.
You go into the station, you can buy a platform ticket, which is just a thing that used to happen.
You want to get on a platform to wave by to people, and it's extremely long because it's got
the entire name on it, and this was, this name was created in order to get more tourists to visit
, apparently. So, which, you know, the problem? It's the second longest place name in Europe,
might be. Well, the world, I don't know, check the Wikipedia page I've linked to.
Okay, that's me, then, I've finished, and looking forward to any feedback you might have. Okay, bye.
You have been listening to Hecker Public Radio, at Hecker Public Radio, does work.
Today's show was contributed by a HBR listener like yourself. If you ever thought of recording
broadcast, you click on our contribute link to find out how easy it really is.
Hosting for HBR has been kindly provided by an onsthost.com, the internet archive, and our
sims.net. On this otherwise status, today's show is released on our creative commons,
Attribution 4.0 International License.
