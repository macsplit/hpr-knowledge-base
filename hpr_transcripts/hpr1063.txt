Episode: 1063
Title: HPR1063: Freedom and Licensing
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1063/hpr1063.mp3
Transcribed: 2025-10-17 18:12:56

---

Hello, this is Ahuka, and I'm recording another interesting, at least I think it is, episode
of Hack Republic Radio.
And this one, I want to talk about something that was a fairly recent controversy and
some thoughts that came out of it for me.
The controversy here started with a podcast called The Linux Action Show, and I don't
know how many people are familiar with it.
It has a certain level of popularity.
And I listened to an episode that I was very interested in because the guest on this
episode was Richard M. Stalman, the famous RMS.
And it ended up generating rather a lot of controversy because of some serious disagreements.
So I'm going to talk a little bit about what those disagreements were and then start
drawing some conclusions and talk about what that means in terms of licensing as a whole.
Because I think there are some fairly fundamental issues here.
For instance, just today I was listening to yet another podcast that many people on
Hack Republic Radio are familiar with because about once a month they get played.
And that's called The Sunday Morning Linux Review.
And I listened to yesterday's run and the same issue came up again about licensing when
there was a rant by Matt Enders on why GPLV3 is horrible and will kill your mother and
things like that, which by the way I wrote a very long response to him on the website
pointing out that, well, you didn't really think this thing through very well.
So I'm going to develop this a little bit more here and probably with Matt, Matt's a friend
of mine and, you know, he'd be the first one to say that he welcomes disagreement if
it gets a good discussion going.
So what was the problem that started all of this on the Linux action show?
I mean, they had Richard Stallman on.
They get into a discussion and basically what happened was that Brian Lunduke, one of
the hosts, and in full disclosure, I'm going to say he's one of those people that I just
grit my teeth whenever he talks.
And so there's probably a little bit of bias there, but, you know, be that as it may,
at least I'm warning you at a time.
And his problem was that he writes proprietary software.
Now, I guess, you know, in a free world, you're allowed to do that if you want.
The problem was he kept trying to get Richard Stallman to somehow say, well, that's okay.
And my first thought was like, dude, have you ever heard Richard Stallman talk?
What on earth were you thinking?
Richard Stallman considers proprietary software evil.
He thinks there shouldn't be any.
He thinks, and you know, you may agree or disagree with that premise.
I happen to be somewhat in favor of it.
In fact, I'm proud to be a member of the free software foundation.
I support that.
I think that what Stallman does is very important.
So, you know, I don't know why Lunduk had this strange idea that somehow Stallman was going
to give his blessing to this.
But in fact, he didn't.
He just said, look, you know, proprietary software is evil.
If you're writing proprietary software, find something else to do.
All right.
That's what Stallman will say under those circumstances.
He's very consistent, you know.
And Lunduk cut it, but you know, that's how I feed my kids.
And then he turned this into Richard Stallman wants to starve my babies, which is not really true.
And not particularly relevant.
I mean, basically what Lunduk wanted was equivalent to talking to the Pope and trying to talk
him in the saying, you know, that Ten Commandments thing, totally optional, you know, no big deal
one way or the other.
It just ain't going to happen.
So, you know, if you heard that Stallman is trying to kill Lunduk's children, you know,
that's real bad reporting on this.
What he basically said was, don't make a living writing proprietary software, because if you
do, you are participating in evil, all right.
I mean, the only question that at this point is, do you agree with Stallman that writing
proprietary software is evil or not, you know, if you disagree, then obviously you and
Stallman are not on the same page.
But of course, one of the things this gets turned into is this whole, oh, Richard Stallman
is against freedom because he's not supporting what I do.
And that got me thinking, that's a very, let's say, you know, a fourth grader would think
about freedom that way.
One hopes adults get a somewhat better idea of it than apparently Mr. Lunduk has, because
that's not understanding at all how freedom in that sense works.
And, you know, for someone to say, Richard Stallman is against freedom is kind of just weird.
So what's the real issue here?
When you talk about freedom, I think the real issue is that freedom is never an absolute,
okay?
If you're living in a society, you have a certain amount of freedom and that amount of freedom
you have is circumscribed by the effect on other people, okay?
Now in the United States, we have a saying that comes from a Supreme Court Justice Oliver
Wendell Holmes, who said, you do not have the freedom to falsely shout fire in a crowded
theater, all right?
If the theater is crowded and you shout fire, what's going to happen?
Well, there's probably going to be a rush for the exits.
Someone gets trampled, you know, people could die.
And if you did that falsely just for kicks, they say, no, you can't do that sort of thing.
That's a limitation.
So there is freedom of speech in the United States, but there are limits on that.
Another legal scholar put it a slightly different way.
You're right to swing your hand, ends where my nose begins, okay?
So if you take a look at legal cases that argue these say, very often legal cases are about
where you draw the line between two different freedoms.
And a line frequently has to be drawn just by the very nature of it.
So for someone to just say, well, I'm in favor of freedom or you're against freedom or
it's a meaningless statement.
You have to define a lot more carefully what kind of freedom you're talking about and
in what context before you can make that kind of a statement.
So to talk meaningfully, you have to say, who's freedom in what circumstance?
And when you do that, someone is going to say, but you're taking away my freedom to, well,
whatever.
Yes, we are.
And that's the point.
Does my freedom to breathe clean air trump your freedom to pollute or vice versa, right?
That's the kind of conflict.
So freedom is always about those kinds of conflicts.
So in this case, it was the freedom to make a living by writing proprietary software versus
the freedom of the software user to use software that gives us the four freedoms, right?
That's what the conflict was about.
And you know, RMS never said he was in a position to actually stop Lunduke from doing it.
He just refused to say that it was legitimate.
So in essence, the real thing is Lunduke saying, oh, RMS called me names.
All right, get over it.
But it's worth looking at this carefully because there is a real issue here that is worth exploring.
And I think the issue is whether we should be more concerned with the freedom of the software
user or the freedom of the software producer.
And let's always understand there can and frequently is a big conflict between those.
Where is RMS?
Side of the user.
No question about it.
RMS has devoted everything he's done to maintaining the software, the freedom of the software user.
Lunduke was arguing for the freedom of the software producer.
All right.
Now, because of how these related, you cannot maximize both of those things simultaneously.
If users get all the freedom, there's nothing left for producers.
If producers get all the freedom, there's nothing left for the users.
That's the essential conflict here.
So when we're taking a look at this, you know, think about all rights reserved, and now
that's copyright, but you get the idea, if all rights are reserved to the producer, there
is really, scarcely, any rights left to the user.
And a lot of software is done that way.
All right.
When you get a software with an end user license agreement and says, these are the circumstances
under which you are allowed to use this software.
These are the purposes we will let you use it for.
Oh, by the way, you don't own your software.
You're only licensing the right to use it under conditions that we control da da da da da.
You have a situation where the scales have been tilted very much towards the producer.
And the freedom of the user has been minimized about as much as possible.
That's not what free software is about.
As I understand it, it's not what free software is about as the free software foundation describes
it.
It's not what the four freedoms are about.
And that's why I think licensing, the question of licensing really comes up because that's
where we see where the line gets drawn, how is the software licensed?
So in proprietary software, the rights of the user are as minimal as the companies can
get away with, okay?
I think that the evil really started with this idea that you don't own software, you only
license it.
I was the beginning of the end right there.
They can revoke your license to use the software any time they decide it violates the license.
They can prevent you from selling it to someone else when you were done.
There was a very famous case about that that said, no, the software producer can prevent
you from doing, in essence, this is in the United States and I realize every country has
their own legal system, I'm just going to say, I only know what little I know because
I'm not a lawyer.
What I know is about the United States, and there is something called the first sale doctrine.
And the first sale doctrine means that we can have used bookstores.
All right, if I buy a book, I've read the book, I'm done with it.
I decide, okay, I don't really want to keep this on my shelf anymore.
I have the legal right under the first sale doctrine in the United States to go ahead
and sell it to someone else, to maybe to sell it to a store that specializes in used
books or sell it to another individual, however I want to do it.
That's a legal right.
And in the case of software, we've had legal decisions that say that does not apply with
software.
There is no first sale doctrine with software.
So if you buy an expensive software package, you use it, you decide, you know, this isn't
really what I want, or I don't need it anymore, what have you.
You are legally prohibited from selling it to another person, okay, that's, yeah, that's
evil, okay.
So you know, when Richard Stallman says, proprietary software is evil, these are the kind of things
we're talking about, okay.
I think it is evil.
I think we should fight it.
And the answer that he and some others came up with was the general public license.
Currently in version three, you know, and that was my whole disagreement with Matt Enders,
was about the GPL version three.
But the whole idea of the general public license is to push the balance in the direction
of the rights of the user.
And that is defined by what are called the four freedoms.
Freedom zero is the freedom to run the program for any purpose.
All right, proprietary software says you're going to only run it for the purposes.
We have specifically allowed you to do it.
Freedom one, the freedom to study how the program works and change it so it does your computing
as you wish, which implies you have to have access to the source code, or you can't do
any of this, proprietary software does not allow that.
In fact, you know, they will put in things that say attempting to reverse engineer as
a criminal offense, and you'll be prosecuted, blah, blah, blah.
The freedom, freedom number two, the freedom to redistribute copies so you can help your
neighbor, proprietary software, absolutely, you cannot do that.
And then freedom three, yeah, were geeks, zero, one, two, three, those are the four freedoms.
So freedom three, the freedom to distribute copies of your modified versions to others.
And so by doing this, you give the whole community a chance to benefit from your changes and
again, access to the source code is really a precondition to being able to do any of this.
So let's look at these as opposite ends of the spectrum, all right?
On the one hand, you have proprietary software, think Microsoft or a goal, Apple, any of
these places, proprietary.
All the rights are on the side of the software producer.
Then think of free software in the free software foundation for freedom's sense.
Probably all of the rights are in the hands of the user, right, so the use of the ends
of the spectrum here.
What's in the middle?
That's where it starts to get interesting.
In the middle are what are called, quote, less restrictive licenses.
People say this with the implication that, oh, these are even more free than the GPL.
And that repeats the fallacy of thinking of freedom as an absolute without putting it
into context, okay?
What is less restrictive is it is less restrictive on the part of the producers.
It doesn't do anything, in fact, it takes freedom away from the users when you dig into
what's actually going on here.
So what the, you know, what the GPL is doing is it is restricting software producers for
the benefit of software users.
If you take those restrictions away, what happens?
Well, you start moving the balance back towards producers.
And, you know, that is going to change this balance, a classic example of this.
Apple took important parts of BSD to form the basis of their OSX operating system.
They could do that because BSD has a very unrestrictive license.
So how did unrestricting Apple work out?
Well, Apple was thought that this was absolutely wonderful.
They could do anything they wanted with this software.
And what did they do?
They created the most tightly controlled locked down operating system imaginable.
They took away every bit of user rights they possibly could.
And the BSD license said, hey, if you want to do that, no big deal.
Go ahead.
Take away everyone's freedom.
We don't care.
So when I hear people talk about we need less restrictive licenses, they say, why?
Whose benefit is that?
Kui Bono, very important legal principle, you know, who benefits?
Now, you may be of the opinion that what's wrong with the software market is that companies
just don't have enough power these days.
You know, on the planet I live on, I'm not seeing that.
So I thought it was very interesting.
I read in Linux Format Magazine, which is one of my favorite magazines.
I read an article recently with Michael Meeks.
Now, Michael Meeks is one of the major people in the Libre office community.
Here to that, he was in the open office community.
And so we all know about how son was sold to Oracle.
And Oracle immediately tried to take control of everything.
In essence, pissed off a whole bunch of people.
And so the Libre office project was created, forked the code from open office.
The open document foundation was set up and, you know, I thought that was important.
I gave them a few bucks to help get that thing going as well.
And they set up this project.
And one of the things that I think is very interesting is to look at what's happened.
The Libre office project has been moving so much more rapidly than open office ever did.
There's a lot of energy there.
The number of developers is increasing dramatically.
More and more code is getting written.
Bugs are getting fixed faster.
Well, I think we all see that.
I'm going to stipulate that should just be a matter of fact.
But why is there so much more activity?
Why is there so much more energy?
And what Michael Meeks said in this interview was, it's because we moved to the GPL.
Now Libre office is not the product of a company.
So they don't have the kind of incentives that a company has to lock everything down
and secure their own advantages and everything else.
It's an open community project.
And what he was saying was, the developers, the people who write the code, do not like
to be in a situation where the code they use gets taken over by a company and locked
up and the user's rights are taken away.
They don't like that sort of thing.
And the GPL prevents it.
And that was, I think, very important.
If I were a developer, and I've said before, I'm not a developer, but I think it makes
sense.
If I was one, and if I had worked hard on software that I wanted people to use freely,
I'd want to know that it was in a license that guaranteed that freedom through all derivative
works.
And that's what the GPL does.
That's why I think the GPL is so important.
And I think that's why so many proprietary software creators hate it so much.
You're just fine with something like the BSD license that says, hey, take the code,
do whatever you want with it.
The GPL does not allow that.
Now is that a big deal?
You know, if you don't like the terms, don't use it.
I mean, isn't that what proprietary software people say to us all the time?
Hey, if you don't like the terms in the ULA, don't use the software.
You don't have to use Microsoft Office.
You don't have to use Adobe Photoshop.
You don't have to use any of these things.
If you want to use them, you have to abide by the licensing.
Okay?
And that, of course, is why Stolman used licensing as his vehicle to preserve freedom here.
You know, when you hear these people talk about, oh, the GPL, it's like this virus that
attaches, you know, what they're saying is we would love to steal this and use it for
our benefit and this license gets in the way.
And I say, wonderful.
That's exactly what we need.
So they talk about cancer and communism.
And I want you to think when you hear that, whose interests are they protecting?
Are they protecting yours?
Think about that.
Well, that was my little rant on freedom and licensing.
I hope you'll find it interesting.
This is a hookah and I'm going to, once again, mention, as I have been, that Ohio Linux
Fest is open for soliciting talks of various kinds.
And our call for talks is right now we're looking for anything involving free, open software
of any kind, not just Linux, could be BSD, could be any other packages, Apache, Esterisk,
you name it.
Open hardware.
We're very interested in anything involving open hardware.
All implications of all of this stuff might be interested in that.
We're looking for all levels of expertise.
We want some talks that are at the beginner level.
We want talks that are at the advanced level and everything in between.
We're looking for men and women, young and old, the more variety, the better.
And the more talks submissions we get, the better job we can do of putting out a roster
of high quality talks at the end of September when we have our 2012 Ohio Linux Fest.
So I'd encourage you, if you have anything that you think we would be interested in
or that you just want to have an opportunity to talk about, please submit.
I've got the URL in the show notes and I've also put URLs for all the other things we
talked about in this particular episode.
I've seen the show notes, so I encourage you to take a look at that.
And with that, this is Ahuka signing off and don't forget to support FreeSoftware.
You have been listening to Hacker Public Radio at Hacker Public Radio.
We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by a HBR listener by yourself.
If you ever consider recording a podcast, then visit our website to find out how easy
it really is.
Hacker Public Radio was founded by the Digital Dark Pound and the Infonomicom Computer
Club.
HBR is funded by the binary revolution at binref.com.
All binref projects are crowd-responsive by linear pages.
For shared hosting to custom private clouds, go to lunarpages.com for all your hosting
needs.
Unless otherwise stasis, today's show is released under a creative comments, attribution, share
a line, free those own license.
