Episode: 3631
Title: HPR3631: HPR Community News for June 2022
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3631/hpr3631.mp3
Transcribed: 2025-10-25 02:33:12

---

This is Hacker Public Radio Episode 3,631 from Monday 4 July 2022.
Today's show is entitled HPR Community News for June 2022.
It is part of the series HPR Community News.
It is hosted by HPR Volunteers and is about 117 minutes long.
It carries an explicit flag. The summary is,
HPR Volunteers talk about shows released and comments posted in June 2022.
Hello everybody, my name is Ken Fallon and you're listening to another episode of Hacker Public Radio.
And this is Community News for June 2022. Join me this afternoon is.
Hello, it's Dave Moritz, bad penny turning up again, all that stuff.
Excellent. Excellent.
HPR Community Podcast where the shows are contributed by the hosts themselves
are rotating team of volunteer hosts very much like you if you're new to podcasting or old to podcasting.
And have been listening to HPR for a while. Why not press record on your device of choice?
Tell us a little bit about yourself, your history, how you got to be listened to HPR
and go to the upload page and submit your show.
Because Dave, as you can see from the new hosts section, we haven't had any new hosts last month.
Indeed not, indeed not. You'd think they would be clamoring to get on board and do this wonderful thing.
But unfortunately nobody was available in the past month.
Looks very good on CV, by the way, podcaster, spreading the technical knowledge out there.
Yes. First thing, you know, can I see any of your work online?
There you go, your own page.
Lease. Lease. Persons. Okay.
I'll just HPR. HPR we've explained to say is Community Podcast volunteer,
sort of all your bar camp if you will.
And Community News is where the two janitors put down their maps,
come out of their official closet of the janitor closet,
and have a quick chat about the shows that have been posted over the last month.
And discussion of any other news that has happened here at Hacker Public Radio Towers.
So we start Dave with battling English.
Will this guy stop submitting shows?
Yeah.
This was Dave Morris, confusing home, home of phones,
this understanding words from other countries and egg coms, egg horns.
This is, this although I didn't know Dave, and I found it very interesting.
If you're into language and stuff, particularly English, I mean,
but all languages are quite fascinating in the structure,
then it's a potentially interesting subject to I find it.
So I'm sharing it. I hope other people find it so as well.
I did remember the word punters I've never heard it before.
And my first year in third level,
the first task, one of the guys, one of the lecturers said,
many punters say, what the frack is a puntersweet?
I had to look it up.
Good old time.
Oh yes.
So we got some comments.
Shall I start?
You start here.
I'll do two, you do your responses.
S-T-A-C-H-G.
I'll just call it AF.
That would be pronounced Dave.
Well, I would pronounce S-T-A-C-H-E as stash, as in an abbreviation of mustash,
but I don't show it.
That's what this person meant.
And AF means various things depending on you.
Well, you come from your background and things.
You won't go into it.
No, the egg horn, that's why we have urban dictionary, your friend.
By the way, people, if you hear a washing machine in the background,
that's something that's running with your setup,
which is definitely nothing to do with me doing washing here in the background.
So it's definitely on your side.
I would have put my washing on if I'd known, but there you go.
The egg horn that gets me, the one that always gets me when people use this,
is chomping at the bit as opposed to what originally was chomping at the bit.
While chomping isn't technically incorrect, it's not as scriptive in my book.
Windigo says, egg horns, I love that the TTS engine pronounced as egg horns
to add to the confusion.
Smiley face.
And you responded?
I responded to the chomping-chomping thing.
Hi, I was taught that the expression used chomping where chomping ran into the ramp in British English
and that it was describing a horse grinding its teeth on the bit in its mouth in frustration.
When researching a little, I find chomping is specific to livestock.
Mostly horses, I think, and described noisy chewing of fodder.
There you go.
I did not know that.
Something I was brought up with because of a lot of horses around when I was a kid.
Back in the day, that was before the steam engine did it.
Absolutely.
Yeah, yeah.
They were pulling steam engines in your nose.
That's right.
Oh, yeah.
You found the steam engine a little later or last.
And I said to Windigo, this shows that the word egg corn must have originated from some robot with slightly bent TTS.
Then I went a bit insane and said the robot in my head says, by the itching of its corn, because I thought it said itch corn,
the TTS makes me fuller.
So I'm glad I didn't share that though.
Yes.
It's a nice voice, but it really does some weird stuff when it reads out season one episode one as a word.
It does lead to it.
Yes.
Yes.
I don't know how it is.
Yeah, it's really strange.
So the following day, we had Linux in those operations system level virtualization at Martin's faith, which was the most rundown actually of, you know, various different types of virtualization options.
Yeah, there's a lot of gems in here.
Yeah, there's some good links actually.
So if you missed out on the speech a bit, we don't tend to do because the levels are a bit odd for my ears.
Then the links are great for going and doing further research.
And the word crack.
That can get you in trouble if you're not careful.
Crack was mighty.
Oh, loads of crack.
If you want great crack, go to your man.
Yeah, very context dependent.
Ah.
Okay.
Mechiotronic says, you know, it's Germany and Russia.
Russia and Germany would be a powerhouse to hell with NATO Afghanistan and Iraq, Libya.
How many more victims are there going to be while the cover of the evil west goes along with it?
Now, someone said that that was spam, Dave.
Yeah.
Yeah.
It certainly has all the hallmarks.
Yeah, we let it through on the grounds that they did mention Russia and in those things.
Okay.
Moving on.
Do you want to do the next one?
Because your washing machine has just gone into the spin cycle.
I was just wondering what was happening.
Russian machines are amazingly noisy things.
I think mine is noisier than yours, actually.
But anyway, so we're at three, six, ten, which is a hooker's show.
Yeah.
Yeah.
Yeah.
So that's he's talking about DOS, DOS wild cards and final attributes here.
Exactly.
Yes.
Yes.
I thought maybe we'd got off track somehow.
No, it's just the washing machine getting in the way.
Just washing machine.
Yeah.
On your side, obviously.
I'm just very good at doing washing machine impressions.
That's what it looks like.
So yeah, the, I had actually personally forgotten how DOS did its final system and wild card stuff,
which was pretty similar to what a lot of operating systems are doing around that time.
Because I can remember dealing with, I won't list them, but one or two like,
boroughs, the boroughs mainframe had the most dreadful operating system for that sort of stuff.
And DOS was probably a little bit better in some respect.
But they were all fairly, fairly awful in those days,
because they didn't have the power to do anything clever, I think.
But yeah.
Yeah, but it was kind of manageable, you know.
It was, it was usable.
Yeah.
Yeah.
And they, you know, now if you look at it with that knowledge,
and you look at the options such as something like LS or whatever,
pages of on pages of different options,
probably that you open type man bash into the console.
Not an otherwise thing to do unless you got about a week or several weeks.
Yes, yes.
I did use an operating system in the 70s on an ICL system,
where if you had the right sort of graphics terminally thing,
you would type a command at it.
And this was the sort of CLI-ish thing.
You typed a command and then you sort of went,
ooh, I don't know, all the options are.
And it would produce this massive sort of web page,
except that hadn't been invented yet,
of all of these things that you could then scroll up and down and click on and stuff,
which was, which was lovely if you've never seen the command before.
But once you had, then you didn't want that at all.
I didn't, anyway.
Yeah, it's a very old, very quick image.
It was, yeah.
It was an interesting approach, anyway, I thought.
So the next day was HBR Community News,
and there was no comments on that.
I was wondering why there was no comments,
because we split up the show into three, actually.
We did, yes, yes.
We did quite a lot of show last week in pieces.
And the day after that, we had Lurking Pryon,
with who is Evil Steve Part II.
So this is episode four,
and picking up from the last episode,
the type of actors.
This is actually a very interesting way to look at attack, attack on you.
So, very good.
Yeah, yeah.
I certainly find this one interesting,
and the sort of information that we'd give people
who are not really able to speed with this stuff,
is excellent.
So, man buys cheap auger.
What was that?
Had he run deck?
That was all.
I had to do my head.
Had he run deck chair.
And I make notes about buying cheap loan chair
and trying to get a part for a place.
And the window says,
do you run deck chairs?
Funny enough, I grew up in the south,
and of that word, mountains in New York,
I helped to do some IT work
for our county's health facility retirement home,
which had been a tuberculosis hospital previously.
I had no idea the chairs were associated
with tuberculosis treatment.
It's bizarre that shipping wooden chairs
halfway around the world makes economic sense,
more economic sense than building them locally.
But I commend you on trying to prevent extra waste.
Thank you for the episode.
Yeah.
Good, good stuff.
And a little bit of what was coming in there, did.
Have I?
Oh.
Yeah, it's gone.
Oh, okay.
That's cool.
So, I just leaned forward maybe.
Yeah, but it bounced off the shiny head on the microphone.
Anyway, yeah, I think I've got background noise just to be on
just to follow that link.
I had a washing machine.
I should maybe not have the washing machine on my desk.
I'll move it next time.
Yeah, I'll be fine.
Anyway, a DNT says re-adder on deck chairs.
Yeah, it has to be somehow it makes the economic sense
to the perhaps only if you don't account for the born by future generations
and underpaid Vietnamese workers,
account for that born by a future.
Anyway, honestly, if they had mentioned the option
would involve around the world,
around the world shipment,
would have tried either to repair it or make a replacement part myself.
How naive of me to think this was going to play out any different
thanks for listening and commenting.
Yeah.
Good point, good point.
Yeah, but I was thinking, where is this going?
Okay, obviously.
Yeah, I was just a surprise.
I'm very nice.
If there was any doubts about, you know,
what it is.
What it is,
what it is, a cheap launch here of interest hackers.
It is.
It is very much.
Yeah, yeah.
Very much.
Yeah, so that whole business of what they call it,
outsourcing on to some term that they use,
where they basically take the entire production system
and stick it somewhere that's ultra cheap.
And then, but then you get caught in ships being stuck
in the Suez Canal and all that sort of fun stuff.
Yes.
And after your political thing is changing
and then all of a sudden you don't have the only supplier of X
in the world.
Anyway, that's something for another short, Dave.
It's worth just.
You know, we don't talk politics here.
No, no, no.
People don't talk politics on the whole.
But it's worth maybe just waving that little slip of paper
in front of anybody you want.
Any one of you wants to do a show on the topic.
Cool.
There are only on the notice board there.
Request to show notice boards.
Everything you want to know about pecs part of the joy of pecs.
What it is and how to use it.
There's a lovely comment about this later on.
So we'll skip over.
There's a lovely comment about in episode three about this.
So we'll skip to that one.
Yeah, yeah.
There's some very, very comprehensive notes there.
The title got a little bit out of hand,
but because we only have a limited field for that.
But yeah, good stuff.
And I like all the illusions to certain certain publications
that have a word in a number of rounds of pecs.
Yes.
Is that discreet enough?
Yes.
The following day, I am a troll and I'm trolling Hitler.
That's from a Minecraft song.
I am a dwarf.
I'm an eagle.
Diggy, diggy, diggy, diggy.
Half and half across that one, though.
Yeah, yeah.
In the early days of Minecraft.
Yeah, yeah.
So this was about the...
Windigo says disappointing.
This is about the fact we got trolled.
Disappointing.
I'm disappointed to hear that someone took it upon themselves,
deliberately, waste the time and resources of the volunteers
that keep HPR running.
If anything, this episode has highlighted just how outstanding
all of you are.
Thank you all, gentlemen.
And our host for keeping things running.
Very welcome.
We expect a package to be sent down here.
A Christmas time into the general's reclosses as normal.
Rounded.
You know, bottled shit.
So FXB says a troll is a troll.
Kent, David, I'll continue to do stellar job keeping HPR
in good order and making it a shiny example of cooperation
and information sharing among several intersecting communities.
I do however have to stress there is nothing whatsoever
constructive in the motives of whoever submitted the shows
and questions as the topic of this show.
What I'm gathering from this show, and I could be wrong,
is the issue making the shows submitted problematic,
both eviculy and potentially even legally for HPR
and its volunteers stuff.
The persons submitting such content are in no way shape
or form a guardfly as they appear to have claimed.
They're just a troll.
The term guardfly used in the intended context is very specific.
A guardfly is someone who asks potentially upsetting questions
usually to authorities at their own risk in the pursuit of that truth.
Tempting to put others, i.e., the HPR staff at risk,
by using them as a platform to spread what is essentially hate speech,
be it in seriousness or just a cause upset is just trolling.
Nothing more, nothing less.
Ken and Dave are rightfully careful in how they discuss the situation.
I do believe, as far as HPR I show it,
but it's concerned they have taken the right approach.
Well done.
Super, and Nick, the electronic says,
good bullshit.
The things I posted were matters of opinion for sure.
I'm evil and engaged in a hate speech to destroy the platform.
Okay man, there was no hate speech
and anything I posted, and you know it.
So the following day, we had the second part,
filling free slots from the reserve queue.
You can now submit yours to the reserve queue for free slots
that are not filled on time.
And this is another thing about feast and family we discuss as
last community news as well.
A feast and family nature of the queue,
so that if there are free slots, we'll take them from the reserve queue.
And emergency queue would be reserve queue.
If there's a free slots, it's not, why am I saying this?
We discussed the last week.
Last month.
We actually had one show from the working client,
and the medastink.
How long are we going to do this?
Yeah, yeah, yeah.
It needs another parallel track effectively,
which is desirable, but adds a little bit to the background
genitorial work.
Well, the thing is we put in text-to-speech stuff at the beginning
so we can't really process them.
The easiest thing to do now is just take them from the
upload directory and put them into the reserve queue directory
and make that kind of available somehow.
Dave, this is on the spin cycle.
Give me, I'll just grab a coffee and we'll let truncate
silence students work if you got five minutes in.
Yep.
So we probably just end up moving them over,
but I was also thinking perhaps we should have like a,
I don't know, reserve.
I still haven't thought fully how to make it obvious in the
upload form.
Do you just press a button like intro-outro where you just say
this is a reserve show or that you can go schedule the show any
time you like?
Okay, we'll see.
Yeah, given that you start by choosing the slot to get to the
form, you want to be intercepting it earlier on ideally,
but that means writing a different form presumably.
Yeah, and also what I would like to do is have,
say you upload a show and you're uploading in batches
that would have recommended slots that would be two weeks out
or on the week that would be, but was it?
Let's do the reserve show first.
Yep.
Move on.
And the following day two factor authentication by Lurkin
Pryon and there was a comment from a stash off Google
Authenticator.
It's probably been a while since you've used Google Authenticator
for two factor authentication, but the app now does allow for
transferring between devices.
Still don't have a backup option that I've found, but at least
now you can move the rotating keys between devices.
Also, a recent update obfuscates all the code until they have
tapped.
So if someone is peeking over these shoulder, they can see all
of the codes just the one being used.
Okay.
Lurkin Pryon says Google Authenticator improvements.
It's good to see that improvements have been made.
I really liked Google Authenticator when it came out.
I'm hoping this space will see improvements as the migration
to passphrase becomes more ubiquitous.
On the flip side, Google doesn't make money off Authenticator.
Thank you again for the feedback.
It's greatly appreciated.
And some guy in the internet says I agree.
I use many of the tips mentioned in your show.
My goal is simple when it comes to security.
Avoid being the low hanging fruit.
I disagree with telling others security doesn't exist.
We should encourage others to explore the realm of security.
Then apply as many layers as we feel comfortable slash possible.
And yes, I know you've also suggested this point.
Gritio, keep them coming.
Lurkin Pryon says no security.
Question mark, thank you for the feedback.
I struggled with this for a while before deciding to just
shatter the myth of security.
While I agree in principle that we shouldn't tell people
that security doesn't exist, it's always predicated on the basis
that we should implement the security controls that we are comfortable with.
It's really risk analysis, not security, smiley face.
Yeah, very much so risk analysis as well.
And one of students still the greatest hands a lot of HPR in my opinion.
Two factor authentication and OTP.
We can back up these time-based one-time password function instances.
The program called and OTP has been ready since 2018.
And supports open PTP backups, encrypted backups and database encryption.
We'll also show the secret string for transferring to key pass variants.
And you can copy and paste the result of the RFC 6238 algorithm
from a password manager available on eFtroid and the dreaded Google Play Store.
That would be worth the show one of students.
Yes, that's a bit of a show rather.
Well, I didn't get all of that.
I have to admit.
And so it would be great to have that those facts spelled out somewhat.
So yeah, completely great.
The NNNN Terminal File Manager by Archer72.
Let us crack open.
They show and have a look at it.
I actually wanted to use this the other day.
And then I couldn't, more and more couldn't just ended up not.
Yeah, I've also been using it on odd occasions when I was looking for a file looking for a direct reaction.
I was looking for a directory actually thinking I had one called a certain thing.
And I thought it was sort of useful.
But I couldn't quite see why I would use it myself.
Because I just not got into that habit.
I used to be into the year that I called the two-paint thingy.
It uses cursus and stuff.
Midnight command.
Yeah, I used to all the time for many many years.
Now I tend to use dolphin a lot of the time.
I know it's very gooey, but it is just so damn useful.
I find that it does pretty much all I want it to do.
Except when I try and access my phone, which I tried to do yesterday,
over KDE Connect and it just completely out.
To kill it, to kill it, to come back to life here.
But yeah, but on the whole, it's fantastic.
So if I was stuck on a machine that didn't have all this fancy stuff,
like on a Raspberry Pi or something, I may well end up using this tool.
I've not put myself in that position lately.
So next time I do, I will bear that in mind.
I'm distracted now because I've installed it.
It's got some great ideas in it.
It seems to be a really well thought out tool.
And back in the day, something like that would have been utterly wonderful.
In the days of early Unix's and stuff,
where it was hell of a job to find your way around places.
But if you were a newbie in the Unix world, that would have been so nice.
But these days, I don't know.
Doesn't suit me that much.
I'll see, I'll give it a go on.
Indeed, one of my Raspberry Pi's men has.
I'll have a rummage with this.
There's one thing that I've been using,
or find with hard links to reduce dis space.
And now I've ended up with three different directories that emerge together.
And they're all sharing the same I node.
And if you drag the same file over.
So like you have direct to one, file one, directory to file one, directory to file one.
And they're all, I know that they're all have the same share the same I node.
So they're hard links together.
And if we copy from one to the other and anything like dolphin or whatever,
it doesn't allow you to do it because it's the same file.
You know, it just drives.
Something nuts.
So in order to find them,
I'm having to find the I nodes and then find the duplicates and then deal with them all by one.
It's not ideal.
No, no, no, the ability to fiddle around with hard links is wonderful.
And I've done it for a long time,
but oh, you can get yourself in one hell of a knot if you're not careful.
Okay, shall we move on?
Kidoka.
Then it's in laws, Kubernetes and friends with Sarah.
This was actually a nice show.
About a cuba and then and stuff.
Very, very relevant to what I'm doing in my work.
Yes, yes, yes, yes.
I was having problems here in this one because Chris is allowed and Martin is quiet.
And my ears with tinnitus just do not cope well with that.
So the Chris bit drives the Martin bit,
even though they're not happening simultaneously.
Yeah, look after ears people.
Look after ears because his tinnitus is often caused by having background noises.
Like washing machines maybe.
I don't know.
More like concerts, Dave.
Yeah.
I worked in a very, very noisy factory for a couple of years.
And they gave us ear protection,
which was basically sort of cotton wool.
Yeah.
It was very high tech cotton wool in interesting packets.
I don't think it did anything.
So I think it's bugged my ears up.
Anyway, that's a side point.
Sorry, I tend to ramble.
So yes, but the principle of it again, some brilliant links.
So lots of stuff there to go and dig around it.
No, find out more.
Sarah says, hello, Grichos always.
It would be fun to collaborate one of these days.
And yes, lol.
I did let my show remain labeled explicit when there was probably no swearing.
But I never know what offense folks.
I don't consider dam or health swear words.
But many folks do since I normally swear like a seller.
I thought it's better be safe than sorry.
Thank you.
Good to find you.
Yeah.
Are you with me?
Yep.
Yeah.
Did you forget to press to talk or something just now?
Did you have to go away?
No.
Did you...
Where did I leave off?
I did nothing since the show with Linitin was 3619.
We're now on 3220.
Again, I'm a moron apparently pressing the wrong push to talk.
Photos, storage backup and workflow.
How to keep your photo safe.
This is a show you want to be listening to before the event, rather than after.
There are two comments.
Some guy admitted that says, Grichos love the show.
I have to use the directory structure from my photo management.
I'm very paranoid about editing the only copy of an image
and then losing the original in the process.
Gimp will scary edit.
Thanks again.
Yeah, yeah.
Good point.
That's scary.
Kevin says that I could help.
I'm happy to see my methods of some use to others.
I'm working on some more material for 2023 on photos and editing.
I like the way he says that because he's submitted shows all the way to the end of this year.
And into next, I think...
Yes.
I'm not sure.
Yeah.
He takes a different perspective on his real shows and most of us do.
And I may continue.
Indeed.
So the next day, if you can hear me...
Yes.
...was watching YouTube in 2022.
And this was sure by you, actually, some other channels that I had a little look at.
And decided to not have a look at them because I would be downloading loads of stuff.
I'll come back to them again.
Yeah, yeah.
You've got to watch YouTube instead.
I watch a lot of stuff because I'm retired.
I don't have too many demands on my time other than, you know, the market calling.
But the...
Yeah, it's...
I just thought, you know, some might get some benefit from these.
You know how it is.
You can go to YouTube regularly and miss things because it's so much easier.
Given a few pointers seemed like a good idea.
It's one I've been planning on doing for a while.
There are some comments.
Mechia Tronic says YouTube is no good anymore.
While there are lots of great tech channels, there is no way to get an organic engagement there anymore.
The age of viral YouTube videos is dead.
And the section will steadily be worse as people use other platforms that value free speech and authenticity.
At least link the videos else like w-e-w-e-w-t-u-d-e.
So you don't give those imperial scum pay revenue to come right?
Yeah, yeah.
Well, you know, whenever you're using some free thingy on the internet, then there's always going to be an agenda, which you may or may not see.
So, you know, I'm not that keen on YouTube as an entity.
But I quite like what it conveys or has conveyed in the past.
But anyway, second comment by Mechia Tronic.
Mr. Teslonian.
It's hard to read.
Mr. Teslonian is a great tech channel that not too many know about.
I didn't realize it was possible to get gasoline from wood until he demonstrated his gasifiers.
He also does crazy stuff like building a powered exosuit at an old wheelchair.
Definitely a post-apocalyptic kind of channel.
Absolutely.
To this alternative, y-e-w-t-u-d-e.
Address, I think we've had somebody talking about gasifying wood on HPR.
Yeah.
I'm going to tell you about wood gasified.
You can turn the truck on them and things like that.
I remember hearing about more shows than that.
Absolutely fine with me.
Indeed.
My network set up some guy on the internet.
And huge, huge description here based on TP link.
A client list, server list, how the lands are set up.
Resistance network, very good, very good.
T100 network, T1000 network and SkyNet network.
I see what he's doing there.
Very, very good.
Nice approach, very clean.
I like it.
Very similar to what I do myself.
Except I don't use feelings.
Yeah.
We had feelings at work, but I've never seen the need home.
It's becoming more appropriate as time goes on, I feel.
Yeah.
Yeah.
I'm surprised he didn't get any comments, actually,
because I saw somebody contact him on either Twitter or Amsterdam
with the complimentary tweet, post, whatever it was.
But yeah.
Two, two.
Yeah, one of those.
But yeah, I thought it was really good.
He's got a lot of effort into planning this out.
And his description was great.
And most entertaining.
And the next day, Lurkenplyle and, or Brut Brady Frost and their kids were on
discussing security.
Quite interesting, actually.
Yeah, it was a good idea to do this, I thought.
And to get the, get the, the sons into, to give their,
their viewpoint was, was also quite, quite revealing, you know,
that their level of understanding was pretty high, which is kind of what I mean.
Given that the both of their fathers were, were in the business,
it's not, not too surprising, but, you know, they've always seen
taking those lessons on board and good for them.
Yeah.
I was, I was amused because one of the guys on work,
son had turned off firewall on his computer and then had done install
something or other, you know, a crack to break something or other and
this computer was absolutely infested with all sorts of stuff.
So yeah.
Oh, so easy, so easy.
Everything you ever wanted to know about Pex, part three and four.
And the easy comments, unexpected relevance.
When the series began, I listened to your episode kindly and
patiently, as one would listen to a child or an elderly person.
Most out of respect for the host.
Now I find myself in the middle of a bathroom remodel in a house riddled
with Pex, and as you can imagine, my interest has spiked in this topic.
Thanks for sharing your knowledge and experience.
There you go.
That's a great comment.
Yeah, yeah, that's a great comment.
I like that.
It's, yes.
Yeah.
These shows are great, actually.
I'm surprisingly interested in what's basically Popework.
Yeah.
So yeah, it's, it seems like an amazing material, considering what,
what it's, what its ancestors are and stuff, you know.
It's, it's good stuff.
And I do enjoy the titles and the summaries and stuff.
Yeah.
Great.
I have, I have a hot and cold water going to the shed, actually.
And I want to split that off so that we can have a fee going to the garden.
So I'm also going to start getting a little bit interested in how to do this.
Seems, I don't really want to invest huge amounts in a kit, you know, just to cut it.
Yeah, lots of it.
We'll see.
I thought that there are, there are sort of simple manual devices for cutting it, but I'm going down to the local shop and ask about that.
Not that DIY multi-store local hardware shop.
That's always, that we're almost always better.
But they did have in our local big, big box plates.
At one point, higher pensioners who were, who often, you know, sort of hobbled around a bit like me, of course.
But they often had some good knowledge of stuff, possibly from having done these things in their own houses or having worked in the industry in the past.
And now they were working for XYZ big box.
So I thought that was a good idea.
It didn't last though.
That's, that was a good idea, actually.
It's a pity it didn't last.
Obviously, it's recommending, you know, leading copper fittings from Disney.
Possibly.
Or they'd say, oh, don't buy stuff here. Go with that guy down the road. He was much better price.
Or whatever.
Alrighty.
Following day, Shell Tips snippets collaborative effort.
Carlin, special guests.
We're giving away nothing here, Dave.
Except it wasn't either of us.
But yeah, three great shows actually in one.
That's my only negative point about this show was.
Could have been three shows.
Yeah, yeah.
It was, it was good.
That was a great idea.
And it turned out really well.
And I didn't find that it was difficult to listen to in any form.
I, I sort of come along mentioned when we get to the email.
Carl seemed to think he's all deal with all of that.
But it was perfectly fine personally.
And D&T said shift.
Thanks for this, Carl.
Couldn't imagine a better host.
You're exactly the right about the reason to talk about shift.
You see it in scripts out there.
And I can, it can be quite hard to blame what it does.
If you don't already know.
I also thank you for your observation about the word shift,
which I actually hadn't noticed.
The name of the script was MyShift.sh.
So it's impossible to tell if it refers to the repeated running of the shift command
or to the resulting calendar events.
I like it.
Yeah, that appeals to me actually.
It's a multi, yeah, multi factor word.
Multi use word.
So Carl says thanks.
Thanks for the comment and the contribution to the show, D&T.
You inclined to really help me get something out the door.
My timing was off as usual.
I should have had my recording process figured out beforehand.
But I'll improve it before the next show.
The work's drug shift example was perfect.
Cool.
Super.
So I get close to the end of the month.
The stuff evil Steve doesn't want you to know about.
A password manager.
Yes.
I am a big fan of password managers with huge long multi complications.
Passers and then you find your bank requires you to use no more than so many characters
on the count container, anything other than blah, blah, blah, blah.
Yeah, yeah.
I've got that one.
I actually put it in the notes.
I use key pass X.
What is it?
X sealed on me.
And yeah, I put it in the notes saying don't ever make it longer than.
Yeah.
So 19 characters or whatever.
And it's going to be this character set.
Yeah.
Those people really need to be slapped about.
But give my son is now one of those people.
Yes.
No, he has somebody physically to do that.
But he has no control whatsoever.
He has no control over this at all.
Anyway, yeah.
So yes, good stuff, very good stuff.
Operator, the only key jewel.
And this is a USV security key.
Very interesting.
I'm interested about these things.
That should be in the security series actually.
Now that I look at it.
Well, to solve.
Why does it say part of the series colon and then nothing?
It's been given the wrong series number or something.
I just noticed.
Yeah.
It needs a look.
It needs a look.
I added calls to the bash scripting series.
Oh, very good.
Just by the way.
Sorry, it's.
Yeah.
And we need to check that one because it should be.
Should as you say be in the security series.
Okay.
Metiotronic comes in with a cool episode about building a mobile computer.
And there are lots of pictures in the show notes.
I would advise anybody following the show to be very careful about welding.
Soldering on to lifting ion batteries.
So could also do with explaining.
I would like to hear your show about off.
BMSs, battery management systems, boost book.
Confortors.
If you want to do a show on that, that would be great.
And soldering techniques for soldering on to those lithium ions.
Because you can access the heat apparently will damage them.
So they use a lot of people use spot welding.
Mm hmm.
So okay.
That's interesting.
I just watched a big live episode in the past few days where he was.
He tends to to glean these things by picking up discarded vaping things.
Compared gloves on, I would hope.
Anyway, and taking the quite good quality batteries out of them.
I'm not using it, but he said.
I'm not sure if it was from experience that he had seen a case where.
Soldering to the end of it had triggered the reaction, which caused the.
A jet of.
Who's after square at the end of the.
The battery and which would be flammable.
He didn't have the catch of fire, but.
You could, you know, Bernie has.
If you did that sort of stuff in a.
The wrong environment.
YouTube channel Julian.
He let also goes into those.
And he has a series where he built a battery pack.
He was in.
Sort of like 3D printed.
Holders that.
You know, just bolt them together.
Yeah.
Yeah.
There's a lot of energy in those things.
So.
For the cool show, nonetheless, this is the same.
Yeah, yeah.
But we like.
Yes, yes.
It's a fascinating thing.
I wasn't quite sure what a mobile computer battle station was.
And I heard the show and seeing that.
Yeah, seeing what it was.
So the pad external battery thing.
But yeah, cool.
Very cool.
So we're still in this one.
Linux allows the show where with red pandas.
Music killers and metal corrosion.
Talks about talks to.
Berk from.
The CTO of Firefox.
And of course, roast had to come into the conversation.
Considering they've rewritten a lot of stuff in Rust.
And it's a entirely surprising.
Yeah.
So that was it, Dave.
Once I'm not going ahead, we did have.
Next comment going back to win goes show.
Barrier software KVM.
And I realized that.
The word barrier is not part of the tanks for that show, which.
Through me for a loop.
And it's from me.
Excellent.
Thanks.
Use this today.
A massive improvement on synergy.
There we go.
So take away from that is that barrier should be part of the key of the tank.
So that's showing.
Yeah, one more thought.
Yeah.
Did I fix that?
Not just.
Not just.
I am.
Yeah.
I've got.
I've got an old four-track computer card here on the desk.
So I just wrote.
The show number one.
As you do.
As you do.
As you do.
Just don't know.
So we've covered all the comments.
Then it's on to the male list.
Am I correct?
I tried.
Show.
And you interest in collaborating on a show on shell snippets by Carl.
And as we have just seen.
Yes, there was.
Friends.
I'm pleased to report that the minimum number of contributions has been reached.
So the show is a goal.
I plan to edit and post next weekend.
It's good.
And he followed that up with an apology on the 24th of June.
Quite some time after.
Sound quality of my segments in today's show is embarrassing my apologies to all
listeners.
I will try to improve before submitting anything else.
But he then received lots and lots and lots of comments.
I don't know whether we want to read them all out.
Yeah.
But saying nice, fine, it's fine.
It's great.
There's no problem.
And it said.
It's absolutely fine to me.
Mine is.
Mine is.
Yeah.
And James told us doing that.
I owe you a show.
We haven't heard from him for a long time.
I know.
He does some good stuff.
I'd be interested to hear what he has in mind.
Yeah, most people.
I'm just.
Orson through these comments.
And most people are saying.
Yeah.
Well, he was like.
And we're tired.
He was horrible.
But there were a few.
Just a few office to help out with any.
We do issues as well.
Maybe we should use green.
Just for the car.
Okay.
Okay.
I said I thought it was fine.
There are plenty of people who have offered to mentor.
Taj has a good series on starting podcast.
And Karl replies.
I'm following these with the.
The thread link in the mail stuff itself.
So.
Okay.
Same great.
Thanks for the encouragement.
James.
James.
Thanks.
Can I listen to one of Taj's shows after I submitted this one?
And bought the Samsung Q2U microphone.
You recommend it because it's always.
The equipment's fault.
Indeed.
I'll go through the rest of the shows.
On the off chance that.
The operator might be doing something wrong.
So yeah.
Some good resources there for.
For people working.
This sort of stuff out.
Claudia says.
Take Carl.
Great show on those snippets.
I thought everything someone would find as others have said.
And it was good to get that one episode.
Don't keep up to the work.
And Taj says.
I haven't had a chance to listen to the show yet.
But Karl don't be shy about reaching out.
About the sound stuff.
I'm more than happy to help.
And if he says there's an html.
There's a html attachment.
You always says that.
And now after read html.
The sound quality.
Carl.
What does he say?
Should I read out?
Got it in thunderbird here?
Oh no.
Got it here.
Yeah.
Go ahead.
It sounds fine.
Cut.
Don't worry too much about it.
That you can be heard and understood just what matters.
I use the sounds from Q2U and my podcast.
And I'm really happy with it.
I'm sure you will be.
And I also throw my hand into the ring.
People who are happy to help out with the audio.
I coach for anyone.
So stay free.
Do you want to do your own?
Or I could do this with your accent.
They couldn't.
I just listened to the show.
It was great.
I had no problems with the audio.
I applaud the drive towards perfection.
But this was just fine to my way of thinking.
Nice premise for a show too.
Collaboration stuff is always very appealing as far as I'm concerned.
I meant to contribute.
But.
Yes.
And Todd says.
I was not bothered at all by the sound quality.
It was a great idea.
Turned into a great show.
And Karl says.
Do you want to do it?
Yeah.
Thanks everyone for the feedbacks.
His Karl's support and offers of assistance.
What an uplifting way to start off the weekend.
Please hold any negative comments until Monday.
HBO rocks.
Yeah.
He says.
Good.
So policy change from me.
Opening all the tabs here.
And horse through the counts.
Right.
This policy change relates to shows that have been published, which
which may contain problematic content for more information.
Listen to today's show where I suggest that we continue to watch shows as normal.
If we get a complaint, then the janitors will contact the host as normal.
Should the host be unavailable, uncooperative or disagree?
Then the janitors can either move the show to the backup queue.
And that's why it's depending on the severity of the complaint.
In all cases, we'll keep the special advisory committee aka the auditor team of volunteers in the loop.
To make sure that all is above board.
The community can then decide the best course of action.
I'm willing to hit pure episode 3615.
I would like to oppose the following changes to our policies.
And this is related to the page stuff.
If you need to know the PHP hashtag not moderators.
It says currently, we do not vet.
Edit moderate or in any way censor any of our audio use miss.
We trust you to do that.
That's the last bit that's changing.
Propose changes.
We do not vet.
Edit moderate or in any way censor audio use of miss.
We trust you not to load.
Upload anything that will harm HPR.
And we intend to add the line.
Adding material that is reported as harming HPR.
Maybe unlisted until such a time as a situation can be resolved.
And Dave Lee said on our X-1101 says.
Dave.
Yeah, I know. I'm trying to find it in Thunderbird.
I upgraded Thunderbird since last time.
And I'm having very slight difficulty to hold on the second.
I'll do the next one.
I am fatically approved.
It makes it clear what the intention is.
Self-preservation, not moderation.
And what the response will be.
Kevin O'Brien says.
I'm okay with this.
I don't know, he said it quite like that.
I probably said I'm okay with this.
Claudia says.
I also approve of this change.
Plus one from me good call and don't feed the trolls.
Is what Mike at Mike brain says.
That's be by a dog.
Andrew Conwiss says.
And fun.
I mean.
Uh, JWP.
JWP.
I was having problems.
Agreed.
Andrew.
Too simple.
How do we submit shows to the emergency queue?
No link on the website.
Yeah.
Ron says.
I approve of these changes.
And we've got another HTML attachment from Dave Lee.
And Dave says.
I hold heartedly support this.
And the use of a split infinitive.
What is the olive oil?
I think there must be a boldly go there or something.
Or something like that.
Didn't look actually.
I've got to go and check.
But yes.
We don't care about grammar.
But one of us doesn't think.
But I think everybody knows which one that is.
Five shows into battling with English.
Uh, DNT says.
Could it make sense to specify what it means to harm HPR?
For example, in this case, that could be material that threatens HPR.
Hosting relationships material that exposes HPR volunteers to legal ability.
I think this covers the majority of issues that will come up.
Is there anything else DNT says?
Good. Good. Good. Come in.
Uh, you said.
Next is the next one you can do your own there.
Oh, I would prefer to.
In response to could it.
Would it make sense to specify what it means to harm HPR?
I would prefer to.
But specifying it as harm can cover any complaint.
Have a listen to the first part of HPR 3615 or read the transcript.
So the attack factor that will be used next and how will we deal with it.
I have no idea.
But how to deal with it will also not be easy.
We'll have to cross a bridge when we come to it.
So basically we have to keep it very good.
Yep. Good.
And Carl Hammond says.
Well, that's Landia.
Yeah. Yeah.
Uh, I agree with keeping it generic to start trying to indicate the intent rather than a new.
Then an enumerated list that could grow ironically tentatively hopeful Landia.
I agree with the changes as Brian and Ohio.
Norrist that's Todd says plus one approve.
Jason Dodd also approve.
Tatch says I approve of the changes.
Okay, so we're going to assume that that's a new policy if anyone objects.
I respond and we can discuss us next show.
And the next one about policy this month.
HPR reserve queue by me.
Internationals.
The general show discusses how the erratic piece of nature of the queue can be helped by telling free slots from the main feed from a reserve queue.
The current emergency queue where you're named reserve queue to slow.
If a free slot encounters not filled in time, then the show will be used from reserve queue.
Shows will be taken from the reserve queue in a first in first out basis.
Host can either schedule a show for a particular slot or have their shows added to the reserve queue.
If actually we will work on a dedicated upload option.
But for now, the holes can pick a random slot and just make a note in the show notes that the show isn't turned for the reserve queue faults.
Or yes, Ken.
One thing's for instrument should you not first pick holes to have not submitted shows recently.
Gosh, Ken, that's a good point.
I need to think about that.
Anyone else?
And that will refer us to episode 3616.
And we had a response from DNT who says I like it.
But I'm not clear on how this differs from the current program other than the name change.
Is it just a matter of automation?
Maybe encouraging a shift in focus from the calendar to the reserve queue?
Yep, from me.
Yep, that's about right.
We'll be doing call for shows now based on how full the reserve queue is rather than free slots in the main queue.
This is implementing something we talked about before, but we're now in a place where we can implement this.
I'd like thoughts on how the signal that show can be put into the reserve queue.
And DNT says, I guess I would expect a paragraph following there are 21 days to wait, saying there are only eight shows in the reserve queue submit to show into the reserve queue.
Is that a link or something?
Yes.
You like the bottom line?
Yeah, followed by a brief explanation of what the reserve queue is.
And the rest of the page is starting with the next two months sections.
One question is, how many days prior to the air date will the show move from the reserve queue to the schedule?
Would that be important to because in nearly two years I've been listening, I think only one emergency show has reached the main feed.
So if we're calling it a reserve queue and wanted to rotate more often, we should pull from it sooner too.
So then I would append something like your show will air on the next slot that remains unfilled seven days prior to air date or more vaguely.
The reserve queue fills slots that are otherwise unclaimed and then maybe we could display an average time to air for reserve queue shows once we can calculate one.
Does this make sense?
In general, I think it's a good idea.
Frankly, it almost never matters exactly what date we pick when we post the show, maybe reserving a date should be rather be the exception than the rule.
And the dynamic with picking dates would create the rather stressful janitorial situation of looking at the unfilled slots in the calendar.
That is excellent.
I'm going to be copying and posting from that.
Yeah, it's a good idea.
I just have a sort of deja vu reaction here though, because we used to have shows thrown at us and then we would schedule them.
How is this different?
What's being suggested to put them all in the reserve queue and then throw them into slots as the need arrives?
Yeah, the issue with the four was that we would we would be the ones physically doing the scheduling and it would be there was we had rules about if this then that will schedule whatever.
Yeah.
People are giving me a choice.
I want to cancel on this day or I want to release I'm putting it into the reserve queue and I think actually the simplest thing answering my own comment from that email after a few days of thinking about the simplest thing is
is to first in first out from that queue.
So yeah, it's this is a reserve show to be marked as that please please were low on shows or was a free slot and that will be added to the show.
And then we can start start using that queue basically as a if the minimum if there are no people have not picked specifically reserved days then come from the reserve show.
What are you doing the question? How is that different?
Well, it's maybe now that's not the time to hash that out but it does have the advantage that the reserve queue would rotate potentially faster than the emergency queue because emergency guests have been in this state for a very long time.
I mean, I think people have put stuff in there that they knew could sit unheard for a long time although if you really want to hear him you could do.
But yeah, that would be an advantage but is it significant? Well, there are no there are no other things getting in the way as there were back in the day when we had to syndicate shows and things except for the community news.
Yes, but that's not it's not too much of a problem on the book. Yeah, yeah.
Well, let's try it out. See how it goes. Yeah, yeah.
Let me see C-Bart 387 says how much is this a manual process for the janitors? I had some thoughts about allowing people to choose the day for their show and there would be a reserve.
They would then trigger them being moved into an unfilled slot based on hash number of days from the current days.
I wasn't sure though if more churn through the reserve mean more work for the janitors or if that could be automated.
I don't want to take days if somebody has picked something from them the main main queue that's it's but some percent you pick that date.
So that's our contract you pick that date you get that days tough if you wanted that date you should have recorded your show earlier.
If we put it into the reserve she called queue we're saying that if there are free slots then we'll start using them from the reserve queue.
Good question though comes up how many days ahead of time do we do that Dave to be say like seven days.
Yeah, yeah, because we usually don't let the free slots go like 24 hours in advance.
So how fresh do we want hpour? That would mean all shows on hpour are at least seven days old unless it's a reserve queue reserved date.
Yeah, is that about you? Is that about you? No, no, we need some time to we haven't finished a reserve show is not ready to go yet.
It needs further work your end and also mine to do the upload to the internet archive.
So we need enough time to do those things and it's not just a case of time it's the time that we have it's not just you know calendar time.
Because you know if we happen to be on holiday or something very much so yes it could be could be an issue or you know family just whatever.
Go on. Sorry, did I interrupt you? No, you didn't. No, no, I was just muttering.
I'm thinking let's say seven days because then that will give free slots that would be a chance to process through the reserve queue.
And for now let us treat them as if they are.
So I'm more talking about processing is more you and me Dave conversation and everybody else just happens to be walking past the corridor as we're discussing this.
So they go into an upload show with the directory structure that's just move them from that directory structure into the emergency queue.
And put in placeholders for the date and episode number and then we can run a set script on us once we know the date and move them back into the upload directory create a reservation for them and run through the normal processing.
Because from then on there would be a normal show or modify my upload scripts that I would pull them in.
I'm maybe modify the processing scripts that when they go back into the upload directory that's their flag does emergency ones.
And therefore they don't have they don't need the database in order to process them.
Although the new status stuff that we've that we've added in recent months is quite useful for tracking you know who's who's still got stuff to do to get the show ready for release.
So you say not in the database but I don't think you meant meant that you meant to keep enough stuff in the database to track the status of that.
Move the guide and just make a reservation ourselves is manually for that slot more modify the thing and then pump it back into the upload directory.
And then it becomes a regular show and we can hit it with our regular new automated scripts.
But I also need to put in some sort of flag in there that you would trigger the text to speech this is a reserved queue because you failed us for the last time.
Yes, it's just a bit of a show.
You would be applying the force. These are the shows you're looking for.
Okay, we're watching too much Star Wars lately.
We're not boring people to death with this.
Let's go back to yet another.
Oh, you don't have to years and nothing.
I got called out, Dave.
Yeah, back of the smoke and back of the bike wreck bike shed, the bike shed after school bike shed.
Poppy called me out, yeah.
Saying that if our source code is not available on public aids in open source.
Cruel, but fair, cruel, but fair.
Anyway, I contend it would be cooler to release the current code.
So how do we proceed? I suggest we eliminate problem by eliminating code.
My intention was being massively multiplayer online mirroring service where anyone could get complete instance of everything with a combination of git and or sync.
Anyone would have everything they need to host their own complete version of the site.
You will still need to maintain the lamb stack for the reason we will still need to maintain lamb stack for the reservations processing workload.
But that code is a lot easier to sanitize and publish.
So the site itself is made up of three parts static pages like headers, flutters, etc.
Dynamic pages that are driven from the database and the media, audio and video, etc.
The media and show notes are already covered by creative commons license.
And I suggest we should publish the code for the website under the agtplv3 or later and publish it to the gist.t.
report on report does an honest horse that mess thoughts.
So Kevin says, Kevin O'Brien says, maybe if you release it, someone will clean it up.
It seems like a good outcome.
I belong to several organizations where we had a rule that if you complained about something and unpaid volunteered did you were implicitly offering to take it over.
It's quite a good strategy.
Yes. And I reply saying, or somebody could use the exploit to take advantage of the site and put other sites on the server at risk.
The code is almost 17 euros old and any effort to fix it would be massive and require a complete rewrite.
Even if done, we would still leave a site that requires a database query to generate each page.
This is not efficient and it is costly in terms of recent hosting resources on our hosting platform.
And commenting on several organizations you implicitly are offering to take it over.
I literally am the unpaid volunteer who volunteered to take it over and have been doing so for the last 10 years.
So I'm complaining about it and I'm also volunteering to write and maintain something better.
This is not some precious piece of code that defines an age.
It's a piece of duct tipped PHP that takes fields from a database and turns it into HTML.
Fine for its time, but the world has moved on.
Generating a static site from a database is ideal as a static HTML page is very difficult to hack.
And that means we could easily murder it to, for example, hacker-public-radio.uhu.com.
The fact that our content changes but once a day makes the approach for generating static pages ideal.
With the raw SQL, anybody who wants to can help funnel their energy into generating a working site for us.
The sooner we move off the slams stack, the sooner we can stop using it.
And the sooner there will be no problem releasing it for all to see.
I don't know if I'm explaining this stuff correctly.
So the idea is we have the source code that generates our website.
And it's never really been a priority because our priority is always getting shows.
But it is freely the open source because it was written by groups or somebody related to them.
And maintained by me since then.
But it's not efficient code and it is expensive and not your dockerized containers and modern stuff anymore.
So the idea is that we would check in a database to get or an SQL statement and to get.
And you could generate the static website from that.
But we will continue on a little problem from obvious as the conversation continues.
So Clato says in response to that, I think what you are saying is that HBO requires a full rewrite.
I think what you're proposing is that we forget that the existing code exists because it's not worth saving in quotes.
And instead develop new open source code to replace it.
That's correct than I agree.
It's not dwell on broken code that nobody loves but move on forward with the new open source code that actually meets the site's requirements.
And ideally makes the admins lives easier.
Thank you, Tatoo, for saying exactly what I should have said.
It's very good at cutting to the point of things.
He does see this away.
Yeah, good for him.
I apologize, I'm just so focused on this.
I don't see the word for the trees.
Anyway, Kevin says, well, I'm not smart enough to do that hence my lack of complaining.
I'll just stay out of the way.
Kevin.
That's very good.
I like that.
Oh, yes.
Do you want to do Microsoft?
Yes, yes, yes.
It takes me a while to get the most across the page to click the link and blah, blah, blah.
So, Mike Ray says, I suggest that if something new is going to be developed, then it should be in Perl, either using either dancer or module ishish as the framework.
This I suggest since David's poem is yes and I'm currently professionally engaged in Perl development.
A system comprised of both CGI and PSGI components.
Oh, here it is, Doctor.
Yeah, yeah.
Look at this.
It sounds like a good gig.
He's got that.
It could even be containerized and then easily movable from host to host using container with engine X and UW SGI serving up the pages and another container.
With my SQL in it.
However, whatever it is, it should not be PHP and this page should use templates so as to separate back end from front end design work.
At a pinch, my second suggestion would be Python and either Django or Flask.
But there is like to be less of a legacy of Python skills in the current HPR stuff.
Which is pretty tricky.
Oh, I see what he's doing there.
It's my power.
Oh, thanks Mike.
Don't take this to be me volunteering to give much time as my time is currently over subscribed.
But this might reduce later in the year some heavy research I'm engaged upon comes to an end.
I will of course be hauling HPR over the alley of the Coles.
If I am a 11, why?
What is that?
I can't read that.
If I detect any sort of a problem.
How many great shows could we get out of a complete rewrite of the whole enchilada?
Oh, and keep the bleeding JavaScript to a minimum.
It means accessibility.
Yeah, there will be no JavaScript on HPR full stop.
And yes, if it's not accessible, then it will not be its book.
Yep.
And I reply.
We are publishing the data from a form of SQL DB and static HTML.
And I'm very happy for there to be multiple ways to reduce a web mirror.
So database for static pages.
Redirect some tech which redirects to some working site on your domain.
There are multiple approaches, then all the better.
Anyone can start with a proof of concept for their tech, for your of choice and record a show about it.
Do you get what I'm asking or suggesting?
Oh, yeah, yeah, I think.
Because of the way my brain works, I go off into sort of huddle inside my own head, looking at,
how is that going to work?
How will that fail?
What's the problem there?
And it's the thing that certain mindsets do, and they end up not get anything done because they're worried about finding the whole thing.
What they've been offered.
So I have to be really careful.
I don't know if I'll still do that.
But I think the general idea of a database, and I contend a better database than we have now because the design needs some thought.
But we've discussed and agreed that and the policy just need to do it.
And it and some engine which can take that database and generate static site on request where that would be as efficient as possible,
where it can detect what's changed and all that sort of good stuff and only regenerate that.
And then your static pages will sit there on the website being available.
It's not, I mean, it is going to be bigger than what we currently have in terms of the amount of file space use.
But I want to put a huge lot given the HTML that generates it now is sat in the database.
Or at least the core of the HTML that there is a sort of process of putting it in a template, except it's not a real template towards it.
But yeah, so that would be, that sounds good.
It's the overheads of accessing it again, presumably going to be pretty light given that it's going to be split up by page.
So you want to look at show X, Y, Z, you have a URL that will get you there or some query or other that through a maybe a rest interface or something that will get you to the thing you want or a tag list that will get you there or something of that sort.
So that all sounds fine. Yeah, I'm not sure about the git side, but that's just because I'm not sure about the git side.
Yeah, so on the git, right, there will be the database, which is so all the HTML file template files and everything in order to generate the site from the database and the static sites for the header, the footer and the links and the how to pages and all that stuff.
That's checked into git, right? I think we cover this later on. So shall we continue on?
Antony W. Denton says I also agree with complete new start.
And Norris says, sorry, I missed this in the previous message, but where is there DB publish?
And Andrew Conner was in. I was thinking along the same lines as that to let start fresh build something long term.
That's easy to understand and maintain and happy to contribute, but I'm not the best developer here in this part.
And now we get on to your one. Can you read your one?
I thought I said it might be good idea if I shared my perspective on the way the HBR stuff is put together and managed.
But I should have said at the moment, anyway, that's a given.
If there's anything I've misrepresented, I'm sure Ken will comment.
So the database, this is not really up to the task it needs to perform.
For example, there's a many to many relationship between shows and hosts.
We've had many shows with multiple hosts and it's highly desirable in my mind that we associate the participating hosts with their shows.
We also want to include the techie shows into the database.
Also when a show has what I call assets, but it grabs extra documentation script examples, we should associate these with the show.
Finding all the components of the show for upload to archive.org is a pain when you have to pass the HTML notes looking forward.
In addition, I'd like to structure things to reflect the relationship between tags and shows.
There's more in that list, but I'd like to stop at that point.
On the website web site front, we have discussed making this site as static as we can.
This would simplify the current dynamic component.
As you mentioned in your original email, a lot and could make the site less vulnerable to attacks.
We'd still need an interface for uploading shows and comments, but these would not be overly complex as far as I can see.
The static site would probably be refreshed on a daily basis.
We could use an existing static site generation system, though I have no experience of any at the moment.
Genitorial duties, there would still be a lot behind the scenes activities, at least in the beginning.
I tend to process notes and assets for new shows, so they generate clean HTML for the database.
Ken does the preparation of the audio and posts the end result to the site and leaves the components for upload to archive.org.
And I say, aka, into archive.org, IA, we tend to refer to it as the IA, just because it gets simpler.
I'll release it.
Yeah, I gather up new shows and their various files and perform the IA upload as the need arises.
These tags have been streamlined over the years and there are probably many ways of streamlining them further.
I tend to perform curation tasks as well as the above such as managing the project to add some recent tags to shows, which is now completed.
I'm currently ensuring all shows are on the IA with a range of properly tagged audio formats as with proper audio tags in them.
And any assets that were missed in the time before, so the time before we decided to add them.
I'm also looking at performing link checks on shows at the moment with a view to repairing the inevitable problems of link rot.
Database rebuild.
As far as this concerned, I redesigned the current MySQL's MariaDB database a while ago, making a postgresql replacement testing.
I wrote scripts to populate it from the live database, et cetera.
It wasn't clear where we could run the final postgresql database, however.
I'm currently looking at replacing this database system with an execute light version.
I think this might be the format that would be shared into your course.
So having just as an aside to that email, I've done a bit of digging around and SQLite is lovely for doing simple little database array.
But my postgres thing is a bit more complex, not huge complex, but a bit more complex than what SQLite can easily do.
So we need to we need to think very carefully about that.
Yes, and I would also remind you that they remind everybody that HPR is a long term project so that there will be.
There will be somebody's going to have to take over your work in the fullness of time, so don't make it too complicated.
So this is something that really kills us in the force with PHP.
You've got to look at 17 years ago what was the technology that was mainstream and what's the technology going to be in 17 years time.
That's why I'm very concerned about using any cool with frameworks, any cool, anything.
Essentially, we need to pick, keep everything as simple as possible.
If there's complications that requires postgres SQL, we got to wonder why we're doing that and what we'd be better scripting that components some other way.
Good point. That's why I was looking at SQLite, of course, but I think SQLite is a good, it's a suitable thing to do because we can distribute the export as an SQL from SQLite.
We can also distribute the binary into our media folders and just our sync at the cross.
So that if somebody does get sync, they'll get all the source files.
If they do an or sync, then they'll get any change files.
So if the binary file for s2lice has changed, if we'll also come down and then everything can be scriptedable.
Yeah, it's okay.
Yeah, okay, sorry.
There's more discussion needed there, but we're well aware of that and people are already saying this.
Anyway, I replied saying, well, I think an SQL export of an SQLite would be the source of truth.
And then that gets checked into giz.
Anyone can get the latest changes by using git clone and then git pull.
So you do the git clone the first time and then do a git pull and it'll pull down all the changes.
And that would also include us, Dave.
The DB you have been using has a better structure and could be used to maintain the live mysql one on the HDR website for now.
So let's start using your one as the source of truth and then pump the changes back to the HDR website.
For now, an SQL dump from Postgres to git is fine and the sq binary via our sync and mask is would follow later.
So the structure is never going to be published, perfect, but publishing now as is will be a good start to get feedback from the database heads up there.
Or should I say all caps database heads semicolon point.
Anyway, one thing we need to change is the email address that the hosts are kept in the database.
This needs to be converted from job logs at example.com to job logs.no spam at example.com, which is what we do when we publish to the RSS feed.
So when I give the note there, so that's something that we need to do with the current mysql database, I think, which means need to change some of the existing PHP site.
So that we do the no ask, it just reads the already obvious cases email address from the database agreed or not.
One of my digressions is that the way that we are not authenticated but identified people is by the email address at the moment.
So we did think of using CPG key and all the GPG as I have moded open PGP maybe, but anyway, it's more or less the same I think.
But one thought and I think that I did at my work was to cater for multiple aliases per person.
So if they forgot and sent stuff in from one of their alternative mail addresses, you know, it's not uncommon to have multiple mail addresses, is it?
Then we'd be perfectly happy and identifying that as well.
That was one of the design features that my placement database was hasn't got yet but was going to have.
Okay, so Mike says Dave and all please excuse top posting.
You think I'm always complaining about this, which I probably am, but I have an excuse.
Dave, I refer the honorable gentleman to the show I did about many to many relationships some years ago.
In response to that nice Mr. Fallon shocking approach to tags, Mr. Cod was spinning in his grave.
He never misses that one. He did a fantastic show on many to many actually.
I did a more HBR oriented one following up, which I referred to his show multiple times.
He wants to make sure I don't forget and I don't and I won't and yeah, I get the message.
Anyway, I would not I would not call SQLite the database fit for heavy use.
It's fine, very fine in fact as a single user database, especially in embedded stuff.
All of us probably carry at least one around in our pocket all day long.
But for concurrent access by multiple web visitors, we really need a transactional database.
PostgreSQL is in my humble opinion superior now to my SQL Maria DB.
You might also consider MongoDB on our hang on.
Let's not let Kent Fallon loose on a database that does not need the not demand any structure to speak of that way madness lies.
I have used the Nikola static site generator extensively and can recommend it.
P in the lamp used to stand for pearl and not PHP and it still does in it in my world.
Good. Very good. I have thoughts on relational databases and on Norse grow all this basis and it changes over time.
No, it's not the subject of this. It's wonderful. No, it's a wonderful thing.
But if you want to do relational queries, then it's a bugger.
It's not also that wonderful. You basically like a brand on it.
Anyway, that's continuing with this one.
Okay, so I'm replying to Mike where he says, but for concurrent access by multiple web visitors is really needs a transactional database.
So I would say there will no longer be multiple visitors accessing the database as only one person will ever be accessing it.
More correctly than accessing it is a single instance of the database.
There will only be one person accessing people's individual copy of the database at a given time.
So I'm trying to explain, so static, the site that's been served that you will go to hackablebigradio.org, for instance, in the form of some time.
You will go there. Every single page has been read from disk. There is nothing coming from the database.
So that is the plan. Comments and upload aside, but the plan is everything is coming from disk.
So if you can serve it from the hackablebigradio website, from disks by putting the patchy or nginx or some other web server in front of it.
Then all those static files can also be taken and served by you at home.
Think about it. So I'll go through the steps, say, a change of cars.
For example, somebody is posting a show. So Dave posted a show.
So somebody posted a show. Mike posted a show.
And then Dave here goes and checks the SQL out of Git.
So the very start of your processing, the multimedia, Dave, you check the SQL out of Git.
And you build the database based on what's in the Git.
Yeah, you okay with me so far?
You run your normal processing that you do based on the database that's running on your local machine.
When you're finished, you do an SQL export file.
And then you send that SQL file back into Git.
Simple enough. You check out, you do something, you check back it.
But what if while you're doing that, somebody has written a comment.
Yeah. It's a different part of the database.
We're talking about somebody's posted a show.
Don't complicate things, Dave. We're talking about posting shows.
So the show is distinctly different from the comments.
Yeah, we're not doing anything about comments yet.
Yeah, we're just talking about shows. We're talking about getting the majority of HP or Britain.
I'm getting feedback from you there.
I'm sorry.
Okay, our bread and butter is the shows.
So we're going to focus on that.
And then the comments and the posting and all the rest of that stuff we can do later.
It's not that difficult actually.
Because that code was written by me and it's at least 10.
It's not 17 years old. It's maximum 10 years old.
Okay, so you already know that you're going to be working on one part of the website,
which is posting a show because we're keeping tag of the database.
So you check out something, you do your best and you check it back in.
It can never conflict with anything that I'm doing because I'm working on the different part of the database.
Correct?
Okay, so when you submit your changes,
get T produces an RSS feed.
So that RSS feed will be read by me.
And then I know to check out the SQL out of Git.
I import that into my database of choice.
Again, single user mode running on a local machine or I couldn't have it in the AWS.
It doesn't really matter.
I'm running it on a website on it locally, yeah.
Then I run my scripts to generate the static site from that, right?
And that produces, we no longer have an SQL file.
So we then have HTML files that are all linked together relatively.
So index.html links to shows.
And in that shows directory, there's a whole goal of some directories.
And in a HPR1234, there's an index.html file.
And in there, that includes the header and photo that from the template file.
It includes the show notes that were in the database.
It includes links to the media that were in the database.
Give me so far.
Static site, so it's a static site.
We can then or sync the files as well as sending them to www.hackerpublicradio.org.
We can also send them to the or sync site like or sync.hackerpublicradio.org.
Yeah.
And then we can update the notification or SS feed yet.
So anybody else with a pie running engine X.
So simple as you're sitting with a fiber connection at home.
And you got 50 megabits per second.
You put a Raspberry Pi on there.
You install engine X.
And you have a cron job that runs every hour.
And it does or sync dash AV dash dash partial dash dash progress.
Anonymous at or sync.hackerpublicradio.org column.
And then slash bar slash w slash HTML.
And that will update all the static pages that we've just generated.
And you're now hosting them on your local web server at home.
Yeah.
That was a very unbelievable, unbelievable.
Well, you set my brain into, well, how will that work?
And why would we expect that to be blah, blah, blah?
I'm just trying to resolve what you are, the design that you are sketching out.
Good.
Against what I know, trying to disengage my database head as it were.
And where a database is meant to be a real time representation of what's changing.
Yeah.
It is something where we're not.
We're also offering an interface over Git, which is about tracking change.
As well.
Except that there is potentially a delay between.
Change being made and somebody else getting it.
And all that sort of stuff, which you should cover.
So.
So yeah, it's.
Okay.
The guess.
The guess is the factory.
Right.
The database.
The guess is the factory.
The database is the is is located in the factory.
Yeah.
And what we produce is a bunch of static HTML files that links to the internet archive.
And every day we will go out and we will change one of those HTML files.
And we'll add a new show and we'll link to a new website.
And we'll modify the queue perhaps.
So every day a few files will change.
So if we're publishing those to a static files.
There's no reason why somebody else can't take all of those files.
And sort of them from a different location.
There are finished product.
There are website in the box.
Yes.
There is snapshot in time.
We're fresh.
Is that's an important content released for me to get because they are not.
Well, similarly with the whole static site idea is it's a snapshot.
And the next snapshot will.
Apply any any additions and deletions or whatever has have gone on in the in the intro.
And that's fine.
Yes.
Now remember folks.
HPR is not anybody who's left after this period of time.
HPR is not a auction site.
We are not a hospital.
Online thingy patient services.
We're not critical infrastructure.
We update our website once a day.
At least once a day.
At most maybe five times a day.
Yeah.
It is not.
And if.
If for example my copy of the web server is 30 minutes later than yours.
It doesn't really matter.
It'll sort itself out in a while.
Chill.
Basically.
Yeah.
Yeah.
So I'm just getting my head around that.
Yeah.
With the updates I'm currently doing to the IA stuff.
I was surprised to update a show recently.
And all of a sudden there was an editor's note on it on the IA.
And that was because editor's been added to the main database.
I hadn't made it way through to the to the internet archive version.
And you know, so that's a sort of in picture.
The sort of things that you would see.
And hopefully it wouldn't be as long a delay between the one and the other.
But because it's all being propagated out through existing mechanisms around Git and whatever.
So yeah.
Yeah.
Gotcha.
So I can understand that this is another approach from the point of view of having a database in Git.
This is probably the first use case where that was ever a thing.
Because as you say, yeah, that you know, how are we going to merge changes and conflicts.
And the point is we don't worry about it.
We make sure that only one of us is ever working on the Git on the database at any given time.
And that's easy to do because it's you immediately.
And we're now also going to the reservations table.
And we process shows based on a state of the show.
So I do not process any shows until they're in metadata.
What's that metadata thingy?
I can.
I've written scripts to handle, but it's not.
It's already you put a flag on us.
And then you don't touch that show until the show is posted.
And then once the show is posted, then the media can be transcoded.
And once you see media transcoded, you send it off into that archive.
So in the same way, the SQL shouldn't be that big problem because we will be changing different parts of that file at different different lines of that file.
So there should never be a conflict.
It is possible that there will be changes made by you and changes made by me.
But they shouldn't give a merge conflict shouldn't do.
What about his one my naughty bad brain just came up with?
What about if user X with his own copy of HPR says, oh, I've got my own copy here.
I could I could add a comment to it, couldn't I?
And then some by some magic or other, it will get back to the main HPR.
I want it.
And the answer.
But when we're doing the template thing, we'll be referring the commenting system back to the hack or pop.
Yeah.
I can not.
We're not going to send out the janitorial maps and buckets for everybody to have.
But the question is likely to arrive.
Why can't I send my comments by, you know, doing so?
No, you're overthinking a div.
And now focusing on getting chosen.
The comments will go back to the HPR website.
Once we can get rid of all the other crap, we can release that code as well.
I wasn't suggesting that we did it, though.
Mainly that that is a train of thought that somebody might have.
Yeah, but they have.
If they put a web engine in front of their website and they click on the comment,
it'll redirect to hhbshackapublicradio.org for such comment on PHP.
And then you're going, now you're making a change to the actual database.
So you're going over to there.
And the comment gets posted and then it comes through the commencing system.
Yeah.
And maybe that is something that we will send out later on.
But then the requirement is to be running PHP on your web server.
So I'm not sure we were there.
Yes, let's get the code for the majority of the website out.
Then we deal with the comments.
Then we deal with posting the show.
Well, it's important to maybe say that we're not building a multi-master HPR.
No system here.
No.
Single master with, well, we don't use, we don't use master slave anymore,
do we?
But single system with subsidiaries or something.
Yeah, so there'll be a source of truth.
Okay.
And that source of truth will be maintained in Git.
Yeah.
So we will use the Git system, which is a quite good system for determining who has the authority
to check in, check out and approve and whatever.
So we'll use Git as GitT or Git.
AnanasTos.com, which is a hosting provider.
Thanks, Josh, as the source of truth.
Now, to go on to the second part of my email, if you decide to run your own deployment,
you're free to look at the RSS feed on the Git site for a new commit,
check out the SQL file out of Git, imported into a Postgres database of your own.
Run NokiaBuild.
NokiaBuild.
Write out static data just to disk or sync them to your own web servers through directory.
And a web server then can serve pages to heck of public radio.org.
Raspberry Pi, Raspberry VI.org, which is likes websites.
Eventually, we will maintain a mirror.text file, which will allow us to use round-drowing requests
so that when a visitor comes to DNS,
the request can be round-drowed into heck of public radio.org,
heck of public radio.canfallen.com, heck of public radio.rasburyvi.org,
and hbr.myprovider.example.com.
As they all will be serving the latest static files,
you can only do this exactly because hbr changes for the most part happen once a day.
So there's nothing to stop, mic downloading everybody,
downloading everything to run hbr.
And then, for example, if an honest host is being de-dost,
then we can switch.
We can all agree on the email list or we can all agree on metrics.
Okay, that site is down.
And we now, Dave's website is the source of truth.
So Dave has a code now as gase.perloid.org,
and we point all our scripts over there for generating the website.
Yeah.
So what the source of truth is is what we say the source of truth is based on gase.
Couldn't be simpler, Dave.
Unfortunately, my ability to explain it to people is very hard.
The steps are available in our sync.
Just throw a web server in front of us,
and you can have, you can serve out hbr.
If on the other hand, you want to get involved in all the coding and all the scripting,
you check the stuff out of gase.
So everything's available to you if you get your rsync or on rcut.org.
Yep.
You want to do dnts one?
So dnt says that it's been a while since I used jeko.
Longer since WordPress, I should be able to contribute to migrating the existing page templates
to another type of template.
My understanding of SQL is very minimal.
So if I had the choice, each show would be a .md file with a metadata in yam or at the top of the file.
Host pages the same way.
Is there some reason of proper database?
Just for storage would really be better.
In any case, I'd like to be in the loop.
Should some sort of website working group be created to have these discussions
without filling up this mailing list?
Okay.
And some reason proper database storage would be better.
Yeah.
And I reply, yes, to build and maintain relationships between the horse and series to the show
is that's basically why we use a database.
The full RSS feed already contains everything that a database would provide,
but a database makes it a lot easier to maintain.
Now, I was of the opinion one stave that the RSS was enough that we've had this religious discussion you and I.
And you have convinced me over time that a light database has advantages for the purpose of
being able to generate the website because it's easier to loop through than having static pages,
static md files.
That's what relational databases do.
Yeah.
We really need to be careful about how far we go with that because we don't want to make it too complex.
Well, I found with my, I've got a database here which is mirroring the HPR stuff
or the aspect of the HPR stuff that we don't cater for in the main database,
which is what assets as I call them files and auxiliary files associated with the show.
And it also keeps the record of what a status is in relation to uploads to the internet archive.
So that ended up being relatively complex because I've got the episodes, I've got the assets,
I've got various other things in there.
And I ended up doing all sorts of complex relational things where you, not that complex,
but things where you needed to write selects with lots of joins and stuff.
But all of these are represented, all of the common queries are represented as views.
So you can hide all complexity relatively easy.
And this is SQLite, you know.
So yeah, but there's the problem because you're going,
oh, that's, we can hide all this stuff.
And then it's passed over to me.
And I'm having to go, what the hell is Dave doing here?
Hi, Dave.
No, we're talking about the morning.
Sorry to bother you all the day, but where's this coming from?
If you're writing a bit of code that says, give me all the stuff relating to shows in there,
the files that are associated with them, whether they're on the internet archive or not,
you don't query the tables, you query the view.
Yeah.
And now I want to make a change in the database because it breaks one of your views,
and that breaks my workflow.
So it can't be broken because if you design a database,
right, you will not allow values to go in there,
which will cause breakage.
I mean, I'm not saying I'm that person who's showing it that way.
Something else will happen, right,
where there's something else that we are legally required to do for that,
or that we need to change the creative commons,
a new version of creative commons,
or there's something else that we need to add to the database.
Now I need to change the view.
So I do need to understand this.
Mm-hmm.
Yeah.
It's just a query.
The view is just a query.
It saves you having to type all that crap every time you want to make the query.
Yeah.
It's the cool view.
And you can also do materialize views,
which let you change things via the view,
and you can do that in SQL Liar, I've discovered recently.
So, you know.
You are overestirating my ability to do stuff.
Yeah, yeah.
Well, I'll leave you instructions in my will, okay?
Thanks.
Oh, God.
Okay.
Yes, fine.
A little bit, but not too much, yeah.
Yeah, yeah, yeah, yeah.
I also do want to look at that file as a thing.
Is there another way that we can do it safely
that might be more processing power,
but would be easier to understand,
because now we're sharing the stuff.
And we both don't have like 10-year person.
The people who will be checking out the gist,
we want contributions, we don't want them to have
to have this 10 years of experience
that we have in the generous losses.
Yeah, yeah.
Well, hopefully we have various people
who are coming forward, offering to give some help.
Some of whom have database experience.
So, hopefully the sort of common view
that comes from such a source will be such that it is not
baroque and bizarre.
I was accused when I retired of writing baroque code.
Nobody else could understand to get phone calls saying,
Dave, what the hell is this meant to do?
Why are you doing that way?
And so, yeah, so somebody to unbaroque my craft
would be, would be good.
Okay.
And we're moving the discussion off to the meal list.
Let's move it out somewhere.
I don't know.
We have a matrix channel.
I actually, yeah, we'll see.
Is it possible to get a mySQL dump
of the current database?
Yes, I think that should be possible.
Let us do that after we change the email address thing.
The only thing now that concerns me is our upload site
does check the email address.
So, it might be non trivial, but we will do it.
Do you just encrypt it, eh?
Or we could just publish it without the email address
it's for now?
Yes, yes.
That was Tom's message, by the way.
Should you put Jesus?
Just before going on,
Rowan has asked if he can see a schema
of the current database.
Could he start thinking around a home brew
sort of static site generator.
So, showing handing somebody the schema
is no big deal at all.
In fact, maybe we should, we should,
we still got the old comments in there, by the way.
So, we probably just, yeah,
delete them now.
That was just there's about the braces.
So, yeah.
But the answer is absolutely yes.
And we can, we can probably just put it somewhere on the site.
If we think that, sir, that's a good idea.
Yep, absolutely.
And a schema for the, your one as well.
Yeah, yeah, yeah.
Yes, my postgres one is still in the state of flux,
but hopefully I can put that to the people
who are going to be involved and say,
look, what do you think of that?
And they'll say, it's probably a day of years.
Sufficiently complex for still,
any more on could understand it.
Yeah, yeah, written by any more on.
So, do you want me to read Chris's thing?
So, he says, this is Chris Zimmerman,
who's monochromicgmail.com.
And he says, I concur with Ken.
The rewrite is probably the easiest solution.
If the current is too shocking for the wider audience
to view, smiley bass,
the in-laws did a whole show on Git control,
static site generators a while ago.
Series one, episode 51,
HBR3549.
A concept that's been successfully deployed
in quite a few projects over the years I was involved.
The web page of the local log I support.
I think it was a common mistake.
The web page of the local log I support
probably being the most recent example.
And it gives a site name for the following main reasons.
It scaled extremely well.
Based on a versioning control system,
which is aimed at planet-wide massive collaboration.
IE the Linux kernel.
This is suitable from a few collaborators right up to the thousands.
If HBR can attract this amount of developers, smiley bass.
That's a load.
The generation of the HTML content is blindingly fast.
Depending on the technology and the size of the site,
the log uses a go-lying bass generator called Hugo.
Website generation from a set of markup files
typically only takes a few seconds,
generating the log with a total of 50 pages clock
in and around two seconds on an old Sky Lake I7
with an art with 16 gigabytes of main memory
and 512 gigabytes of SSD running jammy
a ballpark figure.
Seems integration in the Git workflow using mechanisms
like web hooks or similar.
A new version of the site is generated on the fly.
Once a new version has been committed
to the Git repo of the site.
Website performance is awesome.
As this is static HTML with JavaScript
and friends kept to a minimum,
content delivery is only limited by network performance
and local i.e. client-side rendering performance.
As I'm showing not only the own,
I'm sure I'm not the only host using some background magic
for automatic uploads of episodes
as podcast production workflow,
which is a pain due to potential changes
in the upload page structure, etc.
Which can easily break the workflow.
Who would have thought it?
I volunteer for the API design
Struck implementation.
Ken and myself discussed this some years back
and some initial design should be on the HBO Git Lab instance.
Ken, this instance Struck server seems to be offline.
Do you have access to the document I'm referring to?
Well, I dig this up.
Would it make sense to establish a core
of the Struck Working Group of volunteers
dedicated to the creation of a new HBO website
via this mailing list?
We can then take this offline
to discuss design and implementation,
including work, allocation,
timelines, etc.
via a separate mailing list
or other means.
Cheers, Chris.
And again, I would remind people
that if you're contributing to HBO,
we require a commitment of two years
at your association with the project.
And the reason for that
is that if you decide to quit
that we have time
in order to learn
and take over what was that you developed.
So if you're helping out,
yes, things can come up.
But we do expect
a long-term commitment from you
or this task.
Okay, was there anything else Dave?
That was, this has been
a monumentally huge show
of thinking of splitting this up.
Rowan did make some comment
on Matrix
to the effect that
he was suggesting something
in order to make sure
the community news didn't end up
as five hours long.
I think he had some sort of
premonition there.
So yeah.
Just two hours according to me.
But I left mine.
I've left my recorder running
when you didn't.
So yeah, there's only one other thing
that is to say we're making
to progress uploading older shows
to the archive,
like I.org.
And there's numbers
in the notes,
in case you're interested.
But anyway,
I managed to do 160
of them in the past month.
So gradually we're chugging through them.
So yeah.
And when that's done that law,
I mean, we've got
a good snapshot
of the live system
for perpetuity.
Yeah.
Awesome.
Awesome.
And what we want then
is everybody to be
or sinking it down
so that they have a copy
of everything as well.
Indeed.
Yeah.
Okay.
That's enough of that.
Tune in tomorrow
for another exciting episode
of Hacker.
Public.
Radio.
Yeah.
Yeah.
You have been listening
to Hacker Public Radio
at HackerPublicRadio.org.
Today's show was contributed
by a HPR listener
like yourself.
If you ever thought
of recording broadcast,
click on our contribute link
to find out how easy it really is.
Hosting for HPR
has been kindly provided
by an honesthost.com,
the internet archive
and our synced.net.
On this otherwise status,
today's show is released
under Creative Commons,
Attribution 4.0 International License.
