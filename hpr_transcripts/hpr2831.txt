Episode: 2831
Title: HPR2831: Interview with Robbie Ferguson
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2831/hpr2831.mp3
Transcribed: 2025-10-19 17:28:57

---

This is HPR Episode 2831 entitled Interview with Robbie Ferguson and is part of the series
Interview.
It is hosted by Ionic and is about 39 minutes long and Karima Clean Flag.
The summary is in this episode, Ionic talks with Robbie Ferguson about an audio enterprise monitoring system.
This episode of HPR is brought to you by archive.org.
Universal Access to All Knowledge by heading over to archive.org forward slash donate.
Hello and welcome to Hacker Public Radio.
My name is Janik, I'm the French guy from Switzerland and in this episode, I'm going to talk
with Robbie Ferguson about names, the Nagios Enterprise Monitoring System.
Let's go.
When it comes to monitoring your network and the machines on it, you have a lot of options.
But let's face it, none of those are easy to implement and configuring a monitoring tool,
whether it's an open source or a appropriate to run, is often complex and time consuming.
Well, someone took that matter into their own hands and made names.
What is names and how can it help us and what in French structure does it require?
Those are some of the questions I'm going to ask Robbie Ferguson, the maintenance of names.
Good morning Robbie, how are you?
Anna, come very well yourself.
I'm fine, thank you, it's Easter weekend and the weather is really nice here in Switzerland.
So much here.
I'm over in Canada and it's been raining all weekend and it was sunny all week long and then you get the long weekend
and that's when the rain starts, it's Murphy's Law.
Yeah, it's always like that.
So before we dive into what names is, let's quickly talk about another thing that you are involved in and that's category five TV in a nutshell,
what is it and how are you involved with it?
Sure, well, I'm actually a founder of category five technology TV and that branched out to become category five TV network.
But category five tech TV is our flagship show and that's something that I've been doing we're in our 12th season.
So started that in 2007.
Yannick, I used to run a small home based computer shop and what prompted me to start category five TV is that being kind of like my wife and I running a computer support company,
we found it was getting difficult as we grew to be able to provide support when people just wanted to call and ask for advice.
So they basically they're looking for free support over the phone or whatever.
So I started category five originally as a means of providing them a way to so these are like local computer users, a means of calling us up and submitting questions that I would then dedicate one hour a week to answering.
So it allowed me to focus more on my business, the money making end of the business while not cutting out the free support that we very much still wanted to be able to provide.
Being a very support centric company and and myself being very, you know, very mindful of people's needs for, you know, hey, they just need tech support and they don't necessarily need to pay $100 to get advice on what printer to buy kind of things.
So I started that and and by the end of season one, as we called it, it it kind of took off.
I had a co host by then and and we were getting views from all over all over the world, mostly in in America.
Since then, you know, we've we've evolved and we've moved studios. We're currently in a in the same studio that we've been in since season eight, which we rent.
We've got about 900 and some odd square feet that we rent and have converted into a video studio space.
So we're kind of surrounded in cameras and and we do that every single week. So we still hold true to that original the purpose of the show, which was originally just to help people with free support, but it's evolved more into like a technical review show.
And we do a lot of product demonstrations. We do some product unveilings when pine 64, for example, when they announce their new pine phone and pine tab and the new rock pro 64 or not the rock pro 64, but the rock pro 64 based pine book, the pine book pro.
The Wukash actually joined us on a show from pine 64 and unveiled that here. So so we we've evolved into a kind of general purpose tech show that people can tune into for free.
Cool. Seems like there's a matter for another heck of a video episode.
All right. So yeah, I know can I hold you another episode. Okay.
Right. Let's come back to the subject of this episode names first. Well, two questions.
Is do I pronounce that correctly?
It's NEMS Linux. It started out as NEMS, which is short for the Nagios enterprise monitoring server.
And it evolved into NEMS Linux because I needed a dot com.
Okay. So that was my second question. What does NEMS stand for? So the Nagios enterprise monitoring system. Right.
So, Nagios is the the heart of the system. Can you go quickly over what Nagios is?
A lot of us are already familiar with Nagios, especially if we work in the tech space and IT support.
Basically, if if you've got an environment that you're you're setting up computers networks and various assets, especially if we're a third party IT, we need to be able to know if there are problems that could arise in that network.
And what I'm talking about is proactive monitoring of the network assets. So for example, if if you're not running some kind of proactive monitoring system on on these networks and a hard drive crashes, let's use that as an example.
It's kind of, okay, now we've got to get in a spare. We've got to replace that. We've got to rebuild and we've got to do that. Let's say it's only single drive fault tolerance.
We have to hope and pray that it doesn't fail another drive during the rebuild process. So proactive monitoring on the other hand or using something like Nagios, you're able to know that there are smart errors on that drive.
We've received notifications as the IT admin that there are issues that are pending on that driver that it's in a pre-fail state or that it doesn't have enough enough allocated sectors for bad sectors anymore things like that.
So with that proactive monitoring in place through Nagios, the IT administrator can receive notifications typically by email.
It can be through any number of means, but it's really about just proactively monitoring any of the network assets. And it's so vast. It's hard to, you know, that's a good example, the hard drive failing or whatever, but it could be any number of things to the point where we are slogan on nems is monitor anything.
You can get like a you could put it in your garden. You could put an M server in your garden with a moisture sensor to tell you when it's time to water the the art.
There's no limit to what what you can monitor with us.
So Nagios is the heart of it. It's it's it's a general purpose monitoring system not only computers and network.
Absolutely. Yeah. No, it's it's a monitoring and notification system and you configure what you want to monitor and my my job has been to try to make it as universal out of the box as possible.
So it includes everything and that really comes down to the Nagios piece because Nagios is the heart of the system and it's the heart of like Nagios XI and check MK and and there are various projects that use Nagios under under the hood.
Or that are maybe forked from Nagios and renamed that's another another example as well, but it's very onerous to set up and configure and especially if your monitor like if you're setting up many networks if you're an IT company that has a hundred different customer networks that you're you're setting up.
It could be very time consuming and and quite technical to configure those networks and have to do it in a repetitive way.
So so mems really simplifies that entire deployment process.
All right. So nice transition because I was going to ask what's the the history of of the project. How did how and why did you start this project?
Yeah, essentially a boil down to that. I was deploying Nagios servers on customer sites. Now one particular customer site.
They had repurposed an old FTP server. So this is a big clunky ATX form factor like huge honken server that OK, well, we've got this hardware that's just sitting in the storage room because we've replaced it.
Let's turn it into a Nagios server so that it can be our proactive monitoring system and they ran that for years and when it failed, I said, this, this is ridiculous.
Like the amount of electricity that this thing is using, it's got four hard drives in it and they're, you know, they're all the old style spinning drives and it's using a lot of electricity.
It's generating a lot of heat in the server room that you're having to counteract with AC and really the monitoring process is so comparatively lightweight for, you know, you don't need that kind of hardware to throw at it.
So then this was around the time, you know, that raspberry pi was really starting to gain momentum. So, you know, people are realizing that I can do a lot with a much smaller form factor with less power consumption with less heat.
And so NEMS was my, well, NEMS 1.0 was my first attempt to migrate that what used to be a big, you know, server OS or server monitoring system on a dedicated piece of hardware into a raspberry pi.
OK, so personal need for your business, that's what drove the first version of this project.
Yeah, essentially, I mean, that's what brought about the idea. It was so much bigger than just this one customer. I looked at it and I said, why hasn't someone done this already? And then, and then seriously, and then I got online and there was in fact a project that was underway and it was, it was called Nagios pi.
And I got looking at that and I was like, OK, great, somebody's already done this and I and I looked into it and it was running a two year out of date version of Debian on it and hadn't been updated in a while and and there were some issues with certain configurations that were problematic.
And so I said, OK, well, this is a good starting point, but it's not seeming to be maintained at a level that's suitable for enterprise use.
So, so then I said, OK, well, yeah, there's somebody doing this, but not at the level that I think is acceptable for business use.
OK, we're going to come come back to that little bit later. Is this is this your own project? Sorry, or do you have a team in the in the project?
It's it's kind of all me in a way in the way of the actual development. We've received a couple small PRs here and there.
But what has evolved Yannick is through the growth of our community. We have folks like ultimate bug hunter who is in our discord and is working as part of like a pseudo beta team.
So where earlier builds, yeah, I still develop all the software myself and I do all the programming, but it's become very collaborative with the release process.
So there are people like him who are testing the software for me so that I'm not doing everything because before it was like, OK, I write the software, I compile it and then I deploy it and then I test it and then I release it.
And sometimes I'd miss things, right? So a release would go through a few builds before it was really ready for public consumption.
So having folks that are part of this kind of beta, like an unofficial beta team, if you will, which you know at this point, we're probably going to start solidifying roles and things like that.
But so there are people that are contributing in various ways as best they can with, you know, with their capabilities as well.
How old is the project? I launched it in May of 2016. So that's when the need first arose and then I've been bringing out a new major build.
It started out every six months. Now my last version 1.4.1 was a very solid build and it lasted nearly a year with NEMS 1.5 just being released this year.
OK, is it something I have to install on top of my operating system? No, it is the operating system. So NEMS Linux is a full deployment that you would just put on a Raspberry Pi as the example.
That's kind of, you know, that's our biggest user base. But with 1.5 and 1.4 as well, but certainly with 1.5, it's branched out to other single board computers.
And part of that, Yannick is the whole, you know, one of the goals is obviously make the super simple to deploy, make it really easy to use. It's all you like UI based.
So Nagios is very terminal based. You've got to edit the scripts yourself. You've got to like modify it with nano or VI and then hope that it works when you fire it up and that system D will be able to launch the Damon.
But with this, it's all with NEMS, it's all UI based in your web browser. So the single board computer becomes like a web server that you access through your browser and configure it that way.
So I've branched it out to a few old-roid boards like from hard kernel. So we've got the XU4, which covers XU4, HC1, HC2, MC1, XU3 boards. They're really good performers. We've got the C2, the brand new N2 that was just released. NEMS is available on that as well.
Plus we work with Pine64, so we're available on, I think, pretty much all of their boards. We're just waiting on a development unit for the H64B. And friendly elect. We're starting to work with as well. So nanopie M4s are supported.
So really, it's a full operating system just like, say, Raspbian that you install on your Raspberry Pi or other single board computer and it becomes the OS for that single board computer.
And do you use the standard OS on the base or did you write everything yourself?
It is based on Debian Buster. And we're actually kind of an interesting fact, but Debian themselves have put us into the derivative census.
So NEMS is, in fact, an official Debian Buster, I guess, based release. So it's an officially recognized distribution based on Debian Buster.
I had a look at the list of supported platforms. As you said, it's really impressive. How do you manage to build names for all of those platforms? Do you have one of each?
The boards? Yes. Yeah. That's the fun thing about single board computing is that you pretty much, in order to do it right, you've got to have a test board for every platform that you're going to support because you've got to be able to compile against that board.
Everyone, even if they're the same process with the same SOC, they're going to have little things about them that are different.
So, yeah, the only exception really being the Raspberry Pi. I have tested on the A+, but I haven't actually run NEMS server personally on an A+, so that's the one exception.
But when it comes to the other board manufacturers, especially Pi in 64, there has to be a board to compile on for each version that I release.
And do the Debian does help with that, or do you actually have to spend money on by the devices yourself? Both.
Both, yeah. I'll buy boards here and there. Sometimes boards are provided by the vendor who wants to get involved. Pi in 64 is a very community driven company. They're fantastic.
Odroyd hard kernel, I write, and they publish my articles in Odroyd magazine. And with that, there's a kickback with each article that I write.
And so I use that kickback to intern support NEMS Linux by providing hard kernel boards so that I can support more of those.
So it's a lot of give give and take and referring back to category five technology TV. It's kind of interesting too because some of these vendors work with category five.
They want their products reviewed on our tech broadcast, right? So then that it's kind of it comes full circle. So we do an unboxing and a product review and then I port NEMS Linux to it.
Nice. Nice. How easy. Let's go back to the software itself. How is it? How easy is it to install and configure? Let's say I want to start monitoring my system. I have, I now have my Raspberry Pi 3B plus I have a SD card. So what's next?
So you'll go to NEMS Linux.com and you're going to click on for the downloads and find the board that that you're going to be deploying on and you're going to download the image just like you would any distro for an SPC and use etcher or whatever tool you want to use to to burn that or image it to your card.
And then you boot it up and out of the box, it's going to tell you what to do as soon as you hit the IP address. If you have a connected TV to your single board computer, it's going to give you some basic instructions and feedback on the screen.
It's can automatically resize itself and everything else, but it'll tell you the IP address of the system so that you can access it through your browser and then when you do that, it will tell you what you need to do next, which is to do what's called a NEMS init or an initialization.
So that's where you set up your user. It's basically the only time in NEMS that you really have to go into the terminal.
So you do that and I also provide through cockpit browser based terminal access. So if you don't have putty or you don't have a Linux machine with with the terminal, you can just open it right in your browser as well and do that process.
So that just asks you for your, you know, where do you want your notifications to go, what you want your username and password to be. And then it takes care of all the owner's typical installation tasks that normally you have to do with Nogios.
So it sets up the user accounts for all of the components of Nogios, including the like the UI that you encounter in the browser.
And it takes care of your self-signed certificate generation. So every NEMS Linux server has its own unique certs so that we can prevent man in the middle attacks and things like that with people, you know, sometimes distributions have that issue.
A default username and password that everybody in the world knows and then someone puts it live on the internet and guess what.
So yeah, I do my best to protect our users as well.
So that's that's really all it takes to get up and running. And I can then you access it again through your browser once it's initialized instead of seeing a screen that tells you it needs to be initialized.
You're going to be right into the NEMS dashboard, which has all the configuration options and kind of, you know, it's a UI that's bootstrap UI that you can navigate pretty easily.
It can be tough if you don't know Nogios to understand how to configure a Nogios server. Now I've taken everything out of the terminal.
So there's no more having to use CFG files and things like that. It's entirely done through the browser.
But if you don't know the relationship between say a host and a service and NRPE versus, you know, whatever you want to use, then you may have to look at the docs or, as I mentioned,
you know, if you don't know the code, right magazine has been publishing articles about NEMS that I write those are fantastic ways to get started because they're very like here's a great introduction to NEMS.
Here's how to add a host. Here's how to monitor your website to see if it if your web host is down how to how to do that general configuration.
So I would encourage you to check out the articles in the news section on our website as well. And that will help you to get started if you're not too familiar with it.
So it's a bit complex, but it's still usable by someone who is not completely into network monitoring and things.
Well, it's vast. Like there, as I say, you can monitor anything. So if you've never done that before, it's like, well, where do I start?
So so I do my best at the documentation is is lacking right now as a sole developer. It's, you know, I do my best to infuse good documentation as I can.
And it's growing as we go. I have a community forum set up. We've got a discord server and a wonderful community who have evolved to to be a community of experienced NEMS users.
Having done this since 2016 and we have about 650 active servers as of today. So the community also is providing a certain level of support as well.
Okay, so yeah, lots of community support that's that's very nice because that's really really experienced by really users and that's that's probably nice.
You said that NEMS is based on Debian Buster. Do you actually port yourself Debian on those single board computers or do you?
Yeah.
What I do, inevitably I want to get to the point where I'm compiling Buster from my own build base entirely, but what I do, Yannick, is I work with folks generally right now.
It's folks who have released Debian stretch for the various single board computers. Then I, I booted up and kind of stripped down the the distro to be just a vanilla server OS upgrade it to Buster.
Set up the repositories and and make sure everything's working and set up, you know, the various things like auto resize on reboot and on on first boot.
That kind of stuff. And then I create what I call a build base image. So those build bases are they stem from the work of other folks open sources. Fantastic that way. Like most most of what we we do is stemming from the work of other people. So, and so what I've done is I just try to make it so that there's, you know, that it's easier out of the box to get started. So the build base is what I used to create for myself.
So that when I build NEMS Linux, I don't have to continually go back to Debian stretch upgrade it, change, change everything, you know, clean it up and get rid of some of the the extra stuff that's bloating the the distro.
But I decided this year that because I'm already creating that Yannick, I I wanted to give that back to the community as well. So I've released the build bases for all the single board computers.
And I'm going to continue to maintain that as well. So those are available not through NEMS, but on my blog, which is bald nerd calm.
Easy to remember, just look at my picture. But so that's the Debian Buster build base. So like if you want to get it for any of those single board computers, it's just a basic, you know, unsupported Debian build with nothing added to it other than the the file system resize script.
And it's just a good starting point. So that's where I start NEMS with.
Okay. In the name NEMS, there is the word enterprise, usually that word is opposed to community or open source. So is NEMS really free and open source software?
Or do you have like a subscription or a license or something like that for another version of NEMS?
Well, this is this is something that, you know, I've given a lot of thought to Yannick because I want this to be a great open source free project that you can just download and install and use.
So I had to figure out a distribution model that would work in such a way that I do also need to inevitably afford to do it and and afford to provide this for free.
I also need to eventually it may become a supplementary income, right?
So that I can continue this as a commercial product, if you will, or at least a commercially viable product, I'll say.
When I say commercial, you think it's cost money. No, I don't want to say that. It's free.
So so the distribution model I developed for NEMS is it's absolutely free for all single board computers.
You can download it, install it, set it up and use it. There's nothing in it that is crippled or taken away. However, so here's here's the caveat to that.
If people contribute through Patreon, there are some features that you'll get that are entirely unrelated to the usability of NEMS, but that just are my way of trying to add a little bit of value to those who donate.
So the key one with that is what what's called NEMS cloud services and it's not required.
It does not you don't have to have it, but it's a nice little bonus for those who decide to contribute.
So what it does is it provides offsite backup of your NEMS configuration.
So if your SD card on your Raspberry Pi NEMS server fails, you can restore it from the cloud and it's very, very easy to do that.
So you can just basically reflash to another card, boot it up, restore and you're done.
So that said, well, that sounds like a great feature Robbie. So I really want that. So that makes it a commercial product.
NEMS includes a free out of the box built in backup, but you just have to back it up yourself locally or you can put it on your own cloud service or whatever.
So there's instructions in the documentation on how to set it up for automatic backups with a cron job and things like that.
So that's just a supplemental service that you can get by donating.
And then there is there's a virtual appliance and the virtual appliance is only available to patrons, but a patron can be a dollar a month.
So that is really because that is very much like the virtual appliance is very much focused on the enterprise.
That's something that a home user or somebody who's really looking for a free product is probably not going to need a virtual appliance.
They're going to stick it on a single board computer anyways.
So that's really the only difference.
So I think it's a good model. I think it works well.
I think for the most part, people understand my motivation and how I'm setting that up so that so that I can be compensated for some of the work that I've done, but at the same time be giving it away for free.
Yeah, sure. It's only natural that you get you get a little bit back from from this project.
I hope so.
I think a lot of folks, a lot of folks who have set it up on their who have built an audio server have installed nems on on a single board computer and they're just floored like you see in the in the forums and people who come on to Patreon and they sent comments and just saying that wow, this is like exactly what I needed.
And I guess it's comparable like I'm not at that level where, you know, hey, we're like Nagios X I know, but it we're working toward that kind of a product, something that is a very commercially viable product, but is still available for free.
And you can download it for any of the single board computers. So just to be clear, it's free on any single board computer that I support.
That's awesome. That's awesome.
So Patreon is one way to finance the project. Do you have any other ways to make a few bucks here and there?
No, there's a donation link, although that said, because of category five's affiliation, like being that I'm the founder of category five, I do include like if you want to if you want to shop through our Amazon affiliate links.
And affiliate links and things like that, that's all like, hey, if you're going to buy a Raspberry Pi on Amazon, you can click that link and so that does help. So I shouldn't say no, but that's that's more like that's a user's choice to user affiliate link and that does make a difference.
Okay, I always ask this question to project maintenance, how do you manage the best factor as in if you were to say tomorrow, oh, I'm tired of this, I'm giving up, I'm going away in the desert island and I don't want to hear about that anymore.
Is there things in place for the projects to go on?
The project is entirely hosted on GitHub. So there are certain components like the cloud features and things like that that are obviously just in in our EC2 instance and not publicly available, but the systems that communicate with it are in our GitHub.
So somebody could theoretically just take over the project, the the compilers is it's called nems and men nems and men is the scripts that I use to actually create each build.
So everything's there really and it's all open source stuff. So I mean, it really just is my my contribution to the project is just making it works so that
so that you don't have to set it up yourself.
So there's no magic in building the project and everything is available.
There's some neat stuff under the hood and there's some some really cool scripts that are included to make things much, much easier to set up, but it's all available on my GitHub.
All right, you said earlier that you were lacking documentation, is there a way for people to contribute and help you with that or with anything else?
Yeah, there's a community contributions forum on the community forum.
So you can actually submit some some folks are working on I've heard through the forum that there are some people who are working on writing some documentation and they're going to just post it in there.
And so once somebody provides documentation in the forum, then I will actually add it to the wiki and make whatever modifications are needed to you know to correct things or whatever needs to be done there.
So that's probably the best way right now. There's no way for somebody to just log into the wiki and and start submitting and that's partly because I I don't have the time to be like a super moderator.
Yeah, it's going to say it's probably better if it's not really open.
Exactly. And some folks, you know, especially companies have the resources to do that. So somebody says, well, why don't you just give people editor access to the wiki?
Well, because then I have to be super moderator and monitor every single thing that that happens. And I don't have time for that. I'm too busy with development.
Yeah, it's understandable.
Well, I think we've covered everything I wanted to cover. Is there anything else you want to mention?
I mean, that's really nams Linux and a nutshell. If you want to monitor a corporate network like in my focus, I sometimes sound like I'm talking mostly enterprise stuff.
And in the name, Nagios Enterprise Monitoring Server, it seems like it's very much business centric. That's because of a goal to provide something that is suitable for business that's economical.
And that also comes from my desire to see this as a project that can be used in the education sector or in places where something like this would be extremely beneficial to the IT team.
But where they may not have the whether it's the funding or the ability to get approval for an IT admin to create something like this.
So it makes a really fast deployment for that sector. So that's partly why my focus is on enterprise. But I want to be clear that this is very much something that you can use in your home network.
I use it in my studio. My studio has, you know, a very finite number of computers. We're not a big place. I said it's 900 square feet. And it's really just, you know, me through the week.
So it's fantastic for letting me know that, hey, my backup drive is nearly full. Okay, I've got to add some more capacity to my backup driver, maybe clean up some old backups.
This is great for for the home network for let you know if your wife's computer is having some trouble.
Probably you can be, you know, super heavy.
Yeah, probably the most important client you will ever have.
You want to be a proactive man.
Okay, can you remind us the URL where we are?
It's simply nemslinux.com. So NEMS linux.com. Take a look around. And you can certainly download the the distro there.
There are some links to some, you know, some folks who have posted some some things online about nems bloggers have sometimes mentioned it. And I try to catch that.
If you do blog about it or if you do a video about nems, I'd love to hear from you. And I'd love to be able to post that on the website as well.
And again, I really want to direct you toward those odroid magazine articles.
I have a few of them listed in the news section, but they've published quite a few.
So if you actually go through the archives at odroid magazine, that's a great way to get started with nems. And I say that and you think, okay, well, I'm not using an odroid device.
I'm using a raspberry pi or I'm using a pine 64 device. Remember that nemslinux is identical from system to system.
So if you look at the instructions in odroid magazine to set up monitoring for your server, it's going to be exactly the same configuration on your raspberry pi.
It's just that you're using a different board.
Okay, that's cool. That's pretty neat. So just a thought. So that means if I have an odroid board, I backup my configuration and then run another instance on the raspberry pi and I restore my configuration and it's going to work.
Yeah, sure can. And interestingly enough, this is this has been used by a lot of folks to upgrade to another platform.
If you look at, I also have a service that's powered by nemslinux. It's giggle score.com and giggle score.com.
It's a neat service that I decided to put together just a quick bootstrap site because I've already got the benchmark data from every nemserver.
So I know how each server is performing. This is anonymously provided. This is not something that, you know, identifies each server or anything like that or identifies the users in any way.
And you can read about that in the documentation if you have privacy concerns. It's all compliant and everything else and very much security is a concern of mine.
But the data as far as so the speed and the performance power of each single board computer is logged.
And I use that data to be able to recommend which single board computers going to work best in certain environments.
And with giggle score.com, I've taken it one step further and I've compared those, those numbers that performance values to the US dollar price to purchase each board.
So with that comparison, you can see the value of each single board computer versus its performance.
So you can easily, much more easily compare, say, an Android XU4 to a Raspberry Pi 3.
Because that's pretty tough because the price isn't the same and you think, okay, which one is actually better for the value.
So giggle score.com helps with that. So that said, people will say, okay, I want, I want to go with an n2 because Android's n2 is sick.
So on your Raspberry Pi NEM server, whether you create a local backup or you use the offsite service if you're a patron, then you boot up your n2 with NEMs Linux, the n2 version of NEMs, and you do a restore.
And everything's right back where it was just that you get the performance.
Nice. Yeah.
And that's another thing that was always lacking from Nagios.
All right. Well, thank you Ruby for joining me today. It was very, very informative.
Yeah.
And yes, maybe we'll talk about category 5 TV on another episode.
Thank you. Thank you for listening to this episode of Hacker Public Radio.
I will be back in the near future with more content in the meantime.
Take care of yourselves. Ciao, ciao.
This episode of HPR is released under a creative commons noncommercial biotribution license.
The sound used in the opening and closing sequence is speaker X clash by Daniel H.
Release under a creative commons noncommercial biotribution license and available on Javendo.
You've been listening to Hacker Public Radio at Hacker Public Radio.
We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by an HPR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the infonomicon computer club
and is part of the binary revolution at BingRef.com.
If you have comments on today's show, please email the host directly,
leave a comment on the website or record a follow-up episode yourself.
Unless otherwise status, today's show is released under a creative commons,
attribution, share a light, 3.0 license.
Thank you very much.
