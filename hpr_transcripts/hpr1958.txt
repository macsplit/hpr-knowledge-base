Episode: 1958
Title: HPR1958: FOSDEM 2016 K building level 1 Group A
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1958/hpr1958.mp3
Transcribed: 2025-10-18 11:59:53

---

This is HBR Episode 1958 entitled Fostom 2016 K1A. It is hosted by Ken Forden and is about
111 minutes long. The summer is Fedora, OpenSusa, Illumos, OwnCloud, Enlightenment, Tizen,
Collab, KDE, Libra Office.
This episode of HBR is brought to you by an Honesthost.com. Get 15% discount on all shared
hosting with the offer code HBR15. That's HBR15.
Better web hosting that's Honest and Fair at An Honesthost.com
Hi everybody. This is Ken at the Fedora booth and I'm back talking to you.
I work for Red Hat as a desktop engineering manager and I'm also Fedora Ambassador and Fedora
Packager and a couple of more roles in Fedora.
Fedora is a Linux distribution that is kind of lead-nedge I guess. Or would you say that?
Currently we are trying not to position as a leading-edge. I would rather say leading-edge because
we really currently have been trying to provide like early-polished product, not something
that is like bleeding new and could break people's computers, but something that is like
titanium and polypolished used. So that's why we are the use leading-edge term then
bleeding-edge. Okay. Leading-edge it is. And what has been happening in the last year
and what have you planned for the coming year?
Well Fedora 23 was released just like two months ago. So currently we are in the
Fools development for Fedora 24 and I can speak for example for Fedora workstation
which is one of the Fedora-players that is focused on desktop users.
And I think the like the biggest topic of Fedora 24 in desktop era is definitely
the Wailand which is like the new display technology that should one time replace
X-server which has been with us for like I don't know 25-30 years. So it's going to be
a huge change for the Linux desktop and we are still not 100% sure if it's going to be
default in Fedora 24. Fedora would be affected by the first major distribution
to add up Wailand as a default. As I said before we are trying to be leading-edge so
we won't push it as default until it's already ready. And currently it works pretty well.
Users can use it, can try it already in Fedora 24. You just went on the logging scale
and we just pick GNOME on Wailand instead of the standard GNOME. So it's going to be just
a matter of the default option but still it's going to be pretty big I think.
Otherwise for example my team that recently submitted a proposal for inclusion of
we call the project Q GNOME platform which like KDE and GNOME has always been like
to the different wells like the applications were not well very integrated into
like GNOME applications into the KDE plasma and KDE applications into GNOME.
So with Q GNOME platform we like to improve this. So for example the Q GNOME platform
should do syncing of settings between GNOME settings and KDE settings. So for example
if you set some font in GNOME it should be reflected in KDE and KDE applications as well.
The same for example for scaling. If you scale the fonts or scale the windows
it should also scale applications the same way in the application for applications
from the other environment pretty much.
Is that part of the open desktop initiative or is that just independent to Fedora?
Well it shouldn't be Fedora only and on the other hand it's not part of any
like larger project. We have a repo on GitHub so it's open source and
a distribution can pick it up later if they find it useful. But currently it's
really like in early stage we like to support at least some settings like for example
the font settings or scaling for Fedora 24 but then we like to build on that.
So that really our users use Fedora workstation which is based on GNOME
they don't really have to install any other configuration tools you know
to make KDE or acute applications behave the same way.
No applications behave on their computers.
One of our hosts has the question with regards to file dialogues.
That you're on a GNOME system for instance and you've got a particular type of
file dialog and then you open a KDE application and it's got another file dialog
and you open up I don't know Firefox it's got another file dialog.
Is there a way to is this too simplified to ask this to be while I'm in GNOME
please use a GNOME file dialog. If I want KDE please use a KDE file dialog.
Is that too much to ask or is that just a complete madness engineering effort?
I don't know the answer to this one.
I don't think it's that difficult on the other hand it's pretty much up to the
application and if that application calls you know cute dialog then cute dialog
shows up so it doesn't I don't think the applications ask you know what
desktop environment you are running on and then pick the dialog they want
that would be I think ideal on the other hand it doesn't work that way
unfortunately everything would have to be rewritten to use a common file wallet.
What we for example are trying to do besides that the cute GNOME platform
which is mostly about the syncing settings. We also for example
ported a wider theme which is the default theme for GNOME to cute so at least
the applications and the like UI and so on buttons look quite similar to GNOME
so if you run KDE application on GNOME then the application doesn't look exactly
the same because the widgets and so on are not like one to one but on the
other hand they they look pretty pretty close so did some kind kind of
kinds of consistent consistency is there but yeah it's still a long long way
to go but it that's one of our like major tasks for the future to make those
two worlds like closer. So anything else I missed that's coming up this
year? Oh let me let me think I think they have at least for the desktop
that the way land and we also had other developed areas here while I go
today he works on fleet commander which is also pretty nice project
because what the Linux desktop has been missing is some tool for
managing large deployments like imagine you have for example 1,000
stations in some company or organization and you want to manage them on the
desktop level for example to make some default settings for different
groups in the organization install different applications and so on
have different wallpapers whatever so and fleet commander should do just
this like you and it's actually pretty innovative how you make such profiles
because windows have had this for a while but to change some settings and
windows you need to go through the registry to look up the settings and
change it in the registry but if it's fleet commander it's actually much
more intuitive than you just start a virtual session where you make the
changes like you would do it on your own desktop and on the
background there is a demon there is actually attacking all the changes
between the default and the current settings and then once you are done
you just save it as a profile and then through fleet commander you can
push it to users computers so that's another thing that is coming to
federal 24 and I think it would be pretty nice implement for
actually larger deployments. Thank you very much for your time and good
look with the rest of the show. Hi everybody I'm at the open
Sousa stand and I'm talking to Sarah Julia Krish so can you tell us what open
Sousa is I'm higher here. We are open I open source project
Alinux project with open Sousa leap and a tumble with we have different
distributions the rolling release and our stable release tumble with
our rolling release and leap 42.1 is our stable release from November
2015 and you're part of the who owns open Sousa now.
Community project or is it a run by an organization?
That's a community project with sponsors in the background.
We get our packages from our community project tumble with and Sousa
Linux enterprise by Sousa. Every year we will create one release in November
parallel to Sousa Linux enterprise of various service packs and we will
get packages by them and from tumble with it and come by an event.
Are you working for Sousa or are you here as a volunteer?
I am a volunteer. I work for Brentmaker in Karlsruhe as a system
engineer and yes I am a volunteer at open Sousa.
So why should somebody run open Sousa instead of I don't know Fedora
or sent to us or something?
That's the love. The love to open Sousa.
I learned with Sousa Linux enterprise server during my education as a
computer science expert for systematic creation and after that I was coming to
our open Sousa conference, our conference for the battle pass, volunteers
and all who are interested for that and I switched into the project then.
One of the strongest things that people have said about Sousa is the use of
Yast and one of the things that I fear is that Yast does not respect
configuration file changes. Has that changed or can you now also edit the
configuration file?
You can do it. I have spoken with the team leader of Yast.
He said he want to have it in the future so that Yast would read the
configuration files and would show you were changes then.
So that you should have a change log after that.
For the security that Yast wouldn't remove anything.
So we have got snapper in the background that creates snapshots every day.
And if you are seeing that anything would be changed and you want to have it
back, you can look into the snapper and can roll back it.
So what's the features have been, what have you been doing this year and what
do you plan to do next year?
What I am doing here.
What has the open Sousa project been achieved in the last year?
In the last year we have created our open Sousa leap 1242.1.
What is that?
That's our stable release. We have changed our development life cycle.
So that we have got a yearly release and we publish it parallel to Sousa
Linux enterprise service packs.
Okay, very good.
And what's the plan for this year?
Any new features?
We will see it.
Everybody can contribute and say what you want to do in the next year.
That will be published a short time before the release.
We will be reviewed by our review team.
And after that we will see what would be new then.
Okay, you have some interesting devices here.
Can you talk to me, tell me what they are?
We are Raspberry Pi's here.
Let's open Sousa run on the Raspberry Pi then.
That's the open Sousa.
If you want to install open Sousa on Raspberry Pi, you can find the instruction on our wiki.
You can use Google for open Sousa Raspberry Pi and you can find the instruction.
You can't use our easy image here on the table for that.
Use the instruction in the wiki for that.
And is that an up-to-date release?
Is it the same software as this but a different version?
It's the same software but a little bit smaller.
Is there anything else that I missed that I should have asked?
Is there anything else that I missed in the interview that you want to tell us about?
I don't see any problems.
Okay, very good.
I'm at the Illuminous stand and I'm talking to Dan McDonald.
Hi, Dan.
Thanks very much for the business card.
So I'm a bit confused here because I'm looking behind and I know that this Illuminous has something to do with Solaris.
And I see all sorts of other signs on me.
Could you just give me a brief overview of what we're talking about?
Illumous is the open source continuation of what used to be known as open Solaris.
Oracle closed open Solaris but you can't really kill an open source project.
Illumous took over where open Solaris left off.
Illumous, like Linux, isn't big enough.
It doesn't have all the components.
It's more than just a kernel but it also has user land libraries and some commands.
But Illumous by itself isn't enough to instantiate an operating system.
So Illumous has distributions.
And the other signs you saw behind us in our booth are the Illumous distributions.
Not all of them but the most well-known ones.
NOS, a server-focused one, open Indiana, the continuation of open Solaris on the desktop,
a joint smart OS which is a wonderful hypervisor and virtualization platform.
And some of the more, some of the less known ones are up there as well.
Like a triplets which uses system 5 packaging or Delos which uses APT or Debian packaging.
And we're going to be here at this booth for both days of Fosdom.
And I'm giving a talk on Illumous at 5 tomorrow, which is sort of a bit of what I talked about here
about how Illumous works and what it does.
So I guess a lot of server people are still running will switch this given that Solaris has been.
Yeah, if you liked all of the goodness from open Solaris but don't want to have to deal with Oracle,
yes, you should definitely be trying an Illumous distro and people are building their businesses and their livelihoods on it.
In addition to the distros you saw out there, there are appliances out there like Nexenta Store and Delphix.
Delphix is a database appliance that does wonderful work using ZFS.
And Nexenta Store is a software-defined storage appliance.
Okay, very good.
And you're giving a talk tomorrow.
So by the time people hear this, this will be available on the Fosdom site.
Thank you very much.
Was there anything I missed or anything you'd come up this year that we should know about?
If you miss open Solaris, you should definitely give Illumous a try.
There are paid support options too if your company is looking for something for a throat to strangle.
So there are paid support options for Smart OS and for Omnios.
And I'd like people to try Illumous because it's all the stuff you remember from open Solaris.
So I would just go to the Illumous.
Is that a separate distro or is that the...
Illumous is the top most upstream.
It's like Linux.
It is the center and then you have Illumous distros.
So I could go to open Indiana, familiar.
Open that org to download open Indiana, Omnios.omni.ti.com to download Omnios, etc.
And then just put in the CD and boot it and voila.
Or the USB stick, yes.
Very cool. Thank you very much.
I'm at the on cloud boot and I'm talking to your sport plate.
I just stay on cloud is a partner.
It's basically kind of a self hosted open source draw box like technology.
So you put it in on your own server.
A lot of people run their own server, VPS or private at home.
And you can then boot your files in it.
Or alternatively mount files that you have on your NAS or on FTP somewhere.
And then make them available via own cloud for syncing and sharing.
You have desktop clients, Windows, Linux Mac.
For Android and iOS or your mobile phone.
And you can share and view the web browser, send people a public link with the password.
Or you know, yeah.
Then the nice thing is you can also add apps.
So on top of the draw box functionality, you can add like apps for playing music, video or calendar contacts, mail.
Yeah, that's all about 200 apps.
So you can add a lot of functionality.
And you use standard portacles like IMAP and Ikell and stuff?
Yeah, I mean, own cloud is pretty much completely web dev based.
So the client communicates with the server via web dev.
The mobile clients do the even the web interface itself talks to web dev to the server.
The calendar app talks cart dev to the server, the contacts app cart, et cetera.
So it's all very open standards based.
Okay, very good.
So what developments have you done this year?
What has been the major achievements this year?
I think in this year, the two biggest focuses for last year than in 2015 were really performance and usability.
I mean, with own cloud 8.2, we did a big interface work, you know, and made a lot of things.
Like came a new sidebar which makes it easier to share files to see what's going on.
So you have like an activity feed of every filing.
You can see like, oh, it was updated by that person, shared by that person.
It was, you know, downloaded by that person.
So that gives you a bit of an idea of what's happening to your files.
You can also see that centrally.
So now cloud 9, we will overhaul the notifications and this activity feed.
So you get an activity feed that shows when people, for example, comment on the picture.
And so you get kind of like a Facebook page, you know, feed of like what's going on with your data.
And at the same time, you get notifications from somebody shares a file with you when you get a pop-up that says, hey, you know.
And the top right, you get this little, you know, clock alarm thingy that says, hey, somebody share the file with you.
Do you accept it?
And this also works between servers.
So one of the nice capabilities of own cloud is this federation.
So if you have a friend who has no cloud server, he can share a file to you by just giving your name at your own cloud server address.
And you get an notification, you can get a file.
But they're still on his server.
So he stays in control.
It's like you stay in control of the files that you share with others.
At any point, you can not share.
And they're gone.
Very good.
That was my next question.
So now that's it.
The interview is over.
So what do you, what have you, you already covered what you have planned for the year?
What, what am I seeing here on the desk?
Yeah, so we have a couple of projects that are, well, it actually came to us, right?
So a couple of months ago, Western Digital came to us, you know, these guys are in the business of selling hard drives.
So they're always looking for ways to sell more.
And the idea of having people run their own cloud at home must be very interesting to them.
So they have this, this kit.
They call it the pie drive kit, which is essentially a hard drive.
We have a couple of cables in the nice case that they sell with one terabyte hard drive as a kit.
And you can connect it to your Raspberry Pi.
It's pretty folks.
Oh, it's very cool.
It looks really nice.
So they were thinking like, hey, you know, wouldn't it be nice if we could, I mean, they're selling this to people for things like Cody.
And I was a media player.
But they had been experiment with own cloud.
And they thought, why don't we talk to the own cloud guys?
So they came to us and said, hey, can we do something together?
So what we're doing now is we're working with them on creating a kit which comes pre, you know, with own cloud on it,
out of the box with a nice own cloud logo on it and a nice, you know, talk to with no cloud logo in it as well.
And an SD card which will come in with own cloud as a server pre-installed with some tools to make it easy to set it up and to get it for the firewall and configure your router and all that.
So we're going to do an initial batch of about 500 of them which will come out in the next two or three months.
And if these 500 do really well and people like it, you know, we'll improve on it and we'll do a bigger batch together with them.
It's them doing it, right? We're just providing a software.
So that's absolutely excellent.
And this one?
So the other one, this is, well, I'll let you feel it later on but it's really heavy.
It's a pure aluminum cube with in it a O-Droid board.
So this is a product from spree.me which is a German company.
They're developing a web conferencing or online, you know, teleconferencing tool.
So it's like video and audio. Call it a Skype.
But again, you run it on your own server and it uses WebRTC so you can do stuff like,
I mean, they aim this at small business.
I say you have a company, about 20 people, you know, you can do your weekly conference call on this thing.
If you have people who work from home, for example, where you can also do is you can send a public link to a customer, for example,
and invite them that way to a conference call and have a chat with them.
And this thing comes integrated with own cloud.
So what they've done is they put own cloud on it and created an app that works with their conferencing system.
While you're in a conference call, you can also share files with your own cloud and work together on that.
So that all comes in one box that's really nice and solid and, you know, it costs a good time too.
It's not just heavy in terms of weight.
But on the other hand, you can connect some drives to it, get a lot of data on it.
It's very easy to set up. I think it's very interesting.
I'm probably text-deductible if you have CupX expense.
Yeah, there's that too, exactly, yes.
It's going to come actually already. I mean, this is the Raspberry Pi project.
It's going to take a couple of months, but this is going to come on the market in a few weeks.
Wow, that is heavy.
I'm just going to leave that there and take a photo of all three.
And then anything else that we need to talk about?
Well, I think everybody should check it out.
I mean, we have now about eight million users, which I think is quite impressive,
especially because last year we had about estimated 2.3.
So we're going really fast.
I guess this is the right time to jump on board and I'll play with own cloud.
Absolutely. Thank you very much for the interview.
I'm here at the Enlightenment booth at Vostamp.
And I'm talking to Philippe.
Hi, Philippe. Can you tell me what enlightenment is?
Wide alignment is actually two things.
The first one is a toolkit, a full graphical stack to produce graphical applications.
Just like Qt or GDK.
But it's another one.
Historically, we drove these to be lights faster and usable in embedded devices.
And we use it to produce enlightenment.
Enlightenment is a desktop shell.
Maybe some people want to call it a window manager, but it's just a little bit more than that.
And use the enlightenment foundation libraries to produce this desktop shell.
And some of our applications, like terminal emulator, video player,
to offer another way to see their steps.
So we don't provide a user's story to the user.
The user is going to build a story out to use his desktop.
Our friends of GNOME produce you the GNOME like he is.
You have to use it like they have things about to you.
We produce like, we can tell like a framework.
You just take it, go in the interfaces, and do whatever you want.
We used to have a play a game when Unity was released by Ubuntu
to make up enlightenment work like Unity only by configuration.
It was a game at the time.
We cannot do this anymore because Unity has grown, obviously.
But at the time, I think four or five years ago,
it was just alpha-nour about how Unity works, take a look at Unity,
and reproduce it with the only configuration of enlightenment.
That's the way we produce fast software, nice software,
well coded, to produce beautiful interfaces in low hardware,
and in big hardware too.
So obviously I have laptops here with 16 gigabytes of RAM,
but we have phones with half a gigabytes.
I don't think it's solved, but it's less, and a single core,
a RAM processor, and it runs just great.
And where does one buy one of these phones?
You need to live in India to buy this one.
Tomorrow you need to live in China and Russia to buy a Z3, Z3,
an abrogated foot of this, a little bigger, a little faster.
And maybe this year, probably, I don't know, I don't work for the builder.
We have these kind of phones in Europe.
I don't know about America, I don't know about South America,
but what I know is Tizen, the OS of this phone,
is using enlightenment foundation libraries and enlightenment,
and is put it by Samsung everywhere in their devices,
in their connected devices.
Fridge, washing machines, TVs, watches, whatever.
They call it OS for everything.
And what are the plans for this year?
For us, the plans are actually continue the development,
fix the bugs, make a release at the end of the year,
like every year and now from four years ago,
and move up better configuration interfaces,
go faster, be nicer to the eye.
Basically, the same old same old, business as usual for enlightenment.
There was a time when the release is working coming through,
and now you say we've gone to a cycle.
How has that improved?
Has that helped the popularity?
Has that helped development?
We have to go back in history to understand that.
When we release E16 a long time ago, really a long time ago,
Rusterman says, what do we do now?
We need to do better, and to do better, we need a toolkit.
So let's start creating a toolkit.
Imagine what is create a toolkit with a very small developer community.
And we spent 12 years working on the toolkit to finally release the toolkit,
and finally release E17.
So when the toolkit is done, we just have to fix bugs and get improved the toolkit.
We don't have to recreate it, so we can do a release in a year.
And maybe less, so we say, whatever, eight years enough.
So what distributions do you ship with?
What distributions do you ship with?
Arch Linux.
You can install it in Arch Linux.
But I don't know if it still exists.
PCOS Linux.
You can install it in Debian Ubuntu.
And maybe others, I don't know.
Just do you use X underneath or do you use Welland?
You can use Xorg or Welland, because E20 is a full Welland compositor.
Is it now?
That's interesting.
It's not using Western, it's implementing the protocol in the real Welland compositor.
So was there anything that I missed as we should have told the audience?
I don't hear your questions.
Was there anything that I missed that you would like to tell us?
No.
Give it a try.
And maybe you can attend if somebody is hearing and attend that for them.
You can hear a restaurant tomorrow.
It talks about Welland and Enlightenment.
By the time this goes out, the talks will be on the post and website.
So we'll catch that there.
Thank you very much.
And your name is?
My name is Pavel Viotorek.
And what is Tyson?
Tyson is a GNOL Linux distribution aimed at embedded devices,
which currently are TVs, mobiles.
And in some future, also all variables from Samsung.
All variables from Samsung.
Are you related to Samsung when somebody?
Yes, I am.
I'm a Samsung employee.
And would this be a Samsung T-shirt or not?
Yes.
That's Samsung T-shirt.
That's T-shirt from Sinara project, which is our privilege control service,
that runs in user space and uses unique domain sockets for maximum performance.
Okay.
Cool.
Now, Tyson was coming from the Intel Foundation before.
Was that that distribution?
From Linux Foundation.
That's right.
And it was developed together with Tyson.
With Intel.
Tyson was developed together with Intel.
Right now, Samsung is the biggest contributor to Tyson.
Today, we are demonstrating our latest achievements in Tyson 3.0 platform.
You can see Vazom containers and alternative to Docker,
which supports also GPU hardware acceleration.
We are also demonstrating Sinara, which I mentioned earlier,
together with privilege checker, which allows to allow or ban some applications
from accessing valuable data.
We are also demonstrating our latest creation,
which is fully unattended, automating testing system.
We are testing what now?
We are testing Tyson images on different architectures.
For architectures, we deploy images on.
We have group of devices, which are flashed, rebooted,
and on which we run compliance tests in order to early detect any regressions,
and also not to publish those images that might cause failure for developer or end user.
Is this something that's now just useful for Tyson or cannot be taken by other projects and used by them?
It can be used by any project, which has target devices,
which can boot from SD card.
We developed custom design board.
Let's walk over here.
It's been very hard to get to this table all day with people coming and having a look.
If nothing else, there's a big red button there.
So what these boards actually do?
I put a picture in the show notes.
They provide easy access from both our testing host machine
and from our target to these micro SD cards.
These micro SD cards can be flashed directly from test host machine
and then switched to target device for running tests.
All tests results are published at our wiki page.
So all results are reproducible and can be run if someone needs more thorough testing.
So these are not really SD cards.
Are they real SD cards?
You don't physically have to take them out of the device and put them into the other.
That's the main purpose for these boards.
These are real SD cards, but this setup runs full automatic level.
There is no need for any manual work.
It also notifies.
So these boards have an SD card and then they have a reader underneath.
So you can reprogram them and then they're mapped to the device themselves.
Exactly.
That's not everything these boards provide us.
They also provide a relay for cutting power when a device needs to be rebooted on in case, yes, that's exactly.
Or if in case of major failure when we need to flash a new image.
They also provide capability of debug bridge.
And they are all controlled via the last USB.
The nice thing about this setup is that apart from all power supplies for these boards,
only single cable has to be connected to our host machine.
Is this something that you deliberately built or can somebody do this?
These tests remotely, do you physically need to be here?
I don't physically need to be here.
These runs fully unattended.
And the main purpose behind this idea was that testing of new images was too much time consuming.
Release engineers cannot give too much time for such a repeatable task.
This has to be automated and that's exactly what we did.
So this is the harder thing I get that.
Today, when you boot the images up, what starts the testing?
What do you write the test in?
For starting testing, we use already mentioned debug bridge.
And tests that are run are called TCTs.
This stands for Tyson Compliance tests, which are run in order to early detect any regressions in API,
which developers can later use.
And then those are fed back here too.
How easy is it to develop those?
Is that something that you do as you're developing code?
You would say, developing a feature for one of these devices.
Then I would develop a test case to go along with that feature, I guess.
I guess it's not a hard task.
But I cannot...
So how do I add a new test to this system?
Currently, TCTs are not publicly available, but they soon might.
Once this is completed, a new test case would be just a patch on our Git tree for TCTs.
And is this something that you would envision other people being able to use outside other hardware devices outside Samsung?
We would certainly like to do so.
What we want is to give back to community and all devices that can be bought from SD cards can benefit from these SD cards, the multiplexers.
It's very awesome, I will include a picture in the show notes.
What else do you have on the show here?
Right here, I have a demo of Vazon, which is alternative to Docker container service.
Vazon supports GPU hardware acceleration.
Right now, on a single computer, both gaming and banking and maybe some other private data can be easily isolated and also easily switched between different containers.
So the red, green and blue there were different containers?
Yes. So what happened there, folks, was imagine just like switching a work, you switched from one workspace to another.
Imagine that you would like to isolate your all accounting, your all...
You should have banking from your dodgy website.
For example, and you would like also to have a gaming computer which should be divided from all of this.
So, earlier, you would have to buy three different computers.
Right now, it's easier to create containers which isolate all these three environments.
And by clicking the button on our target device, I switched between all these three containers.
That's my fault.
We land terminal. What does that mean?
This terminal runs on Raspberry Pi, version 2.
And we're just going to take a photo of the back.
Yep, got it.
And as you can see, we do not support only Samsung Exynos based devices, but community also managed to support other SBCs.
Sorry, I completely missed that. It's running on the Raspberry Pi.
Yes, it's running on the Raspberry Pi.
And if you could wait a moment, I've got another demo coming up.
Where are you based?
Where do you live?
I work and live in Warsaw, Poland.
I work at Samsung R&D Center Poland.
We also have a Tizenboard which acts as a HID device.
It is detected by post-computer as a keyboard.
And let me show you.
I'll walk over here today, big red button.
Yep, this is default, this is default Ubuntu environment.
And by pressing this device, we trigger an action which sends via USB
based 64 encoded picture and command line and a command which changes wallpaper.
So, as you can see, Tizen devices can be changed into simple USB gadgets.
You can build your own USB gadget based on Tizen devices.
Oh, very good.
Is it on your website, devices that you can purchase or where I can find a phone, for instance, that runs Tizen?
That I can root for myself here.
It was all running on a Tizen 3.0 platform.
This is not available currently or any products.
Tizen 2.4 is already available on Samsung Gear Smartwatches.
And if you'd like to, we already may walk to the last demo we are showing today.
This is a demo of our privacy.
The manager software, this software runs for managing access control to the privileges for different applications.
Okay, so what I see is two windows privacy manager and contacts asking for first name and last name.
When you use your mobile phone and want to isolate your private data, you might not want all the applications to use them.
With privacy manager, you can easily decide which applications can or can't use specific privileges.
Or you can set it to always ask you for permission.
So is this similar to the Android permissions or is it more fine-grained than that?
The high level concept is similar, but our solution is based on already mentioned Sinara, which is a software of much higher performance.
Okay, cool. And can I, is this up to the developers to decide how much access you can give or can you as a user just decide that?
Privileges list is available at our Wiki and the control lies directly in the hands of users.
If a user wants to share some valuable data with applications, she or he might decide to do so.
But if not, she or he might also easily decline.
Okay, very good. And what are the plans for the coming, when can I get my hands on the latest three version running on a device I can buy?
For a reasonable price.
Currently I cannot provide any specific dates, but this year there are plans to milestone releases.
And our automated testing laboratory will probably make sure both milestone releases are as stable as possible at the lowest time pressure for release engineers.
So when my free, my Samsung fridge breaks, I know who to come calling to.
I hope we will manage to stop that before it happens.
Is this, this is kind of an internet of things in question.
I'm quite concerned about the whole security implications of that. Is that what this privacy manager is intended to address?
That's exactly right.
Tyson is built on a promise of secure operating system.
It was always designed with security in mind.
And as for IoT, we also got community demo.
I can change the frequency with my phone.
So you've got a phone there and it is a custom logo and you're changing the frequency of the fan.
Just by using the little fan plugged into a USB fan.
And just by moving the volume control on the Samsung phone, it's increasing or decreasing the angular momentum of the fan.
That's exactly right. How is it doing this?
It communicates with other Tyson based device with minimal environment, something which could land on an IoT device in the future.
So you got like a base station here connected to a Raspberry Pi, connected to a USB and then you change the speed of the fan.
Exactly.
All wirelessly for ease of use.
It's actually a lot cooler than what I just explained.
So if I stop recording now, will you be able to tell me then what phone I can buy in six months time?
No, is the answer.
I do not yet know what I would most definitely also like to know that.
Yes, very good.
Thank you for having me.
No problem.
I'm at the collab boot collaborative in confidence.
Who are you and why is collab?
Sure. So I'm Aaron Saigo with Collab Systems, the company behind Collab, which is, we think of Google Apps or Microsoft Exchange, but 100% free software.
Open source. We don't do proprietary software.
So Collab provides a range of features that you'd come to expect from a collaboration platform, shared mail, calendaring, contacts, notes to do and files.
We actually just announced today that we're working with Colabora with Cloud Suite.
So we'll be bringing collaborative editing of office documents in the web browser with Collab.
So at this point, you have something that you could just drop Google Docs or Google Apps for or Office 365.
And instead, you've something that's open and free.
So Collab is available. You can run it on your own server or you can go to colabnow.com and get your own instance of it or just sign up for a single email even address.
And all those features are available there. So that's what we do.
So when you say it's open source, that's fine, but are the protocols themselves open that you use open protocols?
We stick to, for all of the defaults, open protocols only, open standards.
So we speak the IMAP, SMTP, LDAP, et cetera.
We don't invent what we don't have to. If something exists, we use it. Period, plain and simple.
We do provide support for things like active sync, though, which is not the most open or protocols, but this is required so that people can connect to it with the device of their choice.
One of the things that we believe in anyways is making sure, for free software to spread, people need to be able to get access to it on their own terms.
So while we ship with a great web app, it's actually RoundCube, which we're also the developers of, with colab.
You can access colab from rich desktop clients, like contact, or Thunderbird and Lightning, or on macOS, the mail app, an iCal, that works beautifully.
Even Outlook, 2013 and newer you can use active sync, right?
Mobile phones, iOS, Android, Windows Phone, the three people still using Blackberry, et cetera.
So we let you choose how you access the system and the data, and what we see as our mission is making it possible for people to collaborate as we say in confidence, right?
Which means you know your data is secure, we know your privacy is intact, right?
We don't access your data with no phoning home, et cetera.
Even on our hosted services, we guarantee the privacy of your data, which is in part possible because we're based in Switzerland, and it adds us all of our hosting.
So we come under Swiss law, and our commitment to privacy and freedom is part of our DNA.
The CEO of our company and founder actually is also the founder of the free software foundation Europe.
So this is really part of our DNA.
So we like to produce amazing software, we think it's the best collaboration platform out there, available, proprietary, otherwise.
But it's open as well, and that's the important thing for us.
Is it not a bit heavier than something like OwnCloud?
So OwnCloud is a very different kind of application in general, right? It's files.
But no, so we have it running here at the booth on a Raspberry Pi.
I'll take a photo, this is a cool case.
And I don't know how much smaller you want to get, so Raspberry Pi small enough.
At the same time, we have, so Sears Corporation in the United States, they run Colab.
They have it in two data centers, one in Chicago and one in Eastern Europe somewhere.
There are things real time, so that if one gets nuked from space, they still have the second one up and running.
Is that part of the Colab though?
So Colab is built for extreme scalability and cluster management.
This year we're actually going to be releasing, typically we recommend deploying on VMs.
KVM usually, although we have clients that use it on Hyper-V, but we support that as well.
But this year we're coming out with a Dockerized version of Colab.
Well, you then get to use Kubernetes to manage your cluster in real time.
So if you suddenly get a spike and you need more IMAP or you need more after sync,
simply tell Kubernetes and it will spin off a bunch more of those services.
We have some clients that run part of Colab outside their DMZ and part of Colab behind their firewall.
So this is for more security, conscious clients who, you know, yeah.
So we have one client, for instance, that's emails not allowed to leave the premise.
So they have SMTP and those services outside, but all the IMAP, the web app, everything else is internal and it's firewalled off.
And because of the service oriented architecture that allows us to do the Dockerized containers,
and these Docker containers aren't, you know, Colab in one piece.
It's around 30 different containers all put together.
That same architecture allows us to do things like split up Colab across a, with a DMZ in between, right?
So these are features you don't see in many other places.
For large scale deployment as well, we support in place real time updates and upgrades without user interruption.
So in a virtualized environment, right, if you kind of think of it in left and right.
Now you're probably said too much, you know, you had me for a while and let me know.
I simply can't believe this.
We do this regularly in ColabNow.com.
So you have a hot and cold version.
That's right.
So at ColabNow.com we host, we have a public cloud hosted in Switzerland that it runs on.
We also do hosted instances, so you have your own instance if you want as well.
And there when we do upgrades, we migrate everyone to one half the cluster, upgrade the first half,
and then rebalance the cluster.
Very nice stuff.
But obviously you don't need that overkill points to see pointing at the raspberry pie.
Yes, you raspberry pie.
You might, you know, I really wasn't a while. It's okay.
How easy is it to get your hands on this? Is it not cash?
Yep.
So if you go to colab.org, on there, there's a download link.
And it takes us actually to a documentation for this.
And yes, we provide repositories for Debian-based distributions as well as RPM-based distributions.
Or you can grab the source if you want and build it.
So you add the repository to your sources list.
And then, yeah, apt-get or yum install away.
And you presumably we have all the phone integration and Android integration iOS.
How are you making money with the hosted services?
That's one of the ways.
We also do deployment projects and custom development.
And we also have paid support.
So you can purchase support per account with us.
That allows you to pick up the virtual phone, if you will.
File a ticket, get support for your client issues and whatnot.
So we do that as well.
So you can use it on your own self-hosted, self-supported.
That's absolutely great.
But if you especially get a company, most of the time you want an SLA of some sort, you can come.
Exactly.
I mean, how long can you live without your calendaring, right, as a company?
Zero.
So we're here as a company to make sure that your deployments are beautiful, perfect, and no downtime.
And the the call-abserver itself is the nine-map servers.
Is this a call-server?
Can you outsource that to say as a close-in to an exchange or something or into another male client?
So male clients, you get to pick.
Servers, we provide the whole the IMAP, the SMTP.
And for that, we actually use, so for SMTP, it's PostFix for the IMAP and Cyrus IMAP.
For director integration, which is an interesting point.
Most, again, organizations already have a directory service.
Open LDAP, it might even be horror of horror's active directory.
And you can use those as your authentication source for a call-out.
Now, call-out comes with the directory server.
So if you don't have one, you install call-out, it works right on the box.
There is a web-based admin query that you can go in and add your users.
But if you're an organization with existing infrastructure, you can take call-out and integrate it with that.
How did you tell us your story?
How did you get this far?
How did you?
So, call-out started when the BSI in Germany, which is their information security organization, federal level.
They said we need for Germany, and the BSI itself, a open, secure, scalable groupware system.
And they went looking for it, and it couldn't find it because it didn't exist at the time.
So, call-out was created in response to this need at the BSI.
That was the beginning.
Wasn't this done on KDE at the time?
Yeah, so in collaboration with KDE, yeah.
You have some links with KDE as well, if I can.
Yeah, as well.
I've been involved in KDE myself on a personal level for longer than I care to admit.
We continue to work with the upstream there as well on contacts, the desktop client, and the new version too.
So, KDE is still a part of what we are and what we do, although, of course, we support all the desktop environments and whatnot.
So, from there, call-out kind of moved forward bit by bit.
But in 2010, the founder of the Freestyle Foundation Europe, Geogreva, looked at call-out and thought it's moving too slowly.
How can you get professional support for it?
And if you can't get professional support, then how can it be adopted by large organizations?
So, he founded call-out systems to fill that gap.
So, in 2010, call-out systems AG was founded in Zurich, Switzerland, which is where we still are, and all of our data is hosted as well.
So, we have that nice Swiss law for privacy and whatnot.
He started call-out systems to push call-out forward.
And since that time, call-out has moved at a blistering pace in terms of features, scalability, and whatnot.
Are you a profitable company?
Yes, well, yes.
Yeah, we're making money.
We're actually hiring.
If you're a developer, I'll ask no, but there might be developers under this.
There might be one or two.
Yeah, so, absolutely.
We're growing. We have offices in Berlin, Zurich, a small satellite outside of London.
We're opening up in Austria this year as well.
Okay, and you yourself, how did you come into the whole free open source scene?
So, I cut my teeth. Now you're going to find a hole I am.
I cut my teeth. My first full-time job developing was in 1992.
It was on a Sano-S machine.
Solaris didn't even exist yet.
And I fell in love with the Unix world.
I had been using the internet for a couple of years already at that point.
Sorry, excuse me.
And again, through Unix shells.
So, this was where, that was kind of my home turf.
In the mid-90s, I moved back to my home country of Canada.
And then around the Vancouver area at the time, Windows NT was nothing.
And everyone was moving to it.
It was getting increasingly hard to find jobs working on Unix.
And that I found very disappointing.
I looked at what, oh my goodness, if Windows NT becomes what everybody runs in the world,
I will switch professions.
And it was around that time, actually, it was in 1998 exactly.
I can tell you the month, September.
I made a decision in my personal life to commit myself to working on free software and Linux.
So, I started a small company.
And I actually had to go in and sell people on the idea of Linux before I could sell them on the idea of my services.
So, it was back, I mean, people would ask, what Linux, what is that?
They hadn't heard of it, right?
And now here we are, what's almost 20 years later, right?
18 years later, I guess.
And Linux has eaten the world.
It's amazing and fantastic.
But that was my journey into it.
And around 2001, 2000, I guess, Katie was doing their 2.0 version.
And I saw a lot of really interesting and cool stuff there.
And I was trying it out of my desktop at home in the home office.
And I saw a bug in the run command dialogue.
Small one, nothing big.
So, I was like, ah, that's almost free.
How hard can it be?
So, I opened up the code, looked at it, found the bug, fixed it, sent a patch, went to bed.
Work up the next morning and there was an email in my inbox saying, thank you very much.
It's been applied.
I was like, what?
So, you know, did a CVS up?
Yeah, we were still using CVS then.
And there it was.
I was like, oh my goodness, that was amazing.
That was so easy.
And yeah, who fast forward a decade or so and done the plasma project,
which still has the part as one of its components, a run dialogue.
So, I somehow managed to work on that run dialogue for, yeah, some like 13 years.
But that was how I got into free software.
And Georg and I knew each other through the free software world.
Obviously, him at FSFE.
I visited him in his offices in Zurich once even there.
So, we knew each other from conferences and whatnot.
I moved to Zurich a few years ago.
And we just, we said, oh, be nice.
It was the thing back to the beer.
It would be really cool to do something together someday.
We should find a chance and opportunity.
So, at the end of 2014, that chance came, the stars aligned.
And we looked at each other and went, let's do this.
So, I joined Colab Systems.
And so, now I'm working pretty much exclusively these days with Colab
and the company around it.
Fantastic.
We do a, how I got into Linux series.
So, I think we'll file this one on to that.
Cool.
I had a one question there about that.
That has come up a few times.
It's a question on the IRC.
When you have a Linux desktop with mixed applications from one system to another.
And you have a file dialogue.
Wouldn't be nice if you were running KDE that Firefox would have the KDE file dialogue.
And a GNOME application would have the KDE file dialogue and vice versa if you're on the other applications.
Is that, is that an easy problem to state?
Well, a very difficult problem to implement, I suspect.
It's not an easy problem, but it's one that's been generally solved.
So, Firefox already does like in my laptop here, when I open Firefox or Google Chrome.
And I open up a file and I get this, you know, Save As or open a dialogue.
It's the KDE one.
So, we already have, how?
Does not compute.
What you need to be using is a distribution that cares about packaging and puts it together correctly.
Now, GDK applications.
Harder question.
So, in the cute world, we actually have a wrapper around the concept of a file dialogue.
Right?
So, when you're on Windows, you get the Windows dialogue.
When you're on Mac, you get the Mac dialogues.
When you're on Linux, you get the Linux dialogues.
If you're running a Q-dap inside of GNOME, you'll get a GDK file dialogue.
Ah, cool.
So, we really care about integration.
I wish the same could be said about all the projects, but we can't.
So, from the cute and KDE world, integration has always been something very important to us.
So, the other way around of having your GDK applications use a Q-dap or a KDE file dialogue,
I keep hoping and wishing one day will happen.
All I can recommend to people is if you want a nice seamless environment,
use as many cute and applications as you can, use Firefox, et cetera,
that have done this work as well, because integration also matters to them.
If you do use KDE applications or cute applications on GNOME, though,
you will find that we have a, or the other way around.
If you use GDK applications in a plasma desktop,
they will actually have the look and feel of it,
because we have a GDK theme for breeze and oxygen,
depending on whether using four or five of plasma.
So, we actually do try and bring all this together.
It is a hell of a lot of work.
Getting to this point took many years, but we've done the work.
And I think the last kind of missing bit is for GDK to join the game.
You're still working on KDE, are you?
Yeah, I still come up from time to time.
I have another question from one of our blind listeners, who is a developer,
and what is likely KDE isn't that great when it comes to accessibility
and screen readers, like the Orca screen reader,
just basically just work.
I get Firefox works, and that's it.
Is there a way we can fix this for everybody?
It'd be nice.
Yeah, so there is a, the ATSPI framework, right?
And that can actually, again, cute can be built with that.
And once you have that, then you get into inspection to the application.
So that's the framework part.
And there, again, it was packaged properly.
The next step from there is making sure the apps themselves don't get in the way of that.
And I'm sure there is some work to be done there.
I don't know personally where exactly we're still falling short.
But file bugs.
And if I can get the distros to, or the KDE applications to have that enabled by default,
then people should have us out of the box.
This is another really good example, as well, of how in this,
on that side of the world, in the cute KDE world,
we try our best not to reinvent wheels, right?
So the Orca screen reader, that we don't have a screen reader for, quote unquote,
you know, plasma desktop.
We're happy Orca exists.
We love the fact that all that effort has been put into it.
And so we recommend and use it for accessibility purposes.
Same thing with the SPI, ATSPI.
That was invented at Sun, if I remember correctly.
Way back in the day, I sat on a industry committee,
around getting ATSPI usable for the rest of the world.
So that was when they moved from Corba to Divas.
I happened to be responsible for that.
So I don't know if I should, apologies.
Moving from Corba is always a good idea.
So that was one of the things that we did.
And it was because we wanted to reuse it again.
We didn't want to see Linux, or free software in general,
to have like this split where, you know,
you're running ATSPI, or ATSPI for these applications,
and case something for these applications.
We wanted one framework, right?
So we could share our resources.
I think a really indicative of our spirit.
That is the open desktop.
Open desktop.org.
Are you still feeding into that?
Because it sometimes doesn't show.
So I was actually just talking with a guy that works on
System D, and what is the other thing he works on?
Something else.
Anyways.
As entered.
No, no, no, no, no, no.
And he was, he was about the same question.
I was like, is, is free desktop.org actually like broken?
Is it even living like, what is up with that?
I think that the consensus generally is,
and I'll speak personally.
My personal viewpoint on it is that it's been broken for years.
And it has been repeatedly noted,
ways of improving it have been suggested.
And they have, it has never been taken seriously,
I think, by the people involved in free desktop.org.
So while we do go there still to collaborate and work with others,
as much as we can, it's, for all intents and purposes,
it's a barely breathing organization.
And that's really sad.
The world would be a lot better in free software anyways,
if we had a working healthy place for this kind of collaboration to occur.
That said, we do see, I think, more collaboration than we have in the past ever.
I've already talked about things like, oh, we have a GDK theme, right?
For GDK apps.
I mean, 15 years ago, that would have been hearsay.
Canonical is using Qt and QML,
the same stuff that Plus and Mobile is using, and Plus with desktop, right?
And so there's a lot of this kind of crosstalk and collaboration that's happening at many different levels.
So maybe free desktop.org isn't as important now as it once was.
You have to remember, when free desktop.org was founded,
we didn't even have a shared clipboard spec, right?
I mean, it was just a world of chaos.
And free desktop.org came in and really brought a lot of very basic fundamental stuff
like a window manager being able to full screen an app didn't exist, right?
And so we had the universal window manager hints.
And I remember back when, you know, black box and all of those guys were adding support for it.
There was a different era, right?
We really needed free desktop.org then.
Today, maybe we can do without it, maybe.
I don't know.
One final question now that I have you here.
Can you explain activities in KDE to me?
Sure.
So activities are very simple.
The concept is it's a project oriented workflow, right?
So you create an activity for, if you're a student, maybe one for each class, right?
So we have one for mathematics, one for social studies, geography, whenever.
I use it for each project at work.
I'll have an activity.
And then you can switch between activities.
And what you get is the files, the tags, the contacts, the people, et cetera,
that you associate with that activity up front and center.
So for instance, in Dolphin, the file manager or on the Plasma desktop,
you can have it show all the things that are associated with that activity.
So for people who that work on more than one thing at once,
I need to switch between them quickly.
You can kind of think of it as like virtual desktops for projects.
I need to choose just the regular old windowing.
So how do you use that for power management?
You don't.
You can't.
So I have a profile, for instance.
See, that's what I mean.
I don't get activities for presentations.
And in there, my power management settings are different,
so that it doesn't turn the screen off.
It doesn't have a screen service disabled.
You can cut off your network, et cetera.
So you don't get the embarrassing, you know, I am pop up or whatever,
while you're presenting.
So when I do a presentation, I switch to my presentation activity,
and this is all configured.
Then when I'm done with my presentation,
I switch to another activity, regular one,
and it goes back to my daily use.
I don't have to go into the settings control panel every single time.
So I could like have I'm on the train,
and then disabled is my network.
For the mobile world, this is really cool,
because you have this tiny screen.
So when we came up with the idea for activities,
this is actually how it happened.
I was doing field research for plasma.
By which I mean, I was going in
and watching people use computers in real offices.
And just sitting behind them taking notes.
It spent days doing this.
I was at a company that makes prints flags
and corporates branded stuff.
And I was sitting behind their graphic designer.
And I watched them move between different projects he's working on.
And he was on a Mac.
So he would drag the folder that had all the files
for that project onto the desktop,
open the file folder, drag all the files from that folder onto the desktop,
and start working.
When he was done with that project for the time being,
he select all the files and then back into the folder with the folder
back into the disk, and so on.
I was like, oh my god, this is what computers are for.
They're there to help us manage our data.
What happened was we got stuck in this 1984 mindset of Apple,
not Big Brother, but the Apple concept that all you need
is like one desktop with icons on it, right?
That was in the day when there was no networking as a norm.
It was just islands, you know, your machine was not connected to anything, usually.
You had a floppy disk that held the operating system in your apps.
If you had an address book, it was a text file, right?
It was a simpler world.
People didn't have.
How many files do you have in your computer?
You say your laptop.
Yeah, you probably actually have hundreds of, if you think about every email,
for instance, being a file.
Yeah, exactly.
So every, every song you have, every video that you've downloaded,
your browser bookmarks and history and everything, right?
There's more files now on a computer than you can,
if you actually sat down and started reading them, you know,
you take years.
And yet our computers haven't moved much from that day
when we designed a GUI for a computer with a floppy disk and no networking.
So activities was a way to give people another tool.
It's optional.
You don't have to use them.
But it gives you another tool for actually managing that
by simplifying the context of your data, saying,
well, I only am focusing right now on this.
That's the current thing I'm doing.
We're doing the name activity.
And when I'm doing that, I care about these files, these people.
I want my settings like that, unless you focus.
So in Plasma Active, which was the predecessor to Plasma Mobile,
which had the little drawer you slide it out from the side,
unless you switch in your activities.
And that changed the home screen as well, right?
So I use that for when I was on vacation.
I'd have all the menus for, I love food.
So I'd always go and grab menus from different restaurants.
I plan on visiting when I'm on vacation.
Maps and all of that on my home screen.
So I'd have activity per vacation that I would do, right?
And then for work and whatnot, I have another activity.
And that would have links to my mail app and whatnot.
So even on vacation, I could quickly switch over to work mode quickly,
check my mail, and then switch back.
Right.
And so applications allow you to cluster not only your files and your data,
but also your applications with it, right?
So you can focus on what you're actually trying to focus on.
To me, it's obviously not the only way of doing it.
But to me, it's a, I think, a very powerful way of giving the person
a quick and easy way to tell the computer what you're focused on.
And therefore, show you what is related to what you're focused on.
Like in what scripts and stuff in there,
so kick off scripts if I...
So...
Just text.
Yes, so technically, yes.
I'm trying to remember...
I don't think we have any...
You are technically, yes, I might, technically, yes, might be.
So what... Well, no, what you...
So the way you would probably do it is...
So you can associate applications with activities, right?
So you'll be able to associate that script or whatever with the activity.
And when you switch activities, it starts applications and aren't starting.
So that would be the way to go through that.
Right.
So...
Yep.
One last question that I have here.
I like...
About the disappearing too.
I have two questions really.
And then I'm going...
One is...
There seems to have been a memo sent around to everybody saying we'll move the menus.
Why are menus being moved to me?
It makes it very difficult to explain to somebody how you'll go to the file menu
and then go discoverability disappears.
You can put them back.
Yes, but I'm concerned that you won't be able to put them back.
And people will see the functionality that's been given to them by the developer.
And especially in the KDE world, that seems like a deviation from the...
Here's a nice desktop that we think you're going to work here.
Press this button if you want to change it.
So I don't think that it interferes with customization.
So I don't really think there's a connection there.
That said...
I mean, this is one thing about getting older, right?
I hit my 40s, so I understand what this is.
What it means now to get older.
And the new generation they do use computers differently than we do.
Or did, or learned at.
It was a different time.
These days, people use menus less and less.
And menus pose a large number of usability obstacles.
Number one, they're inherently hierarchical.
And developers, we think hierarchically often.
Right, we're really good at sorting and hierarchies.
Turns out the average human being is not good at this.
So menus are not so awesome for most actual human beings.
They also tend to become a dumping ground for developers.
Instead of thinking through how should a feature be implemented,
what is the workflow around it?
I just put a menu item.
Because it's so easy to do.
So it turns out that menus, not such a great idea,
except for for developers, right?
So I think that we'll continue to see menus in IDEs and what not forever.
Because they are good tools for that use case.
But I think in more consumer software, quote unquote,
I think they're going to fade away more and more and more.
We're going to move more to direct UI.
So this is something that we pioneered in Plasma as well,
where instead of relying on menus,
or even magical right-click contact menus,
although we still have them,
we try to make sure that anything that is used
by any reasonable proportion of humanity can get to it
without a right-click menu.
Because right-click menus are completely and utterly undiscoverable.
Right?
So this is-
Okay, right-click menus.
I'll give you that.
And so this movement away from menus
is really about developing software for a modern audience
with a greater emphasis on kind of everyday usability.
You moved away from making specialist tools like 30 years ago.
You used a computer.
You were-
You were into computers, right?
You were a hacker of some sort, right?
You hacked on something.
These days is the average Joe.
The person who flips your burger at McDonald's
or runs the accounting department.
These people need to be productive with these machines.
And this is the software that it's being written for today.
Okay, but the problem with this is that every new release
of a distro, there's a new icon set.
And the menu that looks like a save button
has changed to something completely different.
So you can't say,
like I give the example of the configuration settings.
It's three dots on some places.
It's a spanner on some places.
It's a, you know, the kitty cog.
So how do we fix that?
Right.
So this is one of the issues with designing new UI concepts.
The save icon is a good example.
It's still a floppy disk.
Every once in a while someone goes,
we should update that.
It's like, no, that is part of a language now, right?
Design language.
No, nobody under the age of 20, you know,
knows or appreciates what a floppy disk is, right?
But it doesn't matter because they know it means save.
Just like I know the word no means to mentally capture a concept, right?
It's a word.
So with the new stuff like the hamburger, three lines, whatever,
you have to invent new design language.
Now with new design language,
those of us who are used to computers,
we don't know it, right?
It's like, it's, well, it's not like it is adding new verbs
or nouns to a language.
So someone comes in and says,
look, we have this new word in English.
It's fraber.
And you're like, what is fraber me?
And you have to learn it.
And this is always uncomfortable.
But if we don't make some of these, these moves forward,
in 100 years, we're going to have using it the same crappy software.
I don't disagree with everybody using the word fraber.
What I agree, disagree with this.
One person is using flour.
The next person on the same system is going to be using flipper.
This is where we're going with this.
So often in language, natural language like human language,
when, right, when new vocabulary enters,
there's often variant.
And sometimes sometimes some of them stay and they become hominomes
and you just, you just learn two words the same thing.
And it's not a big deal.
But yes, over time, it tends to simplify down.
I fully expect that we're going to end up
with like the hamburger icon everywhere.
I think this is something the free desktop.org project
should be working on.
That would be the perfect kind of thing for them.
Yes.
So yeah.
And now the last question I promise is the date and time in
plasma five.
Yep.
You can change it.
So it's six or one date.
No, why?
Why?
Which, if you're going through log files, is painful.
I've been following the KDE.
But apparently it's a QT thing.
How can we get that fixed?
I will buy beer seriously.
Well, why don't you say so in the first place?
It is fast and after all.
Which is Belgian for beer, I think.
Given the amounts consumed here.
Yeah.
So you need to go down a few blocks that way.
And to that table and ask there's a bunch of the plasma
developers down there actually right now.
I don't know what the fix is.
So sorry.
Was there anything else to do with cold app or anything else
that I missed that I shouldn't have gotten?
No.
So we're releasing collab 16 tomorrow.
This is very exciting because it unifies the community
and enterprise additions into one addition.
So we just have collab now.
So it simplifies for everyone.
Everyone gets the same thing.
It also means that if you decide tomorrow you want to pay for support
from collab systems, you don't have to migrate your server.
It just continues in collab.
The exact same instance and we can walk in and give you support.
They exchange connectors.
They have been notorious for changing over time.
You're continuing to follow up those.
You mean for Outlook or so we provide active sync for
Outlook 2013 and newer.
We currently have a project underway that we hope to deliver mid-year
with the OpenChange project.
Not OpenXchange but OpenChange.
It is a server-side implementation of extended mapping.
So once that's done, knock on wood,
then your Outlook will actually see collab as an exchange server.
Then I can connect with any client to collab and clear the truth.
Awesome.
Excellent.
Thank you very much Aaron.
Thank you.
Appreciate all the work you've done over the years.
Thank you.
Hello, this is Ken, your action news reporter here
at the KDE booth with Jonathan Riddle.
How are you doing?
I'm doing great.
Did you put on something?
Jonathan Riddle.
Yes.
You were going to give us a scoop here.
So I've just switched the buttons to turn on the website
for KDE Neon, which is the newest KDE project.
And it's going to be the best way to get KDE software.
It's an archive of packages.
Of KDE software built directly from KDE Git repository
for developers or from KDE releases for users.
So previously, KDE was always and always will be
Ryan's upon distributions to take their software
and then package that up and make that available to users.
That typically has some delay in it.
And they typically like to add patches
and make things different.
KDE Neon has minimal delay.
We have a continuous integration system
when somebody commits to KDE Git.
Our cloudy servers will do their cloud thing
and build it immediately
and you'll get a package available as soon as it's compiled.
When you say package, are we talking in RPM or Deb?
It uses Ubuntu LTS as the stable base.
So you've got a stable base, which is nice technology
and many people are familiar with it.
But it will have the latest KDE either releases
or from Git, depending on how crack the day you want to be.
Is this cross-test short?
Or do you have to be run in Ubuntu in order to benefit from this?
Well, as I say, it uses Ubuntu LTS base.
For the minute, you need to install some Ubuntu variant
and add this archive.
Coming shortly in the next few weeks
will have downloadable images so you can just install it directly.
Absolutely awesome.
Thought has been...
That's really cool.
Because for the 20 people who are listening to this,
they have fixed the ISO 8601 bug in this.
So you definitely want to be downloading this
and trying it out.
What prompted you to do this?
Well, I found myself kind of unbusy last summer
because I had some full-eyed with some previous projects
that I've been working with.
And we went on holiday.
We went to LA and we hung out on Venice Beach
and went surfing.
And while we were surfing, we were wondering,
how can we get Katie's software into the hands of users
in a way in which we intended to be done
and in a way which gets the users directly
without having further delays happening down the line.
So we came up with the idea of having Neon as a Katie project
and we're all part of this same large community.
And that's great for Katie developers
because often they release their software
and then they try out several months later in some distribution
and it's been packaged incorrectly
to some bug, some dependency that's missing.
With Neon, any Katie developer can fix that directly themselves.
How long then?
So, say this bug was not fixed.
And I had you here, bought you beer
and you fixed it for me how long then
before I would see it.
So we would push the commit to Git
and the Katie Neon build server would go,
ah, there's a new commit here
and that would fire up a magic machine in the cloud
that would compile it, make packages,
put it in the archive,
and it would be available within the hour.
That's pretty cool.
So this is ideal for Katie fans
and most of the Linux desktop users,
it hasn't got the mass market
and it's not going to any time soon.
So most people use Katie's software
are fans and they want the latest features
and whenever I make a plasma release for Katie E
of the desktop, it comes up with all the new features
and then people go, well, how do I get it
and we go, well, you have to wait another month
or something or add this archive
and there you go using Neon.
They'll get it directly on the same day
that we make that announcement.
And it's supported just by the community.
It's a Katie official Katie project.
Katie project, so if you want to get help,
you go to Katie forums or you go in the main list
or you ask on the Facebook group
or whatever else,
Katie does to support its software.
Is it the intention to always have to use Kabuntu
or can you say have Fedora
and download Katie on top of that?
At the minute, I'm only expecting to make it
for the Ubuntu stable base.
It's quite a nice technology that I'm familiar with.
They have two-year releases
so it doesn't update too often
but they pack for drivers
and various other bits as needed.
So yes, I'm expecting to only keep on Ubuntu
as the base for it.
Okay, so you had some,
there was some controversy during the year
if you wanted to say anything about that
or would have just moved on to describing
what else you have on the table?
Yeah, I think no comment physically.
Thank you.
Had to ask.
You know yourself.
So what have we got?
Katie forum at last.
Plasma mobile.
And so that's a project we were working on last year.
We had a,
we had nothing on the screen six months ago
and now we have a functional phone.
And it just uses a normal Linux distribution
and it just uses the normal Linux stack.
So unlike Android or other,
other kind of uses of Linux on phones,
it just uses the normal environment
that people are familiar with.
It uses Quinn, Kevin, the window manager
to display the stuff on Wayland.
And it's a really nice test bed for Wayland, of course.
And all the applications that work on the desktop
also work on the phone.
And an increasing number of applications
their user interface is written so that it can adapt
between the two form factors.
And that's really easy and nice to do with CUTE.
So I can run any Katie app on this.
Right.
You can run any Katie application on that.
Of course, a lot of the user interface
will be not very useful,
which is why with CUTE,
and using QML,
that making it adaptable between the two
is really nice and easy.
What's the harder itself?
That's the Nexus 5,
and we've got images for Nexus 5,
that you can get from Passman Mobile.org.
And yeah, the Google Nexus 5 is just a nice microphone
that is easily available and customizable.
And of course, we would welcome anybody making images
for other phones as well.
How difficult is that?
Well, if I can do it, then anybody can do it, right?
No, I don't think you think you're probably overestimating
other people's abilities.
So what was the, what's the plan for next year
other than you on?
Well, what do you need to go to them and speech
for another while to come up with inspiration and stuff?
Yeah, that's always fun to be the international freedom fighter
and travel around the world.
That's always an enjoyable part of working
with the Katie community.
They're very friendly people.
And my plan for next year are to make Neon the best way
to get Katie East also where,
so get those installable images out
and make sure the packages are updated.
Maybe make sure that packages are available
with something like XDG app,
so in a containerized way that can be easily installed, for example,
and that it's a very secure experience.
Okay, cool.
Anything else you want to talk about that I've missed?
Nope, I don't think so.
Nope.
I think the first time come to the launch party tonight
in Grand Place.
Of this, of Katie Neon.
Oh cool.
Well, thank you very much, Jonathan.
It's also been a pleasure.
Thank you.
And I'm talking to...
Italo Vignoli.
And you're with the Libra Office project.
What's your function then?
I'm a media relation and marketing responsible
for the Libra Office project.
So can you tell us a bit about Libra Office?
I think everybody knows,
but just to give a background where it came from,
and what you're trying to achieve.
So we came from the open office heritage, of course,
after a few years of the open office project,
the community decided that it was time to look for independence.
And during this process,
Sun was acquired by Oracle.
So we, in fact, we already started to discuss about independence
before Sun was acquired by Oracle.
And of course, this was just an accelerator of the decision
to become really independent.
So we basically decided at the end to squeeze in ten months
what was supposed to do in one year and a half.
And from January to end of September 2010,
we discussed, decided and shaved up the foundation and the project.
So that's what has happened during the next five years,
so between 2010 and 2015,
has been what was decided more or less the result of what was decided
during those ten months was to, of course,
first thing was to clean and renew the code base.
That was a little bit old and a little bit too difficult
for new contributors to start working at.
Second step, once the cleaning was initially done,
the second step was to add new features.
Of course, we needed a better code base to start adding new features.
So let's say first, development cycle, three dot X
was mainly focus on cleaning the code.
Second development cycle, four dot X,
was mainly focus on adding features.
The third development cycle, five dot X,
is more focus on cleaning the user interface.
Of course, we still add features, we still clean the code.
But let's say that the focus changes a little bit.
So you will see five dot one,
we'll be launching a few days with new difference
and significant differences in the user interface,
although the user interface will still be the same,
so there will not be, let's say,
a redesign of the user interface,
while five dot two will offer also the redesign of the user interface,
although we will maintain the traditional user interface,
because we have realized that the user interface,
of course, is according to user needs and user preferences,
but is also related to the space that you have on your video, on your screen.
So of course, the sidebar is good for wide screen,
but it's not good for narrow screen.
So now we have the sidebar,
and we will have an option that will have, let's say,
an horizontal sidebar, which, of course, is not a sidebar,
if it is on top, but it's going to be a toolbar,
with similar content of the sidebar.
We will leverage, as we do on the sidebar,
the Glade technology,
so it will be resizable,
it will resize according to contents and so on and so forth.
It is already available, but you have to compile with a switch
to have the new version,
so to normal user, I would say, just wait for five dot two,
and you will have the option of by flagging
and choosing check boxes to have the interface that you prefer,
and so it's best your preferences and the space available on your video.
So that is more or less the direction we are going at the moment.
Of course, we are open to new contributors,
and new contributors may mean new features,
because, of course, as a true free software project,
we not only look for contributors in terms of main power,
but we look for contributors in terms of new and different ideas
to bring into the software.
So that's more or less what we want,
and if you want to contribute, just access the website,
that will drive you to the right spot for starting with your first cabinet.
The community had sent in some questions which we discussed before.
I'm going to try and find the developer to answer those,
so just to explain to our listeners why I'm not bringing them up here.
What is the relationship between LibreOffice and the foundation and the open document foundation?
The open document foundation was created as a house for LibreOffice.
Of course, LibreOffice is a large project,
and you need a house in terms of infrastructure.
There is a stuff that handles basic tasks.
It protects the assets, so of course the logo,
our intellectual property on the logo on some assets.
So the foundation is the house of LibreOffice,
it's a not-for-profit foundation.
It's very similar in terms of structure as the KDE organization or the GNOME foundation.
Of course, we have each one as its own peculiarities in terms of structure.
Our peculiarity is that we have members, so usually foundation do not have members.
We have members, members are people that contribute to the project,
not only with code but also with other contributions.
If you become a member, you can be elected and you can vote for other members to be elected as board members.
We have just had the new election of the board members.
So the board member is in charge for two years.
It will enter in charge on February 18th and 2016 and will end on February 17th, 2018.
So that is the new board and it's a little bit different from the previous one.
There is a little bit more of the community in the board, which is good.
But anyway, it represents the people that contribute to the project.
A lot of in the last year a few governments have decided to mandate ODF as the document format.
Do we have anything that protects the word ODF and would it be enough for me to just export a word document and say it's an ODF format?
Or does it mean when they say support to ODF?
Do you have a way of guaranteeing that within the...
Yes. So ODF is a true ISO standard.
Unfortunately, we have to use the... to add the word true, because there is a false ISO standard, which is Office of an XML, which is the Microsoft ISO standard.
Actually, it's a fantasy ISO standard in a sense that what is created as a format is completely different from the ISO standard as recognized by ISO.
So actually, the difference is that you have the ODF, which is not only recognized as a standard, but used as a standard.
So all the software that save ODF format save, we cannot say in an identical format, but in a format that is extremely similar to the standard.
Of course, writing a document is not a trivial task.
There might be bugs and there might be choices in saving in one way or the other.
Let's say that the chances that two software supporting ODF will open and not the other document in the same way are far higher than the chances that two versions of Microsoft Office open and Microsoft Office document in the same way.
Unfortunately, what is the reality is that as the Microsoft format is an ISO standard, people is not digging behind the ISO standard, and so they think that it's an ISO standard, so it should be enough.
Unfortunately, it's not this way, and we are doing a lot of education as a foundation and as local association to educate government about the real standards, so far only the UK government has been brilliant enough to choose the real standard.
And all in the Netherlands are very close to do the same.
All the other documents follow the, let's say the Pilatus way, so it is an ISO standard, so I wash my hand about the standards.
When we are tough and nasty, we are trying to talk with these people to make them aware of the fact that one is a standard and the other one is not.
And of course, as long as you are implementing a, let's say, a false ISO standard, you will, you will have all the interoperability cost that the use of a standard should get resolved.
For instance, the UK government, they have estimated that just by switching to ODEF, of course, when ODEF will be running, and it will take some time, they will save a percentage of their IT expenditure, yearly expenditure, which is 16 billion pounds, and they say it's between 3 and 5%.
So it's no small change, and this is not visible, I mean, because it's not time, it's not spent for buying anything, it's not spent for hiring a consultant, it's just spent to solve interoperability issues, which is what typically happens is that,
or I've got a document from you, and I understand that on page 3 there was a graphic, but I don't see the graphic, can you send me again the document, or can you send me the graphic as a separate file, because I need to understand what was there on page 3, or you've sent me a 4-page document, you say that you've sent me a 4-page document in your email, but I opened the document, it's a 7-page text, what has happened, so where are the 3 pages longer?
And the 3 pages longer may be the font, which is bigger, and this is unfortunately a real issue, but it can be 3, let's say, harder page cut, that just end up somewhere into the next page, because there is a line that is added, and then you have a white page with just a line, and then you jump to the next one.
So a 4-page document becomes a 7-page document, and this is unfortunately not new for anyone, no, you're describing something that I'm not in here, which obviously comes to everybody goes through this, and the course that is a cost.
Yeah, and it's funny, because when you describe this to people, they say, yeah, but it's unfortunate, this is how people are, and how things are, and we say, but do you believe that when we exchange all the F documents, they're all the same on every system, say, no, but this is not possible.
So we show that the document open on a, for instance, I'm a Macintosh and Linux user, and most of the people are Windows user, and I say, I send you my document from Linux, you open that in Windows, and you say, oh, it will be different, and the document is exactly the same.
They say, but how this is possible, because it's a standard, and then the next answer is, but then why Microsoft Office is not able, because they don't use a standard, just because they want you to use Microsoft Office.
And continue this update.
Exactly.
Exactly.
Awesome. Was there anything else that I can cover in the interview?
It's not really, not really.
And the events coming up during the year, that's some of our people.
Quite many.
We have a number of requests.
Last year, we had one in Cambridge, so that, but we, we will have one in Gran Canaria.
We will, we usually have one in Munich.
It really depends, but on, on our website, there are, there are usually, or on our blog, there are usually information on that.
We have the conference in September, the Libre Office conference will be in Bruno in the Czech Republic.
And then we will have local conferences in Italy in, we already had one in Japan.
It just read our blog, and subscribe to our mailing list, and you will get all the information.
And details of all this will be in the show notes for this episode.
Thank you very much.
Thank you.
Thank you.
You've been listening to Heckup Public Radio and Heckup Public Radio.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out how easy it really is.
Heckup Public Radio was founded by the Digital Dove Pound and the Infonomicon Computer Club, and is part of the binary revolution at Binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on the website, or record a follow-up episode yourself.
Unless otherwise stated, today's show is released under Creative Commons, Attribution, Share a Life, 3.0 license.
