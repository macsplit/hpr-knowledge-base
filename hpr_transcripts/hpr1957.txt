Episode: 1957
Title: HPR1957: FOSDEM 2016 K building level 1 Group B and C
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1957/hpr1957.mp3
Transcribed: 2025-10-18 11:59:58

---

This is HBR Episode 1957 entitled, Fossum 2016 K1B and K1C, it is posted I can't fall in
and in about 129 minutes long. The summary is, see us at the RLM blaster
over to open the MFFE Reactor S Merozbebian PostgreSQL Open Mandraver Major Gen 2.
This episode of HBR is brought to you by an honest host.com,
get 15% discount on all shared hosting with the offer code HBR15,
that's HBR15. Better web hosting that's honest and fair at an honest host.com.
Hi everybody this is Ken Fallon, I'm here at Fossum and you may remember two years ago we interviewed
the good folks at CA CERT, a link for that will be in the show notes.
And I'm talking to one of the founders of that project, your name is?
My name is Reinhard Moots and you want to project your relationship with the project?
Well I'm currently a member of the board and my relationship to see a service very simple.
I entered the association in the year 2012 and I'm working with all my heart for this project
to get our primary target done and our primary target is to get out it ready.
If we get an audit then the rest will be really simple. The most difficult point is to get all
documents prepared so that an external auditor has no more questions.
Yeah just before we get into that can you tell us briefly what CA CERT is on what you're trying to do?
Well okay you see a service on open and community driven is that we deploy certificates for free
to everybody. The main thing of a certificate is to replace in electronic commerce the normal
procedure done by a manual signature. So a digital certificate will replace that manual signature
and because of this there are a lot of requirements to consult.
The main thing is for example that the user who gives his certificate to anybody else
using email spreading documents or something like this is responsible for all requirements
which are defined by a public key infrastructure. He says that he is the owner of the private key,
the private key or Schnever tempered and so on and well I think from my personal point of view
that's the main thing in this discussion to make really clear to everybody and yes our service
is free for everybody. So this is typically used to secure transactions in a browser.
No it's typically used to secure transactions like email to sign documents so that a document
cannot be changed afterwards. It's typically used for example for code signing and the difference
to SSL certificates, certificates using for browsers may be prepared by machines and if this
is done by machines only then nobody will really certify that this is done in all cases correctly.
But you can use this to secure a certificate we deploy that's right that's great.
Your next question will be when do you enter the mainstream of the browsers?
Well the prerequisite is that we get our audit and no audit no integration to the browsers.
That's clear. And that work has been ongoing on that how close are you to get that finished?
From my point of view we should get done this latest one day before the first July 2017.
Okay this the introduction of the CA search into browsers like Firefox have been held up by the
fact that they didn't have a procedure and then they sort of seem to have invented a procedure
just because he asked. Yes that's true they have been several trials and several attempts to
mix well to get this task done and at least the procedures were stopped. Let's say they were stopped
and currently we have internal audit or nominated. A lot of our procedures are checked and found
to fulfill the baseline requirements but there is a rest to do and I don't want to talk now about
this what is to be done because it's a team working on this but my hope is to get the biggest
step done at the end of this year and for all Europeans we have to point out that
in Europe the project at the EU called EIDAS you may have heard of this will start with an
all 20 and eight member states in the EU at last in 2020. With the beginning with the first
January of 2020 the plans are that AEDAS will be operated with an all 20 and eight member states.
You know the EU? Yes well the member states have planned that they have a similar EID document
for everybody which may be well which may contain a digital certificate from your country
and at least you need one machine to read them on. So we hope, really hope that we will get
see results. Let's say forward we want to take part in this technology and it's not a work you will
do within five minutes or two months. It's a lot of work to do and not everybody agrees with us
and not everybody understands what is to do. Well we see for example every half a year
there's a presentation called the CA Day last two I personally attended in Berlin because it's
not very far from where I live and you see that the European Union is working on this theme
with really great power and they are going forwards and they don't wait for everybody to keep
to do the same steps and same time. They are pushing forwards and we have really
a lot of things to do and work to to come along with them. Yeah and there are our plans and I hope
that the community will see us and the community will help us and we need help and help is very
appreciated. Okay contact information for your project will be in the show notes for this episode.
Right behind me we have a table gone and what's happening over here on the table?
That's very easy to explain. If you want to have your certificate then you need to
prove your identity and that is what is done here. That is what we call insurance. People come
fill our form, talk to an insurer and just present their official ID cards. Well the photo copy
on it and what we do is we check that the information given on the form can be proved against
the official ID cards. So that is true and the second test is what we do is when we are home
we check that the information given on the cap formula is the same which have been regressed
up with these by the insurer by the candidate. So we do two checks and if both checks are passed
successfully then the insurer will give some points. What we call insurance points.
There's a ranking. The ranking is from zero up to 100 points. If you got 50 points you will be
able to get your personal name in your certificate. So you have a personal certificate. If you got
100 points you are able to do and pass the insurer test and become an insurer yourself. So that's
a great help for CSERD. If you decide on your home yes the project is worth to do this effort
and then just go start, get your 100 points, pass your cards test and become insurer. You are
welcome. Okay but wouldn't it just be simpler to take up my credit card and go to I don't know
very sign and get my cert that way? We don't use credit cards or something like this. All you
write down on the formula is your name, your date of birth and your primary email address.
And you have to regress over CSERD with this email address. Every person has a singular email
address which is really unique around the world. So we know that this person is the one we met.
Yeah and that is how it works. So it's every step of the way it's a web of trust
confirmed by individuals who are trusted by other individuals who are proven by documentation
that they're bringing. Yes that's right. This must be an administrative nightmare tip for all this
together. It's a very different way of working. I imagine that businesses who are looking
as approving your certification, this is a completely different approach. Yes it's really a different
approach and the question of all is is there a right for existence for CSERD or not? And it's my
opinion and not only my opinion. The right is a derivative from the right of identity security.
If you have a right to secure yourself, if you have a right, a privacy right, as commonly told,
then there is a right of existence for CSERD. If not, then all other CAs can do better.
That's very simple. I think that is too understood and that is my personal drive to help CSERD
to get forward. Okay, thank you very much and hopefully there will be people listening to this
that will at least contribute to your project. Thank you very much. Yeah, great. Thank you.
Can you tell me what project is or who you are? Okay, we are brain updateers. We are a team from
Barcelona, Spain and we started this project because of a requirement of a big enterprise called
Grifus, it's a pharmaceutical and they had lots and hundreds of Linux systems and they need a tool
to back up the operating system in order to disassemble recovery.
So the real name is Manager for Relax and Recovery. It's software that was made by
Gratian over here. This is a manager for rear backups. So all the backups are stored in a server,
the DRLM and all the rear backups are stored in the server. The point is that you can recover
any system just voting from the network. Okay, you have the copies in the server and you
grant the backups from the server also. You have a list of clients, a list of networks,
a list of backups and then you have to recover in other machines. It doesn't matter if
virtual is it physical and you recover from the network. So is this for like client machines or
are we talking about servers only? Servers. Okay, so how is it done as well and client machines,
but usually yeah. And you run a scheduled job in the server? What sort of jobs do you run?
Is it always a full system backup or is it incremental? It's a full operational
operative system backup. We separate the data from the operative system. I mean, do you recover
first the operating system and then if you have databases or whatever, you can use another tool,
Bakula, it doesn't matter too. We are focused and recover the operative system. The
operative system used to have a save and maybe three gigabytes, maximum or one gigabyte,
and it's really fast and quick to recover the system. Five, ten minutes to recover a server.
And does the server have to have the the new server have to have the same hardware as the old server?
It doesn't matter. You can recover in another server or another hardware.
By the moment it's in Intel machines, but we are testing now to do an empower Bethes and
So how does this work exactly? How does this work exactly?
This, okay, you have the server you want to backup and you have the
relaxing recover software and you have to keep, you have to
install the relaxing recover software in the server you want and then from the
the early end, you can run the backups. And you can schedule them via this via your system?
You can see the, sorry, depending on the... Can you schedule them? How often can you go there and
then select what days you backup and how often you backup? Yeah, you can keep
two copies for backups from one machine. It depends of the storage you have.
And then you have the list of backups that you need and you can mount the backup you
from the they want to recover and... And what are you hoping to get from FOSTEM?
Sorry, what are you hoping to do here? Is it just get more users?
No, more user. We want to make bigger the community with our project. We're not people to work with
us. Is it the first thing we want to do? We want to do more things with our project.
Okay, cool. Before we... Before I'm just going to ask you if I missed anything else and then
after the interview, I'd like you to just write your email and contact details for the show notes.
Okay, so have you had anything else that I missed?
I think no. Okay, very good. Thank you very much for the interview.
And I'm talking to... Me as the FOSTEM? Humble?
Okay, I'm what is Cluster?
What is Cluster? What is your project doing?
So Gluster is a scale-out file system. You can use it for your cloud storage.
You can add many servers and they will build one huge file system.
That sounds absolutely awesome.
Who is supporting the project? Where does it come from?
So Gluster Inc was bought a couple of years back by Redhead. Gluster Inc started the project
Redhead is now the main contributor. We get some contributions from people like Facebook,
some companies in Spain, in Italy, and yeah, we have several companies that support Gluster that
way. Okay, when you say it's a distribution file system, what exactly does that mean?
I don't know. You're cheating. I can beheading you with Cluster Shortlet.
A distributed file system means that you have a single file system on one particular server.
You have multiple servers. You add more file systems on all of those servers and you combine those
file systems into one. The files that you store land on one or more of those servers.
Okay, so on the underlying presumably Redhead servers, you would have the EXT3, EXT4 running,
or would it be formatted as Cluster? Is it above that? Where does it come in?
So in the backend, we prefer to use XFS. You can mount a Gluster file system through a
fuse client. So it's a user space process that actually does all the complex logic connecting
to the right servers and everything. You can also use an API, for example, Q and U,
uses a GFA API to connect to the Gluster Storage Service for the virtual images without
going through the file system. So it's a file system, but it's also very flexible storage
accessible through other means. So it's sort of a virtual thing on top of all the server file systems?
Yes, that's correct. And this virtual thing, you can access through different means,
like a fuse file system, GFA API, like Q and U, but also NFS, Kanisha, or Samba.
There are other projects that integrate very well with this library and they can access Gluster
immediately in the high performance way. Okay, I have one or two questions from that.
What happens if my server dies? So there are different possibilities to configure your volume.
You can add redundancy. By default, you don't have any redundancy. It's only distributed,
which means one file is located on one particular server. But if you want redundancy,
you can create a replica 2 volume, which means that the file is stored on two different servers.
If you want, you can do a replica 3, and you have three copies of your data. If one server fails,
it just automatically fails over to another server, and the other servers just deliver the data to
your clients. Okay, then say I have a networking issue. I have three data centers around the world,
and one of my data centers is temporarily offline. It comes back up. It thinks it's the master.
What happens then? So if you have a 3-way replica, you don't run into split-brain issues,
because you have two good copies and one possible bad copy. In that case, it's easy to recover,
because you know which are the good copies and you just sink the missing bits.
Okay, say I'm as bad as an administrator as I am, and I only configure two.
So in that case, you can run into split-brain issues. If one part of your split-brain gets an update,
the other part of your split-brain gets another update. The updates are conflicting,
and you don't know which file contains the right data. In this case, the administrator needs to
manually pick one of the files. You have advanced capabilities like policy-based split-brain
resolution, where the latest file can be used, or the biggest file can be used, and things like that.
But it's up to the administrator to pick one way to resolve that.
Is it possible just to keep both and then move on with your life?
You actually have both, but your access files to a file name, and if you open a file name,
you actually should only get one particular data set, and you can't receive two. So there's no way
to keep both files without any uncommon hacks.
Okay, what is the point of this? Why would I even need this?
So you need this if you need a lot of storage for backups, for, for example,
object storage if you want to upload a lot of files for your content delivery network,
which spends possibly petabytes. You don't want to store this on one particular server with many
disks. You probably want to have multiple servers so that you can distribute the disks, the load,
you can have high availability, and this is what we address with Gloucester.
Is there an advantage? Can I do some geogereographically serving nearest Edcash? That sort of stuff?
I'll go to your colleague here. So we have a feature called georeplication, which does the
singing, asynchronous, synchronously, and store the files in the different part of the geo,
and this georeplication feature is capable of serving the disaster recovery plans.
Yeah, so we have it. Okay, so I could use that like as a basis for CDN type network.
Yep, yep, it can be used. So I can just dump my files up there and then let the CDN
worry about where they're getting them from. Yeah, we have the copies in some of the geodes,
specific area, and if some, in case something went wrong, you can actually retrieve the data from that,
so. Okay, how long does it take files? If I save a file, how long does it take to get replicated
everywhere else? It depends on the data. I mean, if you have lots of data, maybe it's something like
internally used features like sing, arsing, or tar as the thing, so those type of features are used
for that. So in the line, sorry, don't the line support is arsinking. Awesome, actually.
So we use arsing for this georeplication. Georeplication is an asynchronous replication mechanism.
For local data centers, we use synchronous replication, and that's directly built into bluster.
So that doesn't use arsing. That's bluster internal. So asynchronous replication is used
for georeplication. If you have multiple data centers across the whole world,
and by default, the interval for checks to sync data is I think 10 minutes.
So this is this is really ideal for you have you have one source of truth and you're trying to
push it out to multiple places. I can think of lots of even on our own network like this will be
actually very useful. Now, say I had several people raspberry pies, for instance, and they all
wanted to be part of the HBR file system to serve a geodeverse multi-replicated blah blah blah of our
stuff. How is that just completely too under power to do this? Gluster doesn't need a lot of resources
on processors. So you can run it on ARM, it's fine, but most users will want many hard disks connected
to the service, and a Raspberry Pi just isn't really suitable for that. So you need a system
which has at least several SATA connectors. Okay, tell me a bit about the licensing, tell me a bit
about the applications that the programming languages that it's in. They're now pointing at each
other, I'm going to run. Yeah, so Gluster is DPL licensed version two on your.
We have a lipGF API, which is LDPL licensed version three.
Awesome good about the school. Yeah, no, so the licensing changed several times, so it's a bit
confusing. Yeah, so the applications that we use, we have NFS Kanisha is an application, it's an
NFS server, which means that you can use Gluster for any traditional operating systems that connect
over NFS. So you can use just normal NFS access, all your applications just work over NFS like that.
We have QMU, which is used in the over project and you're used in NOVA. It has a native integration,
we have native integration with Samba, so if you want to offer your window systems access to
a Gluster volume, they can use Samba with the native integration. Yeah, we have Swift on file,
Swift is the open stack object store, access protocol, and we have developers working on that,
so you can use Gluster as a backing store for Swift. Okay, where's the catch? Because when I was
working doing this stuff, it was all very, very expensive. Why, where's the catch in all of this?
There's no catch. It is very expensive to develop these kind of software, but that's the same
with most open source projects. If you compare it to other projects, a lot of contributions come in
from different companies, they spend a lot of money on getting the project stable. That's the same
with Gluster. A lot of companies that use it want to have it very stable and they provide patches
for bug fixes or performance improvements and things like that. You're all employed by Red Hat,
I'm guessing. Yes, we are all employed by Red Hat. Red Hat is one of the main contributors for
Gluster. Like I mentioned, that we have some contributors in Spain and Italy and some in the US
and because well within Europe, we only get some of the Red Hat folks that actually come to force
them and have meetings afterwards before the next conference starts. Excellent. It sounds like
actually something I could use or could have used five years ago, but a lot of spending has.
Is there anything that I didn't cover and that you want to talk about?
What language is it written? What's programming language is it?
Most of the things that we've written are in C, so it's a very stackable mechanism that we use.
We use translators and translators are more or less functionality layers. You can stack
on top of each other. All of these are written in C, but we have Python bindings. We are working
on improving the new management demon, which most likely will be written in GoLang.
We have bindings to other languages like Java and I think PHP and Ruby and I don't know what's
those are all contribute to back new musicians. And now if the guys want to help out with the project,
how can he or she help? We have a main list. You can reach it on Gluster-Devil at Gluster.org.
We have projects for new contributors where easy fixes are needed. So simple bug fixes,
we can have assistance with documentation. Book triage is something where we need to investigate,
new bugs, figure out if the problem is described very well, if all the log files are there,
if maybe there's a way to reproduce the bug, those are the things that are easy for new
contributors to start with. Fantastic. Guys, thank you very much for the interview.
I'm here beside the open-vert booth. I'm talking to Yanee Gowl.
Hi, how are you doing? I'm great. How are you? I'm fine. Can you tell me a little bit about your
project, please? Yeah, so our project is an enterprise quality virtualization management to manage
virtual machines, the whole lifecycle of virtual machines running with KVM. We support virtual
desktop virtual servers and all the needed for the management, ranging from creation of virtual
machine creation of template, the storage management. So we support multiple storage backends,
ranging from the local storage to blaster and a fast fiber channel iSCSI, you name it.
Networking configuration is also very important, so you need to make sure that they have
the proper networking, if there's a villain involved, if there's a bond of the network.
And of course, last but not least is the virtualization feature. How many this? How many CPUs,
virtual CPUs you have? Do you need them to be affinity with something like Numa support?
Range of tens or hundreds of features, all the dealing with data center virtualization.
And what sort of virtualization infrastructure do you support? KVM. KVM are working directly with
liberate. Okay, so is that fairly easy to get involved? How many machines would you need to,
what's your typical user base? So I think there's no typical user. We have a
quite big wide range of different users, so we just heard of a user who has four hosts and
100 virtual machines, and we know of hundreds of hosts and thousands of virtual machines,
so it typically ranges between those numbers and there are different scenarios to how people
are using the product. Some use it with high availability features and primary site and backup
sites. Some use it as a home lab even. You know, it's very, very easy to just set it up. It's
quite flawless, the installation, and you can set it up and running in a few minutes and get started.
It has a UI, a CLI, an API, SDK, and Python, and Java, so it's very easy to work with.
Can you tell me some of the history of the project where it comes from and who's supporting it?
So ages ago, there's been a startup, an Israeli startup called Kumonet, which will have this
as a product. It was acquired by Red Hat in about 2008 to 2005, remember correctly,
which immediately open-sourced it as over it. To be honest, initially, it was C-sharp,
closed-source, running on Windows. So we ported it to Java, Linux, running not with ever-sequel,
but with Postgres, and we've been open-sourced ever since.
So this would be sort of equivalent to something like the AWS services?
I would compare it more to VMware vSphere or the data center virtualization.
What are you hoping to achieve here in FostM?
Well, work with the community. Answer people questions, so we find people who have some questions,
some are burning questions. They have some burning issues that they need to resolve now.
Some just asking about the roadmap, some asking about how to get involved. We welcome every,
you know, community member to get involved. We have a very active user mailing list where
user actually helping each other, giving advice to each other, giving work around solution,
best practices between each other. So we are very active with the user community.
We're also looking for developers. So anyone who wants to contribute to the project,
it's written in both in Java and in Python, depends on which and the backend or versus the host
side. I think it's a very interesting project. We are very much accelerating the project.
So for example, only in the last release, we had more than 270 features implemented.
Everyone, welcome to join. Excellent. Thank you very much. Is there anything that I missed?
No, no, it's been great. Thank you for having me.
I'm back to the K building as OpenVZ virtual cell containers. So what am I talking to?
What's your name? Pavel Emelyanov. Hi, and give us a quick overview of what OpenVZ is.
OpenVZ is actually the very, one of the very first container technologies out there.
We've started it back in 2004 when we open sourced the commercial container product called
from SW Soft Company. Nowadays OpenVZ is one of the three working solutions
aside with Alexey and Docker. Why are you here? Why should I use OpenVZ instead of other options?
OpenVZ is the most mature technology. It exists on the market since as I told 2004.
Since we recommend our users to use our OpenVZ kernel, not the mainstream one, it provides
better stability and security issues. We are still not oriented on application containers.
We mostly work with operating system containers. It's like virtual machines where you see full
Linux distribution inside, but they are more lightweight, are better performing, and the easier
to manage, you can, for example, change memory on the fly, change the amount of CPU assigned to
a container on the fly, change these things on the fly. It works much, much faster and much easier
than for virtual machines. So from an end user point of view, so from a server administrator point of
view, I have a server of what do I need to install? Is it a special distribution, or can I use
any other based distribution? There are options. If you want the simplest case, you take a
bare metal installation. It installs just any other Linux distribution, and it starts running.
You can SSH into the server and use, so do I download an ISO image and boost the bare metal on that?
Yeah, that's it. That's one option. The other option is that you take individual components
and install them on your distribution. We support all RPM-based, like Fedoras, N2S, Sucy,
you can just download RPMs. For a depth-based, like Debian or Ubuntu,
we know that LN tool works. You can convert RPM to depth. We do not ship them ourselves yet,
but we have plans for it. Or if you are like a true hacker, you can get the sources, compile them,
and install. It will work. So say I take a bare metal image and boost the ISO from OpenVz.org.
I dropped into a fairly basic Linux-destroying guessing.
Yeah, you will get into a district that reminds CentOS. You will have YAM. You will have all
the standard command line tools you typically have. You won't have a graphical interface,
but it's not required for server I suppose. So it's based on CentOS or something like that, is it?
The things that are changing at the moment, it used to be based on CentOS, but right now we are
moving on another distribution called Rosalynux. It looks like Mandriva. So it's changing at the moment.
What's the reason for that? What was the reason for the change? We'd like to have more control on
the distribution itself. We used to type to CentOS and couldn't do certain things with our distribution,
with people who work on that, we can get more control, more features, more flexibility.
So tweak it to make virtualization easier? Yeah, yeah, yeah. Exactly like that.
Okay, then so then I have this base thing and then there's something else that runs the top of that.
How do I get my first VMO? It's really simple. Yet again, in the simplest case, you just create
PRL, CTL, create a container name, enter. It will get a default template,
download it from the OpenVizet.org site and create your container. It's not a virtual machine,
it's a container. It will be up and running, you can assign an API address so you can enter it
and it just works. So the difference between a container and a virtual machine, what's the
major difference? Virtual machine is when you take a hypervisor process which emulates hardware
to the guest operating system. Inside the guest, you shouldn't style kernel and user space and
they will work. There are optimizations when for example, kernel knows that it works on a hypervisor
and it doesn't try to talk to a hardware but it talks directly to the hypervisor. In case of
containers, we do not emulate hardware. We emulate operating system services. So walls between guests
are put not on the hardware level but inside the kernel. From the host point of view,
container looks just like a subtree of processes. If you launch, for example, a patchy server,
it looks like a subtree of tasks. If you launch a container, it looks the same
with the difference that the root is not a patchy, but a system deal. So you start a system deal
tell it that you guys now sit in a container. From the kernel point of view, it's namespaces and
C groups. Then its pawns arrest starts the services, it's in its scripts, whatever. But it all
just processes on the host which are limited with what they can do. So what actually can I install?
Can I use my own, am I tied to a particular Linux distro of supply by you or can I install
Ubuntu for example? You can install it on Ubuntu, though it will require from you some work,
you'll have to get packages installed manually and treat lots of menus. The easiest way is
to install bare metal. It will just one click. But I mean within inside the containers what sort of
operation system do I have root in there? We have things that are called templates. Template
is pre-packed, minimal image of a Linux distribution. We have templates for CentOS, for
Hell, for OpenSews, for Ubuntu, for Debian and for like weird stuff like Arch Linux and they're
a plenty of them. But I'm not going to be able to update my own kernel because I'm using the
kernel is the same for everyone. And from a system overview point of view you have
only tools to make the management of load from one system to somebody's hugging all the
preventing somebody from taking over all the resources of the machine. How do you do that?
It's embossed by the kernel. When we start a container, we take the init process of the container
and tell the kernel that this process should be limited with the other processes it sees.
It's called PidName Spaces. With the networking it sees, it's called NetName Spaces. With the files it
sees, it's called ChangeRoot, Trude and MountName Spaces. And it's also limited with the
memory it can consume. It's called MemSyG. With the amount of kernel memory it can consume,
with the network bandwidth, with the IO bandwidth and all the resources that it can consume CPU,
this all is limited to this particular subset of processes that create container.
Okay. And how big is the OpenVZ community? Can you tell me a bit how first of all what it's
licensed under and what sort of foundation you have behind it? It's licensed and the GPL version,
if I'm not mistaken, two, maybe some recent components were licensed under version three,
but it's all GPL. Except for the stuff we take from other projects, like in the distribution
we have a patch here, which is a patch analysis, right? Okay. So all our components are GPL.
The community, if we talk about developers, people that develop, it mostly consists of
the chosen employees, our kernel guys, user space guys, all these people that get salaries from
the chosen. We also have contributors from companies like from canonical, sometimes from
right head, as well as individuals that just send patches to have their stuff working.
And the user base, people that just use but do not contribute back the code or documentation,
I cannot estimate it precisely. I only remember the number of servers run by
run under OpenVZ. It was 100,000 and above. So we have this amount of servers. I cannot say for sure
how many people are those the containers or the servers? That's hardware notes. Containers are
typically 20 to 50 times bigger because it's the typical density of a container. Like if you take
a moderate server, you can stuff it with tens of them, sometimes hundreds but they should be small
enough. Okay, is there anything coming up in the next year that we should know about?
This year we'll have the chosen version 7, which is better integrated with products from our
previous name called Odin. Like we were split from the Odin company that made not only the virtualization
but also web panels and tools for automation. Like you have beautiful web panels where you can create
containers, not with common line, but with clicks, you could create tenants, users,
control resources, all this stuff. We were like divided into two pieces and virtualizer is well
integrated with this automation stuff. Also with the new version with this virtualizer 7,
you'll have an easier upgrade plan on to paid services like full support, professional services,
if you have problems in styling stuff, they will also have their backup and support from BitNymie.
BitNymie is a company that makes pre-packed templates of applications and distributions. They
constantly updated checkered works tested in virtualized web half integration with BitNymie images.
You can get BitNymie image and just run it on virtualize server.
Anything else that I've missed or should have asked?
Probably this thing, the Creo. I would say it's the main thing from virtualize and from open
reserves so far. It's a checkpoint restore project using which you can save the state of running
processes into a set of image files. Then copy image files anywhere and restore the original
processes from there. We use it for live migration and to replace kernel seamlessly without stopping
the containers. These things will appear in virtualize 7 because before it we used internal
implementation with its own problems but they disappear. As well as Creo is a community project
where people from canonical Google and IBM taking parts in that and Creo, which is also nice,
I think it will not only support live migration of open-visit containers but it's also for
LXC. You will be able to live migrate LXC containers and someday for Docker.
I'm at the free software foundation Europe.
F-S-F-E.org and I'm talking to my T.S. Kirchner from free software foundation Europe.
What's your position within the free software foundation Europe?
I'm the president. How did you get to be president?
That started a long time ago. I got involved in free software foundation Europe in 2004.
I was convinced the organization at that time to offer internships for the first time so
then I was the first intern for one year and afterwards I stayed as a volunteer for several years
till 2009 when I was employed and now since last year I was an employee there and then I took over
the presidency last year September. How you got to be interested in free software in first
years? That was in 1999. I had some computers at home and I wanted to send emails from one
computer to the other computer in the other room but it didn't work with the software which was
installed there also there was some email programs but I wanted to send it in the internal network
and then a friend of mine he in school he said yeah here take those floppies you can do it with
that and that's when I installed my first new Linux then on this machines. Now that was a
Sousa yeah and yeah then with that software that I did a lot of reading and at the beginning I
didn't get X running that took me several weeks and found some more weeks and but yeah with that
it was that this is going to blow up your monitor if you put it in there yeah things like that and
at that time I already decided that the command line is cooler than the X and I don't need that that
much but yeah and then I was able to play around and figure out how mail servers work and how I can
send emails around and then I met some others there I mean there were quite a few people at that
time interested in new Linux but I met some and we built up a free software user group in my area
we could went to free software conferences together and then at one point I found out that
free software is much more about also about political things and social things and about society and
was reading the GPL preamble and lots of articles by Richard Stormman and so I decided okay we need
more of this political things but I don't know how this works and then I decided to study
politics so I know okay as a result of that yes as a result of some of the game and yeah and then
in so I could combine those two two things on one side my studies how politics works on the other
side the technical things I was doing and I met some people at the university who were involved
in Debian and I asked around I like I had to do some seven months internship during my studies
and asked what are the cool free software organizations or anything connected with that where I could
do some changes and then he recommended free software foundation Europe to me as one of them
and I looked at the website and I thought oh that's really nice and then met people like
Werner here and others and yeah and then I started with the internship okay and so we may have
skipped a step can you tell people what the free software foundation is and why there's a
what is your relationship with the free software foundation why is there a free software foundation
Europe free software foundation Europe was founded in 2001 as a sister organization of the FSF
in the US to what do you do we do you want me to show sorry I can't say that anymore you're
recommended to me we do we promote free software in Europe so our our aim is to empower people to
control technology and we think that in the world where there are more and more computers all
around us it's important that those technologies empower us rather than restrict us and we explain
people how free software benefits for transparency for privacy for for more democratic society
and yeah what we what we do is we encourage people to use and develop free software we help to
remove barriers for free software adoption laws things like that we enable people to promote
free software in Europe so we want to make sure that everybody who wants to promote free software
in Europe they have to necessary things for that to actually do that that's the the main area for
sorry are you like behind any of the initiatives to get open document for open document standards
and open standards within governments yeah we we were quite involved in the open standards
pushes in the in governments we organized the document freedom day for a very long time where we
were pushing for for open standards in also in in governments talking with politicians for
very very long time to convince them that whatever they do they should use open standards for that
also the the huge battle several years ago about Microsoft OXML versus ODF I mean that's still
ongoing in a way was a lot of people in the in governments believe that OXML is in open format and
that Microsoft would implement the standard that's that's one of the works areas we we have
been involved in the others are in general pushing for free software in in government so that in
procurement that there is that free software is not in a disadvantage when when governments want
to procure free software which is unfortunately the case in lots of countries and at the moment we
we also we are working that whenever software is produced with public money that it has to be
published as free software so that's it's it's already happening in some places but we want to have
that in as many places but also in member states in Europe and and all different levels like in
procurement also in research projects so when there's money from from from public funds that
just software afterwards benefits also to the rest of the public so can you tell me a little bit
about some of the actions that the initiatives that you're doing right now that people can help
yeah at the moment very concrete thing you can directly help others on the 14th of February
we celebrate the I love free software day awesome and so we believe that we are always quite
critical with each other in the free software community we write bug reports feature requests we
have very harsh discussions sometimes and so we think it's good to have one day in the year where
we remind each other that we are doing good work that we like what others are doing so if you ever
hesitate to actually say someone that you love what they are working on in a free software field
take this day as an opportunity write an email to the project or to a person invite them take
them out to have some drinks together or a cake or whatever do something nice to others in the
free software community that is the absolute 180 I like that so much because I found that with
the free software foundation in the US a lot of the campaigning tends to be quite negative I think
this is a very positive thing that yeah we could definitely do it there can you tell me a little
bit about how the free software foundation is set up and how you become a member and is it open
is it do you need to be do you need to get a job as an intern to become president what if I want
to become president of the morning what do I need to do if you want to become president I mean so
first of all the if you want to get involved in the thing you do is you go on our website you have
a look at the different areas we work and you contact us and tell us that you would like to
to join our work that's one of the easy thing I mean there are some groups already established
like we have a very active translate translation team which makes sure that we have all the materials
all the leaflets we produce and all the different languages around Europe so that we reach people
in their native language we have a web team which takes care of the website which we are always
in great need of people helping us with that we we also have some team specifically for
different countries in in Europe who do certain activities like contacting governments like
making sure we get the translation make sure we have local booths at events at street festivals
and so on we're very local teams like in different cities like Munich, Berlin, Yenna
and different specific cities and there you can go to the meetings participate there and yeah see
if if there's something which is fun for you to participate in and beside that of course there's
also all the other the other areas like when there are consultations by the European Commission and
you you read for example that we we wrote a reply to one of those consultations and you say oh
technically there is a problem there or you're not right there or or if you do more in this area
I would be able to help you with technical competence or to to to help you with that then
just contact us and we are very happy to have more people who can help us
analyzing technical things so we can think about political consequences and how we can counter that
that's a very good thing and so in in general it's it's as soon as you get involved there
independent of what you're doing I mean some people like doing booths other like analyzing
policy papers others they love giving talks or interviews to like when they are shown
list asking questions about free software they they love answering their requests others they don't
like that at all talking with others about free software they like to hack some stuff to send out
a newsletter or whatever and coming support you financially yes so that's the the other way we
have we have a sustaining membership program the fellowship and that starts with 60 euro a year
and that's for the for the sustainable membership that's one thing there and as a sustainable
member at the moment what also happens there is that you decide having an fsv email fsv.org email
address a chaperocound and you can order a smart card from us one of the other benefits is that you
can you can elect two people in the as into the association so we have a association is quite
small we have at the moment 20 people and two of them are elected from the larger community
from those sustainable members where do you be authorating them from they came from the time when
this was we didn't have to sustainable members yet or people can apply to be members of the
association and then there's a process that we have a look at that and see if they the main
part there is that people should be committed to free software there's a long-term commitment
and that we trust them to not treat any of the short-term benefits or so but that there's a long-term
commitment to further free software I heard Richard Stormman discuss or actually it wasn't Richard
Stormman it was Karen from the free software describing why the organizations are set up like that
so can't be hijacked by people yes yes that was the idea in the beginning we are
every now and then we we are thinking about how to if that's really still a problem we face or
if we can change that or if we how we can make it easier and then then there are people say okay
we should have an open membership then you talk with people from other organizations which are
also quite known in the hacker community like ccc or so and they tell you oh we are thinking
about going in the other way and so it's it's difficult how to change those things so what
we want to do is at the moment we want to make it easier to let people see how this process looks
like how you can become a member and so that more people can take this and do it actually and
this group then also because of your question how do I become president this group elects the
president and there it's like I think with all other organizations that you somehow have had to
do things that people trust you to be a good leader of the of the group a lot of our listeners are
from the US or Australia basically outside of Europe is the wrong thing that they can do to help
the organization or should they just join the local organization in their area I mean there's
one thing for people from yes or all the English speaking world as we need proof readers
that's always very good to have proof readers for our websites a lot of the things we publish it's
written by someone who had a native who did a translation of things which happened in their
countries so something is happening in the Netherlands it was written in Dutch they translated it
to English and then translators translated again from English into French into
Greek into whatever and so it's very helpful if people contribute to proof reading of the English
text it's one thing and the other is that we have lots of materials which are not really focused
on a certain region so we have leaflets explaining free software we have leaflets explaining encryption
we have leaflets explaining free software on Android phones so you can order that stuff
you can distribute it in your local communities and yeah so that's something which everybody
can do to make sure that in your favorite cafe or bookstore or wherever you always make sure
to put that stuff there do you have like a monthly annual publication or something that's
a monthly newsletter and that's are available in an average of six languages so you can subscribe
for that and yeah there's also there are some action items in there what you can do so there's always
something you decide the things I already told you what are on a regular basis you will find things
and you can contact us and we are always happy if people contribute with something so one thing
is to support us with money the other thing is if you spend a few hours a month to work with us
that's the best thing you can do to support us okay very good was there anything else that I
didn't cover or anything else that's coming up that we should know about I think that was already quite
okay yeah of course several topics you also one of the other policy goals we want to pursue at
the moment is that you have to write to modify your own hard and software yeah it seems logical
but it's more and more I mean you have to have the problem with the DMCA in in Europe it's also
we we fear that through some of the trade treaties things like that will move over to Europe and
we'll make it hard here and a lot of companies already argue that yeah the thing you had before
without software you were allowed to modify it but now we have a computer in there and if you do
that then we will sue you and that's something which we are working on when we hope to get
more support from people to to explain this issue to politicians to journalists to the channel
public why is it important that you are able to modify that is there like in Ireland there's
general elections about to be called is there a place where I could get you know for the
open source people in Ireland for instance to when the politicians around the doorstep to go okay
it's free sir you have this we have all these other issues but we want free software to be
what you stand on free software is there a verb that we can hit the measure an email letter that I
can email all the potential candidates to ask them these questions there are at the moment several
ones so we had different campaigns for elections we one was that we sent questions to political
parties and asked them on their stands on different subjects and afterwards analyzed that and
published their questions and answers as well as an analysis that's quite a lot of work but there
you can take out a lot of the questions the other thing was that we had something like a pact or
we asked people to to subscribe to certain points like I will make sure to work for free software
when I'm elected or some general statements but that's something where you you need to database you
contact the politicians they sign up and you keep track of that but that was also something which
was done on a European level for the European elections and there are also statements in there
which you can which you can use for that and then the other thing was that we just now in
Switzerland it happened that we had a platform where people were also questioned on their position
on certain things like do you agree that encryption is an important thing for society and then they
can say yes I fully agree or I totally disagree and that's also something which which happened and
so it's it's different from country to country what's best to you so I don't know exactly in
Ireland how the political system works there if you directly elect people if it's more about
the political parties how many political parties you have there and so on so I would have to
check that but if you're interested in doing something like that you can contact us for some help
or the other thing is in general what you can always do go to your politicians independent if there
is election or not and talk with them about free software politicians they get so many questions
about so many stupid things that you should really not be shy to talk with them about free software
okay just go there and take the time and explain why this is important for you and what do you think
they should they could do on what you see fit okay I think I'm taking open up your time thank you
very very much for the interview I do appreciate it
what's your name I'm S. Beluis-Kamaito I'm coming from France and I'm the one of the few
developer fresh developer of ReactOS I'm not as react to us exactly so ReactOS aims at
more or less learning windows on its windows server 2003 edition and for that we cannot use
a canal Linux and using wine directly because we want also to support natively and directly
windows drivers so for that we have our own kernel that is compatible with windows about
2003 and the kernel and on top of that we have our own code our own user mode code and
some some part of it use wine code actually mostly for the interface but other words for the
code of DLS it's our code and what's what computing language you use so it's mainly in C and
for the very low level parts for instance parts some parts of the bootloader or some parts of
the memory manager in the kernel these parts are in assembly and for that we have x86 code in
assembly and how what is the use case for this why other than it just been something nice to
code on why are you doing this we are doing this project we have seen that some people and some
some mental presses still use windows xp and windows xp software and they don't want
or they cannot update to the latest versions of windows and if they use these applications on embedded
system they cannot use virtualization they cannot install Linux and use a virtual machine to run
the windows application on it so for these applications we think that having a light open source
free clone of windows is the best that we can do so i'm imagining here a big factory with lots lots of
machines and it's all controlled by one xp machine which if it breaks then the company is completely
ruined and then you come on with a new machine with react to us on us you load the same software
and your machine continues to run that will be the final goal i think yes but we are still some steps
i just see a few problems in your future but the biggest of them how does this sit for copyright
our Microsoft not ringing you up gone hey you can't do that you're taking our stuff yes
we are doing the best we can to do some clean reverse engineering so basically that is that a few
people are documenting things that they reverse and then they give this documentation to other
people that have no seen the code of windows to re-implement this part so this is how we do
if you put clean separation between those who do the reverse engineering and those who do the
that's a that's a useful one so how is it how far are you getting on how how well is it working on
yeah for basic purpose it works well so if you start and use a application like Firefox or
open office or some other existing open source software it works nice but it should say a bit of
course since we are still out of our stages software we have bugs in the usb or audio or
for instance applications or games that use a direct X for the graphics rendering this
do not work always correct okay and is there a sort of company behind this or is it purely project
driven i'm working from the assumption that if some company out there ruins this factory and this
has this one PC and they want to make sure that their piece of proprietary code runs on ReactOS
is there some number they can call to hire ReactOS developer to work specifically on migrating that
okay so at the moment we we use so we have some emails that they can use to contact us that are
or main with page so they can they can go and find and send us a mail so yes we have contacts
like my mail or they can contact us let's say more directly if they go on IRC we have a IRC
channels and they can they can talk directly to people yeah okay fantastic was there anything else
that I should have asked that I missed yes so we are going to release our all point for version
so it is scheduled to be approximately one or two weeks together we are a new version of our website
and it is also planned during this year to release the so-called ReactOS community edition based
on a 0.4 version that should be some kind of version of ReactOS based on a 0.4 we added features
to make applications work more correctly and this of course can include some temporarily
acts to make application working while in parallel we keep the main code of three of these acts and
22 implement more properly the features that are needed and so that we can evolve both of the things
together and this is these two things that are doing why do you have a community edition does
that mean that you have a professional edition that you charge for we are we don't have any
labeled professional edition we have a community that is something that is targeted to be
accessible to many people and the the coughing that remains and this coughing so the
normal releases that can be considered as a professional edition but at the moment we don't have
this information I'm at the Bureau of OS boot and I'm talking to Daniel Neubegger from Dacity
which is involved into the various projects okay so when did this happen
when so can you tell us a bit about the project and what what it does yeah the project starts
three years ago or nearly four years ago and it's in four from Bacolor it's an open source backup
software which is open source public on GitHub and it's also enterprise ready which with support
and subscription and you can use it in heterogeneous environments so that means you can backup
different systems linux windows happy unix or BSD for example widget and you can use a lot of
different media types to store the backup and you also can do replication and migration stuff
with it so yeah let's mainly the thing about barriers so why did why was the fork why did you
fork from Bacolor when that's also an open source project yeah terrestrial so at first you need
to know that there is an up source version the community version and there's a close source version
and the price version and the community was on low activity and a lot of ideas didn't really
did not get into the community version and we think about it it was time to start something new and
it was the reason why we fork so you went so it goes from an open core to a completely open source
project source project so there are no zip projects in barriers so there's no there are no close
source parts and there so they somebody at home can download the exact same version as an enterprise
uses so I can use yeah of course so the differences for subscription support is that
that there are two different package sources so repositories and the stable major releases
are a package for the community for free and there are also beta releases and the nightly builds you
can use and in the enterprise repositories there are smaller bug fixes you get the bug fixes
faster and there are not only major releases available ready package so but the code is all the time
up source so if you need things faster in the in the community repository then you have to use
the nightly builds of course but the major releases are always stable stable publish in this
repository so and also features and the new features which are maybe developed with founder
development are also free so there's always the massacre and that's the source you can use it
you can use the packages from the barrier service territory you can you can package them by yourself
so you can compile them by yourself and that's it so how difficult is it to use
so at least you need Linux basics yeah to install it and to configure the setup so actually we
involved the default configuration so that it's usable out of the box with configuration which is
based on the book my colleague flip shots already has written so there's a basic setup with an
explanation which works out of the box and if you want to set up a higher backup strategy you need
to be familiar with a text editor and with the shell of course so yeah at least you really need
Linux administration knowledge so to use it is it available in the distributions actually
it's only in Debian so indeed in the actually Debian chassis freeze there's barriers
integrated so because we found some maintainers for it and so far there's no other distribution
there is ship of so actually I think Fedora put barriers on his list and there are discussions
to bring it in the Fedora releases so what do I need in order to run a central backup server and
agents do I need to install anything on my client machines do I need to install anything on
the client machines yes you need you need to install at least a file demon so we call it file demon
normal backup vendors call it agent so the file demon runs on the client you want to
a backup and it's the part where we read or write the data to the server so you need to see
that it's client it's client based of course so there are three parts you have the file demon you
have to direct her himself which controls the whole setup and then you have the storage demon
which controls and handles the media where you store your data so there are three parts yes
and do you have support like for robots tape drives and stuff like that how does that work good question so
that's one of the yeah the environments where it's best fit so it's really made for working with
tape libraries big tape library so we I know about environments with tape libraries with up to
five hundred slots and more than six drives and it totally works out to method with this tape
libraries so you also can use single drives but of course it makes more sense to use tape
libraries yeah to work with so but you can also store your data on disk you can use everything
what you can mount to your storage demon server you can use storage to store your container files
to volumes on it and for example you can later on replicate or migrate them to magnetic tapes to
LTOs to put them for example in a bank wall or to have off-site backups on another location which are
reliable and persistent for a lower tie wrench you know so our what sort of tools do you provide
for tape management interesting questions so at least there is no specific code in barriers to use
tape libraries so and that's maybe one point why it works so efficient and works with nearly
every tape library because we are using the standard new tools when empty and empty x to handle
the tape libraries and the drives and they are there for over 10 years now and there works
reliable and if your kernel loads the drivers and the modules and your your operating system
distribution your system can talk to the tape library then you can also use it with barriers
and so that's the fact why there are no hardware or tape vendor tape library vendor restrictions
and that's quite cool so there's no no special ccode for talking to the tape library so
there are basic tools it just works there are shell scripts which are working with parameters
and it works so okay if I wanted to use this just on my home situation to back up to a NAS
could I could I do that put agents on my children's PCs and stuff why you should use this so
yeah or so if you're a home vendor maybe sometimes it's a bit it's a bit heavyweight so
um but why you should use it at home so the reason is you have you have the full control yeah
if the backup happens and what what what is in the backup and you have the full control to restore
it you see here okay so maybe it's also a way to control your wife oh
was my wife on his laptop last night at maybe two o'clock because the backups happens there
I don't know so you can't say our husband maybe maybe if you are in control freak
it's a reason okay so
um look do you support backups over a network at all yeah yeah it's in the whole solution is
it's network-based TCPIP so you can have director storage team on different servers you know
and of course you can replicate and migrate the data between different storage team in servers
so that means you can you can plan from off-site backups or a better or you can do cloud backups
so you can migrate or replicate your data into the cloud you know and that's also possible
so there are there are some different setups you can establish so disk to disk at first step
and then you can replicate or migrate it for example from to another disk in the cloud or
maybe to tape you can replicate it to tape or you can migrate it to tape yeah that's possible
there's the wrong thing that I haven't asked that you want to mention
so at least yeah if you are looking on the um open source backup marker maybe out there it's the
it's the solution which is mostly enterprise value and works reliable and performance so
that's at least something I can say and yeah that's maybe something which should be mentioned
I put that in put links to that in the show notes and then people who are interested can look
in the show notes for this episode and get more information there okay thank you very much
we're at the Debian booth and I'm talking to Sebastian hi and how did you become a first of all
can you tell people what Debian is Debian is one of the largest community support
at Linux distributions it's been around since the 90s everybody tends to know it via Ubuntu which
has a much bigger presence regarding name recognition but Debian is the big brother and
do you feel that they is there still a lot of cross sharing of code between Debian and Ubuntu
or is Debian doing its own thing that really depends on the different areas because Debian is
very large for instance my specific niche the geospatial software has very few contributors in Debian
and even fewer in Ubuntu so that's not a very great great example but if you look at for instance
the the big popular database package like the mySQL team that has a very good collaboration between
the Debian side and the Ubuntu side it really depends on which area you're looking at how did you
become a Debian developer I've been using Debian for over 13 years wanted to contribute back but never
found the right way to do it eventually I started contributing to OpenStripMap and noticed that
the software used for OpenStripMap was not as well maintained as I would like to see and I
basically started filling that need updating packages because I need a bug fixes and new upstream
releases from there at the bulk of rolling and eventually I became a Debian developer how do you
think the how do you so with Debian you have a choice of desktop so that you can run
and you want to know which one I do yeah which one do you run I like KDE since
basically forever I tried them all initially you know GNOME KDE but we had
plugged the box and some others but basically GNOME KDE were the most promising and of those two
I like KDE the best because it allowed me to configure a lot of things which GNOME hit away
in Decon the typical thing it seemed more hacker friendly
are you running the latest version yeah I run Debian on stable on my workstation so I have the
nice plus my five since a couple of months since that hit the archives
you know how have you found the inability to change the ISO this
they can change the clock very annoying because I like my interfaces in English but I like my date
format in the Dutch format and that way of configuring is not as well supported as it used to be
so I'm a little disappointed but if I really want to fix it I should you know get off my ass and
start contributing it this year you do is obviously been a sad sad thing for the Debian
music in the passing of the end yes very much not so much as the system D related flame wars
because Ian you know he was the founder but not as actively participating in the project the
last couple of years so it's it's not like one of our core contributors left like Joey has who left
mostly trigger tends to the system debate that was a bigger shock than Ian passing away how have
you dealt with that the system didn't well shift deleting most of the flame wars trends in my email
program because it was basically wasting our time because you know you've heard the arguments
in the first couple of weeks and then people started repeating them so you got really bored of that
so let's focus our time on more interesting things yeah I can speak for the thousands of
contributors yeah everybody has his own motivations I can only speak for myself but I think that
most people because we're all volunteers and don't have luxury of spending our entire week
working on Debian we have to be careful on what we spend our time on so as soon as things become
unpleasant it's a good reason to stop doing that or at least for now we were talking earlier on
about accessibility and I just wanted to know do you know how to what's the best way for me to be
able to contribute both reports and that sort of thing to the Debian project on accessibility issues
well bug reports is easy just go to the website we have a nice wiki page documenting how to send
bug reports either using the dedicated report bug program or simplify our email okay cool
I don't think it's fair to you we've had a discussion offline so I'm not going to
to ask you more details about that but would you be willing to try out Debian blind folded ones
just for the crack it only takes an hour now but not now obviously yeah I think it could be fun I
want about two years ago was that she gets festival in Hungary yep and they have a dedicated
ability park about also raising awareness about special needs and it was really kind of cool of
going blindfolded through a maze and simply feeling the walls and especially the most fun part
at the end of the line there was a tree with very low hanging branches and of course that hit me
in the face everybody started laughing and it's like yeah okay that's the typical thing a blind
person would run into too because you can't see it coming well that's a suggestion that I would
like to put on to the Debian mailing list but I mean they don't know me from Adam is you know guys
on a particular day maybe pick an accessibility day that you know people will try their projects
be a Debian be a chance to be a whatever as a blind user do you think that's something that
would be approachable in the community I think you mostly need to lower the barrier to test
the accessibility for instance in my point of view I think I need a briar reader to get the
typical experience of a blind user using Debian because I can't imagine them relying on voice
output themselves so and also I'm not I have very little experience with accessibility so
it's hard for me to build a clear picture of what that would be like okay yeah I see where we go
but just try it out and see what that would be like what's the wrong thing else here that I should
have mentioned with regard to the Debian project getting involved no fortunately Debian is an
internet-based project so everything you need to know you can find on the internet we have good
weekies and endless mailing lists you can refer to and especially if you into accessibility reach
out to the accessibility mailing list because that's where the relevant parties are okay I'm just
a random Debian developer so I'm not specific into accessibility all right thank you very much
for your time I'm at the post-gress SQL boot I can never say that right I'm talking to post-press
GL you'll get used to it yeah my name is Christopher yeah I'm working for as a post-press
consultant for credit different Germany I'm a Debian developer and I'm doing the post-press
packaging for Debian so you're here between both leads here and we go nice coincidence that the
two booths are just next to each other yeah excellent and for somebody who doesn't know can you tell me
what post-gress SQL is what what it is it's a database the safer claimed mode the world's most
advanced open-source database yeah it's an SQL database with full transactional
and so on support you can store your data in it any mission critical stuff and we promise we
don't lose your data okay that's actually a good thing in the database I'm just wondering why
somebody would choose your database over my SQL friends it's simply more stable we have nice
semantics we care about your data entry if you put data in in there it will come out exactly as
you put in there all the database will tell you beforehand that any constraints are violated
there's simply no surprises when you when you're using post-press we are it just works as
designed as a SQL standard says and yeah the competitors not necessarily do that okay so how did
you get involved in the project oh as a Debian person I've been a Debian developer for about 10
years now and then started to work at that open source consulting company and they are
got involved into databases and eventually started working on the Debian packages for post-press
and yeah so I came from the Debian community as well into the post-gress community I would just say
post-gress stacks up against something like an Oracle database so how does it work how does it
fare against Oracle database would there ever be a situation where you say okay post-cars SQL is
is what you need instead of some proprietary database we I guess we are on par with the
proprietary corporate databases since some years and yeah every product has its own advantages
in some areas maybe post-press is better in some areas maybe some other database as said one feature
that post-cars doesn't have yet overall if you're just looking generically for good database
use post-press if your specific needs I have to check what you need but generally post-cars is
usually a good choice what sort of cool features do you have that you think hey people we have
this cool 30 features scrolling through the presentation day which you can't see on the radio
just to take that yeah extensions are cool features we have since a few years ago where you can
easily load new functionality in the database that has been packaged before there was just
security scrolling over the screen we put a lot of effort in that that's only the right users
can access the database and then only see the right tables see the right columns and brand new
post was 9.5 is even row level security where can have enterprise grade security where you can
say which user is allowed to see which part of which table who is managing the is there a company
behind this or is it a completely community driven it's a completely free project there's no
company behind it there are several companies earning money by developing postcards and selling
to their customers or just offering support but the project itself is entirely community driven
do you support data replication between different servers yeah you can have a master server
and an arbitrary number of slave servers where that master server data is replicated too
and what happens if one of them dies and then comes back and then you can promote a slave server to
be the new master server and take over at the point where the master server had died very good
is there anything else I've missed that I should have actually did Morris should be doing this
interview one of our contributors because he uses this all the time and is annoyed that we're
using ysql on the side yeah well we have cool new features in the new release they mentioned
row level security stuff we have improved the json data type so we can do more useful operations
on the json database you might have sort in your noise scale database otherwise
and I've been using the testing version for so long that I actually forgot what's new in there
why would somebody be using sql database now when there's things like no sql
seems to be all the rage as it you have transactions that really take care that your data
data stays in your database when you've put in in there and the performance is actually better
in some benchmarks depending on which part you look at and what not okay thank you very much for
your time I'm here with the open mandriva booth and I'm talking to calling close I'm the president
of open mandriva association and tell me what is first of all what's open mandriva and what's
the association open mandriva is a distribution of linux loosely founded on the the now defunct mandriva
distribution that was quite famous from the start of linux went through mandrake and became
mandriva and we are carrying on their work we're trying to create a distribution that we hope
will reflect what they might have done in the future are you similar to manjaya or is there any cross
over there no no we're not the same as as magaya we're we're looking far more into the future because
we believe that open mandriva would have changed over the years and so we have looked at the cutting
edge side of of what is available and to do that we've changed to the clang LLVM compiler
pair and we're compiling all our software with that we're we're looking at ways of improving
our software builds by creating a thing called abf which is an automated build farm we used to
share one of these farms with another distribution who is now unfortunately closed
and so we've done our own implementation which is more user friendly and supposed to help
users participate directly in the building of the distribution our ultimate build farm the one
we're currently using is is unstable shall we say and we we've started creating our own
and we've virtually finished now on this will allow users to directly participate in the build
functionality of the distribution by donating their machines for a period of time while our mass
builds you know process is going on does that mean that we I would physically need to ship a machine
to you no no the idea is that you simply install the software package and the machine will be
accessed over the over the network the user has full control they can they can start the process
and stop it whenever they like okay they they don't even need special ports through to open on
their on their on their firewall we can operate through secure shell and everything has a a good
security lock on it so that there are build tokens so when the token the build is complete that
a proper token is passed to the server to authenticate but the build is actually where it came
where it came from and who it came from so that we know that there's nothing bad being introduced
into the into the distribution so somebody can actually guarantee that this piece of software
will run on their laptop it will run on most machines I wouldn't like to make a sweeping statement
like that well if you donate your machine then it's going to always the exception to the role
by donating your own hardware you know it's going to run on your own hardware exactly you do yeah
and one of the big things about this is that the user then feels that they've contributed
something to the distribution and from that point of view we hope to get some product loyalty
you know where people will stay with us and and help us improve the system and obviously we
need finance to stay alive so donate help us buy donations and so on if they use our operating
system then we hope that they'll help us in other ways so tell us about the foundation
and the association well the foundation of this association was um it started because mandrava
wanted to um pass on all their software yeah but because it was a publicly quoted company um legally
they were not allowed to do that because it's an asset yeah okay um okay but what they decided
to do under French law it was possible to form an association which is a chair like a charitable
institution yeah and the software could be donated to that so an association with articles and
and voting rights and so on and so forth was formed and then the software was passed on to that
association and we've taken that software foundation and we've built it up to become a more
modern thing um because obviously when we took it over you know 2010 2011 was the the last
mandrava distribution of any note um obviously they needed to be some work done things were
getting out of date bits were broken so on and so gradually we've upgraded the whole distribution
until now we're we're at the cutting edge of a modern distribution you know we have
we have everything up to date we have we use a very modern compiler we use link time optimization
which is is as far as I know not used by any other distribution and what does that by me
well this buys you a much smaller memory footprint far more responsive programs um link time
optimization optimizes the program as it will run formally um without linking the program you
couldn't tell certain parts whether you can optimize them or not so you get extra optimization
for that for your money um and this has resulted in a a Chris operating said one that operates
very very rapidly and and feels responsive what's uh what's your default desktop or do you
well our default is is KDE 5 at the moment um we can provide Alex QT and we support Hawaii and
Western so the that we're we're really up to date on that in that area um we'll have a new release
out before March we host oh dear this has just fallen off uh we have a new release out just before
March we're hoping um which will have have all these things in it um our main main thrust though is
arch 64 yeah this is on the desk as arch 64 laptop well nearly well yeah yeah um all right we had
another idea in December we want we've always brought a bit of interesting hardware to force
down yeah but to do engage people you know to talk about and this year somebody suggested we
we want to have an arm 64 laptop that was a bit of a joke at the time but I started thinking
about it and we thought well maybe this is doable so I started looking about and I found that
there is there was a possibility so I started doing it I converted the uh the old dellensperon
that I had under the bed and um I put an 18 people it doesn't look well does it but you'd be
surprised if people look at our website in about a month's time they should be able to see an arm 64
laptop masquerading as a dellensperon it's not a pretty sight but the keyboard works it suits
the audience I must say and it'll have a uh I think our arm 64 browsers are in it is this
their gutter this is the inside says he pointing out is small little raspberry plates size board
yeah well this thing's about 10 times more powerful than a raspberry pi yeah um it's uh it's got eight
cores it runs at 1.2 gigahertz it's got full wireless um sweet on it including the area it's got
Bluetooth it's got a camera interface and it's got four three USB ports um you can take it
for eight eight watts it draws in power so when you put it in the laptop it's going to last
quite a long time well there are about 90 pounds yeah but they're these uh they're they're just on
general release now you can just about buy them but um we're lucky enough to have one of our
developers who works for a company who who knows a little bit about these things and well
no no no it was distributed for him to make it work yeah very good and I'm
so anything else that's just coming up that should know that um apart from our new release which
as I've already said is got hopefully being the spring um that's about it I think but we'd
certainly like to have some more more users come along and help us debug stuff and uh you know
to report uh any issues that they might find that they help us develop you know uh we've got we've
got always got space for people who build a build RPM packages and for developers who want to
right go so you know yeah the invitation is open okay I'll uh just after this I'll get some
details that we can put it into the show notes so that people can go to your project this is the
latest kitty years this is the latest and it also has fixed the ISO it's a one book yeah
and this is this is this is KDE that was released about three days ago okay so done especially
for the show well thank you very much for uh taking the time and I do appreciate it thank you cool
hi this is Ken and I'm talking to uh Kristoff iKrisov what project are you with
uh i'm working in fact with marguilla distribution marguilla Linux distribution my nickname actually
I'm in any Linux the distribution and development team we are known by our nickname also my nickname
is actually iddert okay and uh can you tell me what it is oh yeah um I guess everybody who knows
Linux certainly knows a few names about Linux distribution like uh had that for the rock etc so
marguilla is one of them and in fact it's uh it's a quite recent distribution we are I now are
you know we're a six version of the of the of the distribution and it's actually uh inherited from
all the mandrival in this distribution and it's a completely community driven operating system
and that's it yeah it's rpm based and also we have all the tools that actually people from
mandrake and mandrival developed like the super nice control centers etc and of course we have
much more much more much more income from new people that actually had new packages etc so why
would I run that instead of running for reference well i think it's actually the good adventure the
best advantage certainly is that it's super easy to use and uh i have to say that it's owing to
the old mandrival control center tool everything is user friendly this this you know this
drug control is actually uh centralizing a bit everything for configuring your system it's very
easy to use it's click and uh so you don't need to enter configuration fight so i think it's one of
the easiest distribution to get enough uh for new commerce in fact so i see that's a great
advantage of marguilla and of course if you have if you're uh experience enough with Linux then
he's as good as fedora in terms of packages and uh and technicity so how about support for things
like uh firewalls and proprietary plugins for instance firewalls and even anti anti-rails virus
has actually uh already accessible to the control center so you can set up a firewall very easily
in a few clicks or you can go to more details if you want to play with CP tables of course all these
tools are available so it's really a wide spectrum of of use agent can you simultaneously add
at the config files are you forced to use the gree no you can uh you can do everything at the
config file if you are a bit uh geek into uh into Linux then you can play with config file only
the the interface degrees they're just an interface right i mean it makes stuff easy it
tweaks the config files for yourself and that's it so if you don't want to be annoyed with config files
then you can completely forget them okay excellent and where can uh i go to download the nicer
oh you go to mageia.org and then it's free download so you can choose the ftp download or actually
tp download or even we have also we are also distributing the iZone DVD iZone on torrent
is it only i3.86 or 64 so it's 64 and also um and 32 bits and right now we are actually trying to
move to rm so we are a bit uh i would say uh late into that our distro is not fully operational
on a rm computer yet but you will i mean for the next release uh we have we have we are actually
creating a repo another few machines that compiles the packages. Comparise to uh you know bleeding
edge then to sort of uh where where do you stand on us with guard packages well in terms of packages
now it becomes more specific right because uh it depends of what kind of packages you are looking
at science packages are packages photo editions etc oh yeah well this is exactly the same for all
distro right the the packages which are widespread or really uh widespread usage among community
among the community are exactly the same or less on the whole distro so in that in that case i would
say we are completely equivalent to federal or even best distro right but then if you want to move
to more specialist packages then i would say that we are a bit in advance for instance into
scientific tools for instance we have a few packageers that move into details for
amateur astronomy tools i know that further has a lot of packages specialized to particle
physics tools etc so then if you are specialized to one field then you should look more carefully
but we have a few advantage compared to the audience. Can i ask you about how easy it is to
uh first install the system if you happen to be blind or need accessibility help.
Ah yeah for accessibility help we are if you have if you are blind right now i don't think you
have all the tools required for in maghaya distribution Linux but if you have if you have i issues
then we have indeed all this accessibility and enhancement to make especially on the control
center or to make controlling the system easier so this is something we are developing right now
which works or more but of course it's i don't i don't think right now if you are blind you can use
i think you can use any Linux distribution why have you ever tried to install um have you ever
tried to install the distro blindfolded. i never tried because uh i tell you i think it's
almost impossible right now in the current state of many Linux distribution right so maghaya
i think right now it will be very difficult if you are fully blind to install it but it's something
which is currently developed right okay so so we have developers uh who are willing to help with
at least reporting bugs and yeah that's sort of thing how how is that something that you be
i'm open to working with our issues because i've seen on some projects there are bugs going back
six years that haven't been touched yet. Ah you mean on accessibility or of course i mean some
things that need to be developed in fact the maghaya control centers and all these tools you can think
you can think of them are already the first step of access of accessibility right if you are a geek
someone which is not able to use a config file is something is someone who you could see as a problem
right so in fact these tools on maghaya are exactly this we have already completely solved the
non-expert issue of installing and using Linux and now our next step is really to go to this
accessibility uh to blind people etc but it's difficult right and it sounds at the installation
level at the first step of the of the booths and it's has to be debugged and it's a big business so
it's not easy but it's something that if developer wants to join on that i mean it's uh they should
actually come and if we have the the issue with this of course is that the developers can't get on
board because there's no sound at this level so is that something that you as a community will
at least try and get behind to get the ball rolling to guess they at least the boot up issue so
that we can get developers on board there is always sound even at the boot level right your your
pc speaker is beeping so even if it cannot cannot talk you can still transmit information so i mean
it's something that it just needs developers to be done it's not something impossible at really
something that has to be done how big is your community in general just but you should check on
the website uh package here i would say we are not enough because we have like a few uh
ten of thousand of packages and each of us we are dealing with a thread of packages so it's
difficult actually to keep on debugging and updating that's why it's a community driven i mean we need
new packageers and we have this actually a sort of formation system i mean if you check the magia
mailing list then you can uh just show up and say look i would like actually to become
packageer and then we we have this mentoring program someone take your stack under your
under his shoulder and then he teach you how we do package stuff in magia and after a few weeks
then you you'll come fly solo excellent so that's what we want we want more packageers so please
uh join us why you're here i guess yeah
hi everybody my name is Ken Fallon and i don't know why i'm saying that because you probably
heard that 15 times i'm here at the gen 2 booth and i'm talking to
christian fiscasteram hi and what is your relationship with the gen 2 project uh i'm one of the
ganto developers mostly focusing on uh new pg and security related matters in the pack uh
excellent for those who don't know uh can you tell me what gen 2 is uh ganto linux is a meta
distribution but by that it means that it's a distribution but it leaves all the choices to
to the user in terms of what should be installed or not uh it's a source-based distribution which
is different from a lot of the other binary based uh varian so it's it's a different uh different
weight organized uh the distribution so it's a bit like um i don't know more advanced than
the next one scratch but uh it's not necessarily more advanced in that it's also compiling from
from source but it has a package manager that is handling all the dependencies and uh you have a
lot of uh one of the biggest strengths in in ganto is the use flags which is similar to to the
port system and bsd and you have a lot of flexibility but package manager is actually handling uh
i have to build it and it's very little over here for the user i thought okay it's a very unique
amongst the um the distros in that it is taking a different approach how have you found
that to be uh for me that is one of the benefits of using ganto and the reason that i'm using
ganto myself is that uh i found it to be much easier to to fit my needs whenever i have something
that is a little bit out of the box uh and uh to have that flexibility in the long run actually
makes it easier for me to maintain a system versus doing uh large gaps so it's uh rolling release
so we don't release us in ganto and it's more of an iterative process so it's easy to keep up to date
with the upstream and your developing it's easier to uh detect bugs uh as they are happening rather
to try to go back and i look through the history uh so i think it's it's a great benefit but
you need to uh want to be up to date and you need to want to uh be on the edge from time to time
because uh we are uh running up to date versions of of all packages it for me is when i ran it
involved a lot of work a lot a lot of maintenance and adding something as simple as a new media
player involved a lot of work is is that you know is that something i should have expected
well i'd say that uh to add something new uh as a user you use a local overlay and there are
mechanisms in place to to handle that but that will require you to have a knowledge on how to
write an e-build which is a package description in ganto and uh of course uh any instructions on how
to build a flexible system requires a certain level of complexity to get right so there is a
bar to to get into but uh at the same time that is what is uh providing great strength and as a user
with more basic needs you don't need to do that part because that's already been done by ganto
developers and other more advanced users okay how did you get involved to the project in the first
place i started uh using ganto in early 2000 so i've been using it for a very long time uh i
was a long-term user uh and i actually uh uh started by meeting off with the few of the developers
here at foster and uh getting to know them personally and just saying that i mean uh we have a
project that is called proximate nans where users can contribute packages to to ganto but not
being a full ganto developers themselves uh and i was a proximate trainer for synchronizing
key server and a few other packages related to from pgp for a while and then uh at some point i just
decided that why not become a developer after having been out on a few dinners and meeting
off with people and foster and seeing that this is actually nice people yeah and uh those are
fairly serious topics uh the whole security do you know what what's special about the way you
think or do work that makes that is that you find that interesting to go i'm not sure if it's
something that is very different between ganto and other distributions in terms of security
except that because we are a rolling release distribution uh we are on the latest versions provided
by upstream and that means that we don't uh need to backport patches and identify security fixes
that might not be flagged properly as searched by upstream uh so i think that can provide a
difference uh in terms that bugs that are security related but not flagged as searched can be fixed
again to but not in other distributions because they are sticking to a lower version at the same time
of course being on that leading edge means more complexity if there are uh breakage in particular
within the api uh so there's a balancing to to that but uh i started getting into that mainly for
moon benefit because i've been a long term user and i'm interested in security it's to
moon benefit to participate in that part of the project uh simply because i need to keep up the
database so it's easier to do that directly in the uh the distribution of moon benefit so um can
you tell me um why today lennon potterings um presentation he signaled signalling out gento as
the only major district not carrying um uh what do you call it? System B. System B.
Just to clarify that we we all are actually carrying a system B but it's an internal alternative
in storms so it's actually possible to run gantoid system B and we have systems in place to
to handle that but the defaults the installation and if you're following the the handbook for the
initial installation uh by default it will not include system B uh we are using open archive which
is uh maintain internally at uh at ganto so we are our self-to-opt stream of the inner system
and it's working it's working very nicely and it's sticking closer to the original
unix and Linux philosophy of keeping things small and uh modular rather than to to try to be
very large and uh all-reaching as uh some people would argue that system B is
do you not find that at a certain point running gento you're doing your own thing and you're
plowing your own farrow you're using ports and not using standard distal that sometimes you just
go back and I want to run Debian for a while. I actually quite the opposite. Whenever I'm on
on a constrained system I'm ripping my hair out because I'm not uh I can't do things that I
normally would do so uh I don't like that at all so. Excellent, excellent. Was there anything
that's uh we could cover? No I think that is uh that is fine. In the end it all comes down to use
a choice and gantoid is of course one of the choices that uh that I want the users to uh to try
to uh to look into but it is a more advanced system but uh the most important thing is that the
users making an informed decision and keeping the systems up to date in uh no matter what
distribution they're using. Okay so if somebody wanted to just try gento out for a while what
what would you suggest the ends are? Well we are uh handing out live DVDs here at the stand-on
on first-hand so if a user want to uh to try it out they can take one off the other side.
Build the time machine go back in time come to first-hand. Yeah but that is also available on
gatt.ganto.org so that you can uh can download uh uh don't load a live DVD but all the
devices you say you can set up a virtual machine uh in anive hypervisor and uh I'll try it out
and uh just uh start a gatic review. The only recommendation I can give then is uh read a handbook
full of the instructions. It really will make your life easier and the documentation is great.
And just personal laws you need to read a handbook. I can't stress that enough. You do need to read
that book. I agreed. Um one of the saddest days in my life was when the gento wiki went away.
Well uh see since the official week has gotten quite a refresh and there is a lot of good
contributions that are happening both from users and from uh from model developers but we always
need the help for more development more documentation work. That is something that we struggle with
in uh in all projects that I'm involved with and documentation is really important for the new
user but it's sadly something that often comes on the back burning when it comes to developing new
features and actually programming code. So it's very easy to get that mismatch and we need all
help we can get to get better documentation. Okay how does somebody become a developer by the way?
It depends on uh how do you become involved in the project? It depends on the areas of interest
uh but uh but uh mainly it's a good idea to start contributing. If you have specific packages
that you won't include it in the distribution you can go to same route that I did via the
proxy maintainer and you start maintaining a small subset of packages without actually being
a gento developer but working closely with a gento developer that is uh committing that to
into the main three and providing feedback in terms of the evil and going through the learning processes
on uh on that and after a while then it becomes natural to to look into to the rest of it but
we have several uh uh variances of gento developers so some don't have commit access into the
gantry tree in the first place. I work in more on uh I think it's like the documentation and uh
another important thing but uh not only programming uh program so you don't need to be a programmer in
order to contribute to uh to gantry per se and that is the same for all other programs. I should say
we really need help on documentation and you don't necessarily need to be a programmer to
write good documentation. Quite the contrary a lot of the documentation is written for users that
are not programmers and as a programmer it's very different difficult to get into the mindset of
that user so we need help from others that think differently. Okay folks you heard it here um please
go and help the gento project. I forgot to ask you how you deal with the accessibility issues within
the project. It's a very important question and something that is easy to to overlook unless you
have a special attention to it. We talked about system earlier and uh one of the uh some
things I mentioned is that internally we have open RG which is uh the inner system and in terms
of accessibility that is actually uh the main developer there is actually uh uh uh blind so we
actually have a developer in the core of the system that is blind and that is of course providing
attention to that also for the rest of the distribution so we have users working closely with
the projects uh to uh to try to support that but uh but in the end uh we are dependent on uh input
from users that have accessibility needs in order to try to predict uh uh how that should uh
should work and for a lot of the things it comes down to the upstream developers of the various
packages so it's uh not something that we as a distribution necessarily can do on a unilateral
basis that we need to to work closely with uh with all the projects providing packages uh that
we are using to uh to improve accessibility but it's actually a use flag in ganto that uh it's
called accessibility so we are trying to establish ways for that i can't understand why that's a
use flag because i mean you don't build a building and leave the ramps outside as a use flag you
don't leave the lifts not in why isn't it there by default uh it might be uh extra tools that are
installed in order to help uh with accessibility needs that are not necessarily won't in particular if
you're building a better system and are uh constrained by uh uh constrained by uh space and
resources so yeah but if you're building uh and i have i have to i have to dig to this and if you're
building it wouldn't flag but it's not necessarily disabled by default so it's a use flag so that
it's uh possible to disable it if you want to to have a more restrictive system but uh whether
it's enabled by default or not depends on uh the level of other complexity by it or whether it has
additional dependencies and things like that and that is up to each individual package maintainer
rather than want to to enable or disable that okay um would you uh would you get on board with the
idea of trading accessibility bugs with the same urgency as security bugs i think all bugs are
important but uh not necessarily on the same level as uh as security from my perspective but then
again i'm working on the security related packages for for a reason and but i think all bugs are
important and in particular when it's uh interferes with uh user experience it's something that needs
to be handled with uh with care yeah but say a high a high priority accessibility bug where somebody
suddenly has no access to their computing environment to order shopping to to do their daily
living i would i would class that as an important issue certainly but uh in the question of
whether to treat that as a security bug uh it's a question of whether you should roll that out in
in two days or a week and uh for the for the user it's possible to to to roll back the system to
your previous state uh where things are working again uh but that's not possible for a security bug
then we actually need to have the new updated package uh so i i think there is some difference in
the way that you need to to approach those issues but i don't think that comes down to the importance
of the user experience i think that is just uh a fact of life in terms of uh how you need to deal
with the value system issues thank you very much for the interview and uh good luck with the rest of the
show thank you you've been listening to hecka public radio at hecka public radio dot org
we are a community podcast network that releases shows every weekday Monday through Friday
today's show like all our shows was contributed by an hbr listener like yourself
if you ever thought of recording a podcast then click on our contributing to find out how easy it
really is hecka public radio was founded by the digital dog pound and the infonomicon computer club
and it's part of the binary revolution at binrev.com if you have comments on today's show
please email the host directly leave a comment on the website or record a follow-up episode yourself
unless otherwise stated today's show is released on the creative comments attribution share
video to license
