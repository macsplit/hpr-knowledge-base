Episode: 4359
Title: HPR4359: Fosdem 2025 - My Personal Experience
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr4359/hpr4359.mp3
Transcribed: 2025-10-25 23:39:59

---

This is Hacker Public Radio Episode 4359 for Thursday the 17th of April 2025.
Today's show is entitled, Fostom 2025 My Personal Experience.
It is hosted by Paul Jay and is about 22 minutes long.
It carries a clean flag.
The summary is, for the first time I went to Fostom 2025.
In this podcast, I share my experiences.
Well, good day and welcome to Hacker Public Radio.
This is Paul Jay and I'd like to talk to you about my experience at Fostom 2025.
So I actually wrote this script for the show while sitting in the hotel room in Brussels
on Sunday evening after the last presentation of Fostom 2025 had finished.
That was of course at the end of January and now I'm already in April and I finally
found some time where I can sit down and make the recording.
I've been aware of Fostom for a few years but unfortunately I wasn't aware of it while
I was living in Brussels.
How crazy is that?
So to join the event this weekend I took the train from Chester Station in the northwest
of the UK to London and then onwards with the Eurostar from London to Brussels.
This is definitely a more comfortable way to travel compared with flying.
It's also not much slow when you take into account the time waiting for security, the
time to travel to the nearest regional airport, the time in the passport queue in Brussels
and then finally the time to transfer from the outer town airport to the hotel.
I booked the Radisson Red Hotel about a 40 minute walk from the URB campus where the event
was held.
I walked to and from the event on Saturday and home from the event on Sunday.
I was a bit pushed for time on Sunday morning so I made use of the excellent public transport
network in Brussels to get there a bit quicker.
So Saturday, what about the event?
In preparation I spent time going through the website and checking out all the stands
I'd be interested to see and also which presentations I wanted to attend.
Initially I made a list in EMAX but then I heard about the Fostem app from show 4297
by Trollocosta.
This is excellent as talks of interest could be bookmarks and viewed as a list.
Where the times of these bookmarks shows overlap, they're displayed in red so you could
decide which you're going to attend.
On Saturday morning the opening plenary presentation was scheduled for 9.30am and was in my bookmark
list.
As I arrived at the campus I checked the app and it reported that the main room Janssen
was full.
As a result I decided to skip the opening presentation and get my bearings.
In hindsight I'm not sure if this message was accurate as it came up again a few times
when the room was definitely not full.
The next talk I wanted to hear about was about an EMAX client called ARC.
The talk was titled ARC, an EMAX client for the discerning hacker.
This talk was in building K so I made my way over there.
In the ground floor were a number of stands so as I had time I browse these stands.
Of particular interest to me with a following, Gen2 and the flat car contain Linux, I've
been a Gen2 user since 2004 and although I have dabbled with other distributions including
Knicks and Geeks I continue to use Gen2 for all my main systems.
Flat car is a derivative distribution from Gen2 but I have no experience of it.
Apparently the developers of Flat car do contribute enhancements and fixes back to
Gen2 so it seems to be a good arrangement for both distributions.
The next stand was the FreeBSD project.
I have installed FreeBSD a couple of times but never last very long on my systems.
On my server I'm running Proxmox and then using Debian as a client for serving web pages
and also running Next Cloud.
I sometimes wonder if FreeBSD or one of the other BSD derivatives would be a better server
operating system.
I should also add I have never had issues with Debian.
There's also a Thunderbird stand there.
While I like the idea of using text-based email clients, I still use Thunderbird for
work-based emails and my own email accounts.
I really like how Thunderbird has transitioned away from Mozilla and focus on producing
a really effective email clients.
If you haven't heard it yet, go and listen to show 3972 by some guy on the internet
about Thunderbird inbox filtering.
Certainly ninja level and more organised than I am.
I should also add there's now a Thunderbird client for Android and it looks pretty good.
Maybe when I've used it more I can record a review show, who knows.
Mozilla was the next standard I could see.
I'm still quite ambivalent about Mozilla because I know there are many, as I know are many
other open source advocates.
I think Firefox is a fantastic browser, but the efforts of the foundation to get their
finger in everything including AI really winds me up.
Almost as much as the continual begging letters for donations.
I had donated to Thunderbird and if I thought that money donated to Mozilla would protect
and develop a better browser, I would comply in a heartbeat.
Sadly, they just want to spend it on other things including wasting it on AI.
Well, it's not going to happen in my money, sorry.
I wanted to make that point to the mid-in-the-end I chickened out.
The stand was start by volunteers and I had no wish to spoil their day or diminish their
contribution.
Zero AD empires ascendant had a stand as well, so I hadn't seen this before but it looks
like an interesting game.
On Saturday evening, I did try and install it on my laptop but it wouldn't compile.
I think the Gen2 package version is out of date, so I'd probably have to do a bit of
work to get it going.
Okay, let's look at these presentations.
So ARC, an email client for the Descerning Hacker by Robin Jerry.
ARC was originally developed by Drew DeVolt of SourceHut fame.
Robin has been the lead maintainer since 2021.
It is a terminal-based email client but with a wide range of protocols built in including
the usual iMap and SMTP, but also J-Map and the ability to work with much more traditional
mailboxes such as MailDurMBox and also NotMuch.
I have some experience of using NotMuch with Emacs.
It takes some getting used to but is a powerful way to manage emails and sort them.
Navigation in ARC uses VIM style commands and key bindings.
There's a good configuration wizard to help you set up the mail accounts.
Since you can use iMap and SMTP, getting going is very straightforward and doesn't require
any other packages to be set up.
If you want to access the documentation, the man pages are available with the colon help
topic command.
Key bindings can be reviewed with colon help keys, which is also helpfully bound to
question mark.
The user interface can be configured in AERC.conf.
Colors are configured in style sets and the layout can be reloaded with a colon reload
without having to restart the program.
Go templates can be used to configure the message list.
Filters are very flexible.
User defined commands can be configured for each mime type.
UI changes can be made based on filtering.
For example, you could make a filter to identify email patches and colour them blue in the
message list.
In summary, this is an interesting client which I had already installed on my laptop and
not used.
I will spend more time with it and see if I can use it for my personal emails.
Robin has many ideas and plans for further development.
I think this is a project worth watching as it's definitely going places.
I don't know packages like mutt or neomut, well enough to draw a comparison, but I wouldn't
be surprised if they're shown a clean pair of heels over the coming years.
I'll put a link on the website in the show notes along with information about the talks.
One final comment, I've not heard about J-Map, but it looks very interesting.
I'll put a link in the website explaining the benefits of J-Map over I-Map.
I'm not sure my mail provider can offer J-Map, but I will have a look.
So the next presentation I went to see was called Building a What Meter ESPRS and a
rocket back end.
So Santiago Savidra presented this project in the Rust Devroom.
I was attracted to this talk for two reasons.
The Rust programming language, but also the fact it's an embedded application.
The presenter drives an electric car and wanted to charge it at his parents in the country
in northern Spain.
Since their electricity supply is not very powerful, this project has a component which
is measuring the available power coming in and instructing the car to only charge at
that level.
As a level of consumption in the house changes, the car consumption is adjusted to maximize
charging without starving the house of power or overloading the incoming supply.
It was a very interesting talk, but to be honest, I did struggle.
So in the last week before Fostem, I started using hearing aids, as unfortunately my
hearing is deteriorated to a point where they are actually beneficial for me.
In this rather old, I would say, tatty lecture theatre.
People were entering and leaving the room continuously for the whole talk.
And the folding chairs and the fold-down tables made a lot of high frequency noise, all
picked up by my new hearing aids, and this made concentration very difficult.
One thing I think would improve all of Fostem, but maybe not be very popular, would be to
prevent people entering or leaving rooms when the talks are actually in progress.
Anyway, I digress, links to the repositories for this project are in the show notes.
I had planned to stay in the Rust Dev room for the next talk on bringing terminal aesthetics
to the web with Rust, but having struggled with the background noise I elected not to.
Instead, I grabbed some lunch from one of the food vans parked by nearby in Middle Campus,
and interesting to statistic, nearly a thousand kilos of fries are consumed during the weekend.
After eating, I went to building H and visited the Pearl Raccoostand.
They had some good books about Pearl Six good prices, however, they wanted cash, shouldn't
be hard I thought, how wrong I was.
The nearest cash point was a ten minute walk from the campus, but when I got there it was
closed.
The next was another ten minutes, but in fact it wasn't a cash point, but a corner shop
with a B-Pose counter.
They could only give me twenty euros.
In the end I walked back towards campus and managed to find another small shop with a B-Pose
counter.
I managed to get fifty euros from them enough to buy the books.
Just like cash points in Belgium have disappeared, certainly much more than in the UK.
In the 3.5 km walk from the hotel to the venue there are no cash points at all, including
in Flasier, a square with many retail outlets and a weekly market.
When I got back to campus I visited the Pearl Stand again and bought the books, all
Pearl Six but anyway interesting and world priced.
I also visited the Surnstand, it's good to see their encouragement and use of open source
for their work.
After lunch I had plans to join the Lightning Talks to see the talk on podcasting too.
As I now had a bit more time I made my way to the Lightning Talk venue and watched several
talks including the aforementioned podcasting talk.
The first talk I saw was increased security of internet downloads with As for Load.
So here's the problem being tackled with As for Load.
When you download a file how do you know the file is what it purports to be.
A signature check simply confirms the integrity of the file but if you're downloading the
file and the signature from the same source anyone compromising the file can also ensure
a signature check is successful.
As for Load will sign a signature file so when you use their client to download the signature
comes from a different website so if the original site has been compromised it will be immediately
obvious.
It looked like a good package, it remains to be seen whether it takes off as a service
or not.
The next talk was about treating build definitions independent of their origin.
This was a presentation about a better build system than make and to be honest it looked
better than some other options which were available.
Perhaps worth a deeper look if you're interested in this type of developer tool.
SSH Proxy how to load balance SSH.
This was a very interesting talk about the tool being used to load balance the energy computing
infrastructure in France.
I can confidently say I will never have a use for this tool but it certainly seems to
work for them.
The next talk was about Laura Mesh a library for Laura Mesh networks not to be confused
with Mesh Tastic.
This tool can be used to create a Mesh network using Laura.
In their application they were using a channel where there were no duty cycle constraints
but the library can be used with all other Laura channels even when there were duty cycle
constraints to consider.
The next talk was about all the world is a stage running a theatre show on open source
software.
If you're supporting a theatre show which open source tools should you use.
Peter de Pratera explain the choices he makes which non open source tools are not required.
The next talk was about image, self hosted photo and video management solution.
This is something I do have personal experience of it.
It's a great package and I've installed it on my server and use it for all the photographs
for myself and my wife.
It is better than any cloud solution provided you have good backup procedures set up.
You don't want the wrath of your other half when you lose their photos.
Since photo have funded image there are now five full time developers work on the application.
Many users have also paid their membership fees which is also introduced when photo started
funding.
Hopefully this will be a sustainable model going forward.
In this talk they shared their current feature set.
Benjamin Bellamy then shared celebrating open standards how podcasting to shape the
future of podcasting.
Benjamin explained that a few years back he presented podcasting 2.0 and explained how
he hoped the ecosystem would be invigorated.
At the time it was more of a hope but he now feels this has happened and podcasting
2 has been adopted by nearly everyone including Apple Podcasts.
I had plans to stay for the mesh tastic off grid communication talk at 1710 but decided
I had had enough so instead I walked back down to flagey to my favourite Belgian bar
Café Belge.
I then settled down for a shoot beer and one of my pearl books and just soaked up the atmosphere.
After another couple of beers I made my way back to the hotel via the Fritz stand in
a square where I enjoyed a cone of Belgian fries, absolutely delightful.
Sunday morning after I got up and had breakfast I checked my bookmarks again and I realised
that the first talk I had to identify was at 12 o'clock.
On the Saturday I had come across a hitch with all grown when trying to use it to make
notes so I took the opportunity to fix that on Sunday morning.
Seems I had fallen foul of a library change to the SQL light library used by all grown
to manage the cash information, sorting this took a bit longer than anticipated, hence
the reason why I took public transport up to the campus.
So the talks I watched in the afternoon, first of all I went to the road to mainstream
matrix.
Matthew Hodgson is one of the founders involved in the matrix foundation.
This talk explained the acceptance and growth of matrix and elements and the challenges
they faced and still face in finding a sustainable funding model for the future.
It does sound like they're making progress but still need to encourage system integrators
and final customers to feed funds back through to the organisation.
The next talk was about the shepherd and about minimalism in PID1.
So Ludovic Cortes is the father of geeks and he explained the challenges of developing
shepherd for geeks.
Shepard is the first run programme on the system after the NITID file is loaded and executed
and performs a management of system daemons and so on.
In geeks it performs some of the functions carried out by system daemons who based systems.
Although the code base is already 10 years old, version 1 came out in December last year.
It's a great piece of software and makes use of fibres in Guile to run threads as necessary.
The next talk in this dev room was about goblins, the framework for your next project.
So Jessica Talon is rewriting the shepherd to use goblins, a framework developed by
the Spritley Institute.
To be honest, most of this went over my head so I'm not going to try and explain it.
So this is something you're interested in.
I'm afraid you're going to have to do your own homework and if you do learn about it
and wish to do a show that would be an excellent idea.
After these talks I went to visit some more of the stands.
I went to post C-PostgreSQL, obviously a powerful open source database.
I don't know enough to recommend this over my SQL or MariaDB but when I was a bit closer
to databases, I seem to remember this was more compliant to the SQL standard than my
SQL QL was, but however was a long time ago and most likely is no longer true.
Codeberg and Forgeau, so I have a Forgeau instance running on my server and my intention
is to use it as to mirror repositories I have elsewhere such as source hut.
It's a great project, I would also recommend Codeberg if you want host to get, although
I'm actually using source hut.
The next stand was KDE, so KDE is my favourite desktop environment by far.
I've used KDE since KDE 2 and love it.
I do try out other window managers from time to time but with KDE I can just get on doing
stuff as it gets out the way and everything just works.
Next to the KDE stand was the GNU radios stand.
I have looked at this before but it's a very complex piece of software and with that
complexity comes great power.
So possibly some frustration while you try to climb the learning curve.
The next stand was open HAB, I might give this a go in preference over home assistant.
It seems more community based but is still full featured.
My problem with home assistant is once you plug it into your network it just basically
configures and finds devices and does everything in a very simple manner which I think is excellent
but if something goes wrong I think fixing the problems can be very challenging.
So I'm actually either going to consider open HAB for home automation or even a home
brew version which would obviously be far less capable but at least I have no where the
nuts and bolts go.
The next stand was let's encrypt, obviously something we all know and love and generating
for generating TLS certificates for our own websites.
KaiKad and FreeKad were actually on the same stand and these are two great applications
that I would really love to know how to use more proficiently, particularly KaiKad as
I like the idea of being able to develop PCB layouts and get boards manufactured.
The next stand was the Eclipse Foundation and they were giving away IoT Devboard kits for
their Eclipse ThreadX real-time operating system.
I now have one and we'll perhaps be having a closer look at this over the coming months.
I doubt very much I will use their ThreadX real-time operating system but I might have
a look at whether I can do something with Rust or maybe even 4th I'm starting to play
with 4th now.
So by now it was time to go to my next talk.
So my next talk was about Redox or Redox OS which is a micro kernel based Unix-like
operating system.
So Jacob Lorenzen is a Redox OS developer and maintainer.
For me, Redox OS looks very interesting and I look forward to being able to try it
out on hardware in the not too distant future.
In the talk, Jacob explained activity today and some of the areas of focus which are being
tackled before they can start to dog food the OS on hardware, I'll be watching closely.
The next talk was about Robrix, a pure Rust multi-platform matrix client and more.
So this was delivered in the matrix room and this was a talk about Robrix or Robrix, a
client for matrix capable of running on all major platforms.
It is actually an application being developed to showcase and demonstrate Robius, a cross-platform
application development framework.
With this a framework, applications can be compiled to run on multiple platforms with
no platform specific code in the application layer.
Robrix is currently an alpha but is definitely one to watch.
Robius is also something of great interest if you want to cross-platform development with
Rust.
It is also community driven decentralized projects should stay around so should stay around
in the future.
For the last two talks I return to the main track room, Janssen.
The next talk was about 10 years as a free, open and automated certificate authority.
I was tipped off about this talk while on the Let's Encrypt stand earlier on.
So Josh As is the founder and executive director of Let's Encrypt.
If you have a website and needed a certificate to be able to serve HTTPS, I'm sure you
are aware of Let's Encrypt.
Josh explained the history of the company from 2014 to today.
And I was struck by the unassuming style of his presentation.
He just seems like a really nice guy on a mission and we all get to benefit from the efforts
of him and his team at Let's Encrypt.
500 million websites are covered by their certificates.
That's astounding.
Obviously, there are occasions where several sites are covered by one certificate but there
were still five million certificates issued each day.
The talk gave an insight as to how they achieved this and some of their plans for the future.
So the last talk then was closing and Richard Richie Hartman gave the closing address and
took time to thank all of the staff, volunteers and presenters for their contributions.
So what's my reflection?
So I enjoyed Ogcamp in the UK because it is a relatively small event but there are many
interesting talks to see and a great number of interesting people to talk to.
Fost Dem is the biggest open source event in the world.
I did find it a bit overwhelming with a number of people everywhere you go.
However, I enjoyed the talks and also the stands.
Next year I will probably not join in person but I will make use of the streaming service
to watch the events of interest.
If you haven't been and get the opportunity, I definitely recommend you take it.
It's certainly an experience.
So that's the end of the script I wrote while I was in the hotel room.
All I can say is if you go to any event or anything of interest to other hackers, please
make a show about it.
You know, it doesn't take too long and it's something that we all want to hear about.
So with that, I will close and wish you all the best from Hacker Public Radio.
You have been listening to Hacker Public Radio at Hacker Public Radio and does work.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording a podcast, click on our contribute link to find out how
easy it really is.
Hosting for HBR has been kindly provided by Anonsthost.com, the Internet Archive and
OurSync.net.
On the Sadois status, today's show is released under Creative Commons, Attribution, 4.0
International License.
