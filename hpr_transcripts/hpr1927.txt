Episode: 1927
Title: HPR1927: Ansible Interview
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1927/hpr1927.mp3
Transcribed: 2025-10-18 11:14:18

---

This is HPR episode 1927 entitled Unciable Interview and in part on the series, Interview.
It is hosted by Klaatu and in about 8 minutes long, the summary is Klaatu Talks to Unciable
at all things open conference.
This episode of HPR is brought to you by Anunisthost.com.
Get 15% discount on all shared hosting with the offer code HPR15, that's HPR15.
Get your web hosting that's honest and fair at Anunisthost.com.
Hi everyone, this is Klaatu and I'm at all things open conference, 2015.
I'm speaking with Danny from Anciable, so Danny, what's the elevator pitch?
What is Anciable?
Anciable is incredibly simple and easy to use, that's a good start.
Yeah, oh yeah, and so what we're trying to do is take the complexity out of automation.
Automation shouldn't have to be your day job, it's just kind of what we say at Anciable,
so we've built a tool that we feel like will allow our users to focus on the fun stuff
of making really great applications and then let all of the automation tasks be handled
by Anciable.
Okay, so done question.
Can you say automation, I mean are you just talking about, I don't know, automated updates
or automated distribution of like the latest version of some library to your entire network
or is there some other automation, like what does automation mean?
Exactly, so there's three main parts and handling the config files is definitely a piece
of that.
We can actually handle some of the tasks associated with application deployment and then
we can also tackle the orchestration piece as well, making sure all the pieces talk to
each other in a fashion that will allow you to get from point A to point B smoother than
before.
Very nice.
At my old job where I was a cis admin, one of the problems I had was computers on my
network, like this, particularly the computers that were being used by students would eventually,
like somehow they would be managed to get broken because something a file would become
corrupt or some student would do something stupid, could I have used Anciable to sort of
check to make sure that such and such a client is, you know, all these files are in place
and then make sure that they get there if they're not or is that, again, not what Anciable
is.
Exactly, no, so just last year there was the shell shock vulnerability that came out.
And what some of the guys in the community had done was written a playbook that would allow
you to reach out to your machines, scan for that vulnerability if it was, had the most
recent version that it would be fine and leave it alone.
But if not, it would update that script and then hop out.
So it was a really quick and easy way to say, hey, maybe I have thousands of machines
with who knows how many different lines in there and we made it really easy for our
users to go out there, check it out, put out the update and get back to work.
Wow, that's kind of amazing, actually.
Now does that only work?
I mean, I'm sure it doesn't, but does it only work on Linux clients or could you have
it on your server and then fix or distribute whatever to all platforms?
Yeah, absolutely.
The thing that, you know, Ansible requires is, yeah, Linux server and Python.
So we have users that run it within their Amazon environments or one of our engineers on
the sales side, he actually has it in a vagrant box and it lives right there on his laptop.
So super flexible and that's the thing, it's really lightweight, it's an agentless tool.
So compared to some of the other tools out there that handles similar automation tasks,
we leverage SSH to reach the remote host for the Linux side and then we tried to make
it as simple as possible and as repeatable for the Windows users out there.
And so we're leveraging WinRM and PowerShell in the Windows world.
Okay, cool.
So the scripting side of things like for custom scripts and stuff, it sounds like that
would be done in Python.
Yeah, the tool itself is written in Python, but the syntax that you'll use to execute commands
is actually YAML.
So super easy to read and so even for, you know, junior system admins or, you know, management
users who just want a high level view of what any one playbook is doing, it's really
easy to take a look and say, okay, I get what this is trying to do.
I don't necessarily want to name name of competitors, but I'll go ahead and do it because a lot
of people know the name.
So is Ansible like, how does Ansible compare to something like, I guess, Puppet or
I think Chef might be the other one?
I'm not sure.
Yeah, absolutely.
And so, and there's definitely some overlap, especially with the configuration management
space.
Yeah.
And Ansible being, you know, a three to four year old tool itself and being a company
for, you know, about the same time, there's definitely a larger deployment of, you know,
those other competitors out in the market.
But I'll tell you that they don't have to be mutually exclusive.
We have users that have put a lot of time and effort into developing the Puppet side
of things for their configs, but are having a hard time trying to figure out how to orchestrate
and deploy those different things that they have already set up.
So we have users right now that are using Ansible to orchestrate Puppet and Chefs
sometimes.
That's interesting.
You know, if you're starting from ground zero and you want to start at the very bottom
and say, hey, I'm trying to build out this type of workflow, I would recommend Ansible,
but there's no reason for you to, you know, wipe what you've done with Puppet or Chef.
You can bring in Ansible and kind of fill in the gaps that you see.
What's, I mean, in terms of Ansible, I guess it's a company, what's, where's, is it open
source of the code?
And if so, like, what's your, how are you guys making the money?
Yeah, absolutely.
Ansible is free and open source available, GitHub, PyPy, you know, wherever you want to
pull it down from.
And as a company, we do have engineers on the team that are focused on the core offering.
So they will help the community, you know, develop modules and really be maintainers of
that.
But what we've done from a revenue generation standpoint is developed a tool called
Tower.
And what Tower is, it's a web interface that sits on top of Ansible Core that allows,
you know, the champion users at their specific organizations to say, hey guys, look at what
I'm doing with Ansible.
You don't have to be a command line expert.
We have this nice web interface where you can do push button deployments, leveraging
the stuff that I've written with Ansible.
And you can do your job without having to submit tickets and have long, you know, times
between requests.
And, you know, we've had customers set up almost a self-service model for developers
that need, you know, test environments, and they use Tower for that.
That's really cool.
Is there a place online where people can like try Tower or at least sort of see what
the interface looks like?
Absolutely.
So Ansible.com slash Tower is going to be kind of where you'll want to check it out.
We do have a 30-day trial for 100 machines, but we actually have a free forever version
for up to 10 machines.
So if you hop onto the website and request that, you can have a nice little sandbox environment
for Tower up to 10 machines.
So, it's www.table.com slash get-started.
It's going to be a great, great resource where we've compiled not only the Tower downloads,
but a lot of collateral and content for the open-source tool as well.
So that's a nice one-stop shop if you don't know what Ansible is and want to get started.
Great.
Cool.
Thanks a lot for talking to me.
It was actually really quite interesting.
I'd heard of Ansible.
I didn't know anything about it.
Absolutely.
Yeah.
We're new on the scene, but we've been making some waves and our users are just as
rabid and contributory as ever, and they love it, and I think it's because it is simple
and easy to use.
Cool.
Thanks a lot.
You've been listening to Hacker Public Radio at Hacker Public Radio dot org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out
how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the infonomicum computer club,
and is part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on
the website or record a follow-up episode yourself.
On this otherwise stated, today's show is released on the create of comments, attribution,
share a like, free dot org license.
