Episode: 3195
Title: HPR3195: For your Consideration - the ideal Ham Radio setup
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3195/hpr3195.mp3
Transcribed: 2025-10-24 18:36:26

---

This is Hacker Public Radio Episode 3195 for Friday 30 October 2020.
Today's show is entitled
for your consideration, the ideal ham radio setup,
and is part of the series podcast recommendations. It is hosted by Archer 72
and is about 58 minutes long, and carries a clean flag. The summary is
introducing a new podcast to me, with a special guest with an interest in amateur radio.
Today's show is licensed under a CC by NCND license.
This episode of HBR is brought to you by Ananasthost.com.
Get 15% discount on all shared hosting with the offer code
HBR15. That's HBR15.
Better web hosting that's honest and fair at Ananasthost.com.
Hello, Hacker Public Radio. This is Archer 72. I'd like to present to you a podcast
with the 200th episode of a show that I've been listening to for a few months,
and I'm starting to really enjoy it. The host is Nolchalaya.
The show is entitled The Ask Nolchal.
He has plenty of Linux security and IP camera talk.
There's a focus on free software and related free software news,
and in this one Noah brings on a guest to describe his ham radio setup,
including use of software-defined radio.
If you want to skip ahead to where he just starts talking about the ham radio setup,
it is at 25 minutes and 42 seconds. Enjoy the show.
Requesting connection, established, encrypted, were live.
The show you've been asking for, advice, technology, and community.
Linux first, all other second. This is Ask Noah.
Live from MultiSpeed Technologies, the Ask Noah Show starts right now.
This is the show where we came to do all the things on Linux they said couldn't be done
and take your questions on how to do the same.
The phone lines are open this hour to be a part of the program.
It is a free call, 155-450-450-664, or send an email to liveandasknowashow.com.
My name is Noah Chalaya, but let it be with you.
He was another episode of the Ask Noah Show kicks off this hour.
Before we get into it, I want to introduce two of my in-studio guests this evening.
Towards the end of the year, around the month of October,
we do something called the Alta Speed Sprint.
We bring in the people that work from us around and come in and hang out.
In the studio with me, Simon, quickly.
Kitty Schmidt, welcome to the program, guys.
Hey, good to be here.
Thank you for having us.
Thanks for taking the time to be here.
So we are working on integrating the digital world
and trying to understand how we as an IT company properly and efficiently respond
to things like COVID.
And so that's what we're doing here in town.
So you guys are going to join and hang out and participate in the community discussion tonight
and we'll tell you more about the thing digital campaign that Alta Speed's working on as show rolls on.
Again, you can be a part of the program by joining us by phone,
855-450-855-450-6624, the email.
Live at AskNoahShow.com.
We'd love to have you join the program.
We're going to start off the program going forward with feedback in the feedback Tom writes in and says,
hey, Noah, our family has decided to get some sort of home security cameras for the home.
I'm looking to see if there's a good option for home security cameras that's safe and possibly self-hosted
or is it worth the monitoring cost.
If we went with cameras only, I'm interested in the UFIE CAM2 as it just uses an SD card in the base.
Do you have any advice?
It would be awesome.
Thanks, Tom.
So Kenny, I'll start with you.
You have a home user and he approaches you in the field and says,
hey, I'm looking for a camera system.
I don't want to break the budget, like to keep it in a few hundred bucks.
What are you recommending to them?
Man, that's a tie up.
I think for simplicity and cost effectiveness,
I would go with something like the unify setup that they have.
They have a really great line of bullet cameras and even some dome cameras that are really good quality.
But if you're willing to spend a little bit more and get a really nice set of cameras,
I'd go with the access all the way because they're just going to last a little bit longer
and the build quality on them is just incredible.
We've had really good luck with access.
The other thing is he talks about using an SD card and immediately what comes to mind is
this is again the kind of features that you're going to get with the higher end camera.
So access, for example, they have not only the built-in SD recording function,
but they have the ability to upload that recording through FTP or other methods
right from the camera, even without purchasing a Synology disk station to use as an NVR.
Then on top of that, the other thing that's really great about it is they have built-in motion detection,
which is pretty nice.
Yeah, and they also support ridiculously large SD cards.
I think one we tested with was like 500 gigabytes or something like that.
So they can record for an incredible amount of time on just the SD card alone.
That's fantastic.
One other option we'll throw out there is the Duhu.
I've mentioned these a few times in the past.
Essentially, we did a whole episode on IP security cameras and go back and check that out.
But the takeaway from it was that a lot of Chinese manufacturers have some very questionable security practices.
In fact, there are open source projects that are specifically tailored towards
defeating the security built into some of these Chinese brand cameras.
So I came across Duhu and while there isn't a direct, I'm sure that it's safe.
I'm sure that it's secure.
You can for sure trust it.
I wouldn't go that far, but I can't find any evidence that people have found a problem with it.
Additionally, they're about $56.
You can buy a new one on eBay for about $57.
And so I'll have a link for you.
It's a 4-megapixel HD-ITC HD-W143-ITI-S4.
How's that for a model number?
It does support the new H265 codec, which is a new video codec.
That's a little bit more efficient.
It provides a little bit better image quality.
And so for $60, this has been a really great camera.
The thing I like about Duhu is, so you mentioned Unify.
And they were a great choice before they went to the Protect Line.
Now though, with the Protect Line, you're not able to use those cameras with any other series of NVR.
So it's a great way to go if you know for sure that your needs are never going to exhaust the Unifi lineup.
And you can stay within that Protect brand.
Once you start to go above that, though, if you ever want to do more,
you're closed because you can't use those Protect Cams,
my understanding with other NVRs, where as you could use the old Unifi cameras.
The Duhu would allow you, I don't know that there's a way to record on an SD card.
In fact, I don't think there that there is.
So you're going to have to pair that with some sort of recording solution.
We've worked with things like ZoneMinder, and they work okay.
If you're willing to put in the time to redo the UI,
it's going to give you a pretty decent experience.
But right out of the box, man, enough good things cannot be said about Synology Surveillance Station.
It's incredible.
Yeah.
And right out of the UI, I mean, you're going to just, you're going to pull the box out.
You're going to click Install, and it's just going to work.
So hopefully that helps you out, Tom.
If it doesn't, please email us back or give us a call when we're live on the air.
And we'd love to help you continue down that path.
We move the feedback to the beginning of the week because we're going to be making some changes
as we go on, on episode 201 on.
And one of the things I want to do is refocus the show back to its roots
about helping people and serving the community well.
We've gotten away from that partly because of the amount of time that I have
to put into prepping things like the feedback segment, and so on and so forth.
But if you have questions that you've asked in the past,
we have a new system for collecting feedback and organizing feedback and presenting it.
So we invite you to send those in at liveasknowishow.com.
Our pick of the week this week is FluffyChat.
It is a matrix client.
Now let me tell you something.
I got a few pieces of feedback this week and half of them are positive and half of them are negative.
Half the people are saying, I can't believe the onboarding process of matrix.
This is absolutely fantastic.
It was a guy in our chat room that went off and wrote this big blurb about that he had been using
element on his phone for a while and he wanted to transition to the desktop experience
and it just popped up a QR code. He took the picture and Bob's your uncle.
Everything was signed in and all his keys were synced and he was like,
I just never had an experience that smooth.
And then there are other people out there that have said, I don't know that there's
this encryption key thing and my end to end thing and I lost this and I lost that.
The reality is if you read all of the directions when you're signing up on element,
it's not a problem. It tells you, hey, we're going to create an encryption key.
This is the thing that's going to protect all your information.
So you have your account password and then you have your encryption key.
Those two things need to be kept secure and you have to know what they are so that you can
recover your encryption keys and read your encrypted messages.
If you don't do that, you're not going to be able to read encrypted messages.
Hello, but that confuses people and then they become frustrated.
Fluffy chat is interesting because it is a messenger that's really based more on the lines
of a telegram or a signal style messenger.
So the messages come in bubbles, read receipts are represented by checkmarks,
those kinds of things, and it offers an alternative to the element client,
which is kind of a full featured client to showcase the matrix protocol.
Where I kind of fell in love with Fluffy chat, even if I'm not a fan of the name of the program
or the icon, is that it looks and functions almost identically to telegram.
Now part of the full disclosure, part of the reason I went away from telegram to begin with
is because I had 14,000 unread chats and I just couldn't keep up because there's no way
to group or to organize them.
That's precisely what I do like about matrix.
But if you're one of those people that says, listen, I don't want complicated UIs,
I just want a messenger and I just want to use it.
Fluffy chats a great way to go.
Now here's an interesting aside.
What I wanted to test Fluffy chat, I downloaded it off the app store.
Have you either of you installed it?
I tried it when you were, I tried it on your device, but I had never downloaded it on my personal device.
Any of the matrix, so you guys speak up if anybody in there has tried it.
I'd be interested in hearing your experience of Fluffy chat.
But I downloaded it and I open up Fluffy chat.
And the first thing it says to me is, pick a username.
Okay, I can do that.
I pick a username.
And it says, pick a password.
Pick a password.
The next thing I know, I'm signed into Fluffy chat.
And so I think to myself, let me see if I can send a message.
Send a message to Colonel Linux, colonlinnxtelta.com.
Boom.
Send some message, I thought.
And that was really fantastic.
How did that happen?
First of all, what server am I even on?
Go back through the process a second time.
What I found was that the folks who wrote Fluffy chat have their own matrix instance.
And by default, as you might expect, it registers an account on their matrix instance.
Of course, you can click on Change Home Server and register on your own.
But what's really where that really clicked for me was one group of people said,
here's the way that we should approach messaging.
And we're going to do it the same way that Slack and IRC and all of the Discord and all these other places have done it.
And indeed, that is what you get when you download the element client.
But now we're seeing a time in where people have looked and said,
I want a messenger like I message or telegram or signal.
And a totally different group of people took the exact same protocol and said,
we're going to present that information to the user in a different way.
And I've gotten to the point now where I,
if there's a better way to build a community, somebody tell me what it is.
But you have to be prepared to answer questions like,
well, what do we do when we're when Discord or Facebook or whatever the platform is?
Says to themselves, we don't want you on our platform.
Or if, like we covered in a story last week,
one of these platforms can't get along with one of the governments.
And so an entire country can't participate in the community.
This doesn't work for me.
And so this is why I've kind of doubled down on matrix and element.
Because if you look at a five-year roadmap, look at a 10-year roadmap,
where is communication going to be?
Email has survived 25 years, not because the people who invented email were super smart.
I mean, they were, but that's not why it succeeded.
It succeeded primarily because it's such an open standard that a bunch of people,
it's the way that a lot of people can communicate.
And no other platform has that quite the way that matrix does.
And so if I were Slack, if I were Microsoft Teams,
I'd figure out a way to run matrix on the backend,
let that do all the heavy lifting,
and then put your whatever your funding client,
whatever you want to brand it fine,
but that way you're able to talk to everybody else.
One interesting point as well that you mentioned is that email,
I mean, it's lasted however long,
because it's no one protocol.
But another thing to mention is that with telegram and with all these other services,
there is one server instance.
So if the server goes down for any reason,
then you are stuck with telegram is down.
There is no email is down.
There could be Gmail is down.
There could be hotmail is down.
Whatever there are these days,
there could be a specific service that's down.
But with matrix, it's really, it's the same concept.
A specific server can be down.
And really when you're looking at scaling this up,
it really makes a lot of sense to distribute it to a couple of different servers,
rather than just having one centralized server,
especially when you're looking at running a business,
or when you're looking at running something that needs to be reliable,
you don't want to have to rely on somebody else to maintain your server.
You know, you're right about that.
So consider this, right?
We just signed up for a hosted instance of matrix.
And the reason we did that is we wanted to see what does the best,
what does the best experience on element look like,
directly run from the people who created it.
And we wanted to compare that to our community hosted instance
and see what the difference was.
Now, spoiler alert, I'll be surprised.
I'm happy to tell you that there really isn't much of a difference.
The only difference is in some of the polish
because they obviously smooth the onboarding process
because they know what the server's going to be ahead of time.
But I digress.
If somebody finds a different way to build a community,
you write into the show at Live at AskNoShow.com,
tell me what that is and we will look into that.
But right now, what I'm seeing is what exactly what you just said.
When Fluffy Chat sets up a server on their instance
and they're doing a thing,
and we have a community instance at LinuxDelta.com
and anybody can join there and host their account there.
And people are doing this.
They come in, they join the account,
they join one of the rooms,
and we're expanding the rooms to include all sorts of different topics.
So you can just click on that Explore rooms button,
look at all the different rooms that are there.
But what people are doing is they're coming in,
and then they're saying,
how do I set up my own synapse?
And of course we're happy to help people do that
because as you correctly pointed out,
the more synapses that are online,
the more robust and reliable matrix as an infrastructure becomes.
Each room is copied to each server that has users that host it.
And so when somebody spent,
if you spin up Kenny.Me and you spin up Simon.Me,
and those are synapses,
and you join the Geek Lab for example,
now that Geek Lab is stored on not one,
not two, but three different servers.
And so we have redundancy,
and even if LinuxDelta went away,
we could just change the address to Kenny.Me,
and it would be Geek Lab,
Colin Kenny.Me and that room could live on.
So it decentralizes communication,
and if I'm going to build,
if I'm going to tell people,
hey, here's a platform that I think you should invest in
and spend time and create an account,
then it seems to me that matrix is the best place to do that,
because every time we make a change, we lose people.
People don't want to do that.
And I care about keeping those connections,
there are people that I talk to on Telegram
that I don't talk to now that they're not on there.
So I invite you,
if you haven't been following along or if it doesn't seem like
it was something that was interesting to you before,
I highly suggest you take a look at matrix
and see what it's about and how it works
because once you get into it, it's been really fun.
Simon, you've had an opportunity to look at it from the other side
from the developer standpoint and write some stuff.
How has that been working with it?
So there's one, it's on the one aspect.
There's a difference between being able to work with open source software
that just happens to be open source.
And it's a difference between that
and working with something that's very well architected.
And the more I look into matrix,
the more impressed I get with how well is architected,
with how well they thought things out,
especially given that they have many different architectural planning documents
that show exactly what kind of thought, what behind it.
So I think that that especially makes it easier to work with
from a developer perspective.
And I've found at least working with it myself.
I've had a lot of success given that open documentation
and given that there's a community of people who have tried it
and many different instances.
And they have had positive, you know, positive results.
Most people go to it, they don't go back.
Right, exactly.
So I think that definitely from a developer's perspective,
it really matrix is a good solution.
You know, if you look at, if you compare to something like telegram,
the server again, it's open, it's closed source,
and the client is open source.
So that's definitely one of the advantages of using something like telegram.
And of course, there are many different platforms we can discuss.
I think it's unique in that it's an open, distributed,
well-architected program.
And it's really, it's really fun to work with in my opinion.
Our gadget of the week this week is the phone from YeLink.
It's the CIPT-T42S.
Now, at some point, we dream of a future at Alta Speed
where we're going to have our phones tied directly into matrix.
Because matrix, the protocol, will support tying to CIP extensions
or support CIP.
And so the ideas will log into one piece of software
and we'll have our chat software, our support software,
everything will run through matrix.
But for now, until that, until all of those integrations have been made,
we're still stuck with using physical phones.
And if you're using any of the number of different asterisk clones out there,
it doesn't really matter which phone you use as long as it's a CIPT phone.
The problem is all of the troubleshooting and programming is on you,
unless you pay for extra features or go with a system that has integration into something like asterisk now
with, you know, like Sangoma.
Another way that you can go, though, is using a software like 3CX.
3CX is not open-source software, but it is free.
And it will run on a basic Linux server.
Now, the way they do licensing is a little weird.
You get for what they call simultaneous calls or SC for free.
And any more than that, you have to pay for.
And so if you wanted eight simultaneous calls,
in other words, you wanted to have eight people on their phones at the same time,
you'd have to pay for one of their licensing.
And it does get kind of expensive.
But for just getting started, for just getting off the ground,
3CX is a great way to go.
And things like the Yaleing CIPT-42S,
mean that all you have to do is take the MAC address off that phone,
put it into your 3CX extension,
and press and hold the OK button on the phone and restart it.
So you can literally just ship phones to your clients.
You can ship phones to your employees.
Wherever it is that you need to have access to your CIPP-PBX system,
you can do that with 3CX and the Yaleing phones.
When I first bought the Yaleing girl first suggested to take a look at them,
I actually wrote them off because they seemed like a budget brand.
But after owning a few of them now for a little bit
and having used them at all to speed day and day out,
I have to admit they are definitely a good quality phone.
So if you're looking for an easier way to manage your PBX,
I highly suggest you take a look at 3CX and the Yaleing CIPT-42S.
And if you're looking for a hosted solution, obviously,
our friends over at Fox Telesis,
we get people from the community all the time saying that they have nothing
but a good experience with them.
So if you don't want to have the...
If you want to self-host it yourself, just go download the ISO and self-host it
on a company like Vulture or something that lets you upload your own ISOs.
But if you don't want to mess with it all, then give Fox Telesis a call
and have them do it for you.
In the news this week, Lenovo has announced a global expansion
of their Linux portfolio extending its certification program
that was announced back in June to include PCs pre-installed
with Canonicals Ubuntu, LTS.
Now, this is exciting because what...
You saw this early on in the late 2000s,
companies kind of springing up trying to play with supporting Linux.
And it's only been in the last maybe three, four, five years
that companies have really buckled down.
And part of that is going to be a theme throughout this episode
and going on past episode 200, which is the direction that the industry is going.
Now, I have to tell you, both at Altuspeed Technologies
and on AskNoah, I try to keep my finger on the pulse
and what the technology is doing and what the industry is doing.
And the reality is that Linux has never been more important
because it is the platform on which everything else in the world is running on.
And I have to be honest with you, I'm convinced that the Linux desktop
is the right choice for me because I've said this from day one
and I continue to say this, I think this is still true.
The choice of an operating system is simply choosing what type of problems
you want to solve.
If you want to choose to solve the problems, they can be solved under Windows 10.
If you want to solve certain problems, they can be solved under macOS
and you'll be able to get your workflow done on either of those two operating systems.
I work with companies that have people working on Android for crying out loud.
But I think for me personally, the Linux desktop is the right way to go.
But I'm convinced that in the next five to ten years, it's not going to matter
what desktop you choose because the vast majority of services
that you're going to be required to interact with
are going to be managed services provided by large or small companies.
And I'm convinced that Linux is more important than ever
because it's what's powering all of this.
And I don't think this is bad news.
I think this is good news.
I think we as a community are more prepped than we've ever been
to tackle things like this.
There are more self-hosted platforms out there
and most of them in my personal opinion blow the pants off their proprietary solutions
and they also are a fraction of the cost.
But what that means is there are literally hundreds of thousands
if not millions of jobs out there building this stuff, maintaining this stuff,
supporting this stuff, troubleshooting, understanding,
and it's much easier to do all of that from a Linux machine.
And you guys dealt with this just in the field today.
You're troubleshooting a web server today.
And first thing you told me is I just, I got to get to Linux box
at the time you guys didn't have a Linux laptop next to you.
Hey, I'm going to troubleshoot this thing.
I need to get to a Linux box.
And that is shared by most system administrators and developers
if they're working on a Linux ecosystem and they're looking on a Linux infrastructure.
And so what Lenovo is doing here, the reason that Lenovo is willing to extend their lineup
to cover 14 additional machines is because, excuse me, 13 additional machines,
is because they know that the future of building and maintaining this technology
is going to be on Linux in one form or the other.
And they, at the end of the day, Lenovo just wants to sell laptops.
They don't care who to or why.
They just want to sell laptops.
And so what the industry has told them is that end users are going to continue
to use Microsoft Windows because Microsoft has made it a very smooth experience
for end users to transition into Windows 10.
And we've seen that out in the field.
That Microsoft is working their tail off to make it so when you,
man, if you sign up for an Office 365 subscription, I promise you you know
that Microsoft Teams is available.
Yeah, I mean, I mean, yeah, log into the desktop without finding out
that Microsoft Teams is available and ready for you to use and offer a guide walkthrough.
And by golly, if you needed help picking a browser,
they full screened that Microsoft Edge right all over your computer just so you knew
that Microsoft has was an option for you.
In case you weren't aware of how great of an option Microsoft Edge was, right?
This is what Microsoft is doing.
Yes, and pick, speak up.
This is what Microsoft has.
I got to interrupt.
Hey, Noah, there's a new version of Edge.
There is.
Yeah, I just got to tell you.
Yeah, it came out.
Microsoft told you.
Yeah, and it came over my whole screen to tell me.
So what Lenovo is doing here is responding to the fact that they know
that the developer market and the system administration market for people
that have to do these things have to have computers to work on.
And they don't have time.
We don't have time.
We're a company of seven people.
And we don't have time to go through and reinstall the operating system on our laptop
because we just need our laptop to work.
So the fact that I can go to a company, Lenovo.com and just buy a Linux computer.
They're not the first.
Dell has done this before them.
System 76 before that.
Companies have been doing this.
But now if you want to play in the PC space, the big manufacturers,
and I can't tell you, I can't cite the source because I was specifically asked not to.
But I have it on good authority that the fine folks over at HP use Linux and house like crazy.
They're just not allowed to talk about it.
And what that tells me is that the industry is taking a clear direction.
And as the ASNO show, we want to be a part of covering that and continuing to bring industry experts in
that that can not only answer questions, but also can provide insight into where the industry is going
and what they're doing.
Container technology, virtualization, these kinds of things are sweeping through the industry
and Linux is at the heart of all of it.
And so I am, I couldn't be happier for Lenovo that they're making this announcement particularly
that my X1 Carbon 6 Gen has been hands down the best laptop I've ever owned in my entire life bar none.
Boot the thing up, go into the ULIFI, tell it that it's a Linux machine which is amazing all on its own.
And from that point on, you would swear that Lenovo's engineers built that computer around a perfect Linux box.
And that experience was so incredible that when one of our clients asked us to replace one of their laptops,
I said, you know, if you want a mission-critical reliable laptop, I'd highly look into ThinkPad.
And so they got, we got a 7 Gen. And of course, I have one that I'm going to do a review on because I have to know how well it works with Linux, right?
This is exciting news.
And I think where this takes us or the direction that we're going to go with this moving forward is pay attention to what these manufacturers are doing
because they're responding to industry.
And so there are people all the time that ask me, how do I get hired?
What can I do to put myself into a position to get hired?
And how do I move my career forward? What do I take as my next step?
Take the fact that Lenovo is recentering a portion of their company on providing this market as a sign that this is the direction technology is going.
It doesn't matter if you're on Apple, it doesn't matter if you're on Microsoft.
At the end of the day, you're using their services and their services all run in Linux.
Now, before we go any further, I have to welcome in my best friend for years.
We talk a lot about Ham Radio on this program.
And I hang out on two meters and I do the Monday night net when I'm here, but I just don't have the time to do all the fun things that you can do with Ham Radio.
But my best friend does.
He spends a lot of time hanging out on all forms of Ham Radio and he's doing it all on Linux.
His name is Alex, better known as KC zero REL in the Ham Radio community.
He joins us as a guest on the Ask No A Show.
Hey, Alex, welcome into the program.
Well, hello there.
Hey, thanks for taking the time to be here.
So I guess let's start with this Alex.
You recently got married.
You bought a house with your wife.
You move in and you say to yourself, I want to set up the ham shack.
What were your goals when you when you first started setting up?
What were you trying to accomplish?
Sure.
So we live in an HOA restricted neighborhood, which they do allow outside antennas, but we didn't want to cause much of a stir.
So I wanted a stealthy operating environment.
I wanted to get on HF, specifically SSB, CW, and anything 40 meters, 20 meters in below.
I can't quite do 80. I can tune up on it and I can get out, but it's not very reliable, as well as having a reliable two meter shack.
And the ability to operate the shack remotely when I'm not in the room, even across the house or across the world.
What kind of HF antenna do you have and how well do you find it performs?
Sure. So when we first moved in there, I looked at a bunch of different options.
I looked at commercial options. I looked at building.
I looked at anything from a yagi all the way down to a dipole.
And I settled on a dipole.
So I actually ended up buying some electric fence wire.
It's just aluminum extruded wire from a local ranch store and went out into my garage, measured out the lengths, built myself a fan dipole.
So it has elements on 40, which is trap loaded, 20 meter full length element, and a six meter full length element.
Because at the time, I thought I'd be a lot more active on six meters, and that is absolutely dead in my area.
So I don't actually use the six meters, but it tunes on 80.
It'll tune on 160, but I'm not putting out very much power at all.
It's a resonant on 40. It's resonant on 20. It'll tune on 17 meters, 10 meters, and a couple other bands.
For VHF, I've got a two meter radio, which has an SMA mount and tena drilled into a goodwill cookie sheet.
That's just literally sitting in the attic on top of the insulation, and it works great.
I can hit repeaters 60, 70, 80 miles away. No problem.
You mentioned that you have set your station up to work remotely.
Now this is interesting because your day job doesn't necessarily permit you to be in the same place all the time.
And so you want the ability to practice your hobby from everywhere. How did you set this up?
Sure. So it actually started out much simpler than that.
I originally started working with FT8, which is a sound card mode, a digital mode on the computer,
where you click a button and your computer controls the radio to make the contact.
And I would find that I had to walk across the house to use the restroom to cook, to put laundry in the dryer,
whatever to do my household chores, and that I would come back to the computer and see that, say, Africa had been on five minutes ago,
and I had just missed a chance to make a contact with the last continent that I need to make, worked all continents,
or that a wanted call sign, you know, somebody that I was friends with in the past, or somebody who's radio hosts like you,
was online, or something that I had just missed you, or whatever, five minutes ago, and I was so disappointed with that.
So I originally set up my computer upstairs that runs the hamshack with a VNC client, or VNC server,
and then I had a VNC client on my cell phone in my laptop, and I would log in and just control it through VNC.
Sure. And that got me thinking that I could do that across the world, or wherever, and I do occasionally do that.
The problem is I don't want to leave the radio on 24-7 and running, so that my next issue to tackle is working on a way to remotely turn the radio on and off,
or just body in the bullet and saying, I don't care on leaving the radio on, it's not like it's going to burn up or anything like that.
That being said, I've recently set up a VM box, so now I have different virtual machines running them,
and another project that will eventually happen is getting away from VNC viewer, and just virtualizing the entire hamshack computer.
And when I'm in the physical hamshack using the computer that's there, just as a dummy terminal, and then being able to access that through my VN,
through my VPN, and connecting into that securely.
Now, have you played with different remote protocols at all, or is it just kind of been the protocols really just there to get your access to the machine?
So VNC does the job? Why bother experimenting?
Yeah, no, exactly. I just want to be able to click buttons on the screen and let the computer handle the rest of it.
The issue I've seen with other remote protocol things is they want to remote things like they want the push to talk to be on your phone,
and that seems to be overly complicated to me, whereas if everything's already being handled well by the computer locally in the shack,
why not just have access to that computer and let that happen, if you don't mean?
Yeah, absolutely. No, that makes perfect sense.
So you started with FTA. You've alluded to that this may have started to become more complicated or more robust.
What modes do you typically spend operating?
I almost exclusively operate FTA. Every once in a while I'll do FTA 4.
I like the ability to do free messages that comes up with JS8 call,
but I haven't had a chance to get that set up simply because life has been kind of hectic with COVID going on and stuff like that.
But that is one of my next ventures, and then I have a small QRP radio called a DSB.
It's a home built kit where you get a box full of parts and you build this radio.
And that is going to be set up. I have to build another band module for it to get it on the right frequency because it's a crystal controlled radio.
But that is going to be set up as a whisper beacon.
Whispers weak signal propagation reporter and essentially what it does is puts out anywhere between five watts and below,
down to the millawatts level, just on a constant, very, very, very low noise floor mode that can be decoded way below the noise floor.
And you can set up a, basically use PSK reporter or they have this version of that called Wispernat
and see where your signal is being heard all around the world even on millawatts of power.
Wow, that's really cool. And is this a radio that you built?
Yep, yeah, that's actually one of my hobbies has been throwing us a small soldering iron in my bag
and ordering these kits off of QRP guys or QRP labs or any of the numerous websites out there and building little radios when I'm on the road.
Because why not? I mean, they're small, they're powered off of anything from a 9 volt battery all the way up to you can power them off of a regular hamshack power supply.
And a dipole made of speaker wire that folds up into a very compact package.
The whole thing takes up maybe the size of a shoe box at the most.
Usually it's a whole lot less than that. And you can throw it in your bag and operate a chef from anywhere in the world.
So you've kind of explained what a DSB radio is and you've kind of explained why you chose to engage in the process of building it.
But who is that process right for? If I don't have any electrical knowledge, maybe I've never soldered anything before.
Is that something that should be daunting? Is it something that's easy to pick up? Who can build a radio from scratch?
Absolutely. There's kits that range anywhere from I've never touched a soldering iron all the way up to the next kit I'm going to buy is what's called an MCHF which has surface mount components, which obviously is a lot more difficult than through hole components.
No, most of the kits out there are very, very simple. All the surface mount stuff is already done at the factory if there is any surface mount.
And it's follow color coded picture directions that a three year old could follow.
In fact, the first radio that I built is the QRP Lab CW Transsever, the QCX.
And that was designed for the youth on the air conference, which is children 16 and younger learning about ham radio as a kit that they could build with zero speed.
We'll have links for you for all of these kits. Everything he's mentioning in the show, but it's a podcast dot ask Noah show dot com.
Alex, when you connect a radio to a computer, most of the people that are listening to this show are very familiar with the computer side.
They might be introduced to the radio side. What things do they need? Can you just go on the internet, purchase a radio that has USB plug plug it into the computer and it works?
What kind of software do you use? How does that work?
Oh, jeez, you could even you could even not have a physical radio. There are web SDR stations that you can operate for free or during contest.
You can rent out and operate a mega station with, you know, a 10 element yagi on every band and radios that do 500 watts through an amp or even more.
And all you need is a call sign in a computer and a credit card all the way down to you could you could have the latest FT 1000 D model.
That's a $5,000 radio that yes is its own USB interface that you plug right into your computer and everything you do on the radio you can do on the computer from turning the volume up and down, turning the gain up and down, whatever you do that through through either a graphical interface or a keystroke.
All the way down to I have a tube radio from the 1970s and as long as you can get audio to and from the radio and key the radio somehow with the computer you can operate digimodes with your computer with that.
That's absolutely fantastic. That's awesome. So let's dig into SDR a little bit. SDR software defined radio. Essentially the idea is that we can't really we can't really emulate the transmitter or the receiver.
So that part has to be real. But the actual controlling the tuning, the interpretation, the audio processing, all of those things we can offload to the computer and do that in software.
And then just keep the transmitter or the receiver, the actual physical component that we use to transmit or receive. Now, the transmitters are obviously a little bit more pricey. So those obviously are going to require a little bit of knowledge, but the receivers anybody can purchase for just a couple of bucks off Amazon, eBay, a number of different places and it allows you to receive radio waves through this SDR adapter into your computer.
So Alex, what was your first experience with SDR? How did it come about? How did you get it set up? What SDR receiver? I assume it was a receiver that you used and what software are you using?
Sure. So this began probably five or 10 years ago. I saw on Amazon a RTL SDR digital TV box that was, I think it was $12 or $13 at the time and I bought it with the intention of, oh cool, I can watch TV on my laptop, not knowing at all the ham radio implications of it and what you could do with it.
So come to find out that these devices are so cheap and so ubiquitous, you can find them anywhere that people have started using them and they have very sensitive receivers in them that you can use them for anything from watching TV, what they're designed for, all the way up to receiving slow scan TV from the International Space Station or weather satellite images or monitoring your local repeater or using an up converter, monitoring HF.
So the project that I've most recently done, there's two of them. The first one is I have a SDR plugged into a Raspberry Pi, which will eventually be virtualized. The only reason it's on a Raspberry Pi right now is because I wanted the antenna as high as possible and it's in my upstairs bedroom, which monitors the aircraft flying overhead and publishes that data to a flight tracking website.
You can download ready made packages for all the popular ones and what's cool about it is I have my own independent data where I can see what airplanes are flying over my head, even the ones that are restricted to the general public.
So if it's putting out a signal saying who it is, I can pick it up. If it's a military airplane, if it's a private jet that paid for the blocking service or whatever, I can see that whereas somebody who doesn't have this service can't.
And the other system that I just recently set up is a it's off of GitHub and it's called Trump recorder where I've been a scanner enthusiast for the longest time.
I've always been interested in listening to police fire ambulance in my local area as well as amateur radio and that kind of stuff.
And I got tired of if I didn't grab the scanner having to turn around, drive back home, grab the scanner and then leave again if something was going on.
So I found this project through a Google search. It uses junior radios, the backbone, and basically emulates all the functions of your trunked scanner, which is a $500, $600 scanner, and does it all on the computer using one or more SDRs, depending on which SDR you have.
So the cheaper ones have relatively narrow bandwidth and relatively low number of samples per second, which is the limiting factor on how much data you can monitor.
So I mean, you have about 2.4 megahertz of bandwidth that you can listen to on this radio. So anywhere between 1.2 megahertz below and above the center frequency, the radio can listen to that entire spectrum at the same time.
The more expensive ones are up to 61 megahertz of bandwidth, but those are in the hundreds of dollars range that you can monitor at the same time.
And depending on how many different signals you're trying to pull out of that, you have to sample more to get usable data out of it.
So with my SDR, which is, again, an RTL SDR, which is $15 to $20 on Amazon, I can monitor roughly four or five transmissions in that bandwidth, which is good enough for me to monitor my entire trunked radio system in the local area, which covers police, fire, ambulance, as well as public utilities and other things.
Multiple different calls at the same time on only three SDRs.
That's fantastic. And you virtualize this whole thing.
Correct. Yeah, it's running on a VM. It's running on a bunch of VMs that actually we just set this up the other day.
It'll pull the signal in. It records everything, including talk groups that don't get broadcast online, like the data talk group where you're hearing background checks and people's names and stuff.
The tactical talk groups that aren't restricted, but the police department has requested that they don't play out. I can still hear them, but there's certain websites that won't play them.
And it broadcasts it to OpenMegrahertz.com and to broadcastify, which is the radio reference version of that, and runs a feed to both of those.
It archives them on my computer, and then I have every morning at 3am.
It, for reasons of the software records in WAV, but it puts it out as an MP4 file, I think, to the internet.
I delete the WAV file because I have no need for two audio recordings of the same thing. I've automated that.
And then I have an R sync to my NAS drive at the end of the night so that all the calls are archived basically in perpetuity.
Let me ask you this. You talk a little bit about these different sites that you can stream this audio tune.
You mentioned two of OpenMegrahertz and radio reference. Is there either one of those sites do you like better than the other in terms of either functionality or in terms of
they try to put their own twist on things and control things and the other site over here just kind of let you do whatever. Have you noticed any of those?
Yep. Yeah, actually. So what I was talking about with one site blocking certain talk groups and stuff, that is radio reference.
There's nothing wrong with them. They're a great site, and they're by far much more ubiquitous. You can find feeds in almost every city of police fire and ambulance.
They do take the tactical talk groups and the talk groups that only deal with relaying private information like driver's license and numbers and stuff off the air.
Which, okay, that's cool, but there are definitely some times that you want to listen to that stuff, even as Joe citizens.
So OpenMegrahertz is essentially the one that does not block that. It puts out whenever talk groups I feed to it and puts them right on the air.
You mentioned the RTL SDR and I've looked this up. It's not 25 bucks on Amazon. Excellent reviews, 681 reviews, all four and a half star.
So this is a really cool device. Looks like it works everything for 500 kilohertz to 1.7 gigahertz.
So I can see what you're saying as far as a wide range of things to receive. Are these the dongles that you're using?
And if so, do you have one per, would you need one per trunk group that you're listening to or one per frequency that you're listening to or does one act like the scanner portion?
So generally you need an array of them because their bandwidth is only 2.4 megahertz.
So I have everything from 856 megahertz to 865 megahertz scanning.
And one SDR wouldn't be enough to cover that entire bandwidth. So I have an array of SDRs to cover that entire frequency spectrum.
There is on the trunk reporter GitHub, there's a link to a site where you can plug in all the frequencies you need to monitor and the bandwidth of your specific SDR.
It will tell you how many you need to reliably record that. But if you're just recording one frequency or even if you're recording a group of frequencies within that 2.4 megahertz bandwidth, you can just use one SDR.
I want to talk about a second piece of software. This anybody who's been in radio for more than 5 minutes has probably heard of and it's called chirp.
It is a fantastic piece of software that can program pretty much every radio known to men. Now to take you back a little bit, 10 years ago, when you would purchase a radio it would show up and you would do the ham radio mantra, which is pulled out of the box and see if you can get it to work.
If you can, then you just go ahead and throw the manual away. If you couldn't get it to work, then you would skim the very brief amount that you had to get the radio to program and then you would work it.
These days you can just download chirp and use your computer, which gives you a much more robust interface to program the radios, as well as the ability to program things that wouldn't be functional to program from a front keypad like DMR and so on and so forth.
Alex, what are you using chirp for and how have you found it to be beneficial?
Sure. Actually, therein is a project that I discovered about two, three months ago I discovered chirp. I mean, I'd heard about it.
But I was of the old schools. I'm just going to punch the buttons. I don't need to spend $10 on a data cable to plug my stinking radio into program the local repeaters.
And then I bought a radio off the internet that came with European firmware. And I'm like, well, darn it. What am I going to do with this thing? The Comspacings is all wrong.
I can't even tune in 146.520 because it with the Comspacing wants to tune in 525. And I bit the bullet, downloaded chirp, plugged it in and within 30 seconds had the US firmware.
It's already on there. It's just a bit that has to be checked and how to US radio. And I'm like, well, geez, this is pretty cool.
Okay, well, let me go get my repeaters and type them in. And then it says, well, you can just click here and download from repeater book.
And I clicked and all the alpha tags were put in. Everything was put in. I clicked a button, watched it, synced to the radio. And now I have a fully program radio, literally within two minutes of plugging it in.
And it works with everything from a bow fang up to the most expensive Yezu radio or Kenwood or Icom radio that you can buy.
And it's just amazing. It blows my mind. And it works with handhelds, it works with mobile radios, it works with anything.
Chirp is a free and open source tool for programming those radios. And it's available on Windows, Mac OS, and Linux.
So essentially no matter what your platform choice is, and really pretty much no matter what your radio choices, you're probably going to be able to program it with chirp.
Correct. Yeah.
Tell me some of the cool things you've been able to do with decoding and encoding radio data.
Because the nice thing is about it is that this data is coming over as 1s and 0s over the radio frequency.
And typically, like you mentioned earlier, you need a very expensive scanner. And it's not that the radio portion of that scanner is expensive.
It's the software and the tooling and the hardware that's required to process that digital data and turn it into actual audio and then render that back out.
We can do that in a computer for much less money than we could do it in a dedicated piece of hardware.
You've done that. How is that worked out in practice?
Sure. So specifically with FTA, I have found that because it's audio frequency shift keying, meaning that it's a series of tones that the computer interprets as a digital signal,
you can just hold the receiver up to the speaker and get successful decodes. And of course you're not going to decode the weakest signals.
But the strong ones are going to decode just fine. I have actually found that I was experimenting with mobile communications with stuff that I would use on top of a mountain for summits on the air.
And I have found that I could hold obviously not reliably, but I could actually make a cue. So out of this, I could hold the speaker of the computer up to the microphone of the radio and get successful decodes.
And vice versa, I could manually key the radio and hold the microphone of the radio up to the speaker of the computer and reliably make contacts.
I've actually made a couple of quesos simply without a without a sound card interface, without any interface between the computer and the radio at all,
besides me holding a push to talk button down and listening to what's coming out of the computer and the computer listening to what's coming out of the radio.
That's fantastic. Alex, anything else that that you've done with with him radio specifically,
Linux on him radio that you'd like to share?
Sure, I exclusively run Linux when I do my ham radio, so all my logging, all of my DX spots, all of my propagation reporting, everything is done on I run L Ubuntu on my computer upstairs because it's an older computer.
So trusted QSL, TQSL is what I use for both logging and QSL confirmations.
I also do run Xlog for when I'm not running FTA, so if I make a CW contact or voice contact, I will put that manually into Xlog.
But with TQSL, it pulls straight down from your WSJTX logbook, your FTA logbook that comes with that, and it automatically will upload it.
And if they also use TQSL, which most of them do, it will automatically confirm the contact if they've also confirmed it, which is really cool.
And then that goes into their award system, worked all states, worked all continents, worked all zones, all that kind of stuff.
You can actually get those awards straight through that program, TQSL.
Other programs I use, I do have GQRX running, GQRX is a SDR visualization program.
So you can pull your SDR, tune it to a frequency and see the waterfall spectrum around it, which can be useful, not so much an HF because most the SDRs don't go into the HF bands, but to see where somebody's talking, say, on VHF.
If you know somebody's calling CQSoda, and they said their frequency, but you didn't quite get it, you can look at the spectrum on your SDR and find out where they are.
Or even find a hidden station that's just calling CQ off of 5-2, not on 5-2, you can find them and get to them there.
So I do use that program as well.
I actually pulled up my VNC viewer here simply so I could look at this kind of stuff and see what I have.
There is a build of Elebuntu that has ham radio programs pre-loaded, and I was originally running that.
I'm actually just running stock Elebuntu right now with my own downloads from the ham radio repository, but currently I have programs that I use.
Chirp, FL Rig and FL Digi, I had used a little bit when I first started, but now I use pretty much exclusively WSJTX.
GQRX, QSS TV, which is a slow scan TV decoder.
I started that with a scanner or an SDR just listening to the International Space Station, and they send down images about once a month, and you can decode them and get a QSL card from the ISS, which I thought was absolutely the coolest thing in the world when I started doing it.
Of course, WSJTX, and then there is a companion to WSJTX, which is the FTHJSA and all that mode program, called GridTracker, which I absolutely love.
If you go to my QRZ page, KC0 or EL, just type me into QRZ, and you'll find a picture of my shack, there is a view of that GridTracker, and what's cool about GridTracker, it's kind of an award tracking slash call tracking program.
Where WSJTX, you have your waterfall, and you have your calls window, and it will color code calls that you're looking for or calls that you don't have or new countries or stuff like that, but the thing is that sometimes it'll say somebody that I've worked on a different band is worked.
And yes, I've worked them, but if I'm trying to get worked all states 20 meters, and I've worked them on 40, I want to work them on 20 meters if that's what I'm working.
GridTracker will pop that out and actually pop up on your screen and say you need to contact this person, and then you just click on it in GridTracker, and it'll actually interface with WSJTX and control the radio.
This is so cool. This is absolutely amazing. This is the stuff that people always ask me about, because they know that I'm a ham radio operator, so they expect that I do all this all with my spare time, but I don't have any spare time, so I don't.
So this is really exciting to hear, man. This is so cool. Where can people find you if they want to, if they want to have a conversation, want to have a cue so with you, where's the best place to find you?
Sure. I operate almost exclusively on FTA. I do occasionally scroll through SSB and CW, my CW speed is extremely slow, think like two to three words a minute. I couldn't even pass a five-word a minute test now, but I do do CW every once in a while.
But 99% of the time it's FTA. I'm available through the chat room here. If you wanted to ask me questions about this, I can answer questions about my specific setup.
And then if you have an urgent pressing matter that you want to know to get ahold of me, he knows my email address.
Alex Archer, he is KC zero, REL ham radio operator. Guess this hour on the Ask Noah show. He is in the matrix chat, what he was talking about, so you can join us in the ham shack.
You can join that chat at geek lab colon, or excuse me, linuxdelta.com and choose the ham shack. His name is Alex Archer. Thanks, Alex, for joining us on the program. You have an open invitation anytime, my friend.
Well, thank you. Always up to talk ham radios or any of the other multiple interests that I have.
We appreciate it. We'll get you back to cover those. It's great hanging out with nerds, and it's great building community with nerds.
And Simon, and Kenny, thanks so much for taking the time to be here and do this with us. It's been fun.
I want to, as we mind on the program, I kind of want to talk about what we're doing at all to speed and how that relates or benefits to the community.
So this week, as I said, we're testing out a hosted matrix instance from the element folks. And what we have, what we've done is we've tried to revamp our workflow so that it takes into account the fact that we have this community that we want to support.
When we did the email bridge, we found a bridge, an open source project that worked. I mean, the code was there, it was complete, but it was just a little outdated.
And so we forked that repo. You made the changes that we needed to make and we got the email bridge working at all to speed.
And now that code is available on all to speeds get lab and people can benefit from that and people can take that and they can use it.
And when we finish the chat integration into the site so people can participate without having to create an account, that's something that all of the various communities are going to be able to to use.
And the idea here is very simple. We from since 2009 have spent our time at Alta speed technologies, solving people's problems and serving people who pay us money.
And since 2017, what I've set out to do with Ask Noah is solve people's problems in the community. It's just a different way to approach the same idea.
And so going forward past 200, my goals for the show are to is to utilize the network of experts that we have.
I don't know the answer to every question. I don't know when people call in. I don't know everything there is to know about virtualization or see groups or docker.
But I know the people that do and I see them at Linux conferences and we talk at Linux conferences and those people are available and want and are willing to come on the show.
Steve Evans is a fantastic community member and I he wrote an article for redhat.com about C groups will have it linked for you in the show notes and in it he goes through it's going to be a four part series and he explains in part one covers the fundamental concepts of C groups in part two.
He examines the CPU share in greater depth in part three. It's entitled doing see groups the hard way and looks at see groups administrations and tasks part four covers see groups as managed by system D.
So if your system administrator and you're dealing with see groups, this is something you're going to want to you're going to want to read and Steve has graciously agreed to come on the program and talk with us.
And so I may not know everything there is to know about see groups, but I know somebody who does and I want to share him and and provide a platform for him to connect with the community so the community can help and benefit and learn from the problems that we have we have struggled with that all to speed technologies for the next time for the next person that wants to either run that it company or maybe they're on the other side and they say, hey, we want to we want to be we want to do this in house at the end of the day.
There are the companies are moving towards service based companies, they want to pay a flat fee in a month and they want to have something delivered to them.
And if you're an IT provider, then you have to figure out how to exist in that world and we want to be a resource to help you do that.
And if your person that wants to be self sufficient and own your own technology, then we want to be the show to help you do that.
You can get the latest by going to podcast ask Noah show dot com. Check out the show notes. Follow us on Twitter at ask Noah show or back next week six PM Tuesday.
I hope you enjoyed that show. The link for it is is in the show notes.
You listen or have thoughts and ideas and we would love to hear them on Acre public radio. Just pick up a microphone and any recording device.
And submit a show that is of interest to you or other hackers. Take care and thank you for listening. Bye bye.
You've been listening to hecka public radio at hecka public radio dot org. We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by an HPR listener like yourself. If you ever thought of recording a podcast and click on our contributing to find out how easy it really is.
Hecka public radio was founded by the digital dog pound and the infonomicon computer club and is part of the binary revolution at binwreff.com.
If you have comments on today's show, please email the host directly, leave a comment on the website or record a follow up episode yourself.
Unless otherwise stated, today's show is released on the creative comments, attribution, share a light, 3.0 license.
You
