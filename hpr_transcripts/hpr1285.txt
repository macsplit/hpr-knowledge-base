Episode: 1285
Title: HPR1285: LibreOffice 06 Writer Creating a Paragraph Style LibreOffice
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1285/hpr1285.mp3
Transcribed: 2025-10-17 22:56:11

---

Hello, this is Ahoopha. Welcome to Hacker Public Radio for another and our ongoing series
on Libra Office. For the time being, we're focusing on Libra Office writer, the word processing
package. And again, I'll remind everyone that pretty much everything we've talked about
applies to any word processor out there, any of the office packages that are out there,
whether it's Microsoft Office, Word Perfect Office, Libra Office, Open Office, you name
it there. They all work pretty much the same. And so far, I think just about everything
I've talked about works the same in all of them. Even all of the fiddly little details
of style properties that we went through over the last couple of episodes. So, I want
to do now is take that we had a lot and I realized the last couple of episodes were probably
a little dry. And I hope you stuck with it because we're going to start putting this stuff
to use here. I'm going to show you how you can start making use of all of this. Now, the
thing that you need to remember is styles are contained within templates that is very,
very important that you understand. Stiles are contained within templates. So, I'm going
to assume that you have created a default template as we talked about several episodes
back. If not, I would encourage you to go back and listen to that again or go to my website
www.ahooka.com and take a look there. You'll see directions on how to do this. But if you go
to the file menu and then go from file down to templates and then in templates, go to edit.
And that's going to bring up a window and you can take a look and I see my default,
which in my case kob underscore default dot ott. Now, ott is the abbreviation for an open
office template or a Libra office template. You know, we've kept all of the endings the
same. And just as if it was a document, it would be odt, d is delta. And for a template,
it's ott, t is in Thomas. So, that's the distinction there. So, I take my default template and
I open that up and I take a look at the very top of the screen and I see, yes, it's got
my kob default ott. So, I know I'm working on my template here. And the reason that's
important is I want to make sure that everything I do is saved and available to me. And what
I'm going to do here is I'm going to create a style and save it in my template so that
I will always have it. And what style am I going to create on this particular occasion? I'm
going to create a paragraph style. See, well, wait a minute. Aren't these all paragraph styles?
Yeah. And this is where it does get a little bit ambiguous. I agree. If you want to go back
and modify body text or something like that, but I like paragraph partly because, you know,
I came to this originally from understanding the semantic structure of documents
in web pages. And so, I learned about semantic structure. I learned about information
architecture there. I also learned about separating style from content there. And it was
transferring all of that over to office programs and word processing that really kind of
opened my eyes to all of this. So, you know, if you know HTML, you know that paragraphs
are functionally denoted by a paragraph tag. So, angle bracket P, close angle bracket,
then you type out your whole paragraph. And at the end, it's angle bracket, slash P, close angle
bracket. And that ends the paragraph. And then what you would do is in your style sheet,
you would go in there and say, okay, now my styles will have the following font and size and position
and, you know, yada yada yada, all the stuff that you'd want to have. And it's exactly the same here.
And that's one of the reasons why I just, it's easier on my poor little brain if I have something
that says paragraph because functionally, that's what it is. Okay. So, what I need to do is I need to
right-click in my styles and formatting, which is now, of course, anchored to the left side of the
screen. We talked about that a few episodes back. And I select new. And up pops the screen. And I
take a look at organizer. And now it's saying it's asking me for a name. And what name am I going to
give it? Well, I'm going to call it paragraph, P-A-R-A-G-R-A-P-H. Then there's auto update. And we
talked about that. I will not check auto update. That would be a very bad thing. You know, because I
don't want to modify one paragraph somewhere in the middle of a long document and have all of my
paragraphs suddenly change. Nasty, nasty business. Then what's my next style going to be?
Well, in this case, you got to think for a minute. All right. How would I typically write documents?
Well, what comes after a paragraph could be any number of things in any specific situation,
but most of the time, the most likely thing is that I'll start another paragraph.
So for next style, I'm going to click that drop down. And I'm going to see, because I've already
typed in the name paragraph above, it already knows that there's something called a paragraph
style that I could be selecting. And so it's there in the drop down for next style.
What is it linked with? I said before, I tend to link with nothing, because I don't want that
inheritance problem to create problems for me. If I change some other style, then anything that
was linked to it can be affected by that change. I don't like that category. Where is it going to go?
I've got a number of things, but I'm going to put it in custom styles, because this is something
that I'm creating for myself. And it's not the only thing I have in my custom styles.
I mentioned last time we're going to spend a little time on tab styles, because those things are
a little bit tricky, and it's worth knowing how they work. So I've got a number of those.
I sometimes play around with other kinds of things. So I'm going to put it in custom styles.
That's a reasonable place for it. Then the next tab is my indents and spacing.
So for my paragraphs, one of the things we talked about, first of all, on the indent.
Do I want it indented from the left side? No. Do I want it indented from the right side? No.
Before text would indent from the left, after text would indent from the right, I've got both of
those set to zero. But then there's first line. I have my first line indent set to half an inch.
That was how I was taught to do paragraphs. The first line is always indented a little bit.
And so I just automatically set that up, and it's all in there.
What's my spacing going to look like? Above paragraph zero, and we talked about that before,
I don't like to mix above and below. You can get into trouble that way. So I tend to do everything below.
So above paragraph is set to zero. Below paragraph is set to point one eight inches, which
for the font that I use, you come down close to being just a blank line.
Line spacing, set to single. Okay. I want my paragraphs, generally speaking, to be single spaced.
If I had a need for a paragraph that was double spaced, I would probably just create a style for
double spaced paragraph. Once you understand how this works, it really makes all kinds of sense.
Then what's alignment look like? Well, paragraphs are left aligned for me. Now if you wanted to go
with justified, you can do that. As I say, I don't typically like the results I get with
justified. That's going to make your left and your right margins precisely line up.
And it's going to stretch things out on the line to make it work. If you like that sort of thing,
go for it. I don't worry about it. Text flow. Now I could put in, check automatically for hyphenation
and have hyphens put in there. I think that makes the most sense when you're doing justified text,
frankly. So for what I do, I just leave that with no check mark at all. And what that means is I'm not
hyphenating. Unless I do it manually. And maybe I do that. But generally, if it's just the word
jumps to the next line, I'm fine with that. It's not a big deal. I'm not going to put any breaks in
here because paragraphs just become one after another in most documents and putting in a break
just doesn't make any sense. But when I get down to my options here, keep with next paragraph does
not make sense. I suppose you could do it, but it just doesn't make sense because that would
somehow you'd be trying to keep all your paragraphs on one page. And I don't quite see where that
gets be anywhere. But what I do is I check orphan control and I check widow control. We talked
about widow and orphan on a previous episode of this. So you know that what we're talking about
here is that with widow and orphan control, an orphan is a single line at the bottom of a page
with the rest of the paragraph on the next page. And a widow is most of the paragraph on one page
with a single final line on the following page. And widow orphan control prevents that from happening.
So the text will get moved so that the paragraph stays together unless there's more than a few lines
here. Then I'll get to font. And in this case, I have chosen liberation serif. Now, fonts, let's talk
about this for a second. Liberation is open fonts that I recall correctly were devised and
offered to the community by Red Hat. I think I'm correct on that. And so they're completely open,
there's no incombrances. You know, there's other fonts out there. But I like using open stuff as
much as possible. And you know, liberation gives me great results. Serif versus sans serif.
And that has to do with what I call the fiddley bits. All right. If you have a capital I,
if there's a little crossing on top and a little crossing at the bottom, that's a serif.
If you have a capital F and there's a horizontal line at the top and then just a tiny vertical thing
at the very right, that's a serif. So there's those fiddley little bits.
Sans serif, sans is French for without. So sans serif is a font that doesn't have it. So things like
your aerial are sans serif and your time's new Roman is serif.
You know, but those are, those are not open fonts. I tend to use liberation fonts. I said last time
that my heading was liberation sans for heading one. I like to use sans serif fonts for my headings,
but serif fonts for my body text. I have read interesting articles about the theory of this.
If you think about it, almost all printed books, magazines, what have you. The body text is always
serif. I think there is research that says that printed stuff, it's easier to read if it's in
serif font, particularly the smaller sizes. But you know, you get to a heading font that's very
large to begin with. Sans serif is fine. And there's also stuff about whether it's printed versus
displayed on a screen and all of that, but you know, we could spend an entire episode on that,
or maybe Clot 2 will do one. He probably knows a lot about that. So anyway, I've chosen liberation
serif, which tends to produce a nice readable document when printed. Style is regular. It's just a
plain old paragraph we're doing here. And I've set it at 12 point, which I, my experience is
that's a very good size for something like this. Well, okay, font effects. I don't want any
font effects. Just paragraph. Position normal. That's the default rotation zero. Yeah. I mean,
I don't want to twist it around or do any of that. Outline level. Set that to body text
without any numbering. It's not a tab. So I don't have to do anything with tabs. I don't want to
do drop caps. I don't want to do backgrounds and I don't want to do borders. So I am now done. I say,
okay. And I've created my style. Now, I'm still in editing my document. So what I do is I will now
save what I've done in my template here. So I've saved my template. If I've done it right,
I can now go to the file menu and select a new text document or control end, which does the same thing.
And when that comes up, I should be able to look in styles and formatting
on the left and go to custom styles and I should see my paragraph style. Okay. So that is creating
a paragraph style. And I think you're going to find that's pretty useful. Now we're going to create
some other styles as we go and we're going to modify some styles and see how all of this stuff
starts tying together. Okay. But I think this is enough for right now. So I'm going to sign off.
This is Ahuka for Hacker Public Radio. Reminding everyone. Please support FreeSoftware. It's
really important. Bye.
You have been listening to Hacker Public Radio at Hacker Public Radio.
We are a community podcast network that releases shows every weekday and one day through Friday.
Today's show, like all our shows, was contributed by a HBR listener like yourself.
If you ever consider recording a podcast, then visit our website to find out how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the infonomicum computer cloud.
HBR is funded by the binary revolution at binref.com. All binref projects are proudly sponsored by
Lina pages. From shared hosting to custom private clouds, go to LinaPages.com for all your hosting needs.
Unless otherwise stasis, today's show is released on the creative commons,
attribution, share a line, free dose of license.
