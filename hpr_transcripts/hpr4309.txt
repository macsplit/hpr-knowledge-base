Episode: 4309
Title: HPR4309: Talking with Yorik
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr4309/hpr4309.mp3
Transcribed: 2025-10-25 22:47:49

---

This is Hacker Public Radio Episode 4309 for Thursday 6th of February 2025.
Today's show is entitled Talking with Yorick.
It is hosted by Troller Coaster and is about 19 minutes long.
It carries a clean flag.
The summary is, an interview with Yorick, maintainer of free CAD during their pre-Fastum hackathon.
I'm here with one of the friends of the Hacker Space with Yorick.
Yorick is one of the founders of free CAD.
And today there was a hackathon in our Hacker Space with some of the developers of free CAD.
And Yorick is going to tell us a little bit about how this day went and what happened
along the way.
So yes, this is not the first time we do this, it's a tradition.
Now every year we do a hackathon with free CAD together with FASM.
And we always begin at the Brussels Hacker Space, it's kind of tradition.
So not everybody is there yet, so today was quite day and it's nice because everybody
gets to get back together after one year everybody working on their corner.
There are new people, people who have seen online and we've seen in real life for the
first time and it's always so nice to be able to discuss things together, show each other
what we're looking at, what we're doing, what we're working on, and how we are working
on stuff.
And it's so nice to see the work of everyone in real life.
Like you sit together with the other and you show them what you're doing, etc.
And it's a completely different dynamic than when we are working online.
Okay, cool.
So you're talking about a bunch of volunteers.
I was here in this space today, I saw six people or five people.
So and that's only a small part you say.
I mean how many people are actually working on free CAD, are they all volunteers or they're
also paid people?
I'm curious.
Nowadays we have, I would say 30, 40 people who work regularly on free CAD and from
these 15 people who are like hardcore developer who are there and like every week they produce
stuff and they're like that they're there all the time.
Yeah, today since people will be there for a little bit less than a week they don't
come all together.
So only the first batch has arrived today.
So we expect total of 15, 20 people tomorrow.
Okay, that's nice.
So what are, let's have a sneak preview.
What are the new features that's coming up and free CAD?
Right now actually we just published version one and it was a terribly hectic job.
We took like most of last year to manage to get it out.
So now we are like mostly resting and looking at what we're going to do next and what we're
trying to do for next year basically is consolidate.
We've been very fast emerging, absolute quantity of new stuff for version 1.0 and sometimes
we've been a bit too fast because we wanted it and we will solve the problems later.
And so now it's the time to sit down and solve the problems.
So we are getting a slower pace, we are reviewing better everything and we are putting a lot
of focus on fixing and doing the annoying stuff like re-working, rewriting, refactoring.
Okay.
And so that's really the focus now.
Cool.
Okay.
I'm going to address this because I know two years ago many people dropped away from
a free CAD because of the so-called topological naming problem.
So for the audience who don't know that issue, who don't know free CAD, can you just briefly
explain what this problem is and how you solved it?
Basically the problem was that every time you recalculated the shape of an object in free CAD,
the name and the position of each subcomponent, for example what is edge 1, what is edge 2, what
is phase 1, phase 2, phase 3, the order would change.
That's because the engine inside would recalculate thing and wouldn't consider that order.
So it would produce a series of phases, a series of edges in a different order.
And that means that's order object that are based on that one could easily break because
they are looking at their build on phase 1 and then the phase 1 would be another one.
So the next object would break.
For example this means if you have a rectangle with a hole on the top and you take a corner
of so all of a sudden the hole could come at a side or for example you have a box and
you would build something on the top phase of the box, suddenly your thing would be on
the side phase and it maybe won't work anymore or something like that.
And this is solved now.
This is more or less, basically we now have solid structure that tracks these changes.
And that can remember which one was phase 1 and which one was phase 2 and reput the things
in the right order.
So that's a solid proven solution.
It's been already used in several forks of 3k, 4 years and it's a proven solution.
It works magnificently in most cases.
It still doesn't work perfectly on some corner cases.
So it's not fully solved.
It will still need some algorithm to catch the corner cases, complicated cases like fillets
and things like that still have the problem.
But let's say for the vast majority of the users, the feedback we get from users is fantastic.
It works now.
In most common cases, the problem is well solved.
So there will be still time before the solution reaches all the further cases.
But I think we have a strong solution now and it's great.
So if you say so, there are still edge cases where it exists.
Just wondering, other cut solutions, commercial solutions, do they also have edge cases where
this topological issue exists?
I don't know exactly about that topological solution.
But yes, you have in basically all cut problems, these reference problems that sometimes you
build an object that's based on another and that reference of another object gets changed
or broken in some way and it breaks your final object that happens everywhere.
Since the engines are different, they have different approaches and different materializations
of that problem.
But it exists everywhere.
Yes, okay.
So I was also happy to see that it was basically fixed.
Yeah, we call it fixed, even if it's a bit of an exaggeration, but the solution needs
solid and it will work.
It's just a matter of pushing it to do where it needs to get.
I also remember that year and a half ago, you partnered up with ONSOL and they created
a commercial project product out of FreeCAD, how is the relationship between ONSOL and
FreeCAD?
Well, basically ONSOL has now stopped their activity.
Basically they were funded by a venture capital and the venture capital stopped funding
them so they are stopping their activity.
Real wires was funded by several FreeCAD people, FreeCAD veterans and basically now that
the interesting part of it is that everything they have developed is now they are in the
process of open sourcing it and getting it back into FreeCAD.
Oh, that's cool.
So yes, basically the two main parts that they have developed at ONSOL, which is the
assembly solver and ON in-house tool, which was a file server and a web system.
Those two parts are now in the process of being transferred to the FreeCAD association
and they are open sourcing it.
So yes, we are pretty, pretty thrilled with this and we have received a specific funding
from the NATERS to make this transition.
That is to clean the ONSOL codes and to make it ready for editing by the mass because
it was a in-house project so it's not really well-formatted for editing by lots of different
people.
So this being done now will have that in the FreeCAD universe and we will see what people
do with it.
Okay, that's great.
So that's actually so it started as a commercial project then with investment from a venture
capital and for some reason these venture investors didn't find it interesting enough financially
probably.
Yes.
But because of the whole open source ecosystem now some parts automatically come back and
other parts are optimized to also flow back to FreeCAD.
Yeah, I really see the ONSOL, the whole ONSOL experience as something very positive for
FreeCAD because they managed to get venture capital and to turn it into benefit for FreeCAD
because they put a lot of people to work full-time on FreeCAD which we didn't have.
All the people we had working at FreeCAD up to now were volunteers.
So in a sudden we had like people working full-time for a long period of time, the top
and I mean problem was solved basically because of the initial push by ONSOL.
They put people on that to solve it and then it was picked up by the FreeCAD association
and we put more people on it, etc.
It's them who gave the initial push to get this solved and that's the kind of speed that
we couldn't have had only with our open source people.
So it's really like I used to joke with Brad who was the ONSOL CEO that he was like a
kind of Robin Hood that he took money from the capital world and he put it in reverted
into open source goodness.
Yeah, I can imagine that it wasn't his plan but it turned out as a good thing in the
end.
Yeah, I can imagine that if you tried something commercial and it didn't work well at
least you did good.
Yes, of course.
Nice.
That's an interesting story actually I didn't know that one.
Now I would like to go back to during this hackathon that you're working on.
I'm assuming there are like some basic things that you say this or the things that are
now the biggest problems in FreeCAD and or the first things that are on our to-do list
or on our wish list be it user experience or be it optimization of mathematical stuff.
I don't know what it is.
What are the biggest elephant in the room now?
Yeah, well that's interesting because we will announce that in a few days say our next
year program and I'm speaking for the FBA that is the association that we created around
FreeCAD.
FreeCAD itself is a community project it goes where it goes and people work on whatever
they find interesting so by nature it has no direction.
But we at the FBA we have a direction we have we manage the money that FreeCAD receives
and we decide in what's priority we give to that money.
So we have basically for next year or let's say up to next release.
We have a couple of priorities.
One is the one I told you already is stabilized, solidify what we have done for 1.0 and make
sure we have trustable code, code that's easy for new people to get into, clean stuff,
kill bugs, documents, have a better release process or let's say a merge process that
is easier for people to get into so if new developers it's easier for them to get into
the code.
That's one thing, another thing we would like to make more bindings and liason with
other projects.
Projects that are used by FreeCAD such as OpenCascade or CoinLibrary would like to connect
better with those people and have a better interaction with those projects or project
with a used FreeCAD.
Also the FreeCAD file format to try to bring it into more applications that do 3D, 2
CADs and to have more exchange between all those files.
That's another priority and a third thing we want to focus on is standards.
That's basically what's most important for professional people.
The modeling capability of FreeCAD we are confident they're good already, for as well
as hobby people, as well as professional people.
What we need to get more is standards, like professional users need to produce things
that stick to standard, whatever that is, whatever that is in their specialty, whatever
it is in their country.
It's a matter of making FreeCAD easier for them to use to produce standard files and
that includes a lot of different things, that is producing 2D drawings that have all
the correct way to make dimensions, title sheets, etc. up to trying to use libraries of
stuff that standard stuff that people need in their project, that's a whole range of
things.
Okay, interesting.
So you've been talking about these different audiences, you talked about Bobbiist, you
talked about professionals, who is the target audience of FreeCAD?
It's hard to say, it's very hard to say, last year with the Oncel people we try to make
a survey, to try to understand who is the FreeCAD audience and it's not clear at all because
it's everybody, all kind of people and it's very hard to extract a clear answer.
But I would say for me, the base category of usual FreeCAD are the same as always, those
are the makers, people who do 3D printing, people who use FreeCAD to just make their things
and they are the massive, basic category of contributors to FreeCAD and that's where we
see FreeCAD used every day, that's where we see amazing things coming from FreeCAD, people
who use it in their corner and for their own project and not so much part of big structures
or things like that, that's something we would like to see more, they are the companies
who use FreeCAD, we know about them sometimes, sometimes the person comes, we use FreeCAD
in our company, but they are not very vocal, no company would come and talk to us.
So we know they are there and we would like to hear more about them, like how is FreeCAD
used, you know, in a setup with several people working together, how do they construct their
files, how do they split up their models and all that kind of bigger scale work, we're
really interested in learning about.
Very short, can you tell me one of the most impressive things that you've seen in FreeCAD
and one of the most maybe funny things that you saw in FreeCAD?
Impressive things, I would say satellites, that's the thing I'm mostly proud of and I
would like really see FreeCAD go into space, like into rocketry, into satellites and that's
my dream for FreeCAD to get into that area, I think there is everything there to do a
good, magnificent job, like connecting with electronics, connecting with a lot of, you
know, study fluid dynamics, flight conditions, etc, all the tools are there for being the
best tool to be used for space and rocketry and that's a bit of my dream and that's the
most, already the most impressive things I know of, about funny things, I've seen some
very cool things like cake molds done in FreeCAD and stuff like that, things for, for
dog toys and that kind of stuff and that's the beauty of the things, there is nothing you
can do in FreeCAD and it's the same seriousness and the same process to make a funny object
for your home, then to do a very serious thing like part of the rocket and it's the same
tool, the same mindset, the same methods and that's the beauty of working on such tools.
Okay great, so now if our listeners want to touch FreeCAD, what do you want to experiment
with it, where should they go to download it and where should they go to learn about it?
To download it is pretty easy, you go to FreeCAD.org or you're just Google FreeCAD and the
first one you will find is a FreeCAD website, there is a download link and you download
FreeCAD for your platform, it runs on Windows, Mac and Linux and on the same page you
will have a couple of hints to where to start, go to this page we have an extensive documentation
with many tutorials, sections for where to get started and it depends a bit on what you
want to do with it, so it's hard to say there is a place to go, just go to the website
and see where it sends you to and depending on what you're interested in doing.
Okay and there's a very lively community that you can ask questions in the forum to.
Yes, there is a very very active forum and there is a large section for a new user and
you can really go there and ask stupid questions like how do I make my first cube?
I don't think I ever saw RTFM in there.
Yeah, it happens of course but yeah we try, we try that's also something we're trying
to make this forum a really better place for newcomers so you can go there and feel safe
and asking stupid things and nobody would shout at you and we're trying to make it as best
as we can.
Thanks a lot, I hope you have another great days of hackathon, I'm going to force them
and enjoy force them.
Thank you, see you there, bye.
On this advice status, today's show is released under Creative Commons Attribution 4.0 International
License.
