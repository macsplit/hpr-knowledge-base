Episode: 2810
Title: HPR2810: Wi-Fi on Android
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2810/hpr2810.mp3
Transcribed: 2025-10-19 17:07:25

---

This in HPR episode 2,810 entitled Wi-Fi Android, it is hosted by Ken Fallon and in about
8 minutes long, and Karimanec's visit flag.
The summary is, Ken Fix is an Android Firewall Wi-Fi connection that reports no internet and
won't connect.
This episode of HPR is brought to you by an honesthost.com, get 15% discount on all shared
hosting with the offer code HPR15, that's HPR15.
Better web hosting that's honest and fair at an honesthost.com.
Hi everybody, my name is Ken Fallon and you're listening to another episode of Hacker
Public Radio.
If you hear some strange sounds like rain falling on a shed roof, it is because all my
kids are doing their homework and I'm out on the shed recording the show.
It's a quick one related to Android tips and tricks.
And this one is about if you're running your own firewall or you're running, you want
to connect an Android phone to a network that doesn't have access to the internet, how
you can get it to connect without automatically disabling.
Android has this function whereby when you turn it on, it connects to the network.
It's not sufficient that it's got an IP address, what it will attempt to do is connect
to random servers on the internet.
Now I run a firewall on all my phones and as a result, it blocks this access.
I'm going to have to look at the IP addresses from various different phones.
It seems to be going to general internet servers providers randomly around the world.
For example, my phone connected to somewhere in Romania.
I have no idea why it would do that, but it timed out.
It could be just servers that they ping locations of servers that they know are up and that if
it can connect to this random pool, then it says, well, I don't have connection to the
internet.
If that occurs, what tends to happen is you see the network name of your connection.
So in my case, in the examples, you'll see that I'm trying to connect to OpenWireless.org,
which is the Wi-Fi access point that I've set up here locally.
To facilitate people who don't have an internet connection at that given time, and they can
use that connection to basically get out to the internet.
If you go to OpenWireless.org, you'll read some stuff about that, I think already, did
you show on that topic and you can consider the implications for you of running that wireless
metric.
But when you do connect, instead of saying connected, it says connected, comma, no internet.
This isn't really a problem because any of the applications that I've given permission
to access will work just fine because the National Rail Service application will connect
the national service website.
It's allowed to go anywhere using my firewall, so no problem there.
However, in the case of all the other applications that I have no clue that are running on my
phone, I want to make sure that they're blocked.
So, this polling application is sent from the Linux kernel itself, so I don't particularly
want to give the Linux kernel full access to go randomly out onto the internet for any
reason given that I don't trust it.
So after a few moments, minutes, possibly, up to a few minutes, you will get a toast
message appearing on your phone.
The toast message comes from where you put a slice of toast in and pops up very funny.
Well, actually, I don't know if it's called a toast message, but it's one of those drop-down
messages at the top.
And if you tap on that, it says Wi-Fi has no access, tap for options.
And then you will get open wireless.org.
This network has no internet access, stay connected, and then there's a tick box, don't
ask again.
Then you're given the option, yes or no.
So if you select, don't ask for this network, select yes, then you're fine.
Now what has happened is the Wi-Fi router that's on test at the moment has got a bug in
it, whereby it facilitates this sort of thing and automatically disconnects and reconnects
and disconnects and disconnects and disconnects.
And it happens so fast that you're not able to go in and say, don't ask again for this
network.
So in order to get around that, I did some investigation and realized, well, this is
running Linux.
So therefore, underneath here there must be a file somewhere that this is stored.
Now for those of you who don't know, Android is Linux.
It's not a new Linux, but it is Linux kernel.
And if you install from FDroid, for example, Termox, you will be able to access all your
command like tools via Busybox.
I think it's Busybox or Busybox like Shell, which is basically a slim-down shell.
You can do LS, change directory, et cetera, et cetera, et cetera.
And if you have Rooted your phone, which why wouldn't you?
Because, hey, otherwise you won't have the firewall on, otherwise you won't have this issue.
So you can pretty much skip to tomorrow's show.
Anyway, if you have Rooted your phone, you should be able to type SU and a pop-up will
give you, will ask for your permissions.
I give Termox root permissions, and when you do that, then you have full access to your
phone.
If you change directory, CD space, data slash MISC, slash Wi-Fi, and do an LS, in there
you'll see WPA, underscore, supplicant.com, our old friend.
And that just follows the normal Wi-Fi network, Wi-Fi network is defined in there with sort
of JSON-like string of network equals SSID equals something, BSSID equals something, key
management equals something, et cetera.
And you'll have that for all the networks that you have connected.
So if you go to the problem network, that you're trying to connect to, and you type in in
that section underneath, I put it underneath priority, but I guess it could be anywhere.
If you put in the keyword disabled, and equals one, so disabled equals one, the equals sign
and one, save that file, and you're good to go.
Now I didn't have an editor really that I could use, so what I did is I just copied
that to the SD card location where I could edit this, I edit this with a graphical editor.
And then I copied it back, I renamed the original, to WPA underscore supplicant.com.org,
copied the file back to WPA underscore supplicant.com, and then the important thing that you need
to remember to do is LS-AL, not AKAL.
And then you need to change the permissions, CHMOD, space colon Wi-Fi, colon Wi-Fi, and then
space WPA-A supplicant.com.
And then I rebooted the phone, and that magically fixed the problem.
So even if you don't route your phone, maybe this show gives you an insight into what's
happening behind that pretty graphical user interface, and makes you realize that yes,
the skills that you learn on one location can be reused at some other location.
So without further ado, I will say thank you for listening to the show, and tune in tomorrow
for another exciting episode of Hacker Public Radio.
You've been listening to Hacker Public Radio at Hacker Public Radio dot org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out
how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the Infonomicon Computer Club,
and is part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on
the website, or record a follow-up episode yourself.
Unless otherwise stated, today's show is released under Creative Commons, Attribution,
Share a Life, 3.0 License.
