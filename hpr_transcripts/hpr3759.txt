Episode: 3759
Title: HPR3759: Chatting with dnt.
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3759/hpr3759.mp3
Transcribed: 2025-10-25 05:04:37

---

This is Hacker Public Radio Episode 3759 for Thursday the 29th of December 2022.
Today's show is entitled Chatting with Deep.
It is hosted by some guy on the internet and is about 44 minutes long.
It carries a clean flag.
The summary is, small talk on spend free software.
Hello and welcome to another episode of Hacker Public Radio.
I'm some guy on the internet and I'm here speaking with...
DNT.
...and today we're just going to be chatting about a little bit of technology.
Let's start off with the Raspberry Pi.
DNT, have you heard anything lately on a Raspberry Pi?
I have heard lately that it's hard to find a Raspberry Pi,
but I think that's kind of always been the case, at least occasionally.
I've heard a lot about this big thing on a mastodon with moderation.
Some big controversy that happened there.
Oh yeah.
Yeah, the controversy there on a mastodon, that's a big one.
Let's segue into that one.
Let's start off with that part about it being hard to find.
It's been hard to find for all quite some time now,
except for the scammers or the scalpers online.
They've seemed to have a pretty healthy supply of them.
It's just consumers, the rest of us, the enthusiasts.
We seem to have trouble getting them.
What's up with scalpers?
How did they get the Raspberry Pi, then?
My guess is, from what they were saying,
is they're doing a lot of B2B type of work right now,
business to business versus business to consumer sales.
So some of the small businesses they're supplying,
and this is just a guess.
It's not like I got any paperwork to back this up.
Some of those small businesses are doing a couple of bulk loads
to people they know, and those people are running around online,
just selling them for outrageous prices.
The last price I saw for a Raspberry Pi 4 compute module
was $207, just for the compute module.
And that was on Amazon.
Yeah, that makes sense.
There must be this inventory
that they're getting their hands on, I guess.
So I've only ever had one.
I have, I think it's maybe like a model 3B or something
like that.
The one that doesn't have any USB 3 ports
doesn't have Gigabit Ethernet, I think.
I've got two of the three B.
They're the standard 3B that's in the same form factor
as the 4B, except the, I don't have the 3B plus,
so they don't have a Bluetooth and Wi-Fi on them.
But they're still good for things like if you wanna do DNS
or any, any Samba, anything like that,
where it's gonna be connected Ethernet-wise,
or just learning, because when I first bought them,
I was just using them to learn how to do anything with Linux.
I didn't have a spare computer to test stuff like SSH on.
I could plug that in and learn how to SSH into it.
I think it had like four Raspberry Pi 4s,
except one of them's dead now.
I'm pretty sure it's dead,
because it will not power on anymore.
I was running it as an X-Cloud server for quite some time,
and I noticed it was powered off,
couldn't get it to come back on.
Yeah, so are you looking for more Raspberry Pi's looks like
you're well-stocked with them already from what you just said?
Well, I used them for small projects,
and like say, for instance,
one that I was using on my network here,
that was doing my next cloud out.
So whenever I had to send files to someone,
rather than uploading the file to the email server,
and then trusting that file in the hands of say,
Google with Gmail, I would upload it to my next cloud,
send a link through email,
and that way the link can actually expire,
even if a bad actor got it,
the link can also be password protected.
So it gave me a little bit of security,
and the file was still on the device I own.
I got a little bit more control over that.
One of the things that helped me
in having multiple Raspberry Pi forwards is,
when I wanted to test out new things
that I wanted to deploy on my network,
I have an exact replica of the machine
I'm running in production, you know what I mean?
So I can do all the testing on another Raspberry Pi here,
just to see if I can get it all working.
Like when I wanted to get,
it's called bookstacks up and running alongside next cloud,
that failed miserably.
I don't know what I did wrong,
but it didn't work out.
And I'm glad I didn't try that on production.
I have a wonderful little test environment
that's exactly the same as production.
And the other ones,
they're doing things like,
they're the smaller ones, like the two gig,
that one's running a digital photo frame,
and the other one,
that one's running the land-based next cloud.
That's cool, that's fancy.
So you've got your production environment
in your test environment.
Yeah, after a while I stopped running
any kind of heavier applications,
like anything with server side stuff.
Yeah, now I mostly just have some Git repositories
and task warrior server and a couple other
very simple things like that.
So one thing that I use quite a lot for my stuff
is Git Annex.
It's something I definitely owe a show about.
There's been one show by Clat 2 about Git Annex,
but it was kind of a little bit superficial.
I could talk for a while about Git Annex, I guess.
Well, since you brought it up,
I mean, just give me like a 50,000 foot view
of Git Annex.
You're talking to a complete new
that's only heard the term here with you.
So I mean, just tell me a little bit about it while we're here.
So Git Annex is one of the various solutions
that exist storing larger binary files
in a Git repository and basically any file
that is not really interesting or useful
to have that change tracking that Git does.
So Git Annex is kind of a really sophisticated one
that because a lot of times the trade-off
for storing the larger file in Git
is that it's not actually version controlled usually
or at least like it is version controlled somewhat,
but the history is not actually kept
so you can't actually go back to an order commit
and get that larger file.
I believe Git LFS, which is Git large file storage.
I think that's the one that's supported by Git Hub.
That's not, it won't keep the older files, right?
Git Annex does.
And there's a lot of cool stuff about it.
The documentation is a little bit hard to get into.
It definitely takes a while for you
to understand some things about Git Annex.
It's kind of a weird thing,
but the main thing that I like about it,
the reason I use it is because you can basically have
the whole file structure, the folder structure
on your computer and you can,
but not have the actual files on your computer, right?
For example, I have one Git repository
where I have almost every project I have ever worked on.
When I was a freelancer doing video
or nowadays more kind of personal projects,
I have it all there and I can kind of browse it,
but I don't have the actual data, right?
Then there's a Git command, Git Annex Git
that will actually go SSH into my Raspberry Pi
and then download the file in the file
that's in your directory as a link to a,
as a sim link to a file that's in the dot Git directory.
And then that's where the actual data is, right?
And there's a bunch of other stuff about it,
but that's kind of the essential thing,
the reason I use it.
I kind of like that idea of having the folder structure
and being able to browse it to some extent
and then just download the file and I need to look at it.
So like, for example, if I remember vaguely
that I had a file and I remember what it was named,
I can do a find and find that file
and it can be a file that I saved to the repository
like 10 years ago and then I can just do Git Annex Git
and get it.
Okay, so now one of the things I'm wondering about
is with Git, I still haven't taken the time
to learn how to use Git,
but I know the purposes of get the versions control
for a mostly source code,
but I guess you can also use it for documentation
and other writing.
I don't understand why a binary would be up there
unless you wanted to release the binary to users.
I don't understand why you like the developer
would have the binary up there
when you're, I would assume you'd be building
from source a lot of time
unless you wanted to avoid building from source.
Yeah, you're definitely right about that.
There's generally no good reason to store a binary
in the Git repository.
Like sometimes a project will do it just for convenience
because they would, let's say you have a Git repository
that you need multiple people to download
and run something and then maybe there's a dependency
that is just very convenient to just have the built binary
in the repository itself.
So it's downloaded when you clone it,
but it's a little clunky,
there's no really good reason to do it.
Okay, all right, so I guess that helps clear it up a little bit
and you're still using it today for personal projects.
Yeah, so whenever I,
there are some projects that I would prefer to track it,
track them in their own Git repository,
but a lot of smaller stuff.
I'll just, at the end of it,
I'll just move the directory into my big Git NX repository.
Then I'll check everything into that
and I'll just do a commit and then I'll drop the file.
So then that way I'll have the file structure at Simlinx,
but the actual files that take up storage space
won't be on my computer anymore.
They'll just be in the Raspberry Pi from then on.
And the files as they're stored on the Raspberry Pi,
they're, they're GPG encrypted.
In the Raspberry Pi, they're just a huge directory
and the files are GPG encrypted and their name are like a,
it's like, you know, content addressed or,
or whatever you would call it,
so that the file name is in some way obscured as well.
Now when you use GPG to encrypt,
do you encrypt the directory or the files themselves?
Each file is encrypted.
This is done by the, the script by the Git NX application, I guess.
It's a, and by the way, it's a Haskell application.
So that can be kind of inconvenient sometimes
because it takes a, a Bob billion dependencies.
I don't know if that's very common for all of Haskell,
but seems like they always come with a lot of dependencies.
Speaking of Haskell, we're going to have to get the,
what's a user, one of the correspondence here at HBR
is that to Tor Tor, I believe the name, her name is.
To Tor Tor, yeah, they might have some thoughts
on what I just said about Haskell.
Yeah, I'm going to have to drag them in here, have a show down.
All right, so, so you're using your Raspberry Pi's
for development and sounds like a little bit of content
distribution right there.
And I'll be honest with you, that sounds like a fair way
to get malware.
Go ahead.
Also.
Well, I mean, if you're grabbing binaries of, of Git repositories,
I mean, at least with the source code out, you know,
you can kind of comb through it, see where there's an issue.
But if you're just grabbing binaries, and you're not exactly like,
say, for instance, if there's like four or five people,
I guess, managing one Git repository, what was it called?
It's not ransomware.
They called it protestware.
I think that's what it's called.
The whole protestware thing came about.
But that one guy created a program that looked for your location.
And if you were in Russia, it would delete all your files.
Yeah, I remember.
Yeah, but I mean, I don't, all these repositories were created
by me, right?
I don't share them with anyone.
I just have them.
I guess I use it mostly as backup, you know, whenever I need
to read, since I have so much of whatever I'm doing,
yeah, usually in a Git repository in some way,
then, for example, whenever I need to just trash my system
and reinstall it, the only thing I really need
is the SSH key and the GPG key.
And I can just get everything back again.
Ah, sweet.
OK, so I understand a little bit clearer now.
This is just all personal.
So you're just managing external storage like this.
Yeah, all just Git repositories that I created
and uploaded myself.
So are you are you booting through USB?
I'm hoping you're booting through USB
because that sounds like it'll be a nightmare
if you're booting from the SD card.
So the way I have it is the system is on an SD card,
but most of the data is in external hard drive.
But the thing is it's all USB 2.
So it is actually quite slow.
And that's one of the reasons I wish I could get a Raspberry Pi
4 so that I could have faster drives.
And then all those file transfers over the network
are much faster.
Yeah, for personal use, you can stomach it for a while,
but I imagine after some time it'll definitely start
to cause a bit of frustration.
I used to boot off on one of my Raspberry Pi 4s
I was booting off of an old laptop hard drive
because I mean, it was just lying around doing nothing
and those laptop hard drives, those like 5400 RPMs.
So yeah, sure, I got like a free terabyte lying around,
but boy was it slow.
I had our family next cloud running off of that for a little while.
And I got some, I got some looks about that.
So I went ahead and switched it on over to a one terabyte
Western digital blue drive.
Yay!
And that increased the performance substantially.
So what's the disadvantage of just having the system run
on the SD card?
SD card's going to have much lower read writing during it.
So you're going to, you're going to burn through SD cards
a lot faster depending on your usage.
With the SD card, we will go through it much faster
than you would since you're just the only one writing to it.
And from what it sounds like, you're normally just storing
until you're not actually running off of it.
With us, we're running, you know, next cloud,
which has the database and applications
and everything like that, constantly reading and writing.
Yeah, I think you're right.
That's what I used to have one of the first things I did
when I got this Raspberry Pi was next cloud.
And then, yeah, just the whole thing just seemed
kind of slow to me.
So I intentionally changed the ways of doing all that.
It's been a lot smoother and I almost never have to think
about it anymore.
The only other thing I think I have,
I installed one of those, like a calendar and contacts,
like a standalone, oh, it's called Radical, I guess,
is how you would pronounce it is like Radical
with an E at the end.
So it's just having web, I mean, CalDav and CardDav,
but not as part of your regular web server.
So I didn't have to have a full web server.
It runs just fine.
Yeah, that's pretty cool.
So that still gives you the functionality,
you're syncing everything up,
using just the front end on your desktop
and the back end would just be the Pi for the storage.
Yeah, but I think, I don't know,
I feel like that's kind of the least secure part there
because that's the only,
well, one of the only times where there's a data,
sensitive data stored in plain text on the Raspberry Pi.
Yeah, I was worried about that,
but by having them separated one on the LAN
and having my LAN separated into multiple different
subnets and everything, I worried less about it.
Now that one that was connected to the internet before it died,
yeah, that one's a different story.
I mean, lots of monitoring went on there
and I really didn't want to keep any files on it,
just mainly whatever I needed to send out.
I wanted to always have a next cloud instance ready for that.
And I mean, it worked and I got attacked a lot,
but I didn't see anything where somebody actually got through
a game route access or anything like that.
I was able to tighten it up pretty good
to where I banned anybody that tried to connect.
Yeah, I need to do a little bit of that,
just trying to check.
I don't, I've never seen any kind of activity like that
on my Raspberry Pi.
So, but maybe it's because I've never looked.
Yeah, how did you open it up to the internet?
Like you got any ports forward and out or anything?
Yeah, but very well, what do I have?
Yeah, I mean,
You just got the 22.
Yeah, I still have, well, no,
I changed it to something other than 22, right?
Yeah, that's the, I mean, I did.
I think that was on the, there's Arch Linux.
The Arch Wiki has a, I know how,
I know your opinions about Arch Linux, by the way,
but Arch Linux, their Wiki,
they had like a list of security recommendations
and one of them was that.
I think that's probably where I got that from,
but yet changing the default SSH port to something else.
And then I have a couple of others,
but none of the common ones like the,
because I don't actually have a web server
and running on that either, so.
Yeah, one of the reasons I didn't,
and this could be a misunderstanding of mine
is from what I was reading,
port between zero and 1000 require root.
Those are like system ports.
So if you go to a port beyond that,
it would not require root to access those ports.
And that's why I wanted to keep it at 22.
I could have changed it beyond 22
and then just managed it through the SSH config
and through documentation as well.
But the SSH config would just hold that information,
so I don't have to remember what the port is.
Yeah, and then you have those,
you have those other like fail to ban and all that.
So, yeah, I don't know, I think.
Yeah, I'd be interested in looking at this kind of information
about my Raspberry Pi here, whether anyone
has tried to log in or anything,
but I've never, at least just occasionally looking
at logs, I've never seen any kind of activity like that.
Yeah, I mean, it's not until they find out about it
that you start seeing a lot of crap going on.
And even then, I mean, it's usually the same type of attacks
that I'm trying to break in through SSH
or whatever services you have running,
they'll start to notice.
How would they find out about it?
My guess is they're just scanning.
Yeah, so I guess let's say if you know how they get
how they find out about how an attacker might find out
about your home server and might start trying to target you,
then record a show about it and let us all know.
Pretty sure it's going to be just a whole lot of scanning.
Like you probably have like IP ranges
and you just ping everything within the range
and whatever sends back a message is like, okay,
that's a device.
I'm assuming that target goes.
Yeah, then I guess they can go in and scan for open ports
and go from there, I don't know.
But yeah, I used to have a subdomain
of my actual personal website pointing to my home IP address
and then forwarded to that Raspberry Pi.
But I've changed that to a completely non-descript domain
that I got and that just links to that IP.
So, and you know, there are things like that.
Maybe you've heard of PageKite as well.
That's another thing I've thought about trying out
but haven't yet.
It's a kind of supposed to be like a more secure way
to expose your some parts of your home network
to the internet.
Now, I'd never heard of PageKite.
One of the things that got to me
from everything that I dug up is a lot of the tools
that I found, like, especially failed to band,
were built on top of the default Linux kernel firewall software.
So, like, IP tables.
And I figured if I just learned IP tables
or not enough about IP tables,
I could just implement all the features I want
with basically just banning everybody
that tried to log in except for myself.
Yeah, I think I've noticed that too.
It seems like a lot of the firewall applications
are kind of like wrappers around IP tables
because their commands are like a little more esoteric
or whatever, yeah.
Yeah.
And the only reason I wanted to do it
because I was bored at the time as well, too.
You bored and you got a couple of books lying around
and it's like, let me go ahead and get into something.
Which firewall application do you use now?
IP tables, but the desktop that I'm on,
I think this is running NF tables,
which is, I think some of the command structures are similar,
but I don't know enough about NF tables to even attempt it,
but on all my servers, I'm running older versions,
22, no, 2004 of Ubuntu,
so that way I can maintain IP tables on those,
but I'm eventually gonna update my knowledge
to cover NF tables.
So speaking of Ubuntu 2004,
I just went back home to Brazil for a couple of weeks
and I found a little CD base,
one of those that have multiple pockets
you can slip CDs into.
And I found in there some Ubuntu 1204,
and I think 1010 that were the first Ubuntu CDs
that somebody gave me the first Linux operating systems
I installed ever.
You gonna get brave and try to run them today?
No, I left it there, it's just a relic of the past now.
I think I saw someone maybe on a mastodon talking about
like having still having their first CD.
I remember at the time,
it was when I was living in the UK,
this French guy came in to work on something
at the hostel I worked at,
and then he was like a Linux geek,
and then he started telling me all about it,
and then he gave me a CD.
And I wasn't even gonna install it anywhere,
but he said, no, no, just keep it.
Maybe later you wanna try it.
That's something I never took part in.
I never got into the CD
because I came into it later.
2019 is when I got into Linux,
so it's been all Windows before then.
So I never experienced to see the CD world of Linux.
Yeah, I had kind of two phases, there was that,
and then I used Ubuntu for a while,
but then later when I started working as a video editor,
in the video industry you're supposed to use a Mac,
at least you were for a while,
and so then I bought a Mac with Pro,
and then I used it for several years.
Even happy with Linux so far?
Like, is there anything about it
that kind of makes you wanna go back to the Mac
or you're pretty good right now with Linux only?
No, it's good, it's definitely a lot more,
I mean, I think it's more user-friendly today
than it was back then,
and also I'm more savvy today than I would,
like, you know, I can back then,
I hardly ever even wanted to be on the terminal, right?
And that's not the case anymore,
but, and also a lot of the media applications
are much better than they were back then.
You know, now there's Crita and KDE and Live is better
than it used to be,
and it was usable back then, even,
but also I think the Mac operating system
is also in some ways worse than it used to be, I think.
Yeah, I think with Mac,
I think they just got a little lazy,
kinda lock everything down
and trickle out features every now and again,
like meaningless features.
What they do have that's great is that ecosystem,
once you're in ecosystem,
it's great, you can just survive there
with just everything that they have today,
with no new features for years,
and it'll still feel incredible.
However, if you're truly trying to get ahead
and you want to just draw out
every ounce of power your system has,
I cannot find anything better than Linux.
Yeah, the best thing about using a Mac,
for example, the reason I wish I could use one at work
for my work computer,
is that you can run, you know, Linux
or Unix-E applications on a Mac,
so not the case on Windows, you know.
I mean, don't get me wrong,
I use Windows for gaming,
but trying to do any kind of work on Windows
just so much frustration.
Yeah, it's been dreadful.
But also, I think I would say nowadays,
I understand and appreciate the free software part of it
a lot more, like a much more willing to use
an application that's maybe in some ways less convenient,
but more freedom-producing.
Same here.
One of the main things is I want to avoid the rug pull.
Yeah, and the funny thing is then observing,
as you start to have this kind of perspective,
we can clearly see when other people
just kind of then step onto this new other rug
that looks nice and they're like,
oh, this rug is a lot better than the rug I was just on
before, but then you're like,
well, yeah, you're still just waiting for someone
to pull that rug from under your feet.
Yeah, and each new rug they step on gets smaller and smaller.
So I mean, eventually, I don't know what they're gonna,
they're gonna be just standing barefooted
on the ground after a while.
I mean, think about it.
You can't even own your software these days.
It's all done through this software as a service crap.
So for those people that use Microsoft Word,
the Microsoft Office Suite,
miss one payment and you can lock that
of all your work, how you gonna get your work done?
You gotta, I guess use the web UI or something like that,
whereas if you just go ahead and donate a hundred books
over the library office,
I mean, if you can't pay it next year, that's cool.
You keep going and then you pay when you can.
Yeah, so I'm gonna say first in a minute,
we need to get back to the promise we made
at the beginning of the show that we were gonna talk about
the Raspberry Pi controversy as well.
But I want to say real quick,
there's this development that's happened recently
that it was this application called Figma
that's used for UX design usually,
and it was purchased by Adobe
and Figma is known for being kind of
one of the most advanced design applications
that can run on the browser and it can run very well,
right there have been technical articles about it,
about how they achieve this and all that.
So I think I feel like Adobe buying Figma
is a huge step in this continuing shift
that we've been seeing about running applications
in the cloud, you know.
I think Figma really is like a kind of a step up
where it's a really sophisticated application
and really complete that's running in the browser.
So yeah, I don't know, I think we're gonna see
more and more examples of this, unfortunately.
I agree, back to the pie.
Now, there were claims made by the Raspberry Pi Foundation
a while back that the Raspberry Pi 4
was a desktop replacement.
I don't know if you heard any of those.
Yeah, I remember that.
Have you ever had a chance to try the Raspberry Pi 4,
like just to actually get some work done on it?
No, I've never had one.
I have attempted this desktop replacement idea
that they had and let me tell you,
under the guise of an educational device,
I would offer them leniency on that statement,
but if you're just talking about somebody
creating a computer and it is just a consumer device,
you use it and they call it a desktop replacement
in a small form factor and it's the Raspberry Pi,
I would call it a crap device.
It is no, it is in no way a desktop replacement.
This is one of the things that bring my frustration
with the Raspberry Pi Foundation,
them lowering the availability of the device
to the community, yet serving so many businesses,
took them out of the educational realm
and put them square and just industrial
and other business, they're just out for profit now.
And they no longer get that leniency of,
okay, it's an educational device
that we tinkerers love to play with.
So then that makes a decent segue
for the master on controversy with the Raspberry Pi.
I think I wrote in the HPR's Matrix channel
that it's like an interesting situation
because then a lot of people,
it's like you got the Raspberry Pi that you like
for reasons A and then now there's this other reason
reason that you have for not liking them.
And then people are kind of struggling with that
and they kind of want, it's like you're challenging
your values a little bit
and then you have to decide what is more important to you.
But to be honest, I don't really remember
exactly what the controversy is,
which is really telling I think.
So do you, are you able to kind of recap a little bit?
Yeah, from what I was able to dig up,
the controversy, it started with a new hire,
a detective that was doing surveillance
with some police department or whatever.
He was using Raspberry Pi's and other devices right,
trying to surveil criminals.
The, I guess he left that area work
and went to the Raspberry Pi foundation.
Maybe he got burnt out or whatever, who knows?
But he went to the Raspberry Pi foundation
and some users were a little bit upset about that.
But they weren't upset directly
with the Raspberry Pi foundation.
They were upset about the hire of that guy.
Now, how the Raspberry Pi foundation responded
is where the issue came in.
They, there were a little tone death
and they began, you know, banning people
and I guess reacting in a way that was not what we'd expect
from an organization.
So it just poured gasoline on a very small fire.
They could have just ignored it
and they would have went away.
I mean, who cares?
They just hired some guy out there, you know?
Yeah, you're exactly right.
I think and they, yeah, they hire this guy
and then they post it, unmasked it on kind of a little bit
bragging about his background for whatever reason
and then some people complained
and then yeah, it could have just been left at that
and probably there would have been no big deal.
But yeah, I share your view
that the bigger problem was their response to it
and then it just showed.
But what was, there was also like a, you know,
they seemed to make a commitment
to not moderating things and then that would be a reason
for people to defederate their instances, that right?
Yeah, I heard a little bit about that.
That part I did not dig into
but I did see a couple of threats to space themselves
from the Raspberry Pi.
My biggest issue wasn't the higher itself,
but what the hire brings with it
because I don't, this guy from my understanding
is not a developer.
He didn't deploy the Pi in some new way
that's gonna allow them to bring wider adoption.
Instead, I believe he just has a lot of contacts.
He's like a networking hire.
You hire him because he's gonna put you in contact
with a bunch of other sales.
That's what I feel like his hire really was
because other than that, what else is he bringing to the table?
They talk about his years of experience.
That does nothing.
I mean, the enthusiast that built the Raspberry Pi brand
to up to where it is today
have done 10 times more with this guy's ever done.
You know, all he's done is drill a little hole in the lamp,
stuck a camera in it and connected it to a pie.
Probably follow the form he saw online.
That's nothing new.
So where did you get that view
from about it being a networking hire?
I just put it all together in my head.
I didn't find any information to support my beliefs on that.
I just thought of it and set it here today.
Okay.
Yeah, I didn't, yeah, I didn't think of that.
I guess I didn't really read much about it,
but I don't know, I thought the, yeah, people were,
yeah, I mean, I think people should be able to,
you know, whatever you think about the police,
people should be able to hire former police officers.
I don't think people who go into that career
should necessarily then have no other career options.
Think, you know, whatever anyone thinks about the police,
people are, you know, generally we should believe
that people can change.
So that shouldn't be a big deal.
I do not like those broad brush
where you just look at a group of people
or an industry or anything
and automatically classify the entire thing as bad.
Therefore, all of the good that has been done
is now, you know, tainted.
That is, that leads to things like racism
and other just parts of our culture that I want to avoid.
So whenever I see people take that radical perspective,
you just go all cops are bad.
No, I just can't support that.
Yeah, it seemed to me like that kind of thing
was maybe what drove the initial criticism of the post.
Yeah, I believe so.
I think for them to redeem themselves,
first of all, they're gonna have to do something
about this whole promise they've made to support businesses
and just leave their, I think they supported
the businesses 90, with 90% of the products that they have
and only allowed like 10% to go out to consumers
causing this, you know, just lopsided shift.
The scalpers have product, but the enthusiast
the people who are actually learning in the environment,
we don't have the products that we want
and we have no choice but to even consider
buying a $35 Raspberry Pi for $200.
You know what I mean?
It's just, it's nightmare, it's from crazy
to know that they would make such a decision
and stand by it for so long.
Yeah, and that's a bigger controversy really.
I didn't know that there had been
this intentional shift like that.
So the trouble too is that then it exposes us
to like counterfeits and stuff like that.
Yeah, it's a ton of it out there now,
but one of the good things I've seen from it,
I've been looking at some of the other
single board computers that's been coming out.
I believe what's the other one I think is called
like the rock chip or something like that
that they've been dropping some new SBCs.
I watch a YouTube channel called Prime Optimus Prime.
No, not Optimus Prime.
It's Prime something, but he does a lot of,
you know, small form factor gaming PCs and things
and he show off a lot of like game emulators
and things of that nature, the old NES,
Super NES and et cetera.
And he does a lot of it on the small single board computers.
He's been showing off some really good ones.
And I've also heard about the Pine Tab coming out.
I'm very interested in the Pine Welles, the Pine Tab 2.
I'm very interested in that
because the first one was only available
for what felt like five minutes
and then you couldn't get them anymore.
Is that a tablet?
Yeah, because Pine has been doing lots of work
to build their store with, you know,
they got the Pine Watch and the Pine Buds, the Pine Note.
And of course there was the Pine Book and the Pine Book Pro
with the Pine Phone.
So there's a lot of development around it.
So I'm hoping the documentation
and everything's also caught up.
I think the Pine Tab is gonna be a wonderful device.
I'd love to be able to carry a tablet around
and you know, just a small lightweight Linux device.
I'm not too crazy about it being armed
because the inconsistency with the different arm,
you know, architectures, it causes a small problem.
I heard about them creating like generic arm,
ISOs or images or whatever that can run on any arm CPU,
but I don't know how it's gonna work on these smaller devices.
Yeah, I don't know anything about that either.
How about risk five?
You did any studying or looking up on risk five?
Nope, don't know anything about that either.
I just know that it's, I do know that it's pronounced
risk five and not risk V.
So I'm there.
Yeah, I follow it a little bit
but because I'm not deep into that side of the community,
all I can do is kind of look on it
with question marks above my head,
but that's all I've got.
I know it's out there and there's a lot of enthusiasm about it.
I do hear a lot of speculation about it
though they talk about it being the divider
between what do you call it, AMD and Intel.
So you're gonna get a new freedom respecting platform
that's used in the future or that's the hope anyway.
Okay, so can you give us like a,
how did you say the 500 foot or meter view
of what risk five is?
Sure, I can give you one.
It'll be very poor, but I can definitely give it to you.
That's the one I want.
Yeah, so basically it's,
you got the two X86 systems that everybody knows
that's the Intel and the AMD.
Well, risk five is just a new player in the game
from understanding and there are no restrictions
on it at the moment, somewhat like arm,
but more freedom respecting right now.
There's, I mean, if you wanted to go power PC,
you could, but I mean, it's gonna put you back
in the same boat, you're locked into somebody else's platform,
but then there's also risk five, which is very open.
It's like the, I would compare it to in the encoder world
how you have the Nvidia encoders.
It was the new one AV one that's coming out now.
How AV one is like the freedom respecting one
that everybody wants now,
so that way you don't have to rely on Nvidia anymore.
I would kind of refer to like that.
That's what, that's what risk five is like AV one.
Yeah, okay.
Yeah, it's a similar thing to the,
you were talking about the codex there,
the image codex, right?
That some of them are not free,
which would be the reason Google created VPA
and then VP9 in response to AVC also known as H264
and then H265.
But yeah, I think I read a while back
that the reason Apple created its own architecture
was because of the licensing thing with,
because they didn't want to use ARM processor.
So okay, from what you said,
risk five is like an open kind of a definition
of an architecture of a processor architecture
and then so that then companies are able to build
processors that are compatible with each other, right?
So, but is there a company that has committed to using it
or is this one of those standards
that are gonna remain just a standard?
I think it's gonna be just a standard for a while
because there's a lot more development
that has to be done with it.
But it's moving from what I hear,
it's moving very quickly
and especially seeing more companies,
once you see more hardware appear,
I think that's a very big sign.
So when we saw PINE come out with that smaller ARM device,
I mean, that's telling me that this thing is much closer
than we think.
Now, I'm assuming that only major companies
are gonna have any actual usable devices for a while,
like you'll probably hear about some risk five servers
or something being deployed testing out,
but you won't find anything like on a desktop,
computer anytime soon.
Okay, that's cool.
So yeah, I would invite listeners who know more about risk five
about, for example, why a company would want to build
a processor following that standard
or what else we might be getting wrong about risk five,
we could use a show about that
because there's a lot of interest in this topic, I think, right?
Definitely, definitely, especially after hearing.
You know what?
You know what should definitely make you want to do a show?
After hearing me butcher that explanation,
you should definitely want to do a show.
Yeah, I think this is something that you and I could
specialize in, we just get together
and we just misconceive everything we can
for about 30 minutes and let people post their response shows.
I'll try to think of some topics that I know nothing about
and then we'll get on mom.
That sounds about right, just grab a handful of topics
and be like, okay, you know, I heard about it
and then I'll speculate on what I think it is.
Well, I love that.
Yeah, matter of fact, here's a good one as well.
You want to know how to convert your code
from X86 to ARM.
Okay, how do I do it?
At the top of your code, you just write ARM equals true.
Yeah, yeah, that makes sense.
That should work, right?
Then the computer will see it, read it and be like,
yeah, okay, ARM is true.
Yeah, the very first line, just like in a bash script,
how you tell the computer how to interpret the script,
yeah, you just write ARM equals true, right there
and you're good to go.
Sorry.
Yeah, see, that's why we need open standards
so you can just say ARM equals true
and everything is gonna be all right.
Yeah, it worked perfectly fine.
You can try it today on any code you have,
just go and get up, grab some Haskell or some Rust, whatever
and just write that in there and run it everywhere.
Now, if it doesn't work, I urge you to contact DNT.
He'll be able to assist you further with that
for I have no idea what to do after that.
Yeah, I'll send you right along to somewhere else
to see if you can find the answer
if this doesn't solve your problem.
We can send them to black kernel.
Yeah, I think that would be my first try.
Yeah, black kernel, he's an amazing developer.
He writes code in Rust so that obviously means
he knows more than anybody else
and he did a show telling Ken that he was wrong in math
and explained what was it about axioms
and all that other stuff.
Great show, listen to it and that's why you'll know
you have to go to black kernel.
Yeah, I agree, just go look up.
Just go look at go to Hacker Public Radio.
Or go to the full episode guide
and they should just do control F, black kernel
and check out some of those shows there.
There's some good stuff.
Another thing I know about him is that he really doesn't
like those terminal file managers.
He really hates them.
I'm some guy on the internet here with DNT.
And we're out of here.
Thank you for listening to Hacker Public Radio.
Goodbye.
You have been listening to Hacker Public Radio
that Hacker Public Radio does work.
Today's show was contributed by a HBR listening
like yourself.
If you ever thought of recording podcasts,
then click on our contribute link
to find out how easy it really is.
Hosting for HBR has been kindly provided by
and onsthost.com, the internet archive and our sings.net.
On the Sadois status, today's show is released
under Creative Commons Attribution 4.0
International License.
