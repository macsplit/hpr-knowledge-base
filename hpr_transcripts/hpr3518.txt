Episode: 3518
Title: HPR3518: Linux Inlaws S01E47: BigBlueButton and NAT
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3518/hpr3518.mp3
Transcribed: 2025-10-25 00:55:08

---

This is Haka Public Radio Episode 3518 for Wednesday the 26th of January 2022.
Today's show is entitled, Linux In-Law S0147, Big Blue Button and an 80 Undisput on the series,
Linux In-Law S0, it is hosted by Monochrome, and is about 55 minutes long, and carries an
explicit flag. The summary is, our two OAB discuss running conferencing systems like
Big Blue Button, Big Pine, and 80 Undisput on the series, and is about 55 minutes long.
This is Linux In-Law S, a podcast on topics around free and open source software,
an associated contraband, communism, the revolution in general, and whatever fences your
vehicle. Please note that this and other episodes may contain strong language, offensive humor,
and other certainly not politically correct language you have been warned.
Our parents insisted on this disclaimer. Happy Mom? Thus the content is not suitable for
consumption in the workplace, especially when played back in an open plan office or similar
environments, any minors under the age of 35 or any pets including fluffy little killer bunnies,
you trust the guide dog, a lesson speed, and QT Rexes or other associated dinosaurs.
This is Linux In-Law S0, season 1 episode 47, Big Blue Button behind in that.
Martin! Hello, I understand. Yes, not too bad, then yourself.
Not too bad, not too bad, yes. Perfect. How was IBM treating you? Now they
gave decided to join the Retro Company. IBM. Yes, they used to do punch cards, but that was
about a hundred years ago, maybe more. Oh, you were the IBM fan.
Martin, I may be an IBM fan, but I'm not that working for them yet.
Well, you might be when Redis just took it over by now.
You heard it here first, people. Full disclosure, full disclosure, I'm a Redis employee
Martin, it's not because he decided to effect long ago, but there is no sign of Redis being
involved by IBM or vice versa, I think. Probably, yes, indeed. But there you go, that's fine.
Yeah, interesting. Still, about to happen one day or another, they buy everything,
if it's not Microsoft. I mean, IBM or Redis? No, no, I'm the worst Microsoft,
and IBM, they buy anything that means Redis. There's still Google option of time.
Too many things. This is still this company called VMware, but I think they're more on the business
of selling things these days. Like PCs. They're the results of Tori, didn't they?
Did it what? They're sold salvatory. VMware. That's what, 20 years ago, 10 years ago?
Well, no, Redis is not that old, is it? I'm sure I remember the Redis is 10th birthday, man.
A couple years ago. Yeah. No, actually, it was last year. Was it last year? Okay. Sorry,
well, 12 years ago, because this episode will end 2022. If the plan is still wrong,
then you never know. Just might be because Biden is not in power and not this idiot Trump.
Kind of get worse, is it? Yeah, you're quite, you guess it's good as mine. Look at it this way,
they had Reagan for quite some time right and didn't go too bad. The wrong lens.
That country hasn't done a lot. Yes, indeed. Now, Martin, the topic for today is the dark magic,
oh, no, sorry, black magic, rather not dark, not just dark magic, but rather black magic,
of getting BBB behind to work a network address transversal set up translation. Sorry.
I believe so. Why don't you enlighten us about that? That was the first.
That is, it has been around for ages. It stems back to the time when IPv4 was in full swing,
and there was a shortage of, of publicly available internet IPv4 addresses. So the idea was
basically to accumulate a group. Let's put it this way. Devices in your home behind a router,
and then the router would take care of representing all of the devices in your home network,
by a single publicly visible IP address on the outside, and then mismagically translating
hence the term NAT, translating the incoming requests or data packets rather to the individual devices
where they came from. Say you open a website with your mobile phone. The mobile phone has an IP
address as issued by your Wi-Fi capable router. If you're at home indeed. Yes, I'm just talking about
domestic setup. Of course, with that IP address which is local to your Wi-Fi comes the so-called MAC
address. Medium access control. It's a layer to address that are uniquely identified as a device
on the planet. In contrast to IPv4, which has how many bits? 32, right?
No, 32. Yes, 4 octets, exactly. Max has, I think, 64, 128.
Yeah, they're six elements, but they are not octets, are they? No, exactly. I think they have 64 bits.
Wikipedia has probably the correct definition of things maybe in the show notes.
It's going to last. The point is that you don't have to worry about the
address base because there are enough bits in there. Essentially, the simplified version is
that a router based on the MAC address will do the 48. Thank you very much. We'll do the IP
translation for you in terms of as soon as you get an IPv4 address or IPv6, if you chose to do,
if you were an IPv4, actually, sorry. As soon as you get an IPv4 address,
you also or the router also make sure that he records the MAC address.
So as soon as you open web page on your mobile phone, the outgoing HTML
get request is of course encapsulated in a TCP packet. So the router then records that requests
and associates is with your MAC address. So once the answer comes back from the web server,
it can look up based on times and other magic, especially TCP sequence numbers. Let's put it
this way. It can associate the corresponding incoming packet with the MAC address and can
forward that to your mobile phone. This is how NAT works in a nutshell. So the bottom line
is that you can cascade essentially or that you can field a public IP address to many local
devices, which is the overall concept behind NAT. Very good. And now why is that a problem for
BBB as in for big blue button and friends? But maybe before we go into that level of detail,
what is BBB? A big blue button is a, let's call it an open source alternative to your
zooms, teams. Yeah, it's forever. Let's go to meeting that sort of thing. Yeah. It's quite
fully featured. Has many components. We use it for our recording right now. In fact,
yes, handy whiteboards. We have video calling if we wanted to use it by NAT. And you can
screen share presentations, use it for public purposes, whatever you like. It's
quite a nice piece. And yes, and the beauty about BBB, of course, it has only about 27,465
technologies incorporated. So it's quite set forward and not complex. This is the important thing
about BBB. Yes, yes, yes. But you'll be pleased to know that one of the main components of
BBB. It's not the other one around, yes. But I think this is optional, right? This is not mandatory.
Yeah, it's really for communication between the various components.
Other no-circuit databases can't be used. Mechanism? Yes, you can't be.
Yeah, no, true. So in terms of components, there is obviously the front end piece, there is the
audio video side, there's the media server, database for various authentication type.
You know, you have different users and access rights that you can have on BBB. So it's a fairly
flinched application with many, many, many features, and the plus side is actually it runs on a
host of operating systems, namely Ubuntu 1804, so 20 or four, the latest thing. No, no, there's no
amount of 20 or four. Wow, it's for ages. So no, no arch, no federa. When we first started using it,
which is three years ago, maybe?
That was probably 16 or four, right?
Yeah, that was 16 or four, which I'm still running, actually.
That's what, especially considering my last upgrades
of my main server, and I'm not touching that one,
make my life easier.
Yeah.
So where were we?
The challenges of running BBB behind a net,
and why is that difficult?
Well, I think, as you said, the main one of the main challenges
of BBB is the many, many, many components
because of its wide functionality, right?
So you have, let's just run through the whole setup a little bit.
Oh, OK, first of all, I think.
Full disclaimer, people, this episode will be cut.
We'll be only about five hours short,
because explain the full text that we'll be about roughly 10 hours.
Sorry, Mark, I didn't want to drop.
Yeah, I think we'll just focus on the main components sometimes
in the half way in the morning.
Yeah, main components.
So what were we talking about?
Yes.
So you have bits to do your media server, right?
So you have to have your, OK, obviously,
web RTC is used for audio and video, right?
As with everybody else, there is an option
to use different, actually, plug into Dining Capes.
It's quite extendable as well, which obviously we haven't done.
We're going back to the start, actually.
So I'm running this on a 16 or 4 VM still on my main server.
So OK, so very quick description on my setup.
I obviously have a router file all to that world.
Then I have my main server, and that pretty much runs
all of my things like mill servers, run sign apps,
runs BVP, and so on, various other bits and pieces
that needs to be accessible from the outside world.
OK.
So on a server, I run a VM running BVP.
So what's nice about this is that clearly you could run BVP
in the cloud, right?
If you want to, then obviously you're paying money.
Whereas, you know, for the same amount of money,
you may as well buy a cheap PC and run it yourself,
and have more fun setting it up as well,
in the first instance as we have found out.
But yeah, running a VM means that the VM will have
its own private IP address, its own firewall.
It's essentially presented as its own machine
on my private network, OK?
Which also means that I can redirect traffic
from my firewall to it directly, should I want to.
The alternative setup, obviously, is if you have,
I think in your case, you have, you're using
an edge next to the front of everything,
and then just redirect if I'm not mistaken, is that all right?
Well, I used to run it, yes.
But that configuration is longer gone.
OK.
Yeah, so that's the alternative, right?
It's just slightly easier setup, because you have one
central access point where everything comes in,
and you don't have to update your certificates
on many places, if you do that way.
But the advantage of doing it this way
means that I can redirect anything
from my firewalls straight to my VM.
OK.
So there is the, OK.
So Web Odyssey is clearly used for the communications piece,
which just means that you have to have a certain amount of port
redirects to your BVB server.
Fine, that's all straightforward.
But it really comes down to what's
presented to the outside world and where.
So for many communications that use WebRTC,
people use a turn server to bypass NAT.
And what's a turn server?
A turn server is really a way your client
connects to the turn server rather than straight
to your endpoint.
So it's an intermediate really.
So it's a discovery thing.
What's it stand for again?
Surely it must stand for something.
Traversal of something.
Yes.
Detasement being the show notes.
Yes, it's essentially a discovery component, like Bonjour.
In the Apple world.
Let me, yes.
Does that still exist?
Ask Apple, I don't know.
It came about with an ancient version of all effects.
Yes.
But I'm not sure.
But I think it's still around, yes.
Do you think I can anyway, doesn't matter?
Just remember seeing that like 10 years ago, anyway.
So Kotlin server basically is able to tell you
what devices you can reach behind set network.
Fences, gardens, wall garden walls, wall gardens,
whatever you want to call it, yes.
Now there is also a protocol called Stun.
Again, something that your turns here can provide.
Again, we'll have to look at what it stands for.
The T for Traversal, clearly.
Yeah.
So that's the Stun protocol that allows you to bypass
firewalls, et cetera.
Now with BVB, what you can do is, so actually,
so the turn piece takes care of the, let's say,
the negotiation, the comms for WebRTC, right?
Now what you can do is set up your own, which then
means making that property available
and exposing that piece to the outside world
and negotiating it that way.
Or you can use a probably the available turn server.
Like provided by the likes of Google, for example,
which makes life a lot easier.
So you don't have to run that as well.
So that's one of the things to consider.
By the way, the BVB documentation is pretty good on WebLite.
If everything works, when it doesn't stand,
yeah, you're kind of on your own a little bit.
Or for what of a big expression, you're fucked?
No, no, you need to result to more trust
that you're in-depth investigation how old stuff works.
Because there are so many components, right?
There is pre-switch, there is Q-renta for the media server.
There's all these pieces that we can put together.
Yeah, turn off office, by the way,
it turns stands for traverse, we're
using relays, we're on that.
And stun means session traverse with units.
So shouldn't, sorry, session traverse
with utilities for not.
Ah, thank you.
Yes.
Excellent.
I don't want to be without items.
Which is, by the way, on the side note,
a topic that they teach in schools these days.
Do they now?
Excellent.
We'll make them progress.
That's first of all.
I mean, the problem, of course, is that this
is of central importance for each and every person
that wants to host their OmbBB instance
behind their domestic routers and upright.
Because this is not, I mean,
that is the mode of operandi for many, if not all of them.
And let's say, running your own IPv6 connection
and for the whole routers.
So each and every time we set up an infrastructure like that,
you are facing these issues.
Yeah.
And yeah, with the WebRT, you want direct peer to peer
communication, which behind a net is not that straightforward.
So which is exactly why turn three of us are in place.
And I started out using my own turn three
because I think I used that for matrix to start with.
But it's an optional component, yes.
Yeah.
For the reference implementation called Synapse.
Or Synapse, or whatever it's called, these days.
And I'm in tune as well.
Well, I'm in front of it.
Yes.
So where were we?
Yeah.
So basically, the turn server is doing the forwarding way.
It's your intermediate done.
And do this for you.
Now, then we come to the bits and pieces that do the, say,
the voice conferencing piece, which we are using right now,
which is facilitated by a feature, which you could also
in theory plug it into VoiceRRP phone
things with extensions.
But obviously, we don't need to do that.
It all makes it hard to come up here.
But yeah, so when we go back to the pieces that we have.
So OK, let's go back to what we've got WebRTC to take
out of the audio video directly.
We've got free switch to do the WebRTC audio piece.
And we have Q and Fuddy, the camera side
or the video side, as well as the screen
sharing those kind of pieces.
OK, so you have a lot of different bits and pieces
that are running Earth's independent services
on your BVB instance, call it, sort of like that.
BVB does come with an actually, with a handy conf
utility, which checks certain things,
but sounding that doesn't catch everything.
So it's a start right.
If BVB complex something up, then clearly you
want to start with that.
But even if it says everything is happy,
you may still not have any audio, for example, things are.
OK, so WebRTC endpoints, in my case,
I use the Google turn server, because it's probably available.
It always works.
And it saves me from setting up a lot of things.
Then there are the, for free switch,
there's the IP versus that it presents the ISO world,
which are relevant.
So there are two different ones, which are the RTP, IP,
and the CIP IP, which would be, which in my case,
are the IP or my outside will IP address.
So that's what's presented and makes them accessible.
So whereas, for example, all these components
talk to each other, right?
So we have outside world talking to components of BVB,
but don't we also have components talking to each other
within BVB.
So we have free switch, we have Curento,
we have all these components that BVB runs.
And so you can't just like me say, every IP address
that all these services run are my outside of the address,
because that's then your, say, your free switch
is trying to talk to something then going first outside
and coming back in again to talk to an internal BVB component.
Specifically, if, you know, in my case,
I'm running this on a, on a VM, which has essentially
its own instance with all the BVB processes running,
then I would have to have also a route to the specific port
for that service open or redirected this route that way
from the outside world to the VM running the other components.
So whereas clearly you want components that clearly
talk inside the BVB instance to talk
over the internal IP address.
So this is really, the separation is fairly straightforward
in that way that anything that has to be presented
to the outside world, you use your public IP address
and for any internal communications you use your internal one.
Now I don't know how many people I want to try
to run the BVB behind or on the run server.
If for simplicity sake, the easiest thing to do
would be to use your hyperscaler and set it all up there
because it's very much simpler in that way.
But yeah, should you choose to do so?
But these are the things to bear in mind, sorry.
Please, yes, please bear in mind that some people choose
not to have a account or an account
rather at a hyperscaler, but have to get lying around
in the hours anyway.
And their mothers will basically reuse some of the kids
to run their own BVB instance rather than renting
a hyperscaler VM or VMs rather to provide that service for them.
Yeah.
Yeah, so no, I agree.
I guess that's why I did as well.
And I mean, I made life slightly more complicated
by running it within the VM in my,
because I only have one main server or terrestrial kind
of more client pieces.
First of all, you can present it as a separate machine
or your internal network then or you could go with your firewalls
so you can direct what you need to there.
Yes, Martin, for the people who don't know,
for the two people in the audience who do not know this,
Martin has the advantage of not having a life.
So he has plenty of time and there's a spousal
to try out various configurations until they work.
Plus Martin, and then you operate with it somewhere.
Plus Martin doesn't believe in disaster recovery
or high availability.
So he only insted into a couple of VMs
and driving this on a server, which is probably
the size of house and it's called a system B provision
for IBM.
Yes, well, I mean, Kelly, we don't have,
we only have one power supply and things like that.
So yeah, who needs a HA?
That's a bit complicated.
Exactly.
Because disaster recovery, business continuity
or all the rest of this crap concept
are just invented by marketing to make money.
Indeed.
No, this is what's ever.
If you were to properly, you'd set up, obviously,
mirror images in the US and in Japan and stuff
and that's it.
Give you global coverage, but why bother?
Indeed, indeed.
Once over on your desk.
That's about it, yes.
I hope your ISP keeps working and your power keeps working.
Preying apparently, I'm led to believe, does help.
Yeah, yeah, yeah.
So anyway, yeah, anyway, where were we?
Yeah, so I divine intervention, if not completely the same.
Yeah, so the big things to consider are the free switch
and the turn config here.
Those are two kind of what you call key components
that you need to get right.
I mean, as mentioned, the engine X before,
I could have done it differently and sort of engine X
right at the front and use engine X to redirect everything
but yeah, it's more fun to do it this way.
It's very good.
Do you have this behind the Latin crypt encoded H2B
proxy as a reverse proxy, no?
Yeah, so this is just a point, right?
So you could, OK, so because what I could do
is have one access point that all the external traffic
comes in behind my firewall router, right?
And then go from there, engine X will take care of all the outside
communication, making that secure.
However, as I mentioned, I've set it up so that the VM is directly
accessible as a standalone complete isolated BVV only VM
that is everything is rebooted to that instead.
So on my BVVM, I'm running another engine X, which
is using the same certificates as the others, which
need a certain amount of automation to keep them up to date.
But the hydrate comes to mind, never mind,
search bot and other fine piece software.
Well, I wouldn't go as far as calling search bot
and fine piece of software, but that's beside the point.
The hipsters, including myself, actually
used dehydrated these days for that level of optimization.
OK.
Yeah, I mean, the thing about search bot and things
are as you always have to have 480 open if you want to.
Right, obviously you can open it before you run it.
Yeah, because this is the thing about this sort of renewal
with the Western crypto.
Yes, but you see Martin, there's something called an IDS
or even an IPS, OK, which exactly basically put
behind that part 80.
So any script kitty trying his or her chances will immediately
run into facing a rat in reverse access
trojan, if done correctly.
And they only do this once or twice because after that,
their machine is yours.
Do I get stood up try this at home, we are trained professionals.
Do I sit here another episode?
It's all like that.
Maybe, Mr. Viser, maybe joke aside, you can do something
about this.
So yes, part 80 has to be open for me for the time
where you renew the search, either you put something
behind the test that magic or you just
open it for the duration of that certificate renewal.
Yep.
Yeah, the second one is my free adoption right now, since.
And this is only a couple of IP table commands in Linux,
or messing with your firewall.
Yeah, so I mean, you can do it two ways, right?
You can have your firewall open that port 80 and then
use your machine firewall to open and close as required.
Or you can automate your firewall port opening,
but the second, the first option is clearly easier.
Or you put something called snort on your open WRT
router, for example, yeah, you can't do this.
It's always an option.
If you have the software and hardware capable of doing so,
this is where open source comes into play, by the way.
What's the name of this project that has all the open source
versions of the routers of open WRT?
Yes, thank you.
You're welcome.
Formerly known as later, formerly known as open WRT.
Well, it's not all routers, but many of them.
Let's put it this way.
It's not a long list.
Yes.
And the beauty is basically you are presented with a somewhat
positive component user land, and the package list is quite comprehensive.
So fail to ban snort and all the rest of them are on that list.
And if not failing for some reason, you have a user, you have the usual
tool chain at your disposal.
So as a matter of fact, on my net gear, I'm running EMAX.
Because I can, because all EMAX needs is actually a C compiler.
And if you tell EMAX not to bother with crap like windowing systems, you actually have
a very small and efficient editor at your disposal.
Yeah.
And it's not that it's not the eye.
Well, why?
Why?
Any?
Because Martin, because why would you use anything else?
Anyway, because you had a recent comment about the discussion.
How bad they were.
Yes, because Martin, before we go into that question, let me answer yours.
Okay.
Because it's an editor and not a pain.
It's quite simple.
It's only the persistent people, though.
That's the fact that V.I. to their advantage.
Yeah, right.
Now it's a cold away piece.
Is it the old piece of the world?
Hey, people that came from, what was it, Ed before they had ever amazed and bowed
to you?
You see, in contrast to V.I. actually prop operating systems like EMAX come with a packaging
management with the package manager.
L.Pi comes to mind.
The I think is still like our future.
Yeah, Alpine.
Interesting.
Sorry, L.Pi.
Not L.Pi.
L.Pi is the things you're showing.
And L.Pi is actually an EMAX list packaging archive or something like this as a proper package
management system.
Okay.
Yeah, and Alpine, the front end part of BVB runs in a Docker container, which is running
on L.Pi.
Correct.
Hence the magic word container, hence the additional technology component in the stack.
A very demo Docker.
Indeed.
As is happens.
Yes.
And, if you run into an issue with not related to the BVB behind you.
If you do run into an issue with recently, with the UV and green switch saying that your
probably you only need is a docker pull of the docker container that runs
means which to update that because the
results are out of date, rather than your setup. So essentially that means
recreating the container because you're putting it on your image. Fine. Great.
Again, that was a bit of a pro tip. No, before you spend an hour looking at
why is my secret change? It happens. So you see people if you have if you have
too much time in your hands, maybe it's the way to go behind in that. Yeah. Yeah.
But apart from that, it's a great piece of software and it does many, many, many
things to do. Yeah, full of stosure we had. What's his name again? No, Douglas.
Somebody else. I'm going to cut this out anyway. We have a project manager.
Does it look like a doctor? No, no, no, no, that's something I think. No,
Fred, Fred something. Fred, Fred, Fred. Yes. We had Fred the project manager or
a programmer or whatever. It was his simulation. It's about on the show about
a year ago. It has been more than interesting. Let's put it this way.
At full disclosure, jokes aside, we still use BBB as our mind, as our mind be
equal to record this podcast and never mind what Martin or myself say for
credits the project. It's a great piece of software. Never mind Martin's
legging adopted by many government organizations. Yes, like the NSA, like the CIA was
called GHQ or something. Great Britain. Hold, hold, Billings looking after this.
Exactly. And you don't have to worry about the backup, exactly. Sorry.
Contresist. Yeah. Anyway, jokes aside, no, it's still made
pieces of, especially considering the alternatives, the only pet gripe that I
have with it, basically, there was a project about a year ago, where five
people among me among, it'd be being one of them trying to contain us
properly. And we just failed. Yeah. And suffice it to say, these weren't
rookies. And that tells you something about the complexity of the implementation
stack that is behind this project. It's not for the faint heart.
And if you want a minute, it's also the fact that it was running on
16 or four until very recently, then I'm running on 18 or four, which is
well, that was the whole purpose behind this containerization project.
Yeah, because some because all you would need is actually, if you would
have succeeded, was actually a platform capable of running a container
manager like Docker. Yeah, that would make perfect sense.
I think that pull is probably still open. You mean the 20 we opened
about these issues? Never much. Yeah, I think there weren't. I don't
think that there were actually a pull requests about the about the
condensation about the condensation project, because all we managed
is to find issues and quite a few of them. Okay. Well, that
probably interest by now. I'm sure time for another. Yes,
fact, the hint that the fact that this may be available in other
distros, but he'd left the year open. He only said March or something.
Did he? Oh, maybe I'm mistaken. I don't know. A while ago,
this recording. Yes. Okay. In conclusion, Martin,
what do you think were the biggest challenge? Challenges apart
from the certificate renewal? I'm joking.
I think there's a pain. Yes.
Now, big changes are really, yeah, you can't rely on the
with a single piece of software that is kind of not consisting of
many, many pieces you install it. You can figure really runs
right, whereas there are so many moving parts with BUB that you
have to understand how each piece works if you're trying to
more than been a just blindly following the instructions, you
have to get to the bottom of why things are the way they are
suggested. And then
yeah, so that's kind of where I started. So I spent a few
evenings just trying to work out what all these bits and pieces
did. And again, just working at which pieces were working.
But also, I mean, you know, my setup is not the easiest to be
by interior. Well, so the reason for my setup is that one I like
it, but two, it's interior should all be straightforward. But
when you start introducing a complex piece of that, then it is
no longer straightforward. So yeah, but wait, did you come across
any any good tutorials or are there a commentation that make
that maybe easier to set this up? There are a few bits and pieces
on things like free switch and WebRTC, which you know, I mean,
clearly with your background, you don't need that, but if you
don't know the basics of WebRTC architecture and how it does
things and what it turns to or does and all these kind of things
random, those are the things that you then need to understand
in more detail. So essentially, yes, you have the architecture
or the views, the documentation is really good in that way.
It's a just fragile components, well, what they do, well, they
have a paragraph on each. So yeah, then you have to rather
than going through the instructions and say, we need to open
port so and so when you need to set this value to that, you need
to understand why these things are being done that way. And if
that applies to your situation, which is then means that you
have to understand what free switch does and what WebRTC does
and what it turns to or does and things like that. So, well,
you mean, it's all good learning, really, if you're interested
in these kind of things, I would suggest. So if your objective is
to run it, then yeah, but if you're interested in learning
these kind of things, then it's it's a good mechanism to learn
it because in a way, you have to you haven't got a choice, but
you know, understand it. But you set it up, but you set it up
on your own VM, right? Mm-hmm. Are there any pre-configured
distros running BBB? Do you know? Like OpenElec frags out of
Fakolio's template list in the absence of any working
containerization of the project? I don't know, actually,
interesting question. No, so I just set up a blank 604
install and configure BBB from scratch on that. I mean, in
furnace, when I did the same about one and a half years ago,
the set up script was awesome. Basically, it took a look at
at the at the existing configuration of the 604 it was
running on and put down all the packets required set up the set
up the Docker instance, put down the images, create the
containers, all the rest of it. It's a it took about 20
minutes on a quad core instance on the virtualize quad core
core instance, but it basically, it's down to the level of
you just tell me where certificate is or what or what your
lets encrypt account is and I'll do the rest for you. It's
quite amazing. Yeah, great thing. And as I said, you know,
the conscript which you're talking about, it also has the check
options is how many options to go through your configuration.
So it's yeah, they've tried to make it very user-friendly. In
my case, it wasn't enough to get it set up completely. But in
many cases, it probably will if you have a as I mentioned, if
you have a single machine that's where you have, you know, your
hyperscale instance, for example, then I'm sure you wouldn't
have to do much talk to this one, the install script and open a
few ports and you open money. Exactly. I mean, as long as you
stick to a standard, whatever the day is installation, you're
kind of, you're off to the races, at least that was my impression
basically when I sold on the VMA, as I said about one and a half
years ago, I tried something similar to you before I did this
because the lock isn't the unique to the loop. And I was doing
that for it, basically had a similar step to yours where the
seven instance were behind a somewhat, let's put it this way
complex firewall configuration. And that was similar to you
and that was a nightmare. So I said, screw that, I'm going to go
my, I'm going to, I'm going to hire a VM by myself. So I
put it up to money, but they didn't have any not or firewalls
restrictions. And that pretty much worked out of the box for
about at least almost a year. Yeah, I can imagine. Yeah, it's
it's it's yeah, if your only objective is to get something up
and running, all could be, but not been running as a, you know,
a piece of it to use, then, and you don't mind spending a few
euros a month on a instance, then that's where to go.
If you want to take things apart and put them together, then
yeah, I mean, that quad coincidence cost me about seven, eight
euros a month. And we only use it for a year. So I was, I was
quite happy. But in contrast to that, the research project
associated with the former approach, didn't really check out
because at that time, for a number of reasons, I didn't have
the band with us at my disposal. Hence, this is it, right?
Yeah, hence this notion of getting this properly in into
containers about a year ago, which we obviously failed with.
Yeah, it's a shame. But maybe this has changed. And if you know
about a proper solution to this, please get in touch, the email
addresses feedback and links in also to you, because if you manage
to put this into containers, we will have you on the show. And
that's not threat. That's a promise. Because I know quite a few
people who are eagerly looking forward to that thing working.
Yeah, there we go. Any, any passing remarks, any fine remarks
rather, sorry, well, I think maybe since it's more than a year,
the Frankfurt log should have a second attempt.
Where do you see the beauty is that we are now back to the
7G approach. If you think 5G is modern, you act just 2G and
you arrive at 7G. And that's exactly what we're looking at.
Okay, so we are back to physical meetings. I'm having to report
at least for the remainder of the year, come, come November.
Yes. So no virtual nonsense required. I hope this is true.
Yeah, excellent. Where is the next meeting? We're currently
working on this, probably back in the old haunt.
All right, there we go. So anybody wants to join the Frankfurt
log?
Yes, details will be in the show. No, it's not. Anyway, no, hard as
in as in gathering place.
Yeah, and the, oh, yes, we just love it. Since we don't have any
feedback, apart from the usual one that Martin's during the last
episode that Martin's voice was quite low. But then I'm almost
tempted to add that he's married. But we won't go down that
anyway, poxies. Yeah, as it picks off the week. Yes, you mentioned
the movie the other day. It is cold. Our low or power
details, maybe in the show.
What is it about Martin?
It's really about alternate realities and a bunch of people are
able to find a way to travel to these alternate realities and
also bring things back from them because times move, times
move differently in these alternate realities and things have
developed differently. So as we all know from the theory, in
alternate timelines, things not may not have developed the same
way as they have in the one you're in right now.
Like Philip K. Dick's novel called Vulcan Hammer or whatever,
that's quite well. It was called a Vulcan. No, I think it was
Vulcan Hammer where he described a post where two Europe were
actually the Nazis would have won.
That's one thing. Yes, yes, yes, yes. Yeah, that's that's an
example, right? Yeah. Yeah.
Okay, of a of an alternate. Yeah, or a great Britain, deserving
that name now, when when when Megatech are really fake with the
guards, the word miners.
Well, I know, I know.
Okay, back to the week. There is also I also watched the the
Maggie Hatcher movie. Iron fist.
Iron Navy. Sorry.
I think that's kind of movies are not for our audience.
I think that kind of movie.
Well, I don't know. You mentioned it, not me.
I said, Iron Fist. I didn't say Fisting Martin. There is a
difference. See, in case I get confused, I'm not confused.
Which is good. Yeah, but yeah, so this is really about the
Falklands, which was quite interesting, really, about the
background story to that. I see there they are. So anyway,
that's two two two boxes for you. What's your box? My box of
the week is also movie called the ice rote flick. I think we
used in 2021 with the guy called Liam Neeson, one of his
better words recently.
Exactly. One of the better ones recently, it's about a
parody. It's a ripoff of a movie called sorcerers back
back to 27 to 77 sorcerers deals with the necessity of a
group of people having to haul a somewhat unstable pack of
dynamite across a couple of hundred miles. The ice is somewhat
similar. There is a mining incident, I think, in Canada and
some people in Dakota or that or that whereabouts are asked to
haul a piece of drilling equipment across icy roads, which
essentially are frozen lakes. The movie, in contrast to what
you will read on IMDB and similar places, is actually quite
good. I think the IMDB rated at 5.10, I would sort of give it
a 7 if not more. Because the acting is good, the action is
quite superb for such a low-budget movie. Leeson manages to
portray his character quite well. I'm tempted to add, a plus
the fact there is a rather twisted turn of events suffice it to
say that is not quite visible from the outset. So, say
tune, as I said, I would at least give it a 7 in IMDB terms.
And that's my box of the week. Good stuff. So, don't forget the
Halloween episode. That's only that's a few. Don't use to
forget to whatever. Stay tuned for the 2022 Halloween episode.
And the 2020 Christmas panel. Exactly. To arrive in a few
months time and a podcast outside of your favorite choosing.
But that's what I said there to say, of course, full
friends have to go to have a public radio. Can we see, we
will stay with you as in the platform of our releasing
choice for the foreseeable future. And thank you for good work.
And look more forward to the next episode, I suppose.
This is the Linux in-laws. You come for the knowledge.
But stay for the madness. Thank you for listening.
This podcast is licensed under the latest version of the creative
commons license. Tap attribution share like. Credits for the
entry music go to bluesy roosters for the song Salute Margot
to twin flames for their peace call the flow used for the
second intros. And finally to the lesser ground for the
songs we just is used by the dark side. You find these and
other ditties license under creative commons at
Germando. The website dedicated to liberate the
music industry from choking corporate legislation and
other crap concepts.
You've been listening to Hacker Public Radio at HackerPublicRadio.org.
Today's show was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast then click on our
contributing to find out how easy it really is.
Hosting for HBR is kindly provided by an honesthost.com.
The internet archive and our sync.net. Unless otherwise stated,
today's show is released under a creative commons
attribution share like 3.0 license.
