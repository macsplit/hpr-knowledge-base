Episode: 2794
Title: HPR2794: Interview with Martin Wimpress
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2794/hpr2794.mp3
Transcribed: 2025-10-19 16:56:16

---

This is HBR episode 2007-194 entitled Interview with Martin Wimpress and is part of the series
Interview.
It is hosted by Anik and is about 40 minutes long and carries a clean flag.
The summary is in this episode, Anik talks with Martin Wimpress about the Ubuntu Mate project.
This episode of HBR is brought to you by archive.org.
Support universal access to all knowledge by heading over to archive.org forward slash donate.
Hello and welcome to Hacker Public Radio.
My name is Anik and I'm the French guy from Switzerland.
And in this episode, we're going to talk about Ubuntu Mate and Ubuntu Mate for the Raspberry Pi with Martin Wimpress.
Let's go.
Ubuntu Mate, two words which taken separately refer to great products.
On one side, Ubuntu, one of the most popular, if not the most popular, Linux distribution.
On the other side, the Mate desktop environment, also a very popular product.
One person took those two elements and combined them together to make Ubuntu Mate.
That person is Martin Wimpress and he is joining me tonight for this episode.
Good evening Martin, how are you?
Good evening and I come very well, how are you?
I'm fine, I'm fine, I'm a bit stressed because I first interior you in English but this is going to be great.
It's better that it's an English than French, I think.
I suggest maybe you could introduce yourself to the three person on the internet who don't know you already.
Sure, so yes, you now know my name.
I started the Ubuntu Mate project about five years ago and since then I was hired by Canonical.
So I joined the Ubuntu desktop team, I worked on the Ubuntu desktop team for a while and have subsequently joined the Snapdragon team at Canonical.
So those are sort of my passion projects being Ubuntu Mate.
That's not something I work on at work.
It's still my part-time hobby project and then at work I work on Ubuntu and Snapdragon.
I believe you contributed to other open-source projects too?
Yes, over the years I've been involved in lots of different projects.
So one of the early distributions I was involved in was Crux Linux.
I was a package maintainer there.
I was involved in the Ubuntu community for many years on the periphery, not a core contributor or anything but fiddling around with things and doing my bit.
Then I moved away from Ubuntu and I was involved in Arch Linux for several years.
It was during that time that I got involved in the Mate desktop and I've been involved in that project for about five or six years now.
Then when Ubuntu Mate started to become a thing, I then focused back around the Ubuntu community and more so Debbie and so I do a lot of the package maintaining for Mate and Debbie in as well now.
Then all sorts of drive-by commits that I've had my hand in in various projects that have interested me over the years.
Yes, very busy man.
You forgot also that you're a host of the Ubuntu podcast.
Yes, we're on our season break at the moment so it's a little bit at the back of my mind.
We just had our first ever listener feedback, listener meet-up last weekend.
There's a room going around that the Ubuntu podcast may well be back for a 12th season soon.
I absolutely love your podcast.
Thank you very much.
Right, let's talk about Ubuntu Mate because it's the subject for this episode.
What made you want to start Ubuntu Mate?
I mean, can people just take Ubuntu and snap Mate on top of that and there we go.
If only it was that easy.
As I said, I was involved in the Arch Linux community and was maintaining packages for Mate desktop in Arch Linux and in fact took the packages from the original Mate founder within Arch and tidied them up and got them in a supportable state.
I was doing that because my family were running at that time, Arch Linux and Mate.
The reason for that is a long story but basically my close family members who I had moved to Linux some years previous were quite happy with the GNOME 2 desktop paradigm.
I really didn't want to change to the contemporary systems that we were seeing with Unity at the time and GNOME 3.
So I moved them on to Mate because I had heard about this project and that was how I got involved in Mate because I was getting my family to run it and I needed to improve some packages and what have you.
But the reason that Ubuntu Mate came about is because I was interviewed on the Ubuntu podcast before I was a host about Mate.
Following that Alan Pope created the first ever Ubuntu Mate spin and he did precisely what you said he took Ubuntu and remastered the ISO by yanking out Unity and grafting Mate on top of it and sent me a link to this ISO in an email.
I think the subject was just ha!
And that very first version was called Matey, I seem to remember.
I'm following that sort of got my interest because my family weren't really jiving with Arch Linux.
That's a difficult thing to support for people that are not like super Linux litter up from afar.
So that really wasn't working out and I was thinking yeah they'd used Ubuntu previously and Ubuntu with Mate might be a thing for them.
So I met Alan for the first time in years in his kitchen. We both took the day off work and I went over to his house and we had a one day sprint at his house where we basically came up with the objectives of what Ubuntu Mate would be and how we bootstrapped this thing.
And then at one point in the conversation he said somebody and that would be you needs to drive this and that was where it all started.
I knew the part about the kitchen, but the whole story is really interesting because I always wondered why someone would start a project like that.
Starting that for your family is a really good reason I think.
How difficult was that? Once the project got started after you met with Alan, how difficult and time consuming was it to manage such a project like that?
The initial bootstrapping was probably one of the busiest periods in Ubuntu Mate's history and certainly the point at which there were most people involved when you start a new flavor of Ubuntu, lots of people flock around it and help you stand it up very quickly.
So there was loads of people providing fixes for themes, custom themes, plimuth, splash screens and all of that and that was all wonderful.
But because it wasn't an official project and I was trying to build it as close to how the Ubuntu infrastructure would, I had to sort of recreate all of that live build stuff.
And that was a massive waste of time because I was having to figure that out and tickle that along and it really only served a purpose of proving that I could make this thing.
And once we did become an official project, we were able to just throw all that away because we then get all of the infrastructure for free.
So the first six to nine months was a bit torturous because actually defining what packages create Ubuntu Mate was relatively easy.
Getting it in as an official project was a bit more demanding because you have to demonstrate that you are capable of maintaining the packages that you want to own within Debian and Ubuntu.
So I actually flew out to Germany, I was sponsored to fly out to Germany to meet the Debian developer who maintained Mate and over the course of that weekend, we figured out how we would be able to do the Mate packaging between us so that it suited Debian's needs and Ubuntu Mate's needs.
And that was great because I really felt like I'd got a purpose then and it was the first time in a long time I'd felt really involved in a project and I thoroughly enjoyed that.
And creating those initial versions was fine, you know, if all you want to do is stick a desktop on top of Ubuntu and you know how the bits fit together, it's quite easy.
What gets more difficult if you decide you have a vision for how things should be and you start creating a bespoke tools and software and then you get into protracted software development projects.
Yeah, yeah, I had no idea that you had to basically build everything yourself then.
Did you have, I mean, a farmer of computers or how did you do that?
So the tools exist, there are a number of tools that you can use to build an ISO image as though the Ubuntu infrastructure created it and live build is a central component of that.
And how I actually did it was I used ephemeral instances or digital ocean and I would just fire up a digital ocean droplet and fire my build job at it and it would spit out an ISO which I download and then destroy the instance.
So I think I had one of these $10 credit things and I managed to make that last for three months by just firing up these things long enough to, you know, cheer out an ISO and deposit it somewhere and then kill themselves.
So you were saying that you had a lot of help in the beginning of the project.
Yes.
How long did it take for a community to form around the Ubuntu matter and by that I mean not only the people who help you in the beginning but people who are really involved who start and creating pull requests and stay in the team.
So actually the initial community sort of stood itself up around Ubuntu and I take quite organically, you know, I created things like a Google plus community group and Twitter account and we had IRC channels.
And in the early days pretty much all of the community engagement was in the Google plus community group and on IRC.
And there was lots of interest because it was a new flavor and there were loads of people involved and it was really vibrant.
And then after about six months, I was repeatedly seeing within the community that there were some people that weren't choosing not to engage because they didn't want to be on one of the social networks.
We had a Facebook page and a Google community and Twitter and there were people that just what didn't want to do that.
So we started a Patreon purely to stand to get enough monthly income to run a discourse server which has quite beefy requirements.
And certainly five years ago that was, you know, a bit more expensive to host.
And I think we needed like $150 a month or something to do this.
Anyway, we breezed past that fairly quickly and, you know, the Ubuntu community really lives still on that discourse server, Ubuntu Marta, Documentty.
So did the community grow since that time or is it just staying steady?
So the community of users has definitely grown. I'm privileged that I have sight of some metrics through work and I'm able to sort of gauge how popular Ubuntu Marta is.
And whilst it's still a fraction of a fraction of a rounding error in terms of active users compared to Ubuntu, it's among the more popular desktop Linux distributions, which is pleasing and quite surprising.
So in terms of users, very healthy. I think this happens with a lot of projects when they get to a point of maturity, two things happen.
The hype dies down. People are looking for the next new hot thing and they want to, you know, the distro hoppers want to go and gravitate to that and get all excited about that.
But then also as your project matures and it stabilizes and you've worked out your features, there's not as many exciting changes.
So you tend to find that people are just comfortable using it and they don't feel the same urgency in sort of working on it and fixing it.
There's a group of about a dozen people who still regularly contribute to Ubuntu Marta in some meaningful way, either through development or packaging or QA or moderating the forums and things like that.
So there's about a dozen people that are active within actually maintaining the project.
You said that the project is really popular. Did you expect Ubuntu Marta to become such a popular distro?
No. I mean, I didn't know what to expect in the early days. I can remember when the Google Plus group hit 300 users and I was absolutely over the moon.
Now, when a Google Plus is just about to shut down and I think we're just about to breed, well, we would have breached 9,000 members on that group and then the community itself has got thousands of users in it as well.
We have a very healthy number of users. And I was surprised by that. And until recently, I wasn't able to know exactly how many people were running Ubuntu Marta actively.
So I had to guess in the past, you know, based on download statistics, which turns out a wildly inaccurate.
There are way more people downloading these ISO images that are actually installing it and sticking with the drop off rate is astonishingly high.
So back in the day, I thought there were way more people using it. And I used to think about visualizing the people using Ubuntu Marta in numbers of stadiums, you know, a football stadiums of people.
And when you think about it in that regard, it's quite, it's pleasing and scary and equal measure when you think, you know, there are tens and hundreds of thousands of people, you know, using this thing that you've made in your spare time,
principally to, you know, keep your family running Linux.
Yeah, but yeah, I mean, it's probably also a great feeling to know that what you're doing is actually good and useful.
Yeah. Right. Let's talk about the Raspberry Pi version.
Actually, how many platforms do you support with Ubuntu Marta? Except, I mean, does the PC need a Raspberry Pi? Is there any?
Yeah. So technically on 16.04, we also support PowerPC, but that is now a deprecated architecture within the Ubuntu project.
Certain 16.04 for Ubuntu Marta is only going to be supported for another month. So at one point, we did support both Intel architectures, the Raspberry Pi and PowerPC.
Now, if you, if you download 1810, it's just AMD 64 images, we're working on new images for the Raspberry Pi right now.
And then we've done a couple of side projects with GPD. So we've got the spoke images for a couple of their devices. And we've got quite a good relationship with them now. And I see that continuing on into the future.
Cool. So Ubuntu Marta is spreading to some platforms.
Yeah. And when, when we completed the 1804 image, I did say that, you know, I was most interested in trying to bring Ubuntu Marta to other devices.
So we're refreshing for the Raspberry Pi. Now, we've got done two GPD images for the GPD pocket and the GPD pocket two.
I'm currently working on a micro PC from them, but that's going to be a longer burn. There's some kernel work that needs doing there.
And thankfully, hands to go from Red Hat. It's actually assisting with that, which is really good because he's a very talented developer.
And then there's some other GPD devices. And I've recently been in touch with the guys at the Pine Book to work on the Pine Book and the Pine Book Pro.
Is it the Pine Book 64? I forget what the branding is, but the two laptop-style devices that they have.
Yeah, so lots of work ahead of you.
Yeah.
You're not going to get bored.
How difficult is it to build Ubuntu Mate for the Raspberry Pi?
I mean, not necessarily the technical build, but the finding bugs and fixing bugs.
Because I mean, on a big PC, you've got a fast machine, lots of tools, and you can use to do the development.
But on Raspberry Pi, it's a slower machine. You don't necessarily have lots of space on the SD card.
And it's a bit fragile, so how difficult is it?
So the first thing I do is I use my main Intel workstation to do all of the development work.
So I use containers, system D and spawn containers that I bootstrap an ARM operating system inside and then use QMU user static to do the processor emulation inside those containers.
So on my Intel box with got gobs of RAM and very fast CPUs and very fast disks, I'm able to create those images and test them.
And so I can build those images relatively quickly.
I think when it probably takes half an hour to start from nothing and actually stand up the entire container, build Ubuntu Mate inside it with all of my tweaks and configurations, and create an image that I can then flash on an SD card or a USB stick, and then go and test in an actual Raspberry Pi.
So that development workflow is quite fast.
Where it takes more time, you know, the basic operating system and Ubuntu Mate and the Mate desktop, that's all in the archive that all works just fine.
I have no additional work to do there. I get those architectures for free because of the, you know, the architecture support that exists within Ubuntu.
The time that it takes is supporting the hardware specific features of the Raspberry Pi. For example, the way that their Bluetooth is enabled, the way that the video core chip works and the way that hardware accelerated video playback works.
All of those things, those take way longer to to get right.
As does things like tweaking the memory, the tuning the memory performance so that, you know, in one gig of RAM, you can get a reasonably usable, you know, desktop experience.
Do you use the Ubuntu to build infrastructure to rebuild the whole thing?
Not at the moment now. So what I do at the moment is I've created my own scripts, which build the images for Ubuntu Mate for the Raspberry Pi.
So although I'm now able to use a lot of the work that my colleagues have done in the foundations team with the improvements that they've done for supporting the Pi on Ubuntu generally.
I'm not using live build. I've got my own build environment and I will be transitioning everything over to live building the future probably for the 20 or 4 release.
But at the moment, I have my own environment that builds the images. So you can think of the Ubuntu and Mate images for the Raspberry Pi as community supported.
They're not like official Ubuntu products.
Okay. Who is your target audience for Ubuntu Mate and the Raspberry Pi?
Okay. Well, when I made the images for 16.04, I was trying to compete with Rasbian at the time.
And I think at the back of my mind, I was trying to do a better job than Rasbian was doing to bring something to, you know, the desktop on the Pi.
Now, since then, Rasbian has improved considerably and it's actually really decent. And, you know, there's a lot of reasons why people would just stick with it.
So this time around for 18.04, I'm not trying to compete with Rasbian at all.
I'm really delivering the same Ubuntu Mate experience you get on the PC, on the Raspberry Pi, with the appropriate accelerations and exploitation of the hardware that we can deliver.
So things like VLC is fully hardware accelerated and FFM Peg is fully hardware accelerated.
And there is some frame buffer improvement for, you know, the graphics stack and you've got the experimental video core frame buffer as well.
But really, it's for people that just want to, you know, run an Ubuntu desktop on the Raspberry Pi.
It's a way to do that because you're going to struggle to run things like proper Ubuntu with the GNOME desktop.
And also, if you're a developer and you've got projects that you're working on for multiple architectures and you want a way to test your application on, you know, 32-bit ARM and 64-bit ARM.
With Ubuntu Mate 1804 for the Raspberry Pi, we're going to have images for 32-bit and 64-bit.
So it's a ubiquitous platform, it's a way for developers and tinkerers to actually test their projects on both architectures in a comfortable and familiar desktop environment that is optimized for the Raspberry Pi.
Okay, so if I understand correctly, it could be used as a first computer, for example, for children or kids because it's basically a $30 computer with the same desktop as the parents may have on their computer.
Yeah, I mean, you can do some basic desktop type, you know, functions with Ubuntu Mate on the Raspberry Pi, particularly if you use the 32-bit ARM version.
But software is not magic, and I've had a lot of people asking me, what's the performance like of Ubuntu Mate 1804 on the Raspberry Pi?
And it's well, it's just like using a Raspberry Pi, you know, software is not going to magically change the characteristics and constraints of the Raspberry Pi platform.
So if you think the Raspberry Pi is slow, it will be as slow when you run Ubuntu Mate for the Raspberry Pi, you know, we can't magic that away.
But we do what we can to exploit, you know, the facilities that exist on the Pi.
And the other thing to note is, don't cheap out on SD cards for the Raspberry Pi.
Even for like six pounds, you can get a really fast 32 gig SD card, which will immeasurably improve the experience of using a Raspberry Pi over, you know, a cheap,
a cheap no brand cards.
So make sure you get, you know, proper tier one vendor class 10 SD HC cards and it can improve a load.
But you can, you know, open a browser, you can browse some websites, it will be a bit slow, video playback and VLC is great.
You can, you know, write code, you can compile code, you can test applications, you can, you know, do all of that stuff.
How are YouTube and Netflix running? Did you try that?
Yeah, so I've got no browser accelerations at the moment.
So when these images do come out at the moment, the browser will be unaccelerated.
And that's a project I'm going to have as a continuation after this because building a new version of Chrome with hardware acceleration is a longer way out.
So at the moment, you don't get any acceleration in the browsers, you do for video and stuff.
Okay.
You mentioned that the tinkerers and developers could use Buntumate on the Raspberry Pi.
How compatible is that with existing hardware?
I mean, when you buy something, you usually have a driver and they tell you install Raspberry and then, you know, run that and it will work.
Will that work also on Buntumate or the vendor have to write a specific driver or something like that?
No, it should work just fine. So we're pointing at the Pi Wheels project that's run by Ben Nuttle and Dave Jones.
Ben works for Raspberry Pi Foundation and Dave actually works for Canonical now.
So you can pip install, you know, all of your bits and pieces and you will get the same versions of those things on on a Buntumate.
And I've recently had from a couple of organizations who are serious roboticists who've used a Buntumate 604 on the Raspberry Pi to power a number of their robotics projects.
And I learned that they have been champing at the bit for 1804 versions.
I didn't realize that they'd actually been pestering one of my colleagues asking where, you know, could they do anything to make this happen faster?
So I know there are people out there actually want to use it for some serious use.
You know, they like a familiar desktop environment where they can get stuff done and be productive.
But it's minimal enough that, you know, it preserves enough memory that they can run their own stuff on top.
All right.
Without piling too much of the next interview I will have with Alan next week.
How does Buntumate and the Raspberry Pi support snap?
Just like you do on the desktop.
As long as the snap you want to install has a build for ARM HF or ARM 64, then you can install those snaps and run them.
And that's one of the things that I was really interested in, you know, getting working.
And in fact, things like the software boutique and a Buntumate welcome are snaps.
And on those new Raspberry Pi images, they are snaps.
Awesome.
Snaps are really great.
But I'll keep that for my next interview.
Okay.
Let's go quickly about non-technical stuff.
How does the project live?
Is there a foundation or some other entity to manage donations and legal stuff?
Yes, there is.
There's a friend of mine that runs a number of charities and a couple of CICs, umbrellas.
So that's a community interest, goodness what, it's a community interest, something or other corporation.
And a Buntumate is umbrella underneath that.
So all of the donations and what have you, although we're not allowed to call them donations anymore,
all of the crowdfunding for a Buntumate goes into that CIC.
And then from there, we farm that out to developers working on the Marta desktop and a Buntumate projects.
And things like domain name registrations and stuff like that.
We're fortunate that for a couple of years, BiteMark have sponsored all of our hosting.
So things like the Raspberry Pi images, which are about a one gig download,
they now provide the servers and the bandwidth for, which we used to have to cover ourselves.
And that was a massive outlay.
So BiteMark have been really good friends to the Buntumate project and the Marta desktop project as well,
because they now host all of the Marta desktop infrastructure as well.
So that means that all of the money that comes into the project we're now able to use for
bounties, not bounties like bounty source, we've experimented with that to some success.
But really identifying meaty projects that we need doing and pairing that up with a capable developer who could deliver that.
And then paying them something close to market rate in order to actually develop that feature.
And that was one of the ways we've created some momentum within the project.
And we've also been able to keep people interested in the project in that way by rewarding their effort with a thank you each month.
That's awesome.
To be able to give back to the people who contribute to that, I think that's really awesome.
Is it Buntumate a trademark, or is it just a name that...
It's just a name.
When I was starting, I got lots of people like, why is it not called Mubuntu?
Which is what I thought it would be as well.
But actually, all of the asterisk Ubuntu names are protected now.
So the correct naming scheme is whilst you're bootstrapping your new flavor, you are Ubuntu thing remix.
So we were the Ubuntu Marta remix.
And then when you are officially recognized, then you're all integrated into the project, then you are Ubuntu thing.
So Ubuntu Marta, that's why there was Ubuntu GNOME prior to Ubuntu Marta.
And following us more recently, there was Ubuntu Budgie, of course.
Of course.
Okay.
How do you manage the best factor on the team?
If you suddenly decided that you had enough and you want to go somewhere on the island and forget about that,
how the project going.
That's a great question.
And the only stance raised, not as well as I should have done.
And in fact, since November last year, I've assembled a group of people,
some within the Ubuntu Marta project and some outside to create what we've initially called the Ubuntu Marta Guardians.
And I'm slowly changing the way the infrastructure is configured and the way the accounts are set up,
so that everyone in that group could, if I was to get knocked down by a bus, control the infrastructure and the domain names and the CD,
you know, basically all of that they would have access to.
So there's still some work to be done there.
But there was a couple of projects that sort of failed or faulted last year in 2018.
And that really made me think that this was something we needed to sort out.
We're not there yet, but we are working on it.
Well, we hope that you won't be able to buy your best.
But it's always a reassuring to know that a project can keep going.
Yes.
Okay.
So talking about going on further, what's the future for Ubuntu Marta?
Ubuntu Marta both in terms of supported architecture.
You talked about that earlier and in terms of new functionalities.
In terms of new functionality, Marta 122 was released two days ago.
And that's the first release that has some wayland capability.
So some of the more complex components.
So the panel, for example, are now wayland capable.
And so that's our first steps towards embracing the new display server future.
And I have some thanks for a couple of people at work,
William Wild in particular, on the mere team, who did the line share of that work.
So it's now on us to get that over the line.
So that would be one sort of thing for the future.
A couple of projects that I'm interested in working on myself are Marta capabilities
to manage Thunderbolt devices through a GUI and update firmware of devices
through a UI because we don't have that yet.
And those are things that we're finding on modern PC hardware now for Linux.
And then I touched on it earlier.
I would like to bring up into Marta to more devices.
You know, we've got some interesting arm devices that are coming through now
that are low cost and have got some interest within the community.
I'd like to see up into Marta there.
And one of the things that of into Marta has always been great at.
And a partnership, if you will, that we've had is with the ex2go community.
The guy I met in Germany, the Ubuntu, the Debian developer,
that looks after Marta, he is the lead developer for ex2go,
which is a remote terminal solution.
Really great one.
Yeah, and we've been involved there for several years
and Marta is a preferred platform for that.
And within the Marta packages in Debian and Ubuntu,
we're carrying out of tree patches to enable a live RDA.
So this is within the desktop environment,
it knows that it's running over a remote session.
And it automatically tunes itself and presents some new features in the UI
that are because of the fact that you're over remote connection.
So that is something I want to focus on and develop further
because I think that the idea of remote workstations in the cloud,
it is gaining in popularity.
Marta is already used by Amazon Workspaces,
but that's on top of Amazon Linux.
And it's a bit devoid of like decent application support.
So I'd like to focus on that and present some options there
for Marta workstations in the cloud.
So more work for you then.
Yeah.
Well, I think Mike Gabriel will probably be doing the line share
of that work from ex2go, but I would definitely want to help with that.
Okay.
When are the next releases planned for Ubuntu Mate,
both on PC and other platforms?
Well, Ubuntu No 4 will be out on April the 18th.
I think it is somewhere around then.
So that will be the 1904 release.
I don't think we're going to be able to ship the new Marta 1.22 release
at that time.
There's some underlying technologies within a Marta within Marta
that have changed, which will mean that some of the plug-ins
that we use won't work.
And we need to have some time to go to those third parties
and help them uplift their code to support the new APIs.
So that's why we won't be revving to 1.22 this cycle.
But I imagine that will happen for 1910 for sure.
And then it will be these little hardware and development projects.
So the likes of GPD and the Pine Book.
Some more stuff on the Raspberry Pi.
And if anyone else is interested in helping out on enabling Ubuntu Marta
on some interesting device, get in touch.
Yes.
And how can people contribute to Ubuntu Mate?
Is there a...
Well, the best place to come to is Ubuntu...
Well, this is where the name is ridiculous,
because it's Ubuntu HiphonMate.org is the website
and Ubuntu HiphonMate.community for the community site.
So if there's a project you're interested in,
we have a development section within the forum post there.
And that's the way to bring your ideas forward.
And is that necessary code or do you need contribution
in other things like graphics or translations?
Yeah, yeah.
So most of the translations happen through the Marta Desktop Project.
So Marta Desktop.org is where you can find all the information
about where that code is hosted.
So Marta Desktop is all in GitHub.
Ubuntu Marta is all in GitHub.
All of our translations for both projects are in TransFx.
And you can find the links for all of that on the Ubuntu Marta site
if you want to get involved in translations.
So all of the projects are on GitHub under the Ubuntu Marta organization.
So, you know, issues and pull requests are welcome there.
Yeah, and if you are keen on designing wallpapers,
we have a section for that in the Ubuntu Marta forum
and you can just create your things.
I think we have a minimum resolution that we'll accept
and we have a waiver that you license it under a Creative Commons license
and provided you do those two things.
You stand a chance of getting your wallpapers
in the next version of the distro.
Cool.
So we don't have any excuse to not contribute now
with everything that you have.
Well, I think we've covered everything I wanted to cover.
Is there anything you want to add?
No, it's been delightful.
Thank you very much.
Well, inviting me on.
I've enjoyed our chat.
Thanks to you for joining me.
It's been a real pleasure to talk to you.
I guess I will see you at Ocamp in October 19th and 20th.
In Manchester?
Yes, I imagine we will.
If you're coming again, then I'll certainly be there.
We'll not miss that.
Fantastic.
Well, thank you, everybody for listening to this episode
of Hacker Public Radio.
I'm Janik DeFranciai from Switzerland
and I was with Martin Wimpress tonight.
I will probably come back on another episode
with some more interviews.
In the meantime, take care of yourselves.
Ciao, ciao.
This episode of HPR is released under Creative Commons
non-commercial biotribution license.
The sound used in the opening and closing sequence
is Speaker X Clash by Daniel H,
released under Creative Commons non-commercial biotribution license
and available on Jamendo.
You've been listening to Hacker Public Radio
at Hacker Public Radio.org.
We are a community podcast network
that releases shows every weekday Monday through Friday.
Today's show, like all our shows,
was contributed by an HPR listener like yourself.
If you ever thought of recording a podcast
then click on our contributing
to find out how easy it really is.
Hacker Public Radio was founded by the digital dog pound
and the Infonomicon Computer Club
and is part of the binary revolution at binrev.com.
If you have comments on today's show,
please email the host directly,
leave a comment on the website
or record a follow-up episode yourself.
Unless otherwise stated,
today's show is released under Creative Commons
Introduction, Share Light 3.0 license.
