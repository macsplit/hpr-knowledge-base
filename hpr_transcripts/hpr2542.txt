Episode: 2542
Title: HPR2542: How I helped my dad run a static website using SparkleShare
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2542/hpr2542.mp3
Transcribed: 2025-10-19 05:10:41

---

This is HBR episode 2,542 entitled How I Help My Madras Tatic Website Using Partial Share.
It is hosted by Clacket and in about 12 minutes long and carrying a clean flag.
The summary is in which I describe my setup on Partial Share and GitHub pages to maintain
a static website.
This episode of HBR is brought to you by an honesthost.com.
At 15% discount on all shared hosting with the offer code HBR15, that's HBR15.
Better web hosting that's honest and fair at An Honesthost.com.
Hi, I'm Clacket. So I'm on my usual bank run. So it's time to record something while
I have the time.
I'm going to take a look at my other phone here because I'm an idiot who carries two
phones around.
Let's see, browsers there.
So I go to my micro blog stream tag HBR app and I'll see here Bitcoin now, not for
now, canteries, normalization, I'll need to prep that a bit more.
I thought I had something good here, oh yes here it is, let me see, how I help my dad
run a static website using sparkle share.
That's a good one I think I can freehand.
So my dad is the person in my parents' church who knows how to computer as we say.
So he's responsible for running the website for the church.
I helped him set it up a long time ago and at that time we used, oh what's the name
of that?
A static web host was called like meme cluster or something like that, it was a free website
and if you didn't have too much traffic then they let you run that for free.
Then a couple of years ago, oh so let me see, at that point he used that with, I think we
used FileZilla to just FTP up the stuff.
But then it had a bit of downtime so I started looking at an alternative solution.
So I figured hey there's a sparkle share and there's all these software as a service
services now.
So why not just put this thing in sparkle share and every time it changes a file sparkle
share we'll sync that to get repo somewhere and that would automatically deploy things
somewhere.
So I was going to try this with Heroku but it turned out that the way sparkle share
the dress get didn't quite work with Heroku.
You need to put an SSH colon slash slash reference and not just host colon blah and when you
do with the SSH colon slash slash the real URL format for for a git destination then you
need to provide an absolute directory at the end.
And maybe it's possible to do that with Heroku maybe was possible then but I just I didn't
figure it out at the time and I felt that I should be doing this on a freer service anyway.
So then I looked into what Red Hat was doing with Orange Cloud and OpenShift.
So Red Hat has this product OpenShift that has changed quite a lot over the years back
then it was probably OpenShift version one.
But basically that is what Heroku did but generalized.
So you get a virtual host somewhere and you push to git repo and that creates some kind
of deployable package and it puts that onto your virtual host and off you go and then
it has built-in detection and build packages for all kinds of things so you just don't
configure anything you just put your Ruby on Rails app there it will discover that it's
Ruby on Rails and will run it properly or if you have a PHP app you put that in there
it will discover that it's a PHP app and start it up or in the case of PHP there's almost
nothing to start up you just put the things there.
So in my dad's case was just a static website so it was basically just okay this is a PHP
app with no PHP in it and that's a static site and we just put it up there.
So that went by we had one staging repo and one published repo and that's just two
git repos.
We didn't do any serious git stuff with that it's just two directories they both managed
by SparkleShare.
He drags files into or edits files in the staging repo first and then he looks on the
website yeah looks fine and then he just copies them over to the other one and it doesn't
have to know anything about git.
It works pretty well but then while back open shift and red had changed their policy
on how much you could get for free and so on.
So I wanted to move off open shift and I looked around and someone suggested GitHub pages
and I thought yeah that would work but I don't really want to support GitHub unless it's
absolutely necessary because I want to support free software that's why I was an open
shift to begin with so there's an obvious choice if someone recommends GitHub then you
better just check okay it's GitLab offering the exact same thing and yes it is there's
GitLab pages so we put the thing up on GitLab pages and it hasn't been entirely pain-free
and on GitLab pages the way it works is you push to your repo and then you set up the
CI flow and in our case it's just basically copy these files from source to destination
done that's the build process but still there's a step that fails you run your pages job
and that's just copying the files and then there's the pages deploy and that's I don't
know if I can even edit that I haven't tried but that's basically predefined by GitLab and
that's what takes this package and puts it on their host and that's sometimes just randomly
fails my father will mail me hey I got this email he says something failed is this a problem
and then I look at it no it already succeeded again 20 minutes later when you edited the
next file so now my advice to him is if you change something and you don't see it on the
website just make some inconsequential change somewhere else and hopefully that will go through
and it also varies a bit how fast changes go through so he will change a file it will get
pushed and Sparkle share will automatically get pushed to change and then I can look in the
GitLab CI pages because yeah we're doing this in a project on GitLab and we are both users so
my father will mail me and say something is up and then I'll just go in with my user and I can
see that okay this job started and then he copied the files and then he finished and it varies
quite a lot it can take several minutes or sometimes it just takes a couple of seconds
all right that took care of the banking stuff on my way back home
so yeah I was saying that GitLab pages has been working pretty well there's some hiccups sometimes
but I've instructed my dad on how to work around them just modify some files push again and then
it probably works and then just a couple of weeks ago we both got an email I'm the primary owner of
the test repo and that is the primary owner of the production repo or project and we both got an
email saying hey you need to verify your pages and I thought okay I'm gonna have to do that
sometime not now I'm busy and then the other day I got an email okay you didn't verify your pages
so now we unpublished everything so I just got in there okay actually you just had to take
a DNS so that took five minutes once I got around to it and since then it's been running fine
and then I mailed my dad and I said hey I finally took care of this thing and he said yeah I received
that email one minute after I received the email that my production repo had failed to verify
so what that is you go just into your GitLab pages settings and then it says
oh if you want to verify you need to add this text rate is pretty clear and then you just add
that text record and then you tell it yeah verify it and then everything is fine I don't know what
that's necessary though because I mean if my DNS is pointing to their server I think that's a
pretty clear indication that I intend for my domain to be handled by them but I guess they have
the reasons so yeah basically that's it it's been pretty easy I did all the setup on my dad's
computer of course so I have to get out the public key from SparkleShare and put that into his
GitLab user and then just follow some pretty basic instructions on how to set up GitLab pages
and that's basically it I'm using but not actually making use of I tried to tell my dad that
hey this would be neat idea but he's fine with how things are now using a site generator so it
actually runs the site generator every time but there's nothing for it to do except copy the file so
the way we're using it currently the site generator is basically glorified copy
but you can do that as well I'm I'm using Jekyll and there's a thousand others if you prefer
some language other than Python that's that's a whole episode on its own I'm not going to
dig into that now so until next time this has been Hacker Public Radio
I've been listening to Hacker Public Radio at Hacker Public Radio not a work we are a community
podcast network that releases shows every weekday Monday through Friday today's show like all our
shows was contributed by an HPR listener like yourself if you ever thought of recording a podcast
and clicking our contribute link to find out how easy it really is Hacker Public Radio was
founded by the Digital Dog Pound and the Infonomicon Computer Club and it's part of the binary
revolution at binwrap.com if you have comments on today's show please email the host directly leave
a comment on the website or record a follow-up episode yourself unless otherwise stated today's show
is released under a created comments attribution share like free pine o-wifers
