Episode: 647
Title: HPR0647: How I Got Into Linux
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0647/hpr0647.mp3
Transcribed: 2025-10-08 00:22:03

---

Music
Music
Music
Music
Hey, this is Brother Mouse, and my episode today is how I got into Linux.
It's something of a long journey, I'll try to keep it moving briskly.
I wasn't necessarily going to do one of the episodes on this topic, but I was inspired listening
to Rajee's show recorded at one in the morning on the porch or what have you, so a lot of this
happened a long time ago, and so I may not remember everything exactly correctly, I will relate
it to you as well as I can, but I assume I'm going to make some errors in memory and in details.
Also, as a younger man, I made decisions that may not have always been the most ethical.
I don't think I ever did anything that was breaking the law, but in the spirit of a
statute of limitations, I'll tell you that all these stories are completely false, fiction,
and made up by me, so let's see how that works out.
My first computer was, I got in junior high, and we had been choosing between, if I remember
correctly, VIC-20, which was around 300 bucks, the Timex and Claire, which was famously $99,
but had a little ticklet keyboard, or the TI-994A, which I liked, but was around $500.
During that month or so period that my family was deciding on a computer that just happened
to be when the 994A had the big price-slash to $149. So we went ahead and picked up one at that
$149 price point. It continued on to $99, but the $99 ones were the beige ones, and mine was the
original black and silver. If I remember correctly, you would program in TI-basic by plugging in
a little cartridge that said TI-extended basic or something like that, and it would come up to a prompt,
and you could either type in everything right there on the keyboard, or you could load
stuff that you had previously written from cassette tape. So I had the cassette tape cabling,
and just if I remember, I think it just plugged into a regular cassette deck. It may have been a
dedicated one, but I'm pretty sure it was just a regular cassette deck like you might get it at
Radio Shack, and when you would load those files back, it would have kind of a carrier signal
that would go like, and then it would start this, I think like 1,200-bodd data, and be like,
like that, and it took forever to load, but it worked. I mean, you could actually save your
programs and load them back off of the cassette. I found online a recording of a guy that a guy
made of an Apple cassette data tape, and I'm going to put a link to that in the show notes so you
can kind of get a little feel for how that used to sound, and like I say, you'll hear that long
kind of sync tone, and then it actually starts with the data. I also had a, if I remember correctly,
the rubber cup acoustic modem, 300-bodd. By the time I got to high school, the Commodore 64
had come out, and I took a course in computer programming in high school. I eventually took
another one in college, not programming, but I mean just a computer science required course for
the bachelor's. But the one in high school had, you know, regular classroom, and then I think
eight Commodore 64s with eight monitors, and it had some kind of a bus deal where
you could all use one of the like 1541 floppy drives. They're giant. They were just giant devices,
and you'd slip those five and a quarter discs in there, and then rotate that lever down to move
the head up into that reinforced hub, and I think it held all of like 170K or something like that.
So my first adventure in hacking happened there in high school because we would all have to take
your floppy and you'd put it in the drive, then you go back to your orchestration and you would load
it, and then you would normally go back to the floppy and take your disc out so someone else could
use it. Then you'd write your program, get happy with it, and then re-save it. Go put it back
in and re-save it. Well, I figured out that you could like queue up the load syntax, whatever it was.
Let's say it was load, space, whatever, and put your hand on the enter key on the keyboard,
and then when someone put their disc in and flip that lever and they turned around to walk back
to the seat, you go pop and you hit enter and you'd load whatever it was that they had on their
disc, or you'd look at the contents and then load it, I don't remember. But normally by the time
they got back to their seat and sat down, you would have pulled a copy of it in and you could
look at their code. Now, if you waited too long, if you waited to their desk and then you started
to load it, then it could interfere with their load and they would see a long delay and they would
look over and realize what was going on. But if you timed it in such a way that they were still
walking away from the drive to their seat, then you could pull up their code and look at it.
Now, I never did anything to their code. I mean, it wasn't malignant. I just wanted to see
what other people's code looked like. So that was the first of the, I guess, ethical lapses that
I'll share with you today. For my high school graduation, I got one of the newest,
most fanciest computers at the time, which was an Apple IIE,
expanded to 16K of memory. I know, I know. Green monitor, a floppy drive, and it wasn't just a floppy
drive. It was a duo drive, which was too floppy side by side. And at this time, I will neither confirm
nor deny my familiarity with tools such as locksmith or nibbles away. Now, this Apple also had
a 9-pin printer. That was my first printer, 9-pin dot matrix. And it had the same size, five and a quarter
floppies as the old Commodore, but I'm thinking that they held a good deal more information by that
time. I don't remember what the number was, 360K or something like that. I think by this time,
disks were being sold as either double-sided or single-sided. Now, even the ones that were double-sided,
I think required you to pull out and flip over the disk and put it in with the other side up.
But you could use a hole puncher and punch out the right enabled hole. So if you had a single-sided
floppy or, for example, someone gave you an old floppy that was read-oneling, and it was like
for software, you could use a hole puncher and punch a hole in the side and it would actually write to it.
By the time I finished high school and went off into the army, I believe Mack had started making
the little rigid 3.5-inch floppies that are familiar, probably, to most of you. At that time,
the army was still using 8-inch floppies, and they were using them in Wang word processors.
By the time I got out of the army and into college, this is the early 90s. And by this time,
I had been given a hand-me-down 386-16 megahertz machine with, I think, four megs of memory,
which I eventually upgraded to six megs of memory. But at the time, a mega of memory, and these
were SIPs. As I PPS, these SIPs were $50 a meg. So this hand-me-down Intel box was the beginning
of a pattern in my life. I've never had a great deal of money, and so I've always had old machines.
I've never actually owned a new computer that was current generation. So I find myself attracted to
the kind of more efficient distributions, smaller OSs, and you'll see that pattern develop later
as we go forward. I finished up that bachelor's and went off to graduate school,
and the graduate school, where I was, in the library, they had a subscription to
what was called star text. It was one of the early online news services, communities, and things
like that. They set a fort worth. I noticed after a while a couple of things about the star
text connection. Number one, it was a normal computer that was accessing it. It was not a dedicated
terminal. Number two, the password, username and password were written on a piece of paper and
stuck to the monitor. Number three, I seem to be the only person using this service at all in
the library. I mean, I never saw another human being in there who even knew it existed.
So I wrote down the username and password off the monitor and took it home with me and
dialed up with my 2400-bodd modem and connected with the username and password and got in just fine.
Well, I was paranoid for various reasons about this, and not the least of which it was during
the day, and if someone was trying to use star text in the library, it would have kicked them out.
And to me, that does two things. Number one, it would reveal that someone else was attempting to
use the account. Number two, it would be rude of me to bump off a more legitimate user in the
library. At this point, I know it's possible to log in to star text from my home on my own
machine, but I'd stop doing it after that test because I didn't want to interfere with the
library's usage. At some point, I realized that the library closed at, let's say, 10 p.m.
and at that point, it would be impossible for anyone to be in the library using star text. So
I'm thinking, well, number one is going to waste. Number two, if I did use it from off premises,
it's not possible that I could bump a legitimate or more legitimate user off the system in the
library. So at that point, after 10 p.m., I started logging on and reading using the information
services, mainly for academic purposes. There were some people I wanted to email on the system.
I want to call it email, although it was not email. There are people I wanted to email,
but then I realized that if they emailed me back, it would show up in the library's account,
and you know, busted. I realized, after poking through the configuration files, that you could
set up sub-accounts. And these sub-accounts were username, dot, and then some other name. For example,
you know, if you had an account at your house and you had a daughter named Clara, you could have,
you know, 103, 367 or whatever your ID was, dot, Clara. And when she logged in as Clara,
it would use her settings, have her a separate standalone mailbox, yada, yada, yada. People could
email directly to that pendant account. The problem is, when you looked at the configuration,
it would actually show you what names were in those slots. It would say sub-account 1, dot, dot,
sub-account 2, dot, dot, sub-account 3, dot, dot. So what I did was, is I named my sub-account dot.
So now, the first line said sub-account dot, dot, dot, dot, yeah, dot, dot, dot, four of them.
And the other ones just had three periods. And so unless you were carefully looking at this
green monochrome screen, you wouldn't catch that there was in fact a sub-account called dot. So
when I would use the system then, I would log in as sub-account dot under this main account. So
my email and everything else all happened under this dot, dot account. I didn't access any premium
services if there were any. And I didn't do anything to bring undue attention. I didn't overuse
the system. So as far as I know, that was no harm, no foul, although technically I probably shouldn't
have been in there outside the library. It did expose me to a group of people who started talking
about BBSs. So over time, I started using BBSs instead of or in addition to star text. And I even
set up my own bulletin board system under the phyto net rubric. And mine was one colon, one, two,
four slash three, two, zero, eight, and ran it for a few years. And I started having meetups with
some of the people who ran their own BBSs. And at the time, these were all all technical people
that you would meet because only super duede techno dorks would know how to set up a BBS on their
machine anyhow. At the time to give you an idea, most of us were running 2400 bod modems, although
some of the new some of the early 14 fours were starting to roll out. And they had to be hand
configured. It was a mess. Most people were running Windows 3.1 with four or six megs of memory.
The people who were the alpha geeks were running OS 2, usually with eight megs of memory because
they were it was a more intense. Now, there was a few people out there who apparently were extremely
wealthy because they were saying that if you had 16 megs for OS 2, it would really, really multitask
quite well. So personally, I was using a regular DOS 6 environment desk view on top of it.
And it was perfectly able to handle me using my personal business and running the bolt-in-board
service in a different desk view window. I'm all on that 3 to 616. So I'm meeting people from
the bolt-in-board world. And they're starting to talk about X and Linux and Slackware. And I'm like,
what? So one of my running buddies brought a laptop running Slackware Linux on it. Now,
she was not able to get X running on it yet. She did eventually. But at that time,
she couldn't get it set up. But I was just amazed that there was some non-Windows operating
system on this on this laptop. So that was my first real exposure over the next year. So
someone ended up pushing on me a few floppies to do my own install. At the time, Linux installs
were done with one boot disk and several root disks. In this case, it was probably five. In other
words, you'd have one boot image that you would use to boot up. And then it would say stuff in your
other floppies. And it would, you know, bam, bam, bam, bam knock them out. So if you're doing
something minimal, it might be three, four, five floppies. If you're doing an actual server setup,
it might be 30 floppies or so. And we'll talk about that in just a little bit. So by this time,
I had picked up a 486, I think, for my built-in board. And I now had a dedicated workstation,
which was the old 3D616. Well, I got an early Slackware version on that. This would have been
probably 93 or so. So I had some Slackware on there. And I did my first kernel compile on that
machine. And in case you were wondering, an early Linux kernel on a 3D616 took about 12 hours to
compile. By 95 or so, I was working at an ISP, one of the first ISPs in Dallas. And we spent most
of our time camped out on the Spark 20s that ran most of the services there at the ISP. So it's
been a lot of time on the command line. And at night, I was messing with my Linux machines. So it
was starting to pick up some speed here. I was learning shell scripting, doing some like CGI,
compiling my first C executables. One of the interesting details about those of us running
Windows 3.1 or even 3.1.1 for workgroups. Or maybe even the early Windows 95 is that the windows
did not have its own TCPIP stack. And so to get that cranked up, you'd have to
install something that had a Winsock.DLL. And the most common thing was Trump at Winsock.
At some point, Microsoft pushed down a file that unpacked a new Winsock.DLL into the system
directory or something. And it just instantly broke thousands of net connections around America.
And tech support just blew up. There was even at some point, some chatter that the Department
of Justice was going to start a investigation to see whether or not Microsoft had purposefully broken
people's internet connections. But I think that didn't come to anything. I think it was just
oversight. And once we figured out how to get people to rename those Winsock DLLs and put the
original one back in place, all was well. During this time, when we were working on the
SPART20s, everyone who worked there at the ISP got our own personal web page, which was
pretty hot at the time, having your own personal web page. And a few of us were writing
reverse chronological journals online with short thoughts, things we were doing.
We called them online journals. I think they're called blogs now. By 96 or so, I had moved to another
small hosting service for work. And I was in charge of the Linux boxes. So I'd built a bunch of
Slackware boxes for use net, mail, web, DNS, and those kinds of things. They had a handful of boxes
there. And it was my job to do the installs. Around that time, BSD had their first FTP install
where you could have one or two or three boot disks. And then it would actually pull the rest
over FTP. And that was just exotic. Also at that job, I had my first Linux desktop. It was a P200
megahertz machine. And I think I was running a raging 1024 by 768 screen at the time. And that was
just massive, a big, huge, 17-inch monitor. I think I was running FVWM because I liked the multiple
desktops. I had one that was set up for customers that would come in. If they wanted to look over my
shoulder, I had one so that for doing programming and one for administration so I could kind of
hop between the different hats I was wearing by Poppano, which are the different desktops.
Between 2000 and I would say 2008, I ran straight Vanilla, Debian servers and workstations.
I was doing some independent contracting at the time. And I wanted to make sure that anytime I
built a server for anyone that it would be software guaranteed to not get anyone in legal trouble.
So, Debian is extremely conservative and they can be kind of anal retinive about it, but you
know you're at least not going to get into legal trouble using a Debian distro. So, I did that up
until I would say 2009. And in 2009, I started to, enough people started talking about Ubuntu,
that I was like, well, you know, I need to at least see what's going on with Ubuntu.
So, it so happened that that year I needed to build three new machines. I don't mean
new hardware. I just mean three boxes based on existing hardware. I had one was my wife's
workstation, one was my workstation, and one was a myth TV box, which still does my DVR duties
in the other room. It's wonderful. In case you've never used it, it blows my Tivo out of the water.
So, I did Ubuntu or Ubuntu based spins. What do they call those spins? Spins, I think.
The one I used on my desktop was straight Ubuntu. On my wife's desktop, I used
Zubuntu, which was the X-C-F-E desktop on Ubuntu. And on the myth box, I used mythbuntu
on my straight Ubuntu box. I quickly shed KDE and Nome thinking that they were too heavy.
And so, nowadays I use LXDE or FluxBox. Also in 2009, I picked up a refurb E900 off of
buy.com for a couple hundred bucks and have like 16 gig SSDs in it. And so, I started a love affair
with very small Linux distros. The first one I put on there was Puppy. And I tried some other
ones, damn small Linux. The Puppy one is about 130 Megs. The smallest that I've used so far
was Tiny Core and it's a little over 10 Megs. I mean, you get a bootable X desktop for 10 Megs.
And you get a wired Ethernet stack at that point. Basically, you log in and decide what you
want browser-wise and all that kind of stuff. But I mean, it actually comes up and it loads in 10 Megs.
Like Reggie, I've been spending a lot of time in virtualization. I started loading the operating
systems into virtual box instead of using the U-Net booting thing to put them on USB drives all
the time. That way, I could just drive them from my own desktop and see if I like them or not.
And if I did like them, then I moved them over to a USB and test drove them on the E. I've
probably played with 20 or so distributions in virtual box just because it's free. It's free
and easy to do it. So if you haven't gone out there and played with any kind of virtualization,
I'd encourage you to pull down virtual box or QEMU. I don't know if you say chemo or if it's just
QEMU, I have no idea. For me, the virtual box runs faster on my old hardware, so that's why I use it
rather than the QEMU tool. At this point, I have one Windows box left and it is an old file server
that I had set up and it drives an HP LaserJet and some kind of all-in-one scanner printer thing
that my wife scared up. And it also does Vox recording from police scanners to wave files.
And at some point, I'll change that over to a Linux distro, but it's been running
Windows 2000 since 2000 and it just sits there and runs on an old P300, I guess, is what that is.
I don't regard myself any kind of particularly talented in Linux. I think one of the things
you find about Linux is that there's so much to learn that you just learn new stuff every
day, every week, every month. I think it's easier over time that you learn how to find the answers
and once you learn how to roll your own software from source and stuff like that, I think it just
becomes a lot easier. Well, that was my journey from TI 994A to a network built almost completely
out of Linux boxes. I hope you enjoyed it. Thanks for listening. Bye-bye.
Thank you for listening to Half the Public Radio. HPR is sponsored by caro.net.
So head on over to C-A-R-O dot N-A-T for all of those of you.
