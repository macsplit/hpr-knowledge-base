Episode: 1178
Title: HPR1178: Interviews with Laura Creighton and Armin Rigo
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1178/hpr1178.mp3
Transcribed: 2025-10-17 21:05:05

---

This is Hacker Public Radio and today you will hear two interviews with Laura
Creighton and Armin Rigo. You'll get a really unique perspective of Richard
Stolman as well as of the Pi Pi Project. Enjoy!
Hi everyone, I am Citi and this show you will get the chance to listen to two interviews
from FSCOS 2011, yeah a bit old but still very relevant. I hope you all remember and
listen to of course HPR episode 1116 which was a poker's interview with Richard Stolman.
It was released on the 12th of November 2012. It's a really great interview and you'll
get some additional information today. You see we start out with my interview with Laura
Creighton who led the keynote interview with Richard Stolman on the second day of FSCOS conference.
I am a bit harsh in the interview regarding Mr Stolman based on early experience but I got set
straight by Laura, my bad. And if I pick some information from FSCOS.org web page we can see
that Laura Creighton has 20 years experience in software training and human factors engineering.
She is a founder of AB Stract and a founder and treasurer of the Python Business Forum
and International Nonprofit Trade Association for Businesses which develop in Python.
And she does talk a bit about Python and more so the next person I interview Mr Armin Rigo
I'm trying to get the R is right. The Pi Pi web page tells us that Armin Rigo is a researcher of
the Heinrich Hein University Dusseldorf in Germany. He studied mathematics at the University of
Los San in Switzerland. He obtained its PhD in Logic and Set Theory at the Free University of
Brussels in Belgium in 2002 and worked at the University of Southampton in the UK until 2005.
He is the author of Psycho, the first just in time compiler for Python. He is one of the founders
and lead developers of the Pi Pi project which began in 03. He has taken part in all areas from
the Python language definition to the R, Python translation framework including the garbage
collector and the tracing just in time compiler. And hopefully some of you understood that.
I didn't. But he is a brilliant man and both him and Laura are fascinating people to listen to.
So let's get started with interviews.
Hello, my name is Laura Creighton and I live here in Gethborin Sweden and I've been coming
to FSconz and I have friends who are organizers of this but for this particular conference
I came here to do two things besides connect with friends and see what people have been doing
since last year and things like that. The first was to interview Richard Stallman which I did
yesterday and the second was to present PyPy which is my project. And since the time when I arranged
to present PyPy and now the chief developer of PyPy Armand Rigo showed up and so we let him do
the presentation instead of me. But I was there to cheer him on and actually add a little bit of
detail. So you actually interviewed Richard Stallman and I watched this of course. So you're one of
the few people who have actually had an interaction with Richard Stallman without getting your head
shoot off. How was it? Tell us. It was just fine but you have to understand that I've known Richard
for 30 years now and there was a time when the movement was new that he came out to San Francisco
and stayed in the same house I was living in with John Gilmore and a whole bunch of other hackers.
So we go back a rather long time and I think Richard actually trusts me which I think makes a
rather a rather good difference. On the other hand I may have just gotten lucky. I mean Richard
wasn't a good mood. I don't want to take credit for more of that. On the other hand Richard was
staying in my house so that I have comfortable beds make Richard and a good mood. Maybe I can take
a tiny bit of credit here but I wouldn't put too much into it. I think Richard was relaxed
and had a good time and I think he had a good time because the conference was well organized.
The organizers were terrific and everything around him worked properly. When Richard is stressed,
Richard lashes out at people but when Richard is not stressed Richard is actually extremely
reasonable person to deal with and he cares about people and he doesn't want to be mean to people
so I think it worked out well because a joint effort of all the organizers to make a really
supportive environment where Richard could feel at home which is good because he's very entertaining
and he's a lot of important things to say. Absolutely he's very entertaining and as you said a lot
of the things he say the messages it shows that he really does it because he cares about people.
He has this mission because he wants the world to get better and it was a relaxed and kind
of storm and we saw yesterday. I saw him back in oh six I think it was when he was here and
he wasn't that happy then so that might have called it my impression so nothing no ill will
about Richard's storm that's not what I'm at. The other thing to remember is that for those of us
who are seeing him we see a Richard storm and event maybe once in our lives or once every decade
or once every three years but Richard really is a rock star without a musical instrument who is
on tour all the time and if you're a professional performing musician you know some nights you're hot
some nights you're not so it may be in 2006 we got a we got a particular not but that's
the look of the draw rather than a reflection on Richard as a person though he seems a lot
happier than he did I don't know in 2006 but in 2002 he didn't seem all that happy to me so
but oh I know judgments on four days of being with with somebody to be taken too seriously either
you're right but he seems happier and that pleases me great great so you said your thing is really
Python yes well the project that I didn't present about is called PyPy and it is a Python and Python
Intruder and you can look you can look us up I mean if you google for PyPy you find us and
you have this the the short capsules summary of why you would be interested in PyPy is that we're
really really really really fast and Python has a reputation of being slow all dynamics languages
have a reputation of being slow and it's undeserved for purely numeric things stuff like that
we're approaching the speed of C for the general average Python program we have a whole
series of benchmarks if you look at speed up PyPy.org you will find all of the benchmarks
a most of them are a lot of them are driven by the UnLaden Swallow project which produced a set
of benchmarks and then we have a whole bunch of other benchmarks our benchmarks are not synthetic
things like the computer language shootout but they're based on real Python programs we have a
twisted benchmark which is talks about twisted connections we have a Django benchmark which is
rendering of a huge table of templating elements and things like that so we're trying to measure
the performance of real Python programs as opposed to mathematical ones and we're about five
times faster than than Python for sort of what we consider the standard job and if the more
mathematical you are the better you are I mean we can do we're getting to the point where we can
do real-time video processing which is which would mean we'd be 350 to 600 times faster C Python
for that kind of job if you have something that vectorizes nicely we'll speed it up nicely for you
wonderful great so that's what I came and we we did we did nice if all of this is recorded so you
can look at the tops and we will see the debos of how much faster we are and things like this
and talking about speed is not nearly as much fun as showing the speed so I suggest people just
who are interested should just go look up and the other thing I want to let people know is if
they're interested if you're hearing this for the first time I thought um dynamic languages speed up
it's not just for Python it's a framework for speeding up any dynamic language we've sped up
small talk we've sped up prologue we've taken gameboy assembler and we've sped that up and so we have
everything fast those are people working on stuff for other languages so if you have your
favorite slow dynamic language you might consider um just writing and interpret it for it
in a restricted version of Python and then you'd get our garbage collection and our jet and our
co-routine strategies and everything else for free so it would be if I mean if if having a speed
problem is a problem for you in some other dynamic language do check us out because we maybe the
the quickest way you have to get out of this particular problem and we'd love to have more
developers I mean we're we're an open source project you find us on the Python channel and
free node and you know we have sprints all over the mostly all over Europe we sometimes have them
in the United States associated with with bycon but mostly in Europe every no 12 weeks or 18 weeks
or something like that we'll meet for a week call hack together teach new people all sorts of
stuff like this so you know if you're interested if this sort of thing interests you we'd be very
interested in meeting you getting you involved doing this part of stuff and um and if you think
oh this is big and scary stuff and things like this don't doesn't matter come we're actually not
all that frightening we actually like teaching people and things like that so wonderful that's
wonderful thank you very much you know you should you should go off in an interview arm and
re-go and get a more technical summation of what's going on from him and I might just do that thank you
thank you take care
and that's exactly what I did
so now I'm once more just outside the toilet here at fs cons the one quiet spot in the whole
place and I am here with a very interesting and as I've been told a brilliant person and I'm just
going to ask you who are you and what are you doing here I'm arm and re-go and I'm here well I'm
here to present my project which is pi pi which is a python interpreter so it is just an alternative
python interpreter and its main point is that it is first it is first while still being compatible
with the standard python I am very sorry to say but I actually missed your presentation but a friend
of mine went and he told me about it and he said that he had had a look at pi pi before and he had
ruled it out that's not interesting for me and when he heard you he was just up in flames this
is really interesting it doesn't actually work for for my specific use case but it's really
interesting and I'm glad I get to get to know about this I guess that was what you were
after with your presentation who what is the use case who would actually like to start using
pi pi okay so what is the use case I mean at first well I can I can I can try to explain to you
the kind of demo that I did in my talk the most impressive one is a video image processor
doing a sub-else transformation if you if that rings any bell over a video in real time and
that's written in pure python and well it's a process that takes about 15 seconds per frame when
you run it on top of sea python and when you run it on pi pi well you get 20 frames per second
so you get an incredible speed up basically it opens door to to an incredible number of domains
basically so the what we're trying to achieve in pi pi is is simply to spread the usage of python
basically I mean in the sense that I'm assuming here that you're already a python hacker
sure but it isn't yes exactly most people are yes okay so in your job for example what you
might do is write a prototype of your programming python just because it's so much easier to write
in pythons and in c for example then you you write your prototype and then well it kind of works
it's just far too slow for any real use so you're going to rewrite it I mean over all of it or
parts of it depending you're going to rewrite it in c or of c++ or Java I don't know so what you
aiming for is to get rid of this last part I mean not in all cases obviously but for at least half
the cases so our goal is really just to provide well I mean our meta goal if you want is just to prove
that the speed of a language is not an inheritance property of the language in the sense that
you can have a very nice and high level language like for example python and it still runs
first given given enough efforts and in the pipa project well the pipa project
exists since a long time and we we invested a lot of effort in it and you're really revolutionizing
the old held belief that the scripting languages and such are slow and not that good and not suited
for many jobs but you said as you said you you have invested a lot of time and effort into this
I heard that you might have a problem with python 3 no I mean not a problem per se the fact is
simply that we are running late simply all right so in the sense that right now we are still running
python 2.7 but it's just a matter of time before before we make the jump to python 3 all right
python is known to be a language that is easy on the beginners you can actually get results
quite quickly and it's logical you usually get it quite fast how is ordinary python compared
to pipa is it a larger threshold to get into the feel of it no not at all because it's still
exactly the same python basically the pipa interpreter is here to run your existing unmodified
python code all right so if you are already in possession of a of a great python project
you can actually just run it through pipa and it works yes mostly to some extent I mean the
python part will most likely just work yes where you will run into issues are issues like the
sea python sea extension modules that you use that may or may not work in pipa I mean we have
some support for sea extension module but it's not not complete and will never be probably absolutely
complete so so so well any big projects trying to just switch from python to pipa will run into
these issues definitely python is not that old one language and it is being actually developed
as many others are of course but how do you collaborate with those trying to extend and further
the advancement of python do you have any connection with them do you have anything to say about
like the new things in python three and such as your voice heard well to some extent we are not
into the business of defining the language which means that we are fine with however they decide
to extend the language that's one point of view that's one possible answer I mean the fact is that
I myself and others of the pipa project are also members of the pifons of to a foundation for
example so we are sitting on both sides and it's it's a very friendly collaboration as if all
the the point is that in pipa we don't include any language change we just want to be compatible
however the language evolves well we are running behind to catch it basically
that's that's fine absolutely wonderful wonderful all right do you have anything you would like to
plug a web page or do you need help from the community are there a need of hackers or do you want
people to use the project what would you like to advertise to our listeners well as you
pose that if I can do a plug the fact is that right now we have we are collecting funds
for in three different areas developing numpy it's development of python to python three in pipa
and well the third is just general pipa stuff so if you cannot or don't want to actually contribute
code or some things and then you can just contribute your five dollars are appreciated
right and that is the free and open source way yes so where does people go to contribute
in any way and it is on pipa.org splendid thank you very much for giving me this interview
and good luck in the future thank you
so a python in python interpreter we're really really really really fast
I met up with Armin a few weeks ago at FScon's 2012 and asked if he would like to add anything
about what's happened in the last year with the project what he declined and said that they
have gotten even faster and has been making good progress but nothing sex enough to talk about
so this is really something to look into if you work with python or other high level languages
I will leave links to most of these resources mentioned in the show notes as per usual
if you want to follow me in my podcast all in IT radio you really should you find me on
identica and twitter as at altinomite a l l t i n o m i t you find all in it radio on google
plus and you find of course a podcast at a it dot s e slash radio this is ct signing off
you have been listening to hiker public radio at hiker public radio does our we are a community
podcast network the release is shows every weekday Monday through friday today's show like all our
shows was contributed by an hbr listener like yourself if you ever consider recording a podcast
then visit our website to find out how easy it really is hiker public radio was founded by the
digital dog pound and the economic and computer club hbr is funded by the binary revolution
at binwreff.com all binwreff projects are crowd sponsored by luna pages
from shared hosting to custom private clouds go to luna pages.com for all your hosting needs
unless otherwise stasis today's show is released under a creative comments attribution share
our online detours our license
