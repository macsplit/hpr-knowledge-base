Episode: 1007
Title: HPR1007: My Linux Adventure, Pt. 2
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1007/hpr1007.mp3
Transcribed: 2025-10-17 17:17:10

---

music
This is Bob Wooden.
I'm here again with part two of my Linux adventure.
If you didn't hear part one, don't worry, it was kind of boring.
But that story had to start somewhere, and my Linux adventure continues.
I moved from one state to another in the fall of 2004, some 450 or 500 miles.
Life always changes.
One of the results of that move was, I got broadband.
1.5 gigabytes of download speed, compared to the 56k dial-up I had in my other house.
Well, it was big time fast.
I could download ISO images, updates that took two hours on the dial-up before, now took
a few minutes.
I got lucky with my new job.
Granted, it was a small company, but my experience paid off.
Three or four weeks into my new job, one of the Windows computers just dies.
Question becomes, how do we get the design files or the company files off of that computer?
I announced that I could do it, and everybody wanted to know how.
And I started to explain that, well, I could just use a live CD and wait a minute, let me
show you.
I reached over to my bag and have aopic CD with me, whatever version it was at that time.
Put the CD into the CD-ROM drive, access to BIOS, got it to boot from the CD-ROM, and
opic starts.
Everybody stand there watching me.
I'm out of the HGA one drive, KDE, GUI of course, looks very similar to Windows.
And one of the other employees looks over my shoulder and says, well, that's what Linux
looks like.
I thought it was some kind of a command line thing, and I said, well, no, this is it.
And he said, well, we can live with that, meaning that Linux had saved the day again.
Knowing the file structure of Windows, it didn't take me long to get capture the files
that they wanted, plugging a USB drive, and pushed them over to the USB drive, and there
we go.
They've got the files that we need.
So pretty much, I became the self-appointed IT person on staff.
I started slowly first cleaning all the Windows computers and studying what I needed to do
there as far as defragging, and if you ever did much with a Windows computer, you knew
what check this, CHK, DSK, C colon, forward slash capital F does, and it forces the Windows
computer that the next time it starts, it will run check this before it even mounts the
hard drive.
Gives it a chance to clean it a little bit.
I had to figure out how to get any virus working properly.
They didn't have very good antivirus.
One of the first things I discovered was that all the Windows versions were the same.
When I asked a fellow employee who had built some of the machines, he didn't really give
me a straight answer, and I'm sure that at this point I know that he didn't want me
to know what he'd been doing.
But history taught me that he was covering up what he did in the after several days.
When pressed, I was told that they, meaning Microsoft, wouldn't catch us, and what the owner
didn't know, wouldn't hurt him, and so therefore who cares, this was his attitude.
So flashback five years, five years ago I lived in Indianapolis.
There was a car dealer there who was in the news.
The BSA and the Sheriff's Office had rated the dealership to come in and look at all
the computers there.
It seems that after they confiscated the computers, all the Windows computers in the building had
the same copies, and they only bought one single license for the whole building, for
one machine, and it was on multiple machines.
Not to mention the multiple copies of the MS office, the Adobe reader that was licensed
to Photoshop and some of the various computers.
This was a big news story in town, and it was in the newspapers and on the local TV.
BSA finds were in the tens of thousands of dollars.
The legal fee were even higher than that, and after six months the dealership closed.
It took the owners years to settle.
I don't know the details, but the facts are, it cost the dealership, their dealership.
So our owner, my new boss, didn't have the same viewpoint as the other employee did.
He agreed with me, and this was a major problem.
His partner agreed, big problem.
So what did we do?
Well first I found some paid for copies of Windows 2000, we backed up one operating system
because it was a way to save a little bit of money.
XP had been out just a few years, and this was just amounts to be released soon.
So I began rebuilding computers with this Windows 2000.
I had included AVG antivirus, we did buy a license for that.
Open office, of course that's open source, Firefox, Thunderbird.
A product called CC Cleaner.
This was to clean antivirus, not antivirus, but actually malware, or something like that line.
Spybot to keep, take care of any of the spyware, spyware blaster to run in parallel to the
spybot.
A cute PDF to create PDFs for work, and the Windows Defrag program isn't the greatest thing
in the world.
There's a lot of aftermarket ones.
I found this one called JKDFrag, you still use the Microsoft algorithm, which works.
He had just rewritten the front end, so it actually worked and worked better.
In addition, we had real VNC, so I could VNC into the computers, and do updates, and so forth.
And last but not least, we had an expensive preparatory software that was related to the
business that we ran.
I had talked about in the last show.
It was a design CAD program that has this, in this case, they were upgraded to USB
dongles.
The last show I talked about parallel port one, this one plugs into a USB port.
It protects the software, so you can't use it unless you have paid for licenses.
They can find their USB dongles and kill you program if you haven't paid for it, essentially
freezing them up to you sent them a check.
So the guy that provided the illegal stuff, he found a different job, and left the company.
What surprisingly was they didn't fire him.
The company was in the process of opening a second location.
We replaced all the software and all locations, brought the machines to what I will call a business
type package software, removing the games, and keeping it very business software, very business
oriented.
Before long, I had a Linux-based dedicated firewall machines at all locations, and over time
I had collected multiple garage sale machines, so I used some of those machines to create
these firewalls.
Typically, they were a Pentium 3 or something equivalent.
At the time I used IP cop, there are, of course, smooth walls, I believe, they're one of
the first ones.
IP cop came along as a fork off of that.
I had the same setup at home with an IP cop firewall.
So I did a VPN connection between all three locations.
This way I could VNC virtual network connect into any of the Windows computers from at home.
For example, I could get up in the morning and go to my computer and connect to one of
the computers until I let it update, and this is at 5.36 o'clock in the morning for anybody
gets into work.
Go off and brush my teeth or whatever and come back in a few minutes and that computer
is updated and go on to the next one and do it again.
So while I'm walking around the house eating breakfast and getting dressed and so forth
I'm updating computers at work.
The advantage of the VNC, the virtual network connection was, I was also kind of the help
I guess for our designers.
If they had some issue with a particular plan they were working on, I could log in to their
computer from wherever I was at and look at their plan to see what they were talking
about, that they were having an issue getting this preparatory software to do what they wanted
to do.
Now having had used that software for about 10 years I was into all the little tricks
and shortcuts to get the program to do what we wanted to do.
Each location has a central server.
It was a Linux box running sound bug.
Just before I started this job I had switched to Ubuntu 6.06 LTS.
When I finished part one I was still using Suits at the time.
They had decided to change their business plan and Suits was not going to be free, but
they had started the opposite project.
Now, considering that they were going to be not supporting the Open2 project very well
and knowing the amount of documentation that was available on the internet for Ubuntu,
it kind of pushed me that direction, so I went down that road.
I knew that there would be bond for how-tos available and this was the beginning of my Ubuntu
use.
I do a lot of online shopping for used equipment and so forth.
I had run onto a hardware device manufactured by LSI at the time called a MegaRad I4
ATA 100 rad adapter card.
This was a card that you could plug up to 8 IDE hard drives into to create a hard drive-based
rad array.
I have just recently discovered that these cards were the same used by HP and Dell and
some of their higher end workstations.
It also sold a lot of these because there is a lot of documentation about the cell
product that was called the CRC-ATA rad controller.
So anyway, an IDE bus you know allows two device connections to it, a primary and a secondary,
in this case, hard drives.
It had four buses per card, therefore it allowed eight IDE hard drives to be connected
to that card.
Now the caveat is that was a wonderful plan, but what all manufacturers of rad hard drive,
these hard drive controller cards discovered was that if you had a master and a secondary
or a primary and a secondary hard drive on one bus and one of those hard drives failed,
it would cause the other hard drive to also fail.
So therefore it became advantageous to use one drive per IDE bus.
Before you were limited to four drives per card because you had four ID buses on it.
So the logical wisdom became to use one drive per bus.
This card gave rad options, and if you know very much about rad, it is a whole different
program for Hacker Public Radio all by itself, but there's various rad labels, levels of protection
available.
I haven't used my cards as a rad level five with three hard drives that were part of
the level five in one hot spare sit in their waiting in case one of the drives failed.
In its day, this card was, I don't know, a $200 or $300 retail value, and I was buying
these used for $20 or $30.
So got a nice computer that's running a hardware rad system.
It's running Samba.
All of the my documents, directories are now moved to the server.
Thereby all the design files are pulled off of all the workstations and kept them one
central location.
In the event that a design computer would fail because it got a virus in it or whatever,
the design files were protected and we could easily rebuild that computer and would re-access
the design files and they were always available and protected by this rad.
When I connected the firewall machines all together with a VPN, this allowed me to also
use a Linux product called Unison, University of Pennsylvania, I believe it came from, on each
server.
Now at work, we had two locations.
With each server, I pushed these my documents files in both directions.
So we had copies of everybody's work at both locations.
In the event that, for example, the warehouse would catch fire or explode or who knows
flood, we could get the files from the showroom and vice versa.
It's a showroom had a issue.
We could get the files at the warehouse.
They were always available.
So no one lost anything.
I had double redundancy keeping the files back and forth at both locations.
This is all done with a minimal expense on hardware.
Remember, I'm using some existing old machines that were at work, garage sale inherited machines
that I'm buying for $5, $10 or $15 piece.
We invested in some cat-five wire, some RJ45 jacks for the cat-five wire and plugs.
You can buy those at your local home center, they're pretty economical.
We grew to a point where we felt we needed a little bit better hardware in some cases.
I kept fighting workstations that would just not run right.
They kind of acted funky and did not run smoothly, would hang sometimes do things.
Did some looking for newer hardware found at a place online where I could buy some off-least
IBM computers?
These were three or four or five year old pinium fours at the time, 2.5 megahertz.
Nice machines that were in good shape when I used smartmon tools to check the hard drives
and take a look at the read cycles of what the life of the hard drive had been.
They were in better shape than most of our existing equipment.
These were fast enough and in better condition than our existing hardware and I could retire
some of these to the shelf and run these newer machines.
During our third year, we realized that we needed more telephone lines at one of our locations.
When there were three or four of us on the phone at the warehouse, when we only have two
local lines, it's difficult for everybody on the phone when they need to.
So we began looking into a PBX system, quickly discovered it was way too expensive.
So I started looking for alternatives.
I had over the course of time read about voice over IP and began to experiment with one
of these off-the-shelf boxes that was sitting there with a product called Tricksbox.
Loaded Tricksbox, part of the experiment is to use software cell phones and some Windows
machines there in the office, so I set up a small lab and began to experiment.
And within a day, I had an operational system that could call soft phones to one computer
to the other through the Tricksbox and we had a professional sounding interactive voice
recognition system like any modern large PBX system.
At this point, creating this voice over IP system hadn't spent any money because I was
using existing hardware.
We used trial software for the software phones on the Windows machines to do this testing.
So I talked to the owner and explained him what I discovered and he was kind of interested.
We decided to buy just two IP phones to put on the system and then I could configure those
and see how those works.
I had to learn as I went.
So I bought these two phones and a few days later the phones show up and I hooked them
up to the system and sure enough, the Tricksbox recognized it and we could call those extensions
back and forth and we were going down the road to have a telephone system.
One of the main issues that I knew was going to cost the money was going to be the interface
to connect the what are called POTS lines, your local telephone company into this Tricksbox.
This card needs to have ports to plug the telephone wire into the back of the computer
to the jacks from the phone company and then it pumps the signal in through the Tricksbox
into your system and that Tricksbox then controls phones ring, phones selecting the line
to use the dial out etc etc.
So more configuration testing and before long I had a system that could answer the phone.
When a customer would call in, interactive voice response answering system which was
a computer voice actually recording would answer the phone with, hi thanks for calling
our business today blah blah blah press you know to to talk to Bill and to talk to Mary
and so forth.
The customer could then press three and it would ring Mary's phone.
So we bought some more IP phones and then had to sell the problem of more lines going
in and out which I knew from the various configurations and the articles that I'd read
the way to do this was to find a voice over IP telephone provider and we found one, there
was a small setup fee of $25 I believe and then every month $11 for one additional line.
What this one additional line allowed because it was over the internet was four simultaneous
incoming or outgoing calls at once.
We only added one line for $11 and we got four additional sources of ring and ring out.
By keeping our local phone number with telephone company we could use call forwarding from them
to forward the calls to our new voice over IP telephone number which was unadvertised.
We could maintain our business advertising through our yellow pages and white pages and
keep that phone number.
Customers would call in that phone number and not know that it rolled to our new voice
over IP system.
It was a way to save money and get more incoming and outgoing lines.
Big advantage when there's three or four of us there calling out and a customer can
still call in.
One of the next things we worked on was fax machines.
Fax machines are an administrator and office managers nightmare.
They consume me cartridges and paper plus the machines are prone to failure they're not
built very well.
They're usually not near the employees so sometimes you don't know that the fax has come
in therefore you can't react to them and in business reaction to any question is important.
Enter Linux took one of my garage sale machines.
I think it was a seller on 600 or something machine with a low 4.3 gigabyte hard drive.
Because all these Linux computers that I were putting together to do these things I was
concerned with the configuration hanging the machine or me doing something wrong.
I didn't want to lose the network servers.
I didn't want to lose the tricks box.
I kept using separate boxes for all this stuff.
In the event that the tricks box would fail which was an important box but in the event
that the tricks box would fail I would not take down the entire system and have a major
nightmare.
Fixing these fax machines was taking this old another off the shelf box.
I had an external modem which was the item to use because it was easier to configure
than an internal one using some adebian Halifax instruction that I had found on the internet.
I loaded Halifax software onto the computer.
This software would receive a fax when a modem heard the fax tone when it dialed in.
You would pick it up and then print the said fax to whatever printer I directed it to.
We had consolidated the printers to have each location had one printer so you had Halifax
printing out at the same printer that the designer sat at where they were printing their
designs and so forth for their customers to see.
Having the fax receiving near to the employee and quicker to respond.
This was a simple solution to an expensive situation.
We had gone away from inkjet printers and gone to laser printers at all locations because
they were more economical.
This computer that received faxes had nothing to do with sending.
We kept the fax machines for sending and just they shared the same line.
The Halifax was set to receive on one or two rings.
The fax machine for sending purposes is set to ping on like six.
The Halifax would always pick it up first in the event that Halifax would fail or not
pick up for some reason which did happen once due to a configuration upgrade.
After six rings, the fax machine picked it up so we still got our fax.
It was a backup to the backup.
This Halifax machine also pulled second duty.
I began using it to pump music into the showroom.
We did a simple wiring system where I bought some eighth inch male female stereo extensions
plugged right into the back of the computer through it across the suspended ceiling to
a set of computer speakers that were plugged in in one location and then did a wiseplitter
there to continue to the next set of speakers and the computer could feed three or four sets
of speakers with no issue and just go along and adjust the volumes of each one until
it was about right and you had nice showroom music playing all the time in the showroom.
I set up a Chrome job to start the music player about the time the showroom was supposed
to open and to stop the music player at the time when the showroom was supposed to close.
Later these services, the Halifax and the music was pushed back to the main server so I
could consolidate back to one single machine.
But it was part of my learning curve, again, concerned for creating a catastrophic system
failure that would bring down the entire system and result it in these experiments with
other machines and I could leave the other things alone.
Well, backing up I like to keep it simple as I possibly can, nothing complicated.
I didn't like the way Windows backup work you had to configure to do this into that and
push it so forth.
Enter Clonezilla.
Clonezilla is a live CD that runs in the CD-ROM drive.
It takes the image of the existing hard drive in the computer and stores it to whatever
device you choose to start to.
Typically it's done with a USB hard drive that you just plug in the computer, it sees
the USB and pushes the image right there.
In our case, I had set up a central server to include a directory in it to store the
images on.
So I could SSH, using Clonezilla, you can SSH into a server and push the image right across
the network to that computer.
So every week, every Monday morning, I would go to work a little bit early and stick Clone
zilla CDs into the Windows computers, start them up and push the images off to the servers.
Which only took 15-20 minutes.
Basically, we're not big images because all of my documents were stored on those servers.
So therefore, you're primarily only backing up the operating system and the programs that
are there on the workstation.
One of the workstations had a hard drive failure.
Simple.
I went to my storage shelf of excess parts that I collected from my garage sale stuff, pulled
out a bigger hard drive, put it in the computer, used Clonezilla to restore the last image and
within an hour, things were up and going.
The two biggest nightmares that I have found with workstations are the last two mechanical
devices in the computer.
Those are hard drives, a spinning spindle, hard drive, and cooling fans.
Cooling fans, whether they're on the power supply or on the back of the computer case,
fans fail.
And when they fail, they stop cooling.
And when they stop cooling, well, what happens?
So periodically, you have to open the case and take a look and actually see if the fan
is spinning.
This can be difficult depending on the location of the machine.
Our showroom location, the workstations were inside of a cabinet, so you couldn't look
at the back of the machine.
You had to actually pull the machine out of the cabinet to look at it.
I really grew to hate fans because they tend to fail.
So how do you know if a fan stopped blowing?
Well, I came up with a simple little strip of paper to put over the exhaust next to the
fan.
So while the fan is blowing, the paper moves.
So using a mirror, I could stick a mirror back behind and line it up and look down and see
if the paper is moving.
So paper moving?
That's good.
Hopefully.
Hard drives.
I had to installed smarts, smart mind tools, on windows, on all the machines.
So I could keep track of the smart testing and the results from those tests.
When smart was configured properly, it would send an email if it got a bad report.
This is okay, but most of our drives are pretty old.
And what I have discovered is that each hardware manufacturer sets its critical values for
smart.
They don't necessarily follow the intended guidelines.
They set their values for what they want to make their hard drives appear to last significantly
longer.
Once a smart value has reached a critical threshold, typically the type changes to old age.
And if you look at a new hard drive with smart mind tools, you'll find that some of the
values are already set at old age.
This is though, as soon as the hard drive starts, it triggers old age and therefore it
triggers an old age value and therefore you don't know if, indeed, the drive is going
to fail or sell that.
Most of the time, they're a small irrelevant values.
But these are still a mechanical spinning device, something that has to physically move.
It's not electronic.
Oh, for the day to be able to afford an SSD drive.
They seem to be coming along nice, however at this point are far far too expensive.
During this particular episode, I have referenced many open source programs as well as some
close source programs.
I think I have all of them noted in the show notes.
I want to thank you for listening.
Yeah, I can be contacted at bob.woodenatcomcast.net that's B-O-B period W-O-O-D-E-N at comcast.net.
If you have any questions, be delighted to try and help.
I don't know if I will have all the answers or not, but I will try.
For my next show, I thought I might try something a little more current.
I recently had a hard drive fail on a Ubuntu 10.04 LTS machine that I had set up with LVM2
and I'm going to all those details at that time.
This accelerated a system upgrade for newer hardware, including update in the OS.
So I thought that I would discuss my home network arrangement and how that server upgrade changed
my home network.
Thanks for listening, and I'll see you soon.
Thanks for listening, and I'll see you soon, and I'll see you soon, and I'll see you soon,
