Episode: 947
Title: HPR0947: Presentation by Jared Smith at the Columbia Area Linux Users Group
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0947/hpr0947.mp3
Transcribed: 2025-10-08 05:26:01

---

Hello and welcome to Hacker Public Radio.
My name is Neo Dragon as I'm known in cyberspace as well as on the Linux Basics podcast.
My name is I'm known in the other dimension we all call real life is Matthew Stahl.
To find out more about the Linux Basics podcast you can go to www.linuxbasics.com.
If you have any feedback for me is this is my first contribution to HPR.
You can reach me via email at linuxgeekster.stahl that's L-I-N-U-X-G-E-E-K-S-T-E-R dot S-T-A-H-L
at gmail.com or on Google plus at Matthew Stahl that's M-A-T-H-E-W-S-T-A-H-L.
Yes, my name is spelled with one T.
I had hoped that my first episode would be on how I got into Linux but that will have to wait till next time.
Today's episode is actually a recording I made of the presentation given at the Columbia area Linux users group
or K-Lug meeting on March 14th with the speaker's permission.
If you live in Maryland and are thinking of attending the K-Lug just go to www.klog.org that's
C-A-L-U-G dot O-R-G to find out more.
I would also like to thank Alan Hastings another member of my Lug for allowing me the
use of his digital recorder to record the presentation.
The speaker giving this presentation is none other than Jared Smith, the former Fedora
project leader and I don't think I need to explain what Fedora is to this crowd.
Unfortunately he hasn't sent me a link for the slides he used so if you do want to see
them simply send me an email and I will reply back with the link info as soon as I have it.
So without further ado I give you Jared Smith.
So I talked to Chuck and I asked Chuck to send around the mailing list and whatnot and ask
what people want me to talk on and he came back and said well some people want you to talk
on Fedora and Linux distributions and working with upstream and why that's important
and some people want to talk about documentation and public and the doc book and that kind
of stuff.
So I prepared both presentations and it's up to you guys to tell me which one you want
me to present on.
The first one is talking about Linux distributions Fedora in particular, by working with upstream
is the best way to work in a Linux distribution.
Show of hands.
Show of hands.
Show of hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So hands.
So I will go over again.
I will get the door.
Sounds great.
So let me get the right presentation up here.
Before you begin,
Flow to roll out this countdown.
No, no, I had presented I had come up with basically two
presentations that are ready to give, I can give some
of stuff kind of impromptu if you want me to but what I really had presented for
tonight you know ready to go was stuff on Fedora and stuff on technical
documentation with Docbook but I'll come back another night and do do a do an
Astros presentation I'm sure Chuck will be happy to sign the Astros April so
pretty soon you guys will have to be moving up here
license plates on my car and everything anyway this presentation I call
swimming upstream how distributions like Fedora and then one I'm going to
focus on help open source communities so I want to see if my clickers work in
here there we go so a little bit about myself as you're probably guessed by
now my name is Jared Smith I'm originally from Wyoming and I love the 80
degree at weather out here today but this is what it looks like in
Wyoming so you know I grew up just south of the T-tons in the western edge of
Wyoming there's I'll tell you why because we have this joke in Wyoming that
there's only three seasons in Wyoming last winter this winter every once in a
while we get a gap in there of about two weeks and that's called relatives
grew up in a town of about 300 people I would love to live there there's
no jobs there so so I'm so I'm out of East
those few days during the summer that it was warm I would spend down at the
river and I would be swimming I would be fishing I would be floating I would be
playing in the water the rest of the year I was playing hockey on the on the
axe but this is what I love to do in the summers and I love the idea of a river
and I'm going to use the concept of a river is sort of an analogy as I go
through my my slide presentation tonight to talk about communities and
open source software communities in particular and we're going to talk about
upstream and downstream and how that works but I love rivers and one of the
one of the best things that ever happened to me when I was about 10 years old or
so I got to go fishing I got to go up to the Columbia River do some salmon
fishing got to go out do some deep sea fishing as well and that was that was
like the best thing ever because I was used to catching you know a little three
four pound trout you get out and catch a big salmon that's just that just
changes your love but I learned a little bit about salmon what do you know about
salmon it's good it's good what else do you know swim upstream they swim upstream
that's what I was looking for why do they swim upstream
spawn spawn people don't do stupid things to spawn in real life do they yeah
salmon do why do they swim upstream is that easy no it's actually very difficult
why did they why did they swim back up straight back to their birthplace
for a reason for that not amount of biologists I don't pretend to have all the
answers here spawn and safety spawn and safety what's why is it safer to
spawn in the rivers their biggest predators are not there yeah I've also
heard from biologists that there's something about the force that it takes to
swim back upstream and find the birthplace that only the strongest survive
that process and that helps with making the future generation stronger as well
so wanted to talk a little bit about swimming upstream as you know as open
source developers or users of open source software why it's important for us
to swim upstream it's not always the easiest thing to do and it takes some
hard work and some there's some challenges along the way but why that's
important so before I get on to that though I want to give you a little
background about how I got to where I am today I don't pretend to be anybody
special I'm just another Linux nerd that lives down the road so how I got
here well started off when I was in college led to Utah State University was
studying computer engineering and as part of that you know you have to have lots
computer science classes and luckily I was I have one computer science class in
particular that was a Unix class this is actually a picture of the bomb from
let's depart I didn't actually work on that no I'm not quite that out but yes
if that is a picture of the bomb I have I have this thing for that's why it's
okay anyway this Unix class in college they taught me DI they taught me Emax
I figured out that there's something wrong with my hands and I can't quite hit
enough keys at the same time use Emax I'll admit it there's a few of you out
there I know okay time for another joke I just have to throw this one out
there it anybody really die hard Emax fans gonna be offended if I make fun of
Emax yeah right okay so Emax is this great operating system I just wish
it had a decent editor so when I when I took this Unix class in college it
really got me hooked on kind of the Unix way of doing things lots of small
tools that you kind of fight together and change together to those bigger
things I happen to get very lucky and my wife was working for a company and I
would come in on nights and weekends everyone's allowed just to help them fix
a computer problem fix their networks that sort of thing one day the vice
president just said hey why don't you start working here you're fixing our
stuff you we might as well pay it for it so I got a great job had the
chance to really dive into systems administration networking and stuff on
the Linux side got to where I was managing about 6500 Linux servers
lots of fun and then it took a little detour in my in my career and got into
voiceover IP some of you here me talking about asterisk earlier got really
heavily into asterisk got found that there was no documentation started the
asterisk documentation project and then with two friends of mine from
Toronto wrote the O'Reilly book on asterisk and had a lot of fun there ended
up being training manager for digium a kind of corporate company behind asterisk
and and also their community relations manager for the law and then a couple
years ago this company called Red Hat convinced me to be the fedora project
and I don't know what was the better deal whether it was me convincing them
that I was the right guy for that job or them convincing me that I really wanted
that job but it worked out really well and so how many people here know about
Fedora how many people use Fedora cool so as you probably know Fedora is a
Linux distribution but it's not just about the bits and the bytes that we ship
on the CD every six months it's really about the community that we have that
happens to have this work product that we kick out every six months called
the Fedora distribution and we have a rotating leadership scheme in Fedora so
about every two years more or less we you know kicked the old Fedora project
leader out red hat hires another one and the project moves on underneath
that we have the the Fedora board half of which is appointed half of which is
elected by the community to kind of run the the governance of the project we
have a technical steering committee called their engineering excuse me the
engineering steering committee of Fesco that handles him the day-to-day
technical decisions within the distribution we have an ambassador steering
committee that handles the day-to-day business of events and people and
marketing and those sorts of things and that works out really well so that's
where I've been for the past two years up until about a month ago a month ago I
passed on with the Tom to to a gal by the name of Robin Bergram is the next
footore project leader and I'm just winding down the ramping her up into her
job and then I'm off to something else so let's talk a little bit about
rivers since I said I was going to use this analogy of rivers here for a
minute where do rivers start spring spring mountains somewhere higher
elevation typically right snow melts how do how do how do rivers start the
start is a big wide thing here not usually right we just start as a little trickle
small start then what happens is they flow down stream pick up other
streams people get together they converge and troop uterines by the time the river
gets out of the ocean typically it's a little bit bigger right so so the same
thing happens with software it's typically when you go out and set out the
right a piece of software you don't get a hundred engineers in the room and
say okay let's sit down and write this okay maybe there are some companies
maybe in the DC air greater DC area that might happen more often than not but I
I always like the wine then you know throwing throwing more programmers at a
project is like saying well if we put nine women if we get nine women
pregnant all at the same time that means they can have a baby in each month
right it doesn't quite work that way sometimes so anyway typically especially
with open source software projects they happen with one one person or two
people getting to you and say hey this is an idea let me start hacking on this
little bit oh this is cool and somebody else comes along and say hey that's
kind of cool let me add some code here let me help out here having for a bit
let me write some documentation over here you know and then more people climb
on and more people start using it and say hey this is great but I need this
extra functionality over here and it goes getting bigger and bigger over time
just just like this river now I use the word open source communities and I
use that that that term pretty broadly so let me ask the question well what is
a community here's here's some houses there's some people obviously live in
those houses is that a community or is that just a neighborhood is it even a
neighborhood is it just a collection of houses is there a difference there's a
social relationship in a community there's a social relationship in a community
so what tell me a little bit about this the social relationship oh they have
some some shared interest or concerns shared interest concerns that's always
important maybe maybe even some shared goals shared values shared efforts
shared efforts and maybe even some shared responsibility anybody love their
homeowners do but I say that out loud so you know I think the same thing
happens in in you know in software communities we talk about software
communities and I could go on a big long ran about what is a community and what
isn't a community at least with my own rules you know a mailing list is not
necessarily a community it list of users of your software isn't necessarily a
community this because you have a website or forum doesn't necessarily
community there has to be this social aspect to it where there's there's
there's some shared goals and shared principles and power to actually affect
change and that's I think those are those are important things
in communities about oh it's probably good five or six years ago now there was
a there was a magazine editor that asked Linus Torvalds how's the how's the Linux
community doing what's the state of the Linux community I'm Linus told him
you've got it wrong there's no just Linux community you can't point your finger
one thing over there oh that's the community over there there's a bunch
people using Linux for their own selfish interests but it's not really a
community per se that's a pretty good definition I'm not sure if I agree with
that 100% the picture that I like to use to to highlight
communities is the idea of a table that's as we've got tables in here people
sitting around what happens when you have a table people sit down
at the table especially if there's food
in that is food fights but what else happens people start talking they share
ideas oh what are you working all that's kind of interesting here's what I'm
working on I heard a bunch of that before I stood up and started
yapping my trap here right and that to me is is what community is about it's
bringing people together having a common place where they can meet share ideas
yes there's going to be some arguments sometimes you're going to argue about
the table itself and what color it should be and why don't we take this wouldn't
build a bike shed instead and we're going to have some playing more to those
but that's what community is about is bringing people together something sit
down on a level playing field and and share ideas share thoughts share concerns
okay so what happens with software communities go out and they build software
what happens to how do people get that software
distributions from a distribution right typically people don't just go
out and compile every single program they use from source
and all those there are people who do that
they call slackware users
yes distribution I call them very patient people
but there's an important role for distributions right so
distribution typically takes bits and bytes from one to
different software communities puts them together
stamps it onto a CD and DVD rolls that out every six months or every year or
every three years just depending on the distribution
is it distribution more than just the bits and the bytes on the CD though
sure I would argue that it is okay now typically if we're going to look at
just the bits and the bytes for a minute here
typically those are arranged in some sort of packaging format right
so in the world of Red Hat Enterprise Linux Fedora
some of those derivatives we have the concept of an RPM package
be it a boom-to then to use the dev packaging format
there's other packaging formats for other distributions out there as well
is packaging important it's very important
you can get in all kinds of trouble with and without package management it's
just yeah a whole lot easier to get out of trouble
if you use a good package management now
is it just a race then to see who has the most packages
I mean packaging is important and everybody wants their software package
stuff in the distribution
is that what a distribution is really about it's just having all those
packages available and ready for it always that the target audience or
that's our particular function and that distribution is geared for
that's exactly right in fact I would argue that
having some integration between the packages having the packages fit nicely
together and actually build something that's cohesive as a whole
is just as important to perhaps even more important than just having
you know the biggest walk count of packages out there
so you know if if if if a package is an individual Lego block
what we really want to build is not just a bucket full of blocks but what we want
to build is something out of those blocks right
I love the analogy of Lego blocks I'm a big Lego nerd I'm sorry to
publicly and now now somebody on the podcast is going to find that out about
when I first got married my wife you know saw that I had all these
Legos and she's like oh these are for when we have kids right
and I just she never thought she was going to have to say okay Jared put
away the Legos at your homework yeah so um I love that but I love this
this concept of of Lego blocks you can take a few and I put them together so
if I were to ask you if I were to hand you a bucket of
Lego building blocks and said what would you build if I had a
bucket of blocks right now a house a house what would you build
a building what would you build
a ramp maybe a ramp what would you build
I don't know how about over here
a house nobody's going to build a ship or a spaceship or a rocket or a bridge
I would obligate to build a spacey and have blocks of air and blocks of room
actually I was going to say probably some
vehicle from the Star Wars genre yeah I know there was a space I
I haven't liked to build space spaceships with Legos out there somewhere I'm not
the only one good you so the next concept going
back to this this analogy of a river again for the distribution
is the is the concept of upstream and downstream so let's talk about these
concepts from in here what does upstream mean when we're talking about
yeah computer software open source software a little more specifically
what's the ultimate upstream source that's the source of the code right whoever's
writing it or the group of people at the team or the
project that's actually writing the software right now the opposite is
downstream who's who's the downstream
I mean the distribution is downstream from upstream but there's somebody
further downstream from them which is eventually the end user is itself
and so distributions tend to be somewhere
along that continuum from upstream to downstream
and I want to illustrate this with with this next slide
there we go so imagine that that these kayaks are actually
paddling towards upstream okay so upstream's off on the horizon up there
somewhere we may have some Linux distributions that are
kind of on the forefront out there looking looking right up towards
upstream and and trying to be the first to be up
yeah post of that upstream software you may have some other Linux
distributions that kind of follow behind and see what those other
distributions do and go from there just as one example
the one I'm most familiar with obviously is Fedora
Fedora has kind of four guiding principles that the
determine what we do in the in the distribution
freedom friends features and first and without going into all those in a
lot of detail one of those is first we like to
take the newest software the cutting edge software sometimes a little too much
bleeding edge software but that's another topic for another day but we
like to be on the cutting edge of what's new with Linux software out there
and so we tend to push fairly aggressively towards upstream when there's new
release of Firefox or there's a new release of
LibreOffice or there's a new release of Nome or there's a new release of
Thunderbird you know we're going to be one of the first distributions
to package that up and have that ready to go
that's something we pray ourselves on continuing again with the same
analogy here let's say Red Hat Enterprise Linux
we'll slow release pace not always out there on the on the cutting edge right
still a great solid distribution and if you need support please pay Red Hat
money they go to the great company but they tend to follow
what Fedora does and say oh yeah that kayak went off this side a little bit
maybe we should when we come up the river here we're going to steer a little
to the other side or hey that worked really well I'm going to shoot through
the same channel and so you know different distributions
look at different places in the in that continuum again between upstream and
downstream now there's something about this this picture here
but I really really like but it's going to it's going to involve a little bit
of a geography lesson so so so reach your minds back to when you're an
elementary school anybody ever hear about something called the
continental divide if you're growing wild when you know what it is I mean
it's it's pretty obvious big people out of the east coast sometimes look at
me like continental divide so I need somebody to explain what the continental
divide is go ahead no it's the drainage area so so if you look at the Rocky
mountains is a good example there's places in the Rocky mountains where on
one side of the mountain things drain eventually then into the Mississippi
River and out in Mexico and in the Atlantic Ocean and on the other side of
the mountain it drains out to the to the Pacific Ocean now this picture this
picture here was actually taken in in two two oceans
creek actually this one isn't Pacific Creek but this Pacific Creek splits
off in two oceans past from from two oceans
Creek and two oceans Creek literally the creeks go down like this and it splits
into two Atlantic Creek and Pacific Creek
let's let's see if I can get my geography straight here Atlantic Creek
flows into the Yellowstone which flows into the Missouri which flows into the
Mississippi into the Gulf of Mexico and out to the Atlantic Ocean
Pacific Creek flows into the snake which flows into the Columbia which flows
out to the Pacific Ocean and so literally a river like this
splits into in some drops go you know
this direction some drops go thousands of miles this other direction
but I use that analogy and then I love this picture for that because it really
shows you if the further you are upstream the more control you have about
what's really going to happen with those bits and buds what's going to happen
with that software yeah what is the end user experience going to look like
if you're a distribution you may have this much control about what that is
if you're the upstream community you probably have this much control
if you're the end user it may be closer to this much control
so think about that as you're thinking about upstream and downstream
so next I want to talk a little bit about distributions why distributions are
important and kind of you know my vision for how I would like to see
distributions work better with upstream communities now I wish it was just
as easy as this pair you know binoculars here on the screen and just turn that
little knob and make the vision move but clear but this is this is the the
gospel according to Jared Smith this is my own thoughts on
on distribution why do people take the work and do the work in a distribution
why do why are distributions important first of all I think that
distributions give people a chance to contribute to open source
and a way to take pride in what they do not everybody is cut out for starting
a new software project or contributing code to an upstream project
but distributions give people people a nice friendly place they can
report bugs talk with other users in the same software
integrate different pieces of software together make things work well together
do marketing and translation and documentation and
what sorts of things and people really do take pride of the works that they do
and oftentimes I know we don't mention this real often in open source
development communities but people you know pride is one reason that we do
what we do in open source development it's not always about the money it's not
all about the the fame but people do take pride in in what they do and
that's an important part of it another thing that's important about
software distributions is that that they're welcoming and they're inclusive
kind of like this city of Artmore, Oklahoma here they say welcome we're trying
to build an inclusive community and I think distributions do a pretty good
job of that but baby could do a little bit better job of being inclusive and not
saying hey we're just for this little niche group over here but we're welcoming
all different kinds of you know backgrounds and
experiences um what's the point of a distribution after all?
a distribution is there to give you the tools you need to do your job
right if a distribution didn't give you the tools you need to do your job
you probably wouldn't be using it right it's an operating system an operating
system is supposed to give you the tools you need and then stay out of your way
so you can get it up and so it's a collection of tools now I may have
different tools on my tool bench than what this picture hit here has
right or I may use a soldering iron a little bit differently or you know that's
sort of thing but the point is that the operating system is there to give you
the tools you need to get the job done and so I think sometimes distributions
forget that that fact that's really what they're for is to provide tools
and then stay out of the way.
Distributions also serve as a very important schoolhouse for helping people
get up to speed not just in individual tools but kind of the the Linux
minds at the Unix way there's lots of different tools different ways to plug
them together it's not just one piece of software that solves all the
world's problems it's often unique combinations of little pieces of software
oh if I take this utility over here and I combine with this utility over here
and I take this database over here and I put them all together look at
this cool thing that I can do all right
another really really important aspect to Linux distributions is the
opportunity for cross-pollination the idea that maybe we have some
physicists over here and maybe we have some computer programmers over here
and maybe we have a guy you know he just he's just tinkering around with
computers a little bit in his basement in his spare time that they can share
ideas and and share experiences and say hey I haven't
looked at it from this perspective but I ran into this problem somebody else
could say well hey I have a little different perspective on this maybe you
should affect this direction that cross-pollination is where the really
cool ideas come out of it distribution because you have different people
different experiences different backgrounds approaching problems in a
different way
whoops skip one obviously Linux distributions
have a lot of different mechanisms for communication
mailing lists and forums and and all that and the the reason I put this
light up here is is maybe perhaps sometimes
things are a little too too compartmentalized in the communication oh I have a
question about such and such oh yeah you need to be on that mailing
list or you need to be on that forum and and yeah that's that's that's
important to a certain degree to make sure that you know that that it's not
just a mass flood with all kinds of different topics on one big mailing list
but at the same time it can reduce the amount of cross-pollination
the amount of you know there's a certain fatigue that sets in when people
realize I've got to sign up for 32 different mailing lists just to try to find
the answer another thing I think it is very important with Linux
distributions and one thing I really pushed hard for in Fedora over the
past couple of years is transparency people are watching everything you do
and to try to make sure you have transparency not only in you know the software
itself and there's properly licensed and everybody can see the source code
and that sort of thing but the governance decisions you know why was this
decision made when was the decision made who made that decision is that the right
decision for the for the project making sure things like meeting logs and
and those sorts of things are publicly available it was a very very important
thing from my standpoint for a little extra
you know sometimes Linux distributions give people a chance to stand up on
their show box and preach a little bit sometimes that's a good thing
and sometimes that's just like watching sausage being made
there's there's the good sides and the bad sides so that the important thing is
that people have a chance to express their opinions hopefully it's in a
constructive manner and you know we've all been around the walk a few times
I'm sure we've seen some flame wars and we've seen some other thing on
mailing lists but hopefully it's constructive more more times than it's just
watching sausage being made. One of the things I always
stressed to people is that everything we do is a work in progress right
how many people have you know the perfect version of a piece of software
doesn't have any known buds no no no no architectural limitations it's
perfect nobody's ever going to have to touch it again
for any nontrimial program that it becomes difficult right and so there's
going to be another version you're gonna have to change some things in the
future you're gonna have to change policies and procedures in a
distribution you're gonna have to you know bring a few eggs from time to time to
make an omelette we're never gonna have it have
you have things perfect you know Fedora 16 came out on last fall early
november was it the perfect Linux distribution
nope probably should say that publicly is the as the former Fedora project leader
it wasn't perfect it was pretty darn good I'm happy with it but guess what Fedora
17's coming up just a couple of months from now it's gonna be
hecked up a lot better then Fedora 18's gonna come out later this fall I guess
what it's gonna be even better than that it's still a work in progress
and I hope we never get to the point where it's where we're done I'm gonna be
bored right now the next slide I want to show
I want to ask the question who are our enemies
if you want to ask me 10 to 15 years ago
who's who's the enemy of open source software
Linux in particular probably some large corporate entity we'll try not to
name too many names on a couple of the numbers
if you want to ask me maybe maybe three or four years ago
no what's the what's the biggest enemy to say Fedora
one of the other Linux distributions
if you want to ask me yeah three days ago
or a month ago what's what's the biggest enemy we have it's the biggest problem
we have I would say what's that actually
patents that's that's maybe one thing I would say that I have seen the enemy
and the enemy is us I think the biggest problem we have
in the Linux community and the open source community
is ourselves the way we tear each other down
the way we can't seem to communicate on a rational level with people who
don't understand what we're talking about
anytime the way where we we tend to be clickish
the ten the way we tend to be focused on what we want to focus on and not
frame things in a way that the rest of the world could see us for what we
trying to accomplish I think that does more to to repeat our growth and
the outcomes last year we experienced something we never experienced
again in our lives the states ran out of money
over to Alaska and North Dakota
this state decided to change the operating system
the pain and microphone too much money to run their
programs
who made the presentations in space
heaven's not they came up with the going to replace the operating system to
something I have never heard of something would probably
reject immediately because everybody was out doing the own thing never realized
this is a tremendous morning 48 states in the nation are going to change
and with that it's going to come state local government because they don't have
any money either right they mean a big framing and who presented
the distribution did we pull this talk did we try to pull together and work
together to to to accomplish that we didn't know
it's in some political act up there you obviously didn't know anything about
anything they did the same
and that's and that's a lot of it and to be honest I think too many times we
put up these these artificial barriers where it's
oh it's Fedora versus Ubuntu versus Gentu you know
or it's you know my way of doing things versus your way of doing things
to a larger step though it's been like that for a long time it has so what
what you're sort of saying is not so much
you you think we we're beginning to get to a state
where we're fighting with each other but we've always been fighting with each
other we'd like to see it change we've always been fighting with each other but
I think it's I think it's been more pronounced at least in my view I think it's
I think at least from a distribution standpoint
I think I think it's been more pronounced over the past four or five years
than it has you know 10 years previous to that and you may
distribute between distribution distribution within distribution both
well I mean certainly certainly you know between you know between
distributions things things you know as hard as
myself and some of the other project leaders from some of the distribution
have tried to get hey let's cooperate let's you know if if we find a
a problem let's talk amongst the distributions and say hey let's come to some
sort of general consensus on the best way to solve this
for the for the communities at large instead of oh Fedora is going to do it one
way and Debian is going to do it another way and Open2C is going to do it a
third way and now we've got four different ways to solve three problems
fractured it's fractured and splintered and there's a lot of you know a lot of
wasted effort in trying to try to people been calling it wasted effort for a
long time though you know yeah they have but certainly within distributions as
well I look at you know you know my experience is in Fedora over the past
five or six or seven years there's a lot of okay maybe wasted effort is a
is a strong term but there's been a lot of turn and a lot of discussion and a
lot of long threads on mailing lists that at the end didn't accomplish anything
didn't move the ball further down the field
yeah I'm not I'm not going to go ask me what I think about that later
well Fedora is doesn't doesn't do that sort of thing it doesn't try to it doesn't
try to make any money in fact we in Fedora have no way of accepting money
we're good at spending red hats money but we have no way of actually taking money in you know
if we wanted to sell t-shirts and make money there's we have no physical way of taking in money
so so no we were not trying to get contracts from the Fedora standpoint I know some of the
commercial limits distributions work towards that you know red had enterprise Linux you know
to say you know I don't know I I've been very little time working on the government side of
things I know red hat has a division I'm focused on public sector stuff I can put you in
contact with somebody there that might not have that answer better I don't know off the top
of my head are you surprised that German companies have the bill for one program no
they know what they want they tell you and you don't do it you don't get any money
there's there are certainly countries out there that are more forward thinking with open-source
but in the United States comment some of it is some of it's just open-source stuff in general
and you know so there's like I said there's some countries that are very very forward
thinking when it comes to open source the Brazil for example I spent quite a bit of time in
Latin America and spent some time in Brazil and the Brazilian government has figured out hey you
know we can get things done with open source and we can we can hire people to write open source
software and over the long run it saves us a whole lot of money and there's other countries
that have come along and put laws in the place when they're going out and then trying to procure
software that look at open source first and then if open source doesn't do the job then go look
so there's there's sorry didn't interrupt but one of the things that drives some of the
contention is the new technology I mean for a while you know laptops came on the scene and all
of sudden you had Wi-Fi and there was all kinds of havoc being created by Wi-Fi drivers now we've
got mobile and that's a whole new platform and you know unity is a response to how do we
deal with mobile it may not be a great response but it is driven by the new underlying hardware
that we're trying to build on top of and I'm not saying we shouldn't have different approaches
and then play a little bit of Darwinism and survival of the fittest when it comes to to software
but there's there's things that that we argue about that aren't about new technology and it's
really you know words about you know this this has been this has been this way for 10 years do
we have to keep doing it this way or can we kind of try something you know those those sorts of
things but like I said it's been like that it's been it's been like that way for a long one time
and I don't I don't expect that everybody's just going to start you know hugging each other and
singing kumayan the world's a better place but I think I think times there's times that we do kind
of put up artificial barriers and but there are also times that things come together like open
desktop was a real serious attempt between the known folks and the KDE folks to try and become
to some sort of a consensus on what is a desktop and how can we interoperate with each other and
allow applications to run pretty much on either one sure sure we can pick up both both you know
things that like that that we could count as successes there's things out there that we could count
as as failures as well it's it's but we need to be hopefully we're at least have the minds that
that we're trying to work a little closer together try to tear down the walls and the barriers a
little bit to encourage distributions to to communicate more with other distributions people
within a distribution to communicate more and so have you seen situations where distributions have
tried to cooperate with other distributions and it's either working or not working um yes
unfortunately it's mostly not working um I did a I did a presentation a little over a year ago
at Faustim in Europe Brussels um with the leader the the the project leader from daddy and the
project leader from um from open suce and we talked about you know what can we do as distributions
to uh to communicate better on issues um we've had some limited success with that um um you know
I think I think out of all the distributions that I can think of off the top of my head I think
open suce and in fedora tend to share a little bit more of each other mostly because they're
RPM based and and you know common lineage in in a few areas and that sort of thing um
in some regards fedora's gotten better at talking to to the Ubuntu crowd and in some ways it's
gotten worse at that over the past couple of years just depending on which thing you know you
are talking how you're talking about graphics drivers talking about wireless drivers you're
talking about desktop kind of things um but there's there there's still not enough of it there's a
you know free desktop has a distributions mailing list where distributions are supposed to be able to
share um concerns and ideas and and and and that's that's kind of the venue that everybody points to
that that's the place to have those discussions um it's embarrassing and quiet on that mailing list.
But Jared it doesn't also the part of the problem that at each of the distributions
it's supposed to be free distributions have a parent company that is a for-profit or at
least they have a commercial arm and and they they want to make sure that they can differentiate
their distribution from competitors this distribution. To a certain extent from you know I get
speaking for from you know the fedora side and red hat is kind of the corporate sponsor of the
fedora project um I can I cannot stand up here and honestly say is the two years I was the
fedora project leader red hat never came to me and tried to influence the way that fedora went
or tried to make us differentiate ourselves for commercial reasons now um red hat but very very
big trust in me is the fedora project leader in the in the fedora community and uh you know
gave us gave us money to do what we need to do and basically said go out and do the best you can
with the resources you have but never once did they turn did did did did they come to me say Jared
you got to change fedora to be like this or you have to differentiate yourself this way it was never
about that it was always about go go run with the technology do the best you can
which was very you know to be honest it was very refreshing when I walked into the the the
the role is the fedora project leader I didn't know exactly what to expect I wasn't a red hat
employee at the time I you know I had great hopes that they would you know let us run and do the
best we've had that was very refreshing from that side I don't want to speak for for other
corporations and you know what they do or don't don't do from a no distribution standpoint but
yes many of the Linux distributions do have a uh a corporate partner I think some people
read too much into that at times um certainly people think oh yeah you know you know fedora's
just the beta test for that ad enterprise on us and you hear rumors like that those sorts of things
but my experience that hasn't been that my my my experiences that the the corporate politics tends
to take a back seat to so what's what's best for the technology standpoint at least within the
limited consensus of the people in that particular distribution and I certainly that's
that's one element of the that's the equation but I don't think it's as big of an element as some
people might might assume what's the state of a umbrella organizations over open source I mean
there's an open source software time and maybe two knobs and it's fine but anybody in here who
deals with audio if I came up to your mixer and turned about 50 knobs all at once what would you do to
it's cream or slapping or punch me wouldn't make you two have to do it so we have to be careful
as distribution is about how many knobs we tweak all at the same time because people get into a
habit and they say I like my distribution and it's the way I'm used to it and oh my goodness
this changed we have to desktop over here and oh my goodness they moved this icon this icon's
a different color what am I going to do and sometimes those changes are warranted and sometimes
those changes are change for the sake of change and so it's really hard sometimes to decide
is this really a change that that's going to benefit people or is it going to hurt people
just as one one example recently example in Fedora we we were one of the first Linux distributions
and we were the first mainstream Linux distribution to switch to the GNOME 3 desktop
was that painful yes did we did we take a lot of heat for it yes in the end do I believe that it
was the right thing to do probably it really was it was painful and you know to be honest
the GNOME 3 is great desktop I really like it wasn't fully baked it had some issues they've
tried to clear some of those up with good own 3.2 and GNOME 3.4 but we have to take the long term
it's a work in progress and sometimes you got to break a few eggs to make an omelet but the only
way we're going to keep moving the ball down the field is to establish relationships with the
upstream communities and trust that the upstream communities are going to do the right thing
there's just no way practical to say oh we're going to stay on GNOME 2 nobody's going to keep
developing it nobody's putting bug fixes into it because the development has gone another direction
and ultimately you either have to maintain it yourself or you pick back up with the upstream
distribution and track them and do the best you can to build relationships with them and trust
that they're doing the right thing well did it didn't work I mean we all got used to the way it
worked but honestly for me now that I've used you know I've used GNOME 3 for about a year now
for me to go back to a GNOME 2 way of doing things feels really clunky and it feels like
man I'm back on Windows 95 you know it's just yeah yeah it works and you know Windows 95 works
for some people too but but there's times when we've got to kind of break down the paradigms
that we're used to and be willing to move on to something that's different in the grand scheme
of things do I like the fact that we have such radical changes it's painful it's hard it's not
easy to it's not easy to accept but I think in the end sometimes we do need to make those
those radical leaks somebody suggested that the only reason we don't create the things that
Windows is to use new and compatible file systems it's going to go after three versions of software
it works just fine and one of the things that I've always been really excellent feature
of the open source community has been through that your software works I have been doing now
eight ten years old which are still troughing the long and moving great job and they're not all
that different from you know there's always this dichotomy there's
there's you know you could take take extremes to both sides you just say yes stability on this far
extreme and you can say kind of cutting edge new features on this extreme and you got to find
to find a balance somewhere in between and different Linux distributions play to different
to different strengths on that on that continuum for example Fedora is always going to be
further to this side now towards the new new features and less on stability just because of it's
you know it's it's shelf life we're cutting and we're cutting the new Fedora release every six
months and we're only pushing out updates for 13 months if you if you want a system that you're
going to run for seven or eight years I'm going to be the first to admit Fedora may not be your
best answer for that well that means yes yes I heard one young lady that done her PhD thesis using
tech and years years labors knew the copy of it probably won't work anymore let's do the side
and she was watching as a beautiful copy of the thesis you know the print I had something like
5,000 word perfect files oh you can't remember that are practically impossible to open and
nothing is that stability has always been one of the features that we have as one of our best
marketing points why are we a danger I don't say but I don't think you have new things but
I think there's I think there's two things to that the first is one of the nice things about
open source is that source is open and so we can continue to try to do our best to maintain backwards
compatibility you know I bet if you went to Microsoft and asked him hey I want to fix this thing
in Windows 3-1-1 they wouldn't even know where to find the source code to go back and fix it or if
they didn't know where the source code was they wouldn't want to go go go back and fix it you know
the nice thing about open source software and having that source available is that if people want
that they can they can go use the source code to help them help them solve that problem where's
case if you want to bad enough you sit down and fix it yourself right on the second hand then
the back going back to my analogy there are Linux distributions that that are very much focused
on hey this is for the long term we're going to support this particular piece of software for
10 years in the case of Red Hat Enterprise Linux so so there's there's extremes in both sides but
I don't think you can have stability and backwards compiler compatibility and the latest and
greatest features all the same time without making some compromises someone along here and then
over that I go back to the underlying technology that basically we are in a major shift in terms
of the hardware platform that our software is running on having ported an application to the
Android platform it is a total game changer so all of the operating systems vendors whether they're
proprietary or open source are trying to adapt to this new technology and ultimately what they'd
like to be able to do is to say one size fits all that we've got this operating system and it will
run on the older PCs or it will run on the newer smartphones and tablets and guess what that's
not an easy thing to do and so right now we are in a huge state of flux in terms of the new code
that's coming out because they're trying to adapt it to a brand new hardware architecture
and the thing is is that if you don't use this stuff on tablets and smartphones what you're seeing
is a huge change for no good reason whatsoever so I see all the forums where people are just saying
this is crazy you know PCs will be around forever yes they will use the software you were using last
year because that's that was designed specifically for PCs all the software this year is being
designed for this new hardware and oh by the way we're gonna try and make it run on the old PCs
as well but our target is this new mobile platform so you know I think you're talking apples and
oranges here when you're talking about you know being able to use old word processing formats and
things that's one issue but what we're seeing today with unity gnome 3 Katie before all of
these things they're trying to figure out how do we deal with this new hardware that's that's
certainly coming over here actually I disagree but I'll talk to you offline on that
if I may introduce another method for her sure distributions
the distribution is really a community of communities there are different projects
this Katie there's gnome there's the gcc project there's all kinds of projects and they all
how they move right there's no one person calling all their shots
so you met a four island this is the metaphor of the herd or the pack I like her it's a very
project can move independently but they have to say in the herd there's no one calling the shots
for the herd because it happens all the gazelles run off and herd moves except for that one
gazelle wasn't paying attention in line by the way
we're on this very right in this herd software software at all
sure um the biggest well first I'm going to say that I love so I remember starting out with Debbie
and then we're suddenly giving me no I started off with Debbie and trying to update at one point
and finding out the update or the change from xy and I was no longer able to update
um so I do love to do it the reason that I see for wanting to be put again is the same reason
that I years ago asked something why is it that to say japan it's all the coolest new
they get all the new game systems new stuff they get new phones why they get it and somebody
explained to me because american audiences well this is what they they said american audiences do
not like new stuff that still has bugs they're not willing to go through the regular reporting back
and get and trying to know if the newest cleanness piece so where they they actually use japan
to fix the data temperature before they get the European and the American market with fedora
I don't see a polished project I see something where you see the newest brand new stuff but
the only the only matter is for the good timeline as a place where you can go and get the brand
new tool it isn't quite done yet it's something like q lags out of out of a japan
where they've got something brand new something exciting that no one else has ever seen
there's not quite safe here is and i love this i love this coming edge i love this
this brand new but is there are there are there admin are there advantage to being able to show
tools that aren't quite done yet that might break apart from the presence hands that and leave
a little with something they can't use that one point i want the end one that's the better
question that's what i think so so my answer to that is it all comes down to usability if the
operating system doesn't let you do what it is you're trying to get done whether that's right a
program or open a word processing file or you know whatever it is you do then then then that
operating system isn't isn't useful so so usability is key there and you know we we try to walk
a fine line into the door we don't always do the best job we can but we try to walk a fine line
between being cutting edge and bleeding edge you know we want to we want to be enough on the
cutting edge that that people are seeing the new features maybe before they're fully baked maybe
before all the bugs have been worked out but but still in a usable state and we've you know over
the last you know three or four years we've tried particularly hard with our qa
you know team and and and project with infadora to make sure that when we release a particular
version whether it's the alpha or the beta or the final release that all our releases are are
based on you know on release criteria we have a list that says it has to do this this has to
work has to do this it has to it has to do this and and over time we we we find that that that
list of criteria but that way we're not just shipping out a distribution because oh there's
a six month mark it's got to go out the door but we we really do try to focus on does does the
core functionality work are there you know make sure there's no major flaws in the system yeah
with individual applications or individual sub projects there's there's going to be things
that aren't fully polished that that have some rough edges but we still want it to be usable
if it's not usable then it doesn't do anybody anything so it's it's it's it's it's walking that
fine line it's not an easy easy line to to walk and if you've looked at for example the footwork
release schedule one of the things I got beat up a lot on was you know especially with our
alphas and our betas they tended to slip oh we had it one week slip in the health oh we had a
two week slip in the beta and I don't see those as failures I see those as trying to make sure
that this offer is usable that it's not so rough and so raw that it can't be that it can't serve
a good purpose so it's a balance does that answer your question here and then you are sacrificing
part of your market to be kind of rich for example it's very difficult for us to make a dramatic
change of how we do something I was 80 years old it comes slow
I have a friend who's 92 drives but there's only investing in everything out there but he's not
all up here at least and you're slowly to the end of the week you're going to have to
smile and I'm going to be next. Well and let me say two things to that to that effect first
of all in Fedora we we very rarely talk about markets in fact I think this is the first time
in the past two years I've really talked about a market because in Fedora we're not
you know our number one goal is not you know to be the most popular our number one goal isn't
isn't it yeah make money we like I said we can't make money we we like users don't get me wrong
and we we try to actively count as best we can with the limited tools that we have to see how many
people are using Fedora we don't have any phone home mechanism or anything like that to count how
many people are actually using it we count downloads and we count number people that that their
systems check in for updates and try to extrapolate some rough numbers on that but that's never been
goal number one goal number one is to build a great community and use that community help build
great software and is number of users important yes it is but it's never been our number one goal
but at the same time if if it comes down to you know being that the the the software distribution
that that puts the features in first and and guarantees freedoms within the in the project we're
going to err on that side rather than the number of users side because there are other Linux
distributions that are more focused on users or longer term support for less changes or slower
rate of change that just doesn't happen to be Fedora's forte I would I would point you at I would
point you at a Fedora enterprise Linux or a devian or a you know one of their derivatives
for something that slower slower pace of change less radical change for that sort of thing that's
just never been Fedora's strong suit that's not not not our intended our intended focus just
like there are some other questions so where are two examples like one of cutting edge changes
I don't know great um I think the good old three thing was it was it was a was a pretty radical
departure from from you know from the gnome 2 dash top I think in Fedora um 16 to 17 you know
16th particularly we moved to the system D initialization system to move the way from the field system
five um initialization system which is an initialization system it's a pretty radical change in
system five been around out out forever and uh and everybody's familiar I'm most everybody's
familiar with system five in the way it works and just kind of takes it for granted that okay this
is how it uh this is how it's always worked that's the way it should always work um I think it's
great that that Fedora was able to go out there and say hey let's try something different you know
there was upstart that came out a few years ago and it solves some of the problems it had some
problems and some system D was kind of the next step from that say hey let's try to let's try
to take that one step further and and I love it it's it's it's still got some some minor things
that I'm not perfectly happy about but from from from from taking this long-term view of where do we
want to be five years from now where do I want to be 10 years from now I think it's definitely
one of those cutting edge features that's that's in the right direction it was first in Fedora
and other distributions are slowly coming along and saying yeah yeah we see the light now
something yeah because you took a lot of pushback from other distribution yes we did and we knew
we knew that we would and we don't always get right you guys started the argument sometimes sometimes
to do and uh and we have all the honest we have people within the Fedora community you're really
good at starting those those types of arguments on them and and so you know you got a lot you got
to walk this fine line for me personally the way I view it is when you're arguing about what's
right from a technology standpoint that that that argument is perfectly valid and that needs to
happen and is a healthy thing to have happened when it goes beyond that and starts arguing about
who's right instead of what's right that's the point in my mind where I said ah something's
wrong here you know when it when it's Fedora versus Ubuntu versus this technical decision versus
this other technical decision that's where things start clicking in my head and this will red flag
those up and said ah that's the that's when the conversation has changed so so you so you
you are back to you know what what's my ultimate vision my ultimate vision is that there's lots of
healthy debate about the the technical pieces of the distribution and what what can we change and
what shouldn't we change how should we change it when should we change it I think those are all
very healthy and and unlawful things it's really though listening to the tone of the conversation
it's it's listening to are we talking about what's right or are we talking about who's right
it's when the argument moves past what are we going to do to make things better and just arguing
for the sake of arguing that that that that that's you know ultimately what the what the at least
my own vision is about is not only having the conversations but listening to ourselves in a feedback
loop and and what are we really arguing about what are we really fighting about is that really
the most important thing at this point um so to kind of end that kind of the canned presentation
tonight let me just point out but why why is it worth it swimming upstream why is it we're putting
all this effort in it why do we reach out to upstream communities to try to build those those
bridges of communication to work more closely with them it's to try to influence because we all
live downstream we want to we want to make the world a better place for all of us and so yes
we have arguments we have problems you know we have things that we could do better to outreach
on whether it's outreaching to governments or outreaching to to end users are outreaching
with different software communities the end goal though I think we all share the same end goal
and that's what we all end downstream we want you know open source to thrive we want open source
to be commonplace we want basic freedoms guaranteed for ourselves and for our software and for
the devices that we have and so that's that's why we do what we do and that's why it's important
okay that's the end of the canned presentations I'm open for comments questions complaints
brought tomatoes Jared you talked a little bit about the door remix and what the objective is
there the goal is there sure so from the beginning Fedora has always been about flexibility
giving people the freedoms to do what they want to do with the software and one of those freedoms
is to be able to take it and change it and remix it and spin it in a different way and come up with
your own derivative for legal and trademark purposes we don't want people to go and take
what's in Fedora and mix it with third-party software that's not licensed appropriately and
still call that Fedora for trademark reasons that's that's a bad idea so we came up with a secondary
mark called the Fedora remix which is basically saying hey this is a mixture of Fedora software with
some other stuff but it's not exactly the same as what you get on the Fedora distribution but
that's okay we highly encourage people to go out and take Fedora and remix it and try things a
little different way in fact we provide all the tools we provide all the recipe here here's how
we build the distribution so you can go build your own remix yourself I think that's a very healthy
thing and a very positive thing and even even our official what we call spins of Fedora you know
the KDE spin and the LXDE spin and the electronics lab spin and the audio spin and the computer
security spin and I haven't noticed what the robotics spin did I say you know we have these other
kind of focus groups that focus on one particular area and put together a their own spin of Fedora
I think those are very healthy thing to do because as a distribution you can't make all the people
happy all the time but if there's a group of three or four people don't want to get together and
say we're going to focus on electronics or robotics or we're going to focus on computer security
and we're going to make our own little subset of Fedora over here to focus on those areas I think
that's a very very healthy thing so that was unrelated to the Raspberry oh the Raspberry Pi stuff
so the Raspberry Pi is a really interesting thing so keep me off on a tangent here but I'm
going to talk anyway so everybody familiar with the Raspberry Pi I said $25 computer about the size
of a credit card that three quarters of an inch thick I've got a picture of it on my flicker
account if you want to look at it I've actually held one in my hands which is kind of cool
the when when the Raspberry Pi organization started you know getting serious about building
their boards and started having prototypes and stuff made they started going out and asking
you know a mixed distribution hey do you want to build a version of your distribution that works
on our particular platform there are certain distributions to remain unnamed who said
not we don't want to support that in a story other distributions such as Fedora that picked up
with the bandwidth and said yeah we can do that you know we have support for the ARM processor
that you're using and we don't think it's a little work to get all the other packages exactly
the way you want them but yeah we do that the exact reason why it was a remix and not just a
Fedora distribution is because for the Raspberry Pi in particular there's one piece of code
for the system on the chip that is not open source yet and until that that one piece it's the
piece that talks to the the graphics chip and the graphics chip talking to the to the CPU
and until that piece is open sourced you can't really run a software without that piece of
software and it's not open source so we can't include it in Fedora so that's why we made that a
if it were a remix rather than just a a plain vanilla distribution of Fedora we're hoping to be
able to work with the with the hardware vendor and and get them to hopefully keep our fingers crossed
you know how hard hard hardware vendors can be at some time in the future make that all open source
and at that time we'll have Fedora distribution specifically for the Raspberry Pi in the meantime
the Raspberry Pi remix is all but one package is Fedora and all all but one package is open source and
it's just that one that one loader piece of software that's a binary so simply simply for memory
memory constraints on the physical device and size of the package is needed on the you know on
the you know LXD is very lightweight takes up less memory and it takes the packet the whole package
that takes up a lot less space on the on the SD card I've got a legal board sitting on my desk
right now good home will at least theoretically run just fine on you know on the on the Raspberry
Pi again because it's a because it's a Fedora based remix you could certainly remix your own and
put good home on there but for for the sake of trying to get this out in a hurry and simplicity and
low-memory requirements Chris Tyler from from Santa Fe College up in Toronto we put the remix
together chose to go with LXD if you're interested in that sort of thing the Fedora ARM group has a
weekly meeting they've got an IRC channel they've got a mailing list where they're actively working
on that and making improvements to Fedora support for ARM all the time.
One point you're absolutely right and we're working on that right now we're working on Fedora
17 for for ARM and so we've just got GCC 4.6 working on ARM and working well on ARM and it
actually does a better job yes it does it does a heck of a lot better job some of the early
versions of GCC on it's still not perfect but it's it's a step in the right direction it almost
seems like the RTL to the somewhere later the GCC doesn't understand that they will be
real extra set of registers and like more more registers than you might find on the next 86
processor what a concept you know yeah one of these 20 other registers doing oh there's
it empty we don't we don't worry about those he knows since it's a man behind the curtain yeah
we could we could go on and on about technical details like that and we probably catch catch
catch me after the meeting and I'll tell you off ends of our stories but
or we privy to discussions that led Red Hat to move from Zen to another virtual machine
so this is a this is an example of one place where um you kind of upstream development was done
it got pulled into Fedora Fedora tried it for several cycles to see whether it was ready or not
for kind of the enterprise world Red Hat kind of took and wouldn't ran with with with Zen because
it had approved itself in in Fedora at the same time when TVM came out it was pretty obviously
pretty quick that that it had some advantages to Zen at the time especially the way the Zen
hypervisor was was being developed in the case at which it was developed and and trying to get
that rolled into you know upstream kernels and so it was really a matter you know Red Hat kind
of placing a technology bat out there and saying oh I worked well in Fedora let's run with it
and then KVM came along and said okay that runs a little better in Fedora so we'll kind of shift
gears that you know that that that's that's the nuts and bolts of it going to more specifics but
that's the nuts and the bolts on it is when it came down to it you know Zen Zen's pretty good
hypervisor but but because of the way it wasn't being developed as as quickly and in in lockstep
with the Linux kernel it became harder and harder and harder our time to try to port that to the
to the kernel and tell you know tell just recently when they made some really major efforts to
get that back closer up thank you question over here
Fedora is the forefront of flexibility is there any sort of effort to try to help the side from
the first red series of efforts to take what has been learned is Dora and move it into other
packages okay I haven't working on Fedora how do I move it to a more stable package that something
that packages are up to it's up to them if they have to come up or in the roof of cells or is
there no there's a couple of things we do in Fedora to try to try to help that out one one thing
in particular is is we have a kind of a sub project in Fedora called Apple enterprise packages
for enterprise extra packages for enterprise Linux excuse me EPL and that's a set of packages
use the Fedora packaging scheme use the Fedora packaging guidelines the Fedora build system
but their packages design specifically to be extra packages for a redhead enterprise Linux
sort of derivative derivative that like CentOS or scientific Linux or something like that
and so that's one one effort where we say here here's things we've done in Fedora the
work well in Fedora lessons that we've learned packages that are available in Fedora that may not
be available in these in these other you know kind of longer term slower slower moving distributions
and help out in that direction that's that's that's the what you know probably the the major thing
that comes to mind there are other things things from kind of an infrastructure standpoint from
how how we get the distribution built kind of standpoint we always try to be very transparent and
open about the way that we do that and the lessons that we learn as we build our distribution
so that other distributions can follow along you know our build system is open our you know
you know all our you know sys admin tools everything we all the tools we use in Fedora you know
from our build system or infrastructure to our web servers to our databases are all open all
that's available you know if you're in a puppet for systems management all our puppet recipes
are open so all all that we try to be as open and transparent as we can so that if people want to
follow along and learn from the lessons we've learned it's all out there and available that's
that's right we don't have a secret sauce on this is how we put the distribution together these
are the tools we use to put the distribution together all right I put everything to sleep it looks
like thank you again for inviting me glad to come out if you have other questions
I'll stick around for a little while and then I'll help answer some questions and like I said
so I'll try to get back up here next month or sometime in the next in the near future we'll do
a presentation on voiceover IP or technical guide you have been listening to Hacker Public Radio
at Hacker Public Radio does our we are a community podcast network that releases shows every weekday
Monday through Friday today's show like all our shows was contributed by an HBR listener like
yourself if you ever consider recording a podcast then visit our website to find out how easy it
really is Hacker Public Radio was founded by the digital dog pound and the economical and
computer cloud HBR is funded by the binary revolution at binref.com all binref projects are
crowd-sponsored by linear pages from shared hosting to custom private clouds go to
lunarpages.com for all your hosting needs unless otherwise stasis today's show is released on
your creative commons attribution share a live free dose of license
