Episode: 3641
Title: HPR3641: Turntable audio capture Part 2
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3641/hpr3641.mp3
Transcribed: 2025-10-25 02:37:51

---

This is Hacker Public Radio Episode 3,641 from Monday the 18th of July 2022.
Today's show is entitled Turn Table Audio Capture Part 2.
It is hosted by Archer 72 and is about 6 minutes long.
It carries a clean flag.
The summary is on Revised Previous Capture Scripts.
Hello, this is Archer 72 and in this episode I will be your host revisiting some scripts
that I was working on on Episode 35-07.
I went to try them out on one of my records and the results were inconsistent so I decided
to go back and try A record which provided a lot more consistent results.
For one I was using Hardware Equals and a number and when at some point I moved the USB
plug from the turn table and plugged it back in again.
It didn't keep the hardware number.
So I used A record dash capital L which gave me the hardware signature that I could use
which would always remain the same.
What I ended up with was A record dash dash device equals hardware colon, card equals
codec comma dev equals zero, dash dash rate equals 96,000 which is 96 kilohertz, the sampling
rate, dash dash channels equals two, dash dash view meter equals stereo, dash dash duration
is 1500 which is a little bit over 23 minutes on that number after duration is in seconds.
dash f space DAT is from one of the pre-selected format shortcuts and it's 16-bit stereo at
48,000, I made 48 kilohertz, you can correct me in the comments but I think that rate equals
96 kilohertz is overrides that DAT specification.
Then it's dash dash file dash type space in this case wave and the value you're writing
to for the wave file and that completes the command for capturing a wave file.
The script for capturing and converting straight to FLAQ is almost the same except after the
dash dash file type being wave that stays the same and then you pipe to FLAQ space dash
space dash O and then the file name as a FLAQ.
So now I could keep the album whole or split it in the tracks.
Then FLAQ had done an episode on this very thing using Audacity with one change before
it was in his version, it was analyzed and you go to Silence Finder and then continue from
his instructions.
Now it's analyzed in the Analyze menu and label sounds.
I found a tool to do this as well except it's on the command line.
The tool is MP3 split but it is spelled MP3 SPLT.
The format for this command is MP3 split dash S dash P TH equals dash 40 for the decibels
comma min equals 6 comma RM.
The explanation for this in the article I read is dash S is silence mode activate silence
detection dash P specifies arguments for the silence mode and I'm guessing that dash
P mean parameters TH equals dash 40 is threshold level and decibels to be considered silence min
equals 6 is minimum number of seconds to be considered as a split point and RM removes
silence from the split files.
What worked for me using a journey album as an example from YouTube was setting the
threshold to minus 30 dB's and min split time as 0.5 seconds.
On a couple of tracks this left three tracks together because there was not enough silence
in between to recognize a new track so here I used M player to seek to where I could
probably hear the silence and then used FFM peg to cut where the tracks were using FFM
peg dash I track dot flack dash SS to seek to the point you wanted put a time code in dash
two put your next time code in toward ends and then track cut on that flack.
I found an interesting web page for when I was trying to find the best source material
to download so that when I converted it to flack it was still good and the site is whiteegram.com
and they have downloaders on the page for YouTube and Instagram and Reddit and several others.
So if you're one like me that likes to keep some material offline this is the one to do it.
That's all I have.
I hope this was useful if there are improvements to be made please leave comments or even
record a show of your own.
Thanks for listening.
Goodbye.
You have been listening to Hacker Public Radio at Hacker Public Radio.org.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording podcasts and click on our contribute link to find out how easy it means.
Hosting for HBR has been kindly provided by an honesthost.com, the internet archive and our sings.net.
On the Sadois status today's show is released under Creative Commons Attribution 4.0 International License.
