Episode: 1209
Title: HPR1209: Northeast Linux Fest 2013 p2-3
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1209/hpr1209.mp3
Transcribed: 2025-10-17 21:42:16

---

Did you should be saying all this into the...
Oh, I didn't even be recording it, no, no, I said it should be Russian roulette podcasting
because one of these folks walking around is a loaded chamber and I'm hoping not to find
the loaded chamber and I said if someone takes a swing I don't know, I've got his back
as long as he gives me a minute to put my computer down, close it, shut it down, we're
going to walk really fast because I'm going to ambush a guy who I tried interviewing two
years ago and a year ago and I keep missing him and we're running to catch up and there's
foot traffic and walking through the camera, he walked into the camera, I didn't do that.
And we are here live at the Canoe Northeast Linux Fest with Mr. John Mad Dog Hall.
Hi guys, yeah I can see that.
We just snuck out behind a bail hurdle, that's all I'll do that, how are you doing this
year?
I'm doing fine, I just got down here from my house, I had to get up at four o'clock this
morning because I was doing a proposal for somebody so and then I had to finish my talk
which I still have a few minutes left to do so maybe you guys would, I'll talk with you
a little bit but then I have to find some.
Bill I told you he looked busy, we'll come get you later thank you and I'm sorry, no
no it's okay I have a few minutes so if you want to do something now I'll be better
than, you know, your phone's ringing, okay anymore, so what would you guys like to talk
about?
Well I wanted to interview you two years ago and then a year ago and I was just never able
to catch up with you, not your fault at all and I felt so bad about it and I just wanted
to give you the time to say what you would like to say to the Agri Public Radio audience
because I'm just a big fan.
Boy now you're putting me on the spot because I don't know what to say but are you going
to be here tomorrow?
I should be here tomorrow yes.
Okay well tomorrow I'll have much more time and we can sit down, I'm going to try and
get down here a little bit earlier than today and then afterwards there might be some time
for beer.
Nice.
Well if NY Bill the hero of the day shows up with his laptop and this awesome 1980s microphone
we will do that.
Okay so it's an if, let's go someplace where I can sit down and she can have a better
talk.
Right on.
I don't think about what I'm just going to say.
You guys see the kind of thing you're missing, John Mad Dog Hall, sitting you down for a
talk.
I should be saying sorry sorry but Poke is coming at you with a microphone, that's
it.
Yeah there's a vent right over there and cool thank good good eye Bill.
Oh it's a nice quiet corner too.
You know what you guys sit and that way I can aim the mic at both of you and go.
I know I felt really bad.
I have not seen you yet while I had a mic in my hand and I felt like such a jerk for
not finding you in time two years in a row.
I can, yeah it'll be hard if I can't see.
Hey everybody it's Poke and NY Bill back at the North East Kenu Linux Fest again and
we're now sitting down with John Mad Dog Hall like gentlemen instead of like jerks approaching
somebody in all way and NY Bill was not the jerk I dragged him along.
Exactly.
Mr. Hall how are you?
I'm fine.
I just got here at the Fest and got logged in and registered and everything so I'm fine.
Awesome and you've been here.
This is your third year at the Fest as well.
I imagine that means you like it.
I do.
I think that Jonathan is doing a good job of growing the Fest and you know and I am really amazed
at the type of stuff he can do.
And you've been now your keynote speaker or your keynote speaker last year in this year
or all three here.
I don't think I was a keynote speaker last year because even this year I was lucky to get a
keynote spot because I didn't know I was going to be able to be here until the last minute.
Okay cool and without spilling too much for people who didn't bother to come down to see it.
What's your keynote on?
Well they're going to hate themselves because my keynote this year is about how to make money
with free hardware and free software.
Well I should say open hardware and free software because hardware is truly difficult
to make absolutely free as in gratis.
But it is free as in freedom and I think that's important.
Yes it absolutely is.
And you've been actually working at this for a very long time and you've been,
I want to say sort of shepherding the community in the right direction for a very long
time.
When did you start working with either free software or open hardware?
Well actually I started working with free software and open hardware in 1969 because back in
those days when somebody, when you got a computer product you got it in source code.
There wasn't enough of any one type of computer to justify making a binary only distribution
and selling it.
There were no computer stores because if there had been a computer store you would need an 18-wheel
tractor trailer truck and you would need three-phase power and a 20 ton air conditioner.
I mean here's a perfect example.
If people had come down here they would have seen the Mark I computer over there with his drive shaft
and it's one third of a second cycle time displayed here in the building which I thought was very amazing.
And I'm a little upset at Harvard that there's not a single picture of Grace Murray Hopper
there who was the first programmer of the Mark I.
Howard Aiken was brilliant in creating it but he knew nothing about ballistics.
That's what a lot of it was programmed to do.
So Grace Murray Hopper had to come up from Princeton and program the machine to do ballistics.
You know you planted a seed in my mind last year when we were talking at the bar and I at the after party anyway
and you kind of without even trying convinced me that no matter what happens in computing
everything's end goal is always going to be funded by military and there's always an end goal
and we might not know what that is.
But if we're keyed in to the fact that the first computers were ballistic computers
it kind of gives you an idea of where things might go.
Well actually the very first automated calculating machines was Charles Babbage
and his was actually intended to print books accurately.
A book filled with science co-science tensions, you know mathematical table books.
When I was in college starting in 1968 every student had to buy the CRC chemical rubber company book of mathematical tables
and that with your slide rule allowed you to do the exams and stuff like that.
Those books what Charles Babbage found out were those books when they were calculated by hand
and then set by hand and printed it basically by hand.
There would be mistakes in it and he was comparing one book with one set of tables
with another book in the same set of tables and they had different numbers
and this really upset him because he said well what happens if an engineer depends on this
and is going to build a building or is going to build a bridge.
I mean he could get a wrong answer and the whole thing could collapse.
Well this is what happened with that NASA crash where somebody was using metric
and somebody was using a standard and they didn't make the calculations correct
and it wasn't a big deviation but when you multiply it by the kind of distances experienced in space
that's exactly what happens. So Babbage knew that lesson back then I can imagine that would be that difficult.
Sorry to interrupt Jack.
Yeah well unfortunately he was never able to complete his machine
but the theory behind it and everything still went on and it was about two years ago
that they actually took his plans and built his machine finished his machine
and it actually works and there's two of them now.
One of them is out of the computer museum in California.
So the earliest computing engines were not necessarily for war or for military
and I don't think that one of the things about free software
and this happened in the early days of Linux as people said well I don't want people
using the software that I write for free and give away for free to make money
and they were upset that people were going to make money off of Linux
and I said well you know if you if you if number one if you take that philosophy
then free software is going to move forward slowly like a glacier
and it's not going to move forward fast. You're going to have all sorts of people
going to be fighting you. But the second thing is what we were finding
was that other people said why do I know what my software used by banks
because I don't like banks and some people said I don't want my software used by
the military because I don't like the military I don't want to use by the government
because I don't trust government and eventually it comes down to your software
it's not used by anybody and that's one of the reasons why in the laws of the GPL
it says the software can be used for any reason.
You do not create morality by limiting the use of a tool.
Amen. And I think that that could be applied to a whole bunch of stuff.
I mean morality should be taught to people and not legislated to people.
I mean people should do should do moral things because they're the right thing to do
not because there's a law that makes them do it.
I agree and if you're in a society that would make those laws
you would hope that there would be social repercussions for choosing immorality
and that you wouldn't need legal repercussions for trying to legislate immorality.
Well I think there are social implications and social things that direct people to being moral.
Maybe we need to emphasize them more. Yeah definitely definitely.
I'm agreeing over here but you can't hear it's a directional mic.
It's a really nice mic but I'm not fast enough to swing it.
Oh great.
Okay it's going back to my talk about how to make money with free software and open hardware.
I've also been working on this project for the past seven years called Project Kawa.
And Project Kawa is a project to create jobs.
And we create jobs by making it very easy for people to be able to sell services based on free software and open hardware.
And because we keep, because we're using open hardware and because we're using free software.
That basically this can scale very rapidly and that we believe that where we're starting the project
which is done in Brazil and the economics work out very well in Brazil,
so that we'd be able to create between one to two million new high-tech jobs in Brazil and another three to four million new high-tech jobs in the rest of Latin America.
And if it works out well then there's no reason why I can't work at least some places.
And some of the technologies could be used in the United States or in Western Europe and stuff like that.
So the reason it works so well in Brazil and Latin America is because of the economic structure of the countries and the density of their cities.
Their cities are very dense.
And in the United States we tend to be more spread out.
But there's really no reason why Project Kawa couldn't work in inner city Manhattan, inner city Detroit, inner city Los Angeles and stuff like that.
Excellent, excellent, excellent. So I was just about to ask a devil's advocate question but you already just answered it and the question was going to be what would you say to people who were for American people who would say that you're going somewhere else and creating jobs somewhere else.
But obviously the answer is you're creating a model that anybody can use.
Exactly right. And I am very much of the philosophy of creating local jobs.
I want to see create local jobs. I also want to create local support.
Now when I started in computers in 1969, most of the people working on them either had a master's degree or a PhD in computer science.
And what happens with that is that if you have a problem, you go and you ask the person at the desk next to you what the answer is and they look at it with you and they work it out.
And if you can't figure it out, you ask the person on the other side, you know what the question is.
But then what happened was that type of support got moved downstairs to the computer center. And then after wow, I got moved out to the hardware and software vendors who are creating a hardware and software.
And then it got moved to China and India and West Texas and you can't understand any one of them.
And at the same time these two guys named Bill Gays and Steve Jobs went and put a mainframe on everybody's desk and said good luck sucker.
And so what was happening was you were you were getting people who did not have the training in computer science to understand what computers could do.
Now having this things that on their desk and at the same time you're moving to support further and further away.
So let me give you a real good calculation of what that really means.
Let's say at the average person over a month period of time weighs five dollars of their time every day taking care of the computer.
And I'm not talking about people in large corporations where they have systems administrators and stuff like that.
But I'm talking more about smaller medium business where typically people have a var or somebody like that who comes in and takes care of the computer systems.
Five bucks a day to take care of it. Most people spend more than five bucks in time booting their windows machine.
Well I was being conservative very conservative.
Well there's 1.5 billion desktop computers in the world.
And so that means we're wasting as a society 7.5 billion dollars every day.
That's almost enough to fund a small war in Iraq.
And I'm not saying that Project Kawa could eliminate all of that.
But let's say that we could reduce it by two dollars per day per person.
And that we could actually use and more than that we could actually make computers fun to use again.
You know the people around here are kind of strange.
Most of them actually like working with computers but the average person on the street they hate working with computers.
And the only reason they do is because that's what they have to do their job.
This reminds me this is very funny. It reminds me of a conversation I had with my son last night.
And he said when his friends see Linux on his computers they don't know what it is.
And in trying to explain it what he basically was saying is Linux is something that makes this work like a computer not like Microsoft or Apple.
And that's true that no matter what happens.
So I've been in the industry since 1969 and I can honestly say that probably the crown time of computing was something we called time sharing.
We had all of your data and all of your programs in one place and there was this group of people took care of it and you didn't have to worry about backups and you didn't have to worry about spam and you didn't have to worry about viruses.
They did it and all you had to do was turn on your little terminal in the morning, log in and do your work.
Whatever it was and these days for a lot of people that's doing a spreadsheet that's browsing or whatever they do every day they're used to that.
It's the things they do every once in a while that they do very poorly.
So every once in a while they have to install new software every once in a while they have to do backups every once in a while they have to do all this stuff.
That's what they do very poorly and that's what they hate and that's what they screw up.
You're predicting that I'm very bad at clipping my lawn.
Yes you probably are and it's a lot of other is a lot of things.
It doesn't normally fit into your normal schedule so you have to take time out for it and it's and it's something you're not quite used to and you have to look around for the things that you did it with the last time.
We can spread out to you after garage or something like that and so these are things these are the reasons why a lot of people really hate computers.
It's because they're not there every once in a while they're asked to do something which is not what they do every day and they forget how to do it.
And I remember might my father could send email and my father could browse the web but for everything else he had this book where he wrote down every single step
because he couldn't remember it from time to time.
My best friend does the exact same thing.
Well I even had a systems administrator many years ago and I think he wouldn't mind if I told this little story but he also he was trained as electrical engineer not a computer scientist and a very smart guy.
But when he was he was forced into being a unique systems administrator in the early days of Unix and he wrote down every single step to do something.
So I came along and I was trained in computer science and I was new to Unix and I would follow his step step by step until one day I realized that you do step three step four really didn't do anything.
Step five actually undid step three so you can immediately go into step six.
And I said hmm and I went from three to six and he goes what are you doing?
I said well Bob you know it does the same thing.
It's just you don't have to do this and I meet this stuff because one step does the other one.
He looks at me.
He closed up his book he said you don't need me anymore.
You are you are.
Ask me you already passed me.
Oh nice nice story.
I want to thank you personally for giving me some inspiration a couple of talks that you've done.
I won I believe it was called something with logs in the title who was the logs and explaining how logs are used.
How big companies use logs to track you down not to track you down but to use that aggregated data to make money and why those logs are valuable and why you should be running your own personal services your person I don't I will not use the word cloud.
But that's and that inspired me to start doing some of my own server administration whereas before I was just a dumb desktop user even a dumb Linux desktop user just using the Linux desktop.
And then I have grown more because of that particular talk than probably any other single thing.
Yeah I when you first started saying logs that sounded like more of a systems administration type of talk that would normally give but when you start to get into the privacy issue.
Yes I could probably have told you that because I am very much aware of that and particularly when we are when you are outside of the United States.
So when I go down to Brazil and I start talking to them they're very conscious of the fact on the use certain cloud services that they're not only under the laws of Brazil but they're under the laws of this other country that they can't vote for right.
They can vote for the president they can't vote for the Congress they can't make the laws they have no effect on the laws and yet they are still under the effect of that.
No to mention this country has a pretty hefty track record of extradition.
Well whatever it is there's you know they they wanted underneath of their laws and this is where I have a real hard problem with some of these laws that our government is coming up with like soap and stuff like that.
Can we just so we can continue this conversation civilly can we agree to call them politicians because they haven't been a government in a long time.
Whatever okay sorry I understand that so I don't know I just I just I just I want the government to what the politicians to understand.
You do not you do not sue the telephone company because somebody is you know transferring electrical bits over their wires likewise you don't go after ISPs because these are flowing over their wires.
You know or their pipes is some of our congressman column but you know the people that you have to go after are the people that are producing the stuff that's bad and the people that are consuming it and if one of those happen to be in your country.
Fine go after them but when the stuff is flowing through the pipes that's not the place you should be going after.
Calling the pipes is so much fun but it's to them though they are pipes and it's so hard to find the source of the pipe how do we do that.
That's just the point you you have to track down the source of the pipe that's fine I mean and then you have to you have to go after with certain laws like you have reasonable suspicion that this person is doing something you have reasonable suspicion that they are consuming something.
It's just like the same type of laws that we in the United States should have when somebody comes into our house looking for something okay they have to have a subpoena which says that they had to convince a judge that they have reasonable suspicion that you're breaking the law.
And so if they have that type of reason of suspicion and they get a judge to approve that type of thing that's fine as long as it's on our soil you know but when it's on somebody else so maybe that country doesn't have any rules against that.
Yeah that is true and I'm kind of lost for a follow up question can you bring that back to your work in South America.
Well I mean project kawa I mean like as I said project kawa's main function is to create jobs and we've been working on this for seven years and we've had various in conditions of project kawa.
One was very very aggressive let's put that way and required people to get server systems who were putting the basement of buildings and then have things clients who out you would have basically an LTSP style set up which we do the amount of maintenance and stuff.
It's Linux terminal server project if we have anybody to know.
And you know but that was very expensive and very hard to finance we backed off of that to a simpler model which was to create some media centers that people go out and sell and maintain and do that as a business but that also required quite a bit of financing.
So now we've come up with a very simple model of taking a raspberry pie is taking on the back of a TV set or LCD monitor and giving them basically a thin client slash media centers slash complete computer system with operating system and whole bunches of software and if they want to they could also hook up and have cloud services.
All for the purchase of a 35-hour computer and attachment to the internet nice and it was the OS running on the raspberry pie for this.
You could guess what the what the operating system might be which which distribution is going to be we're not quite sure yet but I can tell you one thing we're not going to create another one.
Nice no more I'm not going to be called to you creating yet another Linux distribution so no we what we've done is we had a revelation one night and the revelation was if I consider the console and take a standard Linux distribution just by typing in characters loaded configure it build it post off across the internet do stuff like that I could script it and better yet most of them have a startup.
It's a startup script of some type you know whether it's jumpstart or whatever that you can do well or or fail as you know fully install any fully automated installation.
You could do all those and it's just a much smaller file that you have to worry about and you don't have to worry about a lot of testing you don't have to worry about a lot of but you have to test it of course but you don't have to worry about testing a distribution.
We're testing different programs just the one program for its particular requirements.
Exactly and you know I said whoo we could do that and that just cut like a year of development off of the off of the project so.
Excellent excellent what what are you looking at any particular distributions are you considering any right now we're at that point.
I don't want to say anything because as soon as I do I'm going to have 10,000 distribution people coming to me and say why did you pay my distribution?
See see folks not only is he smarter than me he's wiser also well okay so so now we have the difference between intelligence and knowledge and wisdom and all the rest that crap and I think you're very intelligent and and and stuff but I have been around for 43 years and I've seen all this stuff happen I just don't want it to happen again.
Right right right built I keep pull I keep talking and bills over here I know he's dying to say something.
I keep saying a bunch of yeses but they don't get into the mic but that's okay you're doing a good job.
Oh thanks yeah it's just it's amazing to talk with you it's amazing the things you've done it's I mean in general it's incredible to walk into one reasonable intelligent person in a day.
It just normally does not happen so it's it's really cool to get to sit down and talk with one who who's you know guaranteed.
So thank you well thank you very much and I just want to say that I I recently had a great honor and it was to go over and speak at the University of Cambridge in England.
I was on my way back from a show at sea but in Hanover and I got to go to the same University that Maurice Wilkes Dr. Maurice Wilkes sir Maurice Wilkes was the head of the Ed Zach project the first computer that could store its own.
A program in its own memory Dr Wilkes was also the person who's credited with inventing microcode for CPUs he was also credited with creating sub routine the first sub routine libraries and.
Just an amazing man and I was lucky enough to have met him a couple times and actually gone to dinner with him a couple times and stuff like that.
But to be at the same University giving a talk about free and open source software that's also the University it did all the early work when Zen as a virtualization technique and then most recently they're the ones who came up with the idea for the Raspberry Pi.
Nice yeah so I mean I'm not into the Raspberry Pi yet I'm terribly behind every hardware development that ever happens but I mean I I know that what you're saying strike in a nerve with with the listeners and this is fantastic.
Well since I've got the microphone in front of me I just want a put in if you really into Linux then I suggest you make a $35 investment and get a Raspberry Pi.
I mean it's just a phenomenal little computer and you can plug it into your HDMI TV set and or LCD monitor where you get an adapter HDMI goes very nicely to DBI.
And you can also I mean it's it has a half a gigabyte of memory on it and a flash card for putting all sorts of different operating systems on.
You can put you know Linux and one you can put BSD on another Android on a third and so forth and just plug that in and boom you got that operating system.
And after you're finished playing around with it you know give it to a kid and watch the kid do some amazing things with it.
And this is what the the professors at the at the Cambridge wanted to have happened they were they were concerned that a lot of kids these days when they get a computer where there be a laptop.
Or a desktop all they do is play games or maybe do a little bit of HTML.
And they said hey that the operating systems that come with most of these do not have compilers those are extra the parents never buy them the kids are never exposed to them.
They can't do shell scripting or if they do it's a very weak form of it.
And you know they wanted they wanted something so small to fit in your pocket so cheap that if you blew it up nobody would get mad and it's just it's just caught the world by storm.
I mean they they thought they would get make a thousand of them and then maybe ten thousand and by the time they sold the first one they had orders for a hundred thousand and it spent the last ten months with them continuously sold out.
I mean you go to any place any any store they're always sold out and people have to sit there.
I mean it's even harder to order a Raspberry Pi and it was to order a Google Nexus 4 phone okay that hard okay.
And I will say also on their behalf that with that kind of a ramp up unexpected ramp up in sales and productivity you would expect far more mistakes than they had and what few mistakes they had they really overcompensated when they when they fixed them.
Oh yeah and and for thing and the interesting thing is I mean you now you have this type of community coming together around the Raspberry Pi they came around things like the order we know came around.
But it's the thing it reminds me of is the type of community that's sprang up in the days of the Alpha Linux port where this this is the first time the Alpha Linux port was the first time that I had experienced this sense of community.
The people who was so you know going after one target so strongly and what was what was this I'm not familiar with you just Alpha Linux port or board I I'm not even sure what you're I don't know what this is.
Okay so in 1994 I met Linus Torvalds for the first time and I saw Linux for the first time and it was only running on Intel processors at that point that was you know that was Linus's focus Intel processors.
But other people were looking to put it to things like the spark and stuff like that.
But Linus was not and I took Linus out onto a river boat down in New Orleans and we went up and down the river boat river drinking this wonderful tree called a hurricane.
Which is saying Patty's day is tomorrow I'll tell you about the hurricane it's it's a drink that's it's so strong that after you've had two of them you think you've been hit by Katrina okay.
And I said Linus I said have you ever thought about porting Linux to a 64 bit machine you know because then you could address 64 you know 4 billion times 4 billion bytes of virtual memory and also a risk processor.
So that you can get a bit of all the optimism is out of it you know this is this is exactly what Richard Stalman said when he said why are we working with eight bits and everybody else is jumping to think they're jumping to six why don't we do 32.
This is brilliant why not repeat it.
Well I mean no actually there are reasons for that this is a much longer discussion I mean so so when memory was 128 thousand dollars for 64 K bytes of memory.
When you have when you have when you have bandwidth that are one hundred or twelve hundred bits per second okay.
When you have this which are very extremely small by today's standards I mean if I the first disk I ever programmed on was a five megabyte disk drive okay.
So and that was that was that was huge it was you know easily 18 inches in diameter my entire life anytime a new thing came into my house my mother would say I can't believe how small they make these things these days.
And that was kind of a mantra at our house and it's only been very recently last three or four years that I look at these things and I have that in my mind but it also occurred to me I can't believe how cheap they're making them now.
But the reason I'm mentioning all of this is because the cost of making that 64 bit computer back when there was eight bit and 16 bits of computers the cost of making them was so astronomical that nobody could have afforded it except maybe the government.
So there wasn't a marketplace for it okay all of these things have to go together there was a balance there was a balance of.
Hey folks this is Poke back at the new North East Linux Fest we just had a somewhat of a hardware failure with a recording while we're talking with John mad dog call I've gone to my backup recorder is I'm sorry for all the handling noise and all the room noise it's going to pick up and sadly it's going to cut our conversation short but it's it's in a way it's kind of fortunate because I would talk with mad dog until the sun came back up again if I wasn't if someone didn't stop me or some hardware didn't stop me so.
We'll we're going to we're going to the earth is asking me to let Mr. Hall go so I'm going to let him finish what what he would like to say and and release him and hope he's like a butterfly and returns to the new North East Linux Fest next year.
We're tomorrow so basically what I wanted to say was that we had we were talking about why were we doing eight bits 16 bit 32 bit you know 64 bit and there's a economic and and industrial commercial reason for that and that was the fact that you know memory and circuitry was so expensive back in those days that.
That you had to have a sweet spot a balance of CPU speed versus memory size versus what so let's take CPU speed the mark one out there had a cycle time of one third of a second okay so you do one instruction you do three instructions every second all right.
And if you then said okay I'm going to give you a gigabyte of memory how long would it take the mark one every single byte of memory I'm just even talking touching it okay I'm not talking about doing anything with it or we're storing anything back I'm just saying oh you got some memory out there oh just look at it okay okay so you see the balance jump from an eight bit to a 64 bit is ludicrous not not unimaginative it's ludicrous exactly and and you know and and the cost.
The transfer speeds the buses and all that type of stuff it was more or less going as fast as it could over all those years but what was what is true right now is the question of what happens if we try and go from 64 bit address spaces to 128 bit address spaces 128 bits is such a large number that the question is on what planet are you going to put the backing store for it okay on what you know what are you going to compute.
That you really need to have 128 bits of storage for okay okay and and what processor would be able to touch every single byte of that hundred and 28 bits of data in the same day you know every same millennia okay so again there's this balance and I think that was 64 bits we actually have gotten to the point where there's going to be a long time so
when we went from 8 to 8 was impossibly small 16 and last a little while pp11 is a stuff like that last a little while 32 lasted actually a good long time and there's an argument that 32 bits is big enough for client type of of computing forever and then there's 64 bit now the reason of why why would we do 64 bit every place instead of only you know is compatibility it's
things like being able to migrate processes from say our phone into a server into the cloud and not have to worry about compatibility so things like that you know there's there are some reasons for doing it but 128 bit virtual address space I don't and 64 bits is so large that even the fastest
fastest processors of today would take a long time to simply touch every byte out there in a 64 bit address space I mean it's 4 billion times 4 billion okay that's a number that's a number it starts with 16 I can tell you that it would it would it would it would it would it's probably goes times 10 but the powers I'm going to leave that up to you it's enough that you could store 128 bytes of data for every square millimeter on the surface of the earth and all the oceans
I have been so active on open street map lately we might need that so just keep that in mind well on the other on the other hand we're only talking about virtual address space so for many years we're able to dress huge amounts of data but with a 32 bit machine it's just it's just that
when you pull a certain amount of data in the memory you're limited by the virtual address space and you then have to do edge type of programming conditions as you go from one virtual address space to another okay where's a 32 bit virtual address space 64 bit virtual address space for whatever
but the point is if you're processing so much data and and and and this is data that you're not doing a lot of processing on the data you just touching it you're just touching it it takes so long to do that that
if you ever do run into the edge of that address the edge it's okay you could take a little bit of time to do that okay so the same thing is is true of sorting and searching techniques so in it's in a very small memories of before right you had to worry about okay I have to worry about garbage collection
and getting and moving a lot of data around just to get this tiny little bit of extra space left and everything and I don't want to do garbage and collisions collisions happen a lot when you have a very small address space but when you have a really big one
collisions don't happen that often okay in fact they may never happen and so you can spend you can you can use a garbage collection technique that uses a little bit more time
because when you do it even a little bit you get back huge areas of now freed up memory you know so the types of algorithms you use in a 64 bit system might be completely different than the ones you would use in a 32 bit system or definitely more in a 16 bit system
okay awesome awesome mad dog I'm going to let you go because obviously you know we you said you had to finish your talk I really I really could just sit here with you till the sun went down and came back up again is there always the after party
is there anything you would like to close it's pretend it's on me it's an open bar pretend it's on me is there anything you'd like to close with or anything that I should have asked you about that I didn't get a chance to
well no we're in the process now of finalizing our plans for project kawa and then we're going to be putting it out onto the website take us probably about another month to do that but then what we like is if people would like to join in on this and they
you know because all project kawa is going to be open we're going to publish everything on there the software any types of hardware that we might use will be published and everything people will be able to you know get they'll be able to buy their hardware from anybody
who wants to sell it and are you looking for volunteers as well well that too but we're looking for ideas we're looking for people that can contribute ideas and stuff to this because if we get a large community contributing ideas
and things and when you say contributing ideas you meet people who can pull off the ideas or just who can suggest things to people who can pull it off both and and and we'd like people to be able to say hey you know I'd like to pull down I'd like to buy some of this hardware
buy a Raspberry Pi you know get a TV set put it on there say put it all together yeah this this works really cool and oh by the way I have this particular TV remote control and and it doesn't work right so tell us about it tell us
you remote control doesn't work right and we'll try and get somebody to fix that then you remote control will work right and you know and it's you know as a whole free software thing so we're looking for people who's just even people say hey I just like to see this type of feature in it because somebody else might say
it's a great idea let's do it and then it's done and you know we're going to be funneling stuff upstream to all of the different groups who do this you know and we'll be giving them credit for what they're doing
unlike some other people who have used their software and never given them any credit or stuff like that you know shock horror come on say it isn't so
well that's one of the reasons why we don't want to create another distribution okay we just don't want to you know we want the people that are working on that
distribution to get the to get the honor and and and the respect and the and the visibility that they deserve see folks you really should be here at the
new north east linux fest number one as as fun as it is listening to this man talk if you were here you could see his animated facial
expressions and everything and they're just so much fun but also if you if you are going to get involved in a free software project
these folks like like mad dog this is the giant who shoulders you're standing upon and most people never realize quite how high that is
and most people never get a chance to say thank you and I I just want to say thank you well so I was over at sea bits
and the linux pro magazine gave a lifetime achievement award to Linus Torvalds and I accepted it for him
but I also know that if Linus had been there to accept the award he would say what he always says that he will take the award in honor of the people that work on the linux kernel
and that he is just a an engineer who is you know keeping the kernel going and stuff like that and it's really the community that does it so I will reflect that back
what you just said and and I happened to have been a person who was in a place at a time and saw something and followed it
and it's really the linux and free software communities and open source communities that deserve all the thanks and I thank them
I think that might be my favorite part about free and open source software is the the great big hearts at the bottom of it
I want to thank you so much for your time Mr. Hall it's been a tremendous pleasure talking to you and to NY bill I want to see I want to say told you so I told you who was worth chasing down
I thought we would say hello in maybe five minutes and you gave us 30 minutes and I appreciate it and thank you
my pleasure
All right folks I don't know if we will top that today but we're still going to talk to people
Will you go? I want to make sure you see the right way to find the mic it's so directional
No, sorry
Sorry
I thought you had before the recording was going to be for you
You have been listening to Hacker Public Radio or Hacker Public Radio does our
We are a community podcast network that releases shows every weekday Monday through Friday
Today's show like all our shows was contributed by an HBR listener like yourself
If you ever consider recording a podcast then visit our website to find out how easy it really is
Hacker Public Radio was founded by the digital dog pound and the infonomicum computer club
HBR is funded by the binary revolution at binref.com
All binref projects are crowd-responsive by linear pages
From shared hosting to custom private clouds, go to lunarpages.com for all your hosting needs
Unless otherwise stasis, today's show is released under a creative comments, attribution, share a line, 3.0 license
