Episode: 1743
Title: HPR1743: Scale 13x Part 1 of 6
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1743/hpr1743.mp3
Transcribed: 2025-10-18 08:41:33

---

This is HPR Episode 1,743 and titled, Kale 13x Part 1 on 6.
It is hosted by Lord Rush and Lutt and in about 68 minutes long, the summary is Lord Rush
and Lutt at Kale 13x today not a Fidora activity may, Matthew Miller Fidora project lead.
This episode of HBR is brought to you by an Honesthost.com.
With 15% discount on all shared hosting with the offer code HPR15, that's HPR15.
Better web hosting that's Honest and Fair at An Honesthost.com.
Greetings ladies and gentlemen of Hacker Public Radio. This is Lord Drockenblut, the digital dragon.
This is my first check-in for the trip to scale.
I flew out of Indianapolis International Airport at 7.30am. Touchdown at 9.30am in Los Angeles.
I've checked into my hotel. I've scouted out the Hilton to kind of get a feel for things.
And along the way, I actually managed to run into Gareth Greenway with scale.
I think the first thing I need to do is actually cover kind of how I came to be here.
Kind of give it a little backstory for the people who don't know.
January of last year, January 19th in fact, went to the hospital with a lot of pain, discomfort, severe issues eating.
And that was when the initial diagnosis of some kind of mass in me.
And it was within a month that it was diagnosed as stage 4 esophageal cancer.
I battled through all of last year with radiation, chemo, not being able to eat for several months actually.
I had a feeding tube and a drain tube inserted into me.
And for several months, my eating consisted of having liquid food basically pumped in directly into my small intestines for 16 hours a day.
Folks, imagine being tethered for 16 hours a day to a machine pumping food into you.
It got very, very boring.
And the saving grace was because of all the pain killers and everything I was going through.
I slept a lot during that time.
Well, late last year, I had several people tell me that they would love to see me at the Southern California Linux Expo.
And I informed them that I just did not have the money out of my own hand to be able to do that.
And so they encouraged me to attempt to do an indie herb to do a crowdfunding campaign using the site GoFundMe.
And I have to say thank you to every single person who donated over $1,100 was donated through GoFundMe.
Now I will tell you folks that worked out to more like about $950 I want to say I'd have to go through and actually calculate it after the transaction fees that
occurred between GoFundMe through we pay to my personal account.
And that alone would have been enough to just cover the trip.
And then two incredible gentlemen of StepFord, one used frequent flyer miles to pay for my airfare for a round trip ticket from Indy to LAX and back.
And then another gentleman stepped forward and he paid for my hotel room that I am talking to you at from right now.
So the support for the community to help get me to be here the day before scale has been incredible.
And I cannot think everyone who has been there has had shown support has, you know, words of encouragement, you know, it's just been incredible.
And I cannot thank all of you who are listening right now.
Everyone who helped get me through those sometimes very, very difficult days when it just seemed like well the cure was worse than the disease at points.
But, you know, I persevered through it and here I am now an update on things about a month ago.
I had found out that after being on what the doctor called a maintenance routine for two months where they had taken me off of most of the chemo drugs and they had me on a chemo drug called Zalota that I was taking one week on, one week off, you know, like that.
That things had started to progress again in my lymph nodes things had gone from 1.5 centimeters to 1.9 centimeters in one nodes in my lower abdomen and the doctor dove on it and, you know, I'm talking this was almost exactly a month before this trip was supposed to happen.
There were, you know, some concerns I wouldn't even be able to make this trip because of that, but the doctor as incredible as she is, I cannot thank my oncologist and the wonderful nurses at the Cancer Center I go to and the numerous times I've had to be in the hospital last year.
I cannot thank them all enough either, but here we are now folks the day before scale.
I'm hoping to catch up with a few people today, but things start tomorrow and I will do my best during the course of the next several days to catch as many interviews as I can to report on things.
And kind of give you my perspective of scale and maybe I can help give some insight in some different ways than some other people as someone who has run a conference in the past.
That is something I hope to bring back now that my health is getting a little better or I'm getting my strength back, you know.
So hopefully you will see the return of a conference led by the digital dragon and again, thank you all for the support for helping me to get here to celebrate life.
And with that for now, I will bid you all a do.
All right, Hacker Public Radio, Lord Drockenblut, checking in, wandering around the conference the night before and I stumbled into a gentleman by the name of Jerome who works for Docker.
Why don't you tell everyone a little bit about yourself?
Yeah, so I'm Jerome Pitazoni and I work for Docker. I've been with Docker for four years now, so before it was Docker when it was just dot cloud.
And I was doing mostly ops before and now I'm happily spreading the word about Docker at events like scale and other conferences while still trying to make some sometimes symbolic but still useful contributions to the project.
So you're largely a user, but you also are you work for Docker? What are your main contributions to Docker? Is it technical? Is it presenting about it?
So on the code side of things, my most significant contributions were back in the day of Docker 0.6. I think it was still like one year and something ago, implementing like the privilege mode of Docker, which is a nice feature allowing you to run Docker within Docker or to run network stuff within Docker.
For instance, you can put a VPN client or server or a firewall or router within Docker because one of my end divorce was to put everything into containers and so I needed that kind of feature.
Now my contributions are more on the while being the kind of glue between the community and the developers that build up her.
So going to conferences like scale or Lisa always can use me an opportunity to talk about Docker. Of course, also to talk with people using it and come back with some feedback and stories when I get back to the HQ basically.
So if I understand part of what you said there correctly, you kind of help create inception within Docker.
Or as the internet meme goes, yo, dog, I heard you like containers. So I put your container in a container so you could have containers in your container.
That's exactly it. And when we did the blog post about that feature, we actually used that meme precisely.
Very awesome. Docker has seemed to become one of very, very hot subject here lately, but containers and all reality on the Linux side of things isn't something very new.
I mean, Alex see isn't it has been around for a while. What kind of sets Docker apart from some of these other container formats that might have been around before?
Yeah, as you pointed out, Alexi is not new. It's at least five years old because that's when I started to dabble with it. And before that, there was open VZ and VServer.
And if you really want to go back like to the roots, if you go to the 60s, IBM had something called LPR, which is basically containers on big mainframes.
So containers by themselves are more new. What Docker did was to take this really amazing piece of technology and make that usable, not only by black belt.
This admin groups with tons of experience, but also regular developers who wanted to be able to spin up new environments in just a few seconds and to build applications in containers.
Without having to go through a steep learning curve. So why would this would just to make that easy? The same way that back in the days, installing a unique system was not complicated.
You just had to download tons of tables and compiling stuff and was not complicated, but it was still a lot of specific knowledge until we had nice installers and package managers and things like that.
So I like that comparison because the change is not really in the technology, but in the user experience and the ease of use of containers.
Now another format I'm similar or I'm aware of that seems to be similar from not having put a lot of time into it myself is the BSD Jails.
How would you compare those two?
So the Jails are just I would say containers on BSD. So on BSD we have Jails on Solaris and the legacy of Solaris we have zones on Linux.
We have the containers, but they have small differences, but comparing them is just like comparing the Linux kernel and the BSD kernel and the Solaris kernel.
They have a different history, they have some different features, but fundamentally that's a unique kernel and we can run stuff on it.
So the same way those different kernels have different containerization techniques, but that's still containers and the rest is like implementation details.
Now if I'm not mistaken, Docker not too long ago hit 1.0 if I'm not mistaken, where do you see some of the next major features for Docker? What are some of the next big things we can see coming for Docker?
Yeah, we released 1.0 in June last year and since then all the release have been stabilization, stabilization, stabilization.
There has been a few added features like recently there was what 1.5 just a few days ago added better IPv6 support and things like that, but it's more on the minor increment kind of change rather than big groundbreaking things.
With the exception of the work that we are doing on provenance and signature, which means basically that when you will run a container, you will have the ability to know exactly where it comes from.
The same way that when you connect to website, you can use SSL to know that you're indeed connecting to the website of your bank and not to some pirate website operated by some either persons.
So the same way we want to have that for container remages so that for instance when you do Docker run, WordPress to fire up an instance of a WordPress blog, you know that you end up printing code that has been kind of
validated and signed by the people maintaining WordPress and not something that we kind of take over your machine and turn into a Bitcoin mining botnet.
Now one interesting application I've seen of Docker recently is actually out of the InfoSec community where I saw someone posing the idea of packaging up and you can't do this further with just applications on the Linux desktop as I understand it.
But this gentleman was proposing the idea of packaging things like Metasploit inside of a Docker container and then people being able to pull down those containers to their systems instead of a traditional packaging format.
What are your thoughts on that and other interesting uses of Docker you've seen.
So if you were to list of the exciting use cases, I think it could be pretty complicated because the list would be really endless.
But yeah, that's one of the examples of really creative uses of Docker today.
Some people are kind of trying to get Docker to the desktop, which means running a Linux machine and when you want to install something like game or inkscape or even a browser or anything like that,
you run it in the container and you add an extra isolation layer for different purposes.
The goal is not to say, okay, this runs in the container so now it's extremely secure and it won't be able to break out.
No, the goal is to add an extra layer because security is all about adding layer after layer to make the whole thing safer or more secure.
So if I run Chrome or Firefox in a container, it will be much harder for the latest Java or Flash exploit of the day to break out of my browser, access my data and sensitive stuff to to to malvolend persons basically.
I believe there's actually at least one Linux distro that is doing that right now.
I think it's CubesOS is based on Docker, but I could be mistaken, don't quote me on that, ladies and gentlemen, but it is a, and it's very interesting Linux distro that actually came out of exploit research on windows of all things.
It came out of the Bluepill project where someone had found a way to shoehorn a, you know, a hypervisor into a system between a already running window system and the hardware and the researcher who did that, she took that idea and has turned it into CubesOS, which is a Fedora based distro.
So what are the most exciting uses for Docker UC right now?
So I didn't know about that one, so that's pretty amazing.
And I will say again, I'm not 100% sure that was based on Docker, but it does use containers to containers virtualization, something of that effect, but what you were describing sounds like CubesOS and it could well be Docker.
So let's see if I were to like them, one of the most impressive uses of Docker I've seen recently.
Yeah, that's a tough one.
I would go to maybe, well, some people have been running virtual machines inside of containers to test malware.
So basically when they, when they want to run some suspicious code and see how it will behave and what will happen, they don't run it directly in the container.
They run it in a VM, but they start that VM in a container, not to add an extra layer of protection or whatever, but just for the convenience that you get from manipulating container images.
So that's pretty interesting because very often a question that people keep asking, like, constantly is okay, so VMs are okay.
And I will add that one of the things that might allow is if you're running a container, there are malware out there and systems for malware out there that can detect the fact that they're running inside of a virtual machine.
And right now a container might sneak past the radar of a one of these systems allowing it to still think it's running fully instead of shutting itself down realizing, oh, I'm inside of a VM.
Yeah, that's once again in security. It's not really a question of should I use X, Y, or Z? It's X, Y, and Z. So by, in that scenario, by putting a VM, well, the malware is inside a VM, the VM is in a container, not so much for the added security, even though that helps, but for convenience.
And yeah, that kind of, it's a kind of answer to the question that people ask constantly about should I go for VMs or containers.
The answer is basically to go for both because we don't lose performance or we don't add overhead when we add containers to the mix, but we gain some flexibility, some convenience.
And so the idea is to leverage both to get the best of both works.
Very, very nice. One thing I'm also aware of is I believe it was the CoroS has recently forked Docker.
Anything you can tell us about, you know, kind of the genesis of that fork and where that project stands right now.
So as far as I know, it's not exactly a fork. They say, okay, we want to do containers, but we want to do them a different way.
And they started their own container format. So we're looking at that. Obviously, we don't consider it exactly as competition per se.
It's like partial competition, maybe in the sense that new container format competes with a small part of what Docker does.
But whatever the end result is, like if their new runtime is amazing for performance or security or whatever, we can always integrate it with Docker because one of the goals of Docker is this kind of modularity.
We have multiple storage drivers, multiple execution drivers. And so if there's thing happens to be really awesome and impressive and the community says we want this, then Docker will very certainly have it as well.
And part of the way this works, if I'm mistaken, please correct me if I'm wrong.
You actually end up running a kernel within side of the container also, or are you leveraging the kernel of the host machine?
So we are leveraging the kernel of the host machine. And when I say we, it's not Docker specifically, but containers in general, we end up having a unique kernel for the machine and the kernel provides the isolation characteristics of containers.
And I recently caught Rust Pavlichek talking about one of the things he talked about was micro kernels coming out where these are highly stripped down kernels where because they're running inside of virtualized environments, you can throw away a lot of things.
Is there anything like that, you know, that Docker uses or because it's leveraging the host kernel that's just not even something that comes into play?
So Docker doesn't leverage that kind of architecture yet. However, when that becomes something more mainstream, or if there is a specific advantage that we should absolutely use because it brings some major improvement to containerization or whatever, we will be very happy to integrate that.
Docker is extremely community driven in the sense that the Docker engine, so the open source path that everybody installs on the machine when they want to do Docker stuff basically, that path is mostly developed by the community.
There is a bunch of containers that have yes or no decision making in the process of managing contributions, but I would say maybe one third of those containers work for Docker Inc and everybody else is employed by Red Hat, Google, Rackspace and other companies that have big involvement in the container community.
So whenever I say we will do this or that, I'm not talking for Docker Inc, but for the community as a whole because that's really where the bulk of the development is happening nowadays.
So if people want to get involved with using Docker, contributing to it, just getting learning more about it, where would you say would be some of the best places for them to start out?
So for users, the Docker.com website has tons of resources. We have a kind of demo which is a JavaScript mockup that runs in the browser so you can start to play with Docker commands without installing anything.
And then there is Boot2 Docker, which is a tiny virtual machine, it's like 25 megs, so it's as ridiculous as a VM download can be and it runs pretty much everywhere on virtual box, VMware, KVM and whatever.
And that gets you pretty far because Boot2 Docker is not the demo version of Docker, it's a full-fledged version of Docker, that's the official version that people use around.
And if you want to try to contribute to Docker, the GitHub repo has everything to get you started.
And I've been told that for the second anniversary of the Docker project next month, in March, they would be a big worldwide event to promote a contribution to the Docker project.
I don't have much more details at this point, but people willing to contribute are welcome to stay tuned about that.
Well, ladies and gentlemen, you may have heard it here first that for Docker's next major event, so look forward to that.
Well, Jerome, is there anything else you'd like to add or say to the community before we end this for the night?
I think the only thing I'd like to add is that whoever is in the L area should come and attend to scale, because that's probably my favorite local Linux event.
It has everything from the bigger conferences like Linux and OScon, but at the more somehow reasonable scale out on the pen, and definitely check it out if you're around.
All right, well, thank you for the time. And this is Lord Drockenblut, Lord Drockenblut with Hacker Public Radio.
So remember, be the media. Don't consume it.
All right, this is Lord Drockenblut with Hacker Public Radio, and I've got UV bus guy here. We're at scale, and this is part of the Fedora activity day at scale.
What are you guys hacking on today?
So we're building a standalone kiosk to connect with people that meet with us at conferences, because one of the main purposes that we're here is an open source community is to attract contributors and users.
And often that ends up giving them an email address or having them write down their information on a piece of paper.
We need a better way to keep track of people who are interested in joining the Fedora community, or having a speak on their campus, or getting them plugged in to do artwork or hack on certain projects.
So we're building a portable way to do that on open source technology using Python to better connect with future contributors and open source.
Now, this is the second year at scale you guys are working on this project as I've understood the conversation so far.
Where did you guys get to last year, and what are the major goals for today?
Sure. Last year we got a lot of the core pieces figured out this year, we're actually trying to make something that actually works.
We stopped just short of getting something ready to drive, and then we went home and went back to our projects and kind of forgot about it.
So this year is foremost going to be getting something running and then adding features as we go along and testing out, and if everything goes well hopefully we'll be using it at the booth tomorrow.
Now, this is primarily as since we're at Fedora activity day, something aimed at Fedora, but are you guys during the whole design of this, trying to keep branding out of it so branding could be, you know, keep the branding out of it completely, and then on the web interface do the branding, something like that to make it to where more projects could use this.
Absolutely, you know, we're building it out with a template structure where the logo is defined separately.
So we actually hope if Ubuntu ends up using this at their booth or open sushi that would be wonderful.
We have all the code post on GitHub, and of course it's a free open source license of GPL, so we hope people fork it and continue to contribute and use it.
Okay, well, since you brought up the license, why a GPL license over say the AGPL, which at least as I understand it is friendlier towards network, cloud services, things like that.
Well, on one hand, I would answer that as a Fedora member and say that the GPL is our default license for most things, from an ideological standpoint and protecting freedom.
From a personal standpoint, it depends a lot on the audience about how I would personally license something and who I might be collaborating to work on.
MIT is another popular and great license to work with too. In this case, because this is a Fedora project thing, I'm sticking with our standard to Fedora ideology.
Alright, and if people want to get involved with this, check it out, see where it is, where should they head to.
GitHub.com slash VW bus guy, and it's the beefy connection project, and as a shameless plug, check out my other projects while you're there.
Now, as things stand, what things do you guys need to get done to get it functional, and then we can go from there.
A lot of today is going to be in user testing, so we really need people to come in here and try it out with your browser and see if it breaks or not.
That's going to be a lot of what today is going to be, is debugging and getting all the pieces working together.
And then past that, what are places you guys could use contributions from people who aren't here who might be looking for a project to get started on and moving to?
Yeah, absolutely. So from here, it's going to be largely defined by our user base.
Our goal for this is to make it work on the standalone kiosk, but it wouldn't be much effort for this to be scalable and a cloud on something like Karoku or OpenShift, so that this could be used more broadly with greater collaboration.
So I could foresee this being used, for instance, if people have people in the organization for multiple conferences at once, being able to track that well, having a greater variety of database backends and things.
So that's where I could see this going, and of course, patches and forks are welcome.
All right, and anything else you want to add to the hacker public radio audience about this project right now?
Other than check it out and check our booth out at scale, and we would love to see your contributions and we'd love to see this being used in your own projects.
Well, unfortunately, this audio probably won't make it out in time for scale this year, but definitely check out scale in following years or just other conferences.
Fedora is at almost pretty much any conference, and you can always reach them online, so.
And so this is Lord Dragon Blue signing off for the segment of HPR guys.
Greetings, ladies and gentlemen of the hacker public radio. Here I am again, Lord Dragon Blue, and I have with me Matthew Miller, the Fedora project lead.
Hi, nice to talk to you.
Now, what is entailed in being the Fedora project lead currently for you?
Well, the last month it's been a lot of travel, and I know that's traditionally been the Fedora project leader kind of thing.
I was at Faustem in Brussels, and then at DevCon, Finn Burnow in the Czech Republic, and now I'm here in California on the other side of the world, so it's been kind of a whirlwind.
I think in general, the role is to sort of be an overall point of contact for the project and to help connect people together and to make sure that everybody is working smoothly together and has no problems in getting the project to do the things it's meant to do.
So would it be fair to say that the project lead in many cases is kind of a PR slash project manager type position almost?
There's definitely a PR component. I don't know if there's so much project management involved. He kind of can be flexible.
We actually have somebody who is the program manager who helps work on the schedule and those kind of things, and several different committees that take care of some of the things that might traditionally be a program manager role.
It is kind of more of an overall oversight and communications kind of whirlwind.
Now, I'm just going to go ahead and dive into this question because it's one I've heard several times, and I think it'd be good to get your perspective on it, and I will say for you, this is probably not the most official end all answers.
But the Fedora project lead has always seemed to be someone who is a red hat employee. Why is it that this is always someone who is a red hat employee?
And do you ever foresee it being someone who just comes up through the community and potentially become that position?
Yeah, so it's actually a position that it's a definitely a full time job and often more than a full time job, and so it is awesome of red hat to pay somebody full time to work on it.
And it's actually been the case quite often that the people who come into the job are people who are involved in the Fedora community beforehand.
It's not like red hat pulls somebody unknown from the red hat ranks and says, ta-da, you're the Fedora project leader before.
So Robin, who is the Fedora project leader before me, was working in the Fedora marketing and came to red hats attention through that, and Paul Freilds, and Jared Smith.
Basically, I actually can't think of a project leader in the recent history who hasn't been a community member first and red hat employee second.
And so Fedora is also kind of a unique project because it is very closely tied to red hat in a way that something's like open stack where you've got a bunch of big commercial interests,
trying for who's in charge of the project, and it might be the case that lots of different companies will be willing to fund a position like that.
With Fedora being so closely tied to red hat, it's not like somebody's going to come up and say, we're going to pay somebody else to do this, and it's quite a lot to ask somebody to do on their own time, so it's nice that it's a red hat position really.
I'm not arguing that it's not nice of red hat to employ the person, but it has always seemed that the person was a red hat.
They may have been involved with the Fedora community. They end up being a red hat employee, but it never seems like it's someone who comes up as strictly a Fedora project member, and then takes that role.
It always seems to be someone who, yes, has started out to be a Fedora project member becomes a red hat employee, and then can move into that position.
Do you see where I'm?
I have to go back and check, but I think that it's actually been the case that people have been hired directly into this role rather than having a different red hat position first.
Yeah, I was at red hat for a year and a half before I took this job, so I fit your pattern there.
But one of the things I've actually worked on is, traditionally, up until this fall, the Fedora project leader has had a veto vote on the board, and then the only person with the veto vote in the governance.
So basically, the power to say whatever I don't care what everybody else is doing, stop.
I hold this red hat veto, and with the new Fedora council that we've instituted, it's actually going to a sort of a less antagonistic model there where we have six full members of the council, and everybody can stop a decision that doesn't seem right.
It's no longer a thing that's just the FPLs red hat veto, but basically we have to have complete consensus in order to move forward on things.
And so that council involves a couple of people hired by red hat into roles, but also to completely elected positions, open to anybody in the Fedora community to be elected into those positions, and then some also some meritocratic positions, which are appointed by FAMSGO and FESCO into those things as well.
Because I'll have a full, basically a full voice, and equal weight in power with the red hat employed positions.
Though it would be fair to say still that red hat employees still maintain a majority position in the voting, that basically it couldn't become a deadlock between what the Fedora community wants to go in a certain direction, and red hat would like to see.
It's still red hat has a lead in that position.
Yeah, so I hope that we would never come to the position of a deadlock, and I think that if we did, that would be a need for a lot of soul searching at that point.
And the process we've set up basically is set up so that if it comes to a point of a deadlock like that, soul searching is built into what happens in that case.
I don't think it would, I don't think it will come to that. I hope it never does.
And I think one of the things, I think that I hope we don't have such a big distinction between the community versus red hat.
I hope that red hat acts as a stakeholder and a corporate community member, and then also a lot of people who work for red hat or individually community members independent of their employment status.
And I'm not trying to make red hat out to be a bad steward in the situation.
I am myself am a Fedora ambassador. This is a project that is important to me.
I am just trying to answer some questions I've heard myself around things, because I've heard questions myself of people say,
can Fedora the community ever make a decision that would trump a direction that red hat wanted to go with, wanted to see Fedora go?
And one example I'll say is, and if I make a mistake on this one, please correct me so we get the facts out there.
But when gnome three first came out, it seemed like the art team wanted to be able to kind of brand gnome three at the start a certain way.
And it seemed like red hat came out and said, no, we are going to roll out a very vanilla gnome.
That's kind of one of those situations I'm talking about.
Yeah, so I think it's more complicated than that. I think the definitely that there is no one red hat voice there.
And I think that what you're seeing there is people with strong opinions who really feel that the gnome upstream experience is really designed that is important to them.
And that's what they want to do. And you're red hat employees, those people to work on gnome and also on Fedora.
And so I don't think that there was actually any sort of red hat corporate voice in that point saying this is red hats corporate opinion on that.
And in fact, if you look at, if you look at rel, it's got a lot of branding on it that Fedora doesn't.
So that might tell you some of the way that comes out there.
And we're still working out in Fedora and how to get that design because the gnome people.
And I really value the purity and cleanliness of the gnome user interface. It gets out of your way. That's nice.
We don't want it to be all looking like a NASCAR kind of branded everywhere.
But we still want to have a distinct Fedora identity to it. So we're kind of figure out to do that nicely.
And that's what I mean because if you look back at like the gnome to, you know, there were even simple things even like in the KDE, you know, four version that the, you know, kicker button is instead of being a K is an F, you know, simple brand names like that.
Yeah. And so I think those those are things that are kind of gone.
They had to happen in happened in Fedora, but I don't think that they're actually, I can see how it looks like that can, can look like it's a red hat voice because a lot of people with you know redhat.com email addresses are saying one thing.
But I don't think that it is actually a has ever been and this is the red hats interests to do to do this to Fedora.
It's a different thing from that.
I think in general, one of the big values that red had gets from having a really a strong community in Fedora is a sort of check and balances on, you know, is this the right direction for things to be going.
And so I think that if the community external to red hat really felt like some direction was important and red hat felt like it was wrong.
It would be a really that that would be an important time to stop an exam and what's going on.
And now as you know, we pointed out you kind of came up through the perceived way of, you know, Fedora community member to red hat employee to the position you are now.
Where did you get your start with the project? What did you get hired on at red hat to do before you?
And how did you go from that to your current role as the project lead?
Yeah, so travel with me back in time to like 15 years ago.
Hold it. Let's have a Wayne's World moment here.
So I was a systems administrator at Boston University and at the time people were putting Linux into their departments, you know, server into their desk kind of thing.
And our security team was running around basically because someone around the time did a study of, you know, off the shelf Linux distributions plugging them into university network and discovered that red hat Linux was the most secure
because it took 15 minutes before it was broken into on average.
So our security team was running around like crazy and basically there was a some some movement towards you.
We just have to tell people they can't run Linux, but a lot of us love Linux and didn't want that to happen.
So we put together this thing called be Linux, which was a distribution tailored for the university to be more secure as a main goal, but also to tie into our Kerberus infrastructure and our AFS for software and things like that.
So I started working on that and that was based on basically being a respin of red hat Linux.
And then when red hat decided to move toward the enterprise and go with red enterprise Linux and drop the red at Linux product, I kind of naturally followed into Fedora at the beginning Fedora at that point.
So we at BU hosted the first FedCon conference and so I was involved in that with some other people from BU.
And I've been involved on and off ever since then.
And so then after I left my job at BU, I was at Harvard for a while and then this job working on cloud stuff for Fedora came up, which was I had been working on cloud at the school of engineering at Harvard.
And so working on cloud for Fedora seemed like a great opportunity.
So I jumped at it and worked on that for a little bit.
And then when Robin felt like she was done with the old job, I'd been talking with her a lot.
And I thought, OK, well, see if that's something I could do.
So you just decided, let's try to run a community basically and see how it goes.
Yeah, well, I've been also been working on a lot of these ideas, like the Fedora next thing, sort of sort of working on some ideas for what Fedora could look like over the next decade.
So it's not like I came out of kind of nowhere into that and hopefully I'll be able to be a good steward for the project.
OK, so Fedora next is something that's fairly recent.
Can you expand on what Fedora next is? Is it a project? Is it a philosophy?
What is it? What's the goals of Fedora next?
Yeah, it's an umbrella.
It's basically the idea that we've been doing a really good job at putting releases out and kind of gotten to a sort of well oiled state where we'd been every six months putting out a release without very much thinking about how we would do it.
I mean, a little bit, but when we got to, I don't know, Fedora 19 or so, you just sort of followed on the footsteps of 18 without sort of a wheel was turning and nobody was looking where it was going.
And so you were you're saying basically Fedora had become just a kind of a well oiled machine and just creating a new spin.
It wasn't innovating in some respects other than Fedora is kind of known as being kind of one of those bleeding edge distros that brings in the latest, you know, kind of the future of what lunch is going to be.
And don't get me wrong. It was doing that very well, but it was also it's also showing some scaling problems as we get to like 20,000 packages.
It's starting to take overnight in order to put together the entire distribution and once that exceeds 24 hours, I don't know what we'll do.
And it gets it's growing fast enough that we can't just throw hardware at the problem that needs some different design things.
And also we have a lot of things where people are doing innovative new ideas and operating systems like Koro S was a little minimal operating system with containerized applications running on top of it.
And nobody was doing those things in Fedora. So it seemed like the center of innovation had moved off to somewhere else.
And if you look at open source software, a lot of what we've done is worked on packaging all the software into Fedora.
I've been very successful. Like I said, it's really, really grown.
But if you look at sort of the center of open source energy in the internet today, I think probably you have to say it's GitHub.
It's not any of the Linux distributions.
And so we're not going to turn into GitHub, but it seemed like we want to make sure that we are not completely missing, missing the point of what's going on in software today, especially as those have been involved for a long time get older.
We need to bring new people in and how do we get them engaged in the project and find the value that we can offer to them and you continue to offer the value that we always have to everybody.
So anyways, all these things floating around, it looked like it was time to stop and say, OK, rather than just cranking forward, let's look and see what we want to be doing with Fedora.
How can we address these problems and whatever other problems we might see?
How can we, you know, what, what things do we need to do?
And so we took, we added, you know, the last release took an extra six months, physical full year cycle.
We added time to work on tooling for QA, our QA team was saying in order to keep scaling up, we need to work on our tools, but we're so busy doing the actual QA, we don't have time to work on the tools.
So we gave him some time to work on some automation, actually work on the tools for that.
And so all that is kind of under this umbrella of Fedora next in general to sort of look at what we're doing next and how we want to present Fedora in the future.
And Fedora has traditionally had several respins and one of the things that seems to have come out of Fedora next is some new ideas in some of these respins.
Yeah, so this is actually, you know, we've got our complicated terminology here, but the respins are things made by people outside of the project that may add software that we don't have or the remixes are.
And then we have spins, which are sort of different variants. And now we have these cloud server and workstation additions that is Steve Gallagher's idea to do this.
And basically that came out of the idea that when back in the day, I talked about, you know, Red Hat Linux and going to red enterprise Linux, Fedora inherited a pretty good system and user base and a lot of server use that people were doing with Fedora.
But it also became the, you know, but also a lot of home users and a lot of desktop use and so on. And over, over the, you know, over that decade as Fedora tried to find out, you know, who is our target audience? What are we doing this for?
The default offering ended up being a desktop, which has been very successful. But there's always been kind of an undercurrent of people using it for other things who felt like they weren't being very well represented in the project.
And I think it kind of came to the case where all of the system ends except the most grumpy ones had felt kind of pushed out and the grumpy ones felt like, and I'm caricaturing a little bit, I'm including myself as one of these grumpy ones don't let me get otherwise.
Where it felt like if your assistant men involved in Fedora, your job needed to be telling the desktop people to stop breaking stuff.
So your job became stop energy. And then that made a really bad dynamic and it wasn't healthy for the project at all.
So part of the idea with Fedora server is to say here is a part of the project that is, it's made forces admins, this is where you can positively contribute and the decisions that the desktop team may make for the desktop don't necessarily affect what's going on here.
And you can make decisions that are separate from the desktop. So for example, XFS is going to be the file system on Fedora server coming up, even though XFS isn't necessarily the best desktop file system.
Which switching Fedora, you know, having Fedora server being XFS, that's kind of matching with Rell Kern, is it not?
Yeah, that's true. And so also one of the big, obviously Rett had the big stakeholder here. And so there isn't necessarily a big alignment between a desktop operating system and what Rett had makes a lot of money from in Rell.
And so having something that could be a more, more clear alignment there with a big stakeholder is definitely a useful thing, even though the main goal really is to serve Fedora users, not necessarily Rell, that's just kind of a happy thing that works out with our stakeholder.
So there is a clear distinction between the respens, remixes and these new offerings. And the new offerings, can you go over, because you mentioned Fedora server where it's finally kind of, you know, a dedicated, you know, server versus, you know, trying to find a base install and building up your server there itself.
What are some of these new flavors for lack of a better term for Fedora?
So the idea of Fedora server is it's focused on some new software development, I think called roll kit and a GUI called cockpit, that's a web-based GUI that I'm assured should not conjure up images of webbing and to those kind of web consoles.
But anyways, push button deployment of things like a complicated things like a domain control or a database server identity management system with fairly easy push button deployment and hooks that can tie into your configuration management.
So on the active directory one, you mean something similar to the Zentile project out there where you could do a push button deployment that can replicate being like a Windows active directory.
But there's also Fedora atomic. Can you talk about some of these other?
Yeah, so that's a server. Let me go to the code of the workstation next. So that's our big desktop offering that we're promoting is Fedora workstation.
And the name is kind of meant to imply that it is a desktop for more technical people and not that regular people can't use it.
So our target audience is actually software developers and not necessarily developers making Fedora but anybody creating and writing software in general.
So you're saying Fedora is finally kind because for a long time people said Fedora doesn't really have a defined user base other than someone who's interested in kind of the bleeding edge.
Fedora with Fedora workstation are you implying that they are finally saying our core target for Fedora, you know, desktop.
Okay, for at least Fedora workstation is software developers, but then where does that leave your average desktop user? Are you saying now because there is not Fedora desktop anymore?
There's Fedora workstation is that could kind of imply to a lot of people that regular desktop users are not an interest to us.
Yeah, so let me go back like half half of that statement. It is definitely the case that the idea is to say this is our I think used a nice term I forget what it was, but the core user base of this design is for the set of people.
And that helps sort of focus decision-making if you're like if you're trying to decide I'm going to make this user experience work in this way if you try to make it work for everybody it can all elements of mushy so having a concrete use of case in mind can really help with that.
So hopefully that will help the design move forward in the future and hopefully we can also pick up some new user base that we haven't necessarily been growing into before.
One of the lines I use a lot though is that developers are people too so a lot of the concerns that a software developer have like fundamentally things like making making all of your you know your second monitor work out of the box making your web browser work nicely making a smooth experience with media all of those things are concerns of regular people not just developers.
So developers are foremost regular people and then also developers so that's I think that the workstation will not leave most people out in the cold.
But it is also the case that this isn't all there is to Fedora so if you feel like you are in a different class we've got the different spins we have a KDE XFCE spins.
If somebody would like to come and make a completely and user focus can only spin I think there's room for that although I don't know what resources we have to work on it but there's room to do that.
It's of interest to somebody.
I think that we may be fooling ourselves a little bit if we think that Fedora has always been for the general desktop user because it's tended towards the bleeding edge.
It's always been a little bit harder for the completely naive user to use.
It's always been a little bit more advanced and actually hope that by focusing at developers will actually make it easier overall for people who don't necessarily want to muck with their system but want to get something done with it.
Okay so you think that by targeting software developers you're going to help improve things for the normal desktop user.
But what about that perception by saying workstation is for developers and that is the flagship one.
The respins you almost have to know someone to know about these.
What about that perception though that it might be kind of are there any thoughts on how to address that to help make people understand that yes this is for targeting software developers but it's not going to be something that leads you behind just because we're targeting this.
Yeah I guess I would suggest people should try it and they will see if they like it.
Yeah it's kind of a hard thing but it's pretty well established that in order you can't please everybody with everything.
So picking a niche and trying to really really succeed in that niche is going to help us grow more than trying to make it appeal to everybody.
That's basically the idea and hopefully I think that I think that the everybody that we want to get involved will be smart enough that they'll be able to handle it as well.
And one of the other new ones is Fedora Atomic. Can you tell us more about that?
Yeah so actually we have Fedora Cloud which at this point has two separate streams underneath it because of how it worked out.
And so basically the idea of the cloud computing is not necessarily this idea of all your MP3s are stored on somebody else's server somewhere.
It's the idea that computing that CPU cycles memory storage is a resource that you can pay for as a utility.
And so the Fedora Cloud image is meant to help people who are building things like that use Fedora to enable whatever they're working on.
So we have a Fedora Cloud base image which is as the name kind of implies a minimal image you can build up whatever you want on top of it.
And we put a lot of work into making that a lot smaller than it was.
So it's something like a 150 megabyte QKao image for the entire functional minimal image which is now it's not it's not miniscule but it's it's a nice comfortable size to work with.
And then you can basically do that and then use you know your traditional young DNF to install whatever you want to build up on top of that whatever you want to run in your cloud workload.
And then the new thing we have is this project atomic which is based on something Colin Walters has been working on called OS tree which lets you basically switch between one version of the operating system to the next with no chance of having broken upgrades in the middle of it.
In some ways for maybe some some of the gamers I know out there you could look at it is almost like the BIOS on some other boards that are double and triple BIOS is so.
Yeah it's like that although in this case it's actually more like a get tree so you can switch arbitrarily between different commits which is kind of cool.
So it's it's even more flexible than the the AB model. And so then on top of this you basically have a operating system that's designed for a certain purpose.
In this case a case of atomic it's designed to run containerized applications using Docker to be a really awesome secure platform for running your Docker applications.
So instead of building something up in a cloud in a traditional VM sort of way you build it up with different containers that connect together.
And so we have some people like I know colab the group where people have a system where there has something like 27 different containers that their whole system runs in and or with orchestration between it.
So that's going to be one of the neat things we can show off in Fedora.
All right and then there's of course the respens you have to you know my preferred version of Fedora the KDE one there's the security there's several of these there.
What makes what does finds a respin versus a remix?
Right okay so the spins don't have an array on them they're just spins there's one one time I get kind of confusing terminology.
So we have spins and remixes and so spins are official parts of the Fedora project and they're built in our release engineering infrastructure they're signed by us.
You know the contributors who are actively working within the project in our infrastructure put them together using all Fedora packages.
So everything that's in it comes from the project officially and there's no everything it is free and open for software there's no deviation from what we can legally put in Fedora.
And up until now all of those things have also had the same configuration as you can't have a different configuration in the packages as the defaults and I think that hopefully in the future will be able to change that a little bit.
So just like our works they should put our server might differ from the defaults on the KDE spin could differ in some different ways if people working on that field that's past presentation of KDE.
And we're talking past just you know artwork we're talking you know digging in deeper into the system and making config changes that might help the system run better and a certain for certain perceived uses.
Yeah at tune for different workloads you know different file system different firewall configurations for different assumptions those kind of things.
And so then remixes are a step further than that they're basically derivatives of Fedora that are allowed to use the Fedora name but take place outside of the project.
So Pandora is one of these things where they use you know kernel modules of things that are not part of Fedora to run on the Raspberry Pi.
And then another really important one is Russian Fedora which basically focuses things for the Russian language and then also includes media codecs and things that we can't in the United States.
Alright if someone wants to get involved with the Fedora community.
Where what is their best place to start?
There's an awesome new thing of what can I do for Fedora.org that Fedora hacker Ralph Bean put together that is meant to actually answer that question.
It pops up some things like get involved in marketing is that sound interesting and you can click yes or no and it will take you to the place of your interest.
Alright and if people in the hacker public radio community wanted to you know connect with you to talk to you if they had any further questions what's the best way they can do that.
I am Matt D.M. M-A-T-T-D-M on basically all the things Twitter free node IRC send me email I'm pretty open to any sort of communication.
And one question I've been asked ask and I've forgotten up until now what is your preferred text editor?
Joe I use Joe when I'm editing config files for a system or something I use bi because that's what God intended but if I'm writing email or editing files composing I use Joe.
And is there anything else at this point you'd like to you know add say to the hacker you know HPR community things you want them to know that maybe I've glossed over at this point.
Go to get fedora.org and download a variant of fedora that looks interesting to you and try it out if you're skeptical about anything you know as hackers you know getting getting your hands on things is the best way to answer any questions.
Actually there is a little more that I just remembered I wanted to bring up so you know if you have the time to go.
One of the big things that recently happened and now this we are moving outside of fedora a little bit here but I think it still can apply is was red hats acquisition of the CentOS project.
What was kind of the genesis of this and if this is something you can you know comment on or is this kind of outside of you.
It's mostly outside of me I think it's very interesting I think it's.
As as a fedora person I like it because it kind of grows our ecosystem in our community and there's always been kind of a.
I think in fedora can we mention CentOS are we allowed to tell people that that might fit their needs should we do it don't ask don't tell kind of thing about CentOS and so now this kind of makes it more clear.
This is something that you know red hats cool with it's okay it's part of the ecosystem and hopefully we can do you know there's some really brilliant people working on CentOS and hopefully we can do some more collaboration with them.
And I will say one of the you know wonderful things is there were some times there with the CentOS project where because that was not these people jobs that you know there were delays in that and you know kind of like where you know in your case you you know became you know from the community you became a red hat employee it's kind of nice to see you know what is essentially.
Well get hired by red hat to continue working on it you know it's CentOS but it's still you know essentially well yeah I think that there are a lot of things that are different between CentOS and real I mean it's really it's not literally the same it's the same source code but but rebuilt.
And so it's not exactly the same it doesn't have the same certifications and things like that but it fills a really important place in the ecosystem and it I think that red hat recognize that this is me while speculating at this point but I think red had realized that having CentOS there and that ecosystem was much better than having something hostile in that same space so having something you know a community distribution downstream distribution that I could work with seem like a good idea.
I guess but that's me speculating not any sort of actual knowledge.
All right well thank you for your time and this has been Lord Dragon Blue here with Matthew Miller Miller Fedora project lead so by all means check them out and get involved.
You've been listening to hecka public radio at hecka public radio dot org we are a community podcast network that releases shows every weekday Monday through Friday.
Today's show like all our shows was contributed by an HBR listener like yourself if you ever thought of recording a podcast then click on our contributing to find out how easy it really is.
Hecka public radio was founded by the digital dog pound and the infonomicon computer club and it's part of the binary revolution at binwreff.com.
If you have comments on today's show please email the host directly leave a comment on the website or record a follow up episode yourself.
Unless otherwise status today's show is released on the creative comments, attribution, share a light 3.0 license.
you
