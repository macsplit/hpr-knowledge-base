Episode: 845
Title: HPR0845: Open Source Radio Software
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0845/hpr0845.mp3
Transcribed: 2025-10-08 03:23:46

---

Hello, Okondie here, and today on Hackup Public Radio, I'd like to talk to you about free
software designed for broadcast and internet radio.
The most important piece of software for internet radio is icecast.
This is the server software for the audio stream, allowing anyone connecting to it to listen.
It encodes the stream in multiple formats according to your needs, and can be used to
relay the stream to other servers to spread the system load.
Icecast requires an audio feed so that it has something to broadcast.
The simplest application is called BUT, which stands for a broadcast using this tool.
You can set up BUT to stream from an audio input on your sound card to the icecast server.
Another application is called internet DJ console.
Unlike BUT, IDJC is a full radio tool with dual playlists, jingle buttons, and it uses
the jack audio connection kit, and so can do other clever things with routing audio
from program to program.
Either of these programs can give you all you need for live broadcasts to the internet.
However, what if you want 24 hour programming without having a desktop machine with streaming
constantly?
Icecast can play an off-air track, but that's not very flexible.
Here is where liquid soap comes in.
Liquid soap is a server demon and scripting language to describe an output audio streams.
For example, if you wanted a playlist of music to be played one after another out of your
local sound card, you would give liquid soap a script like this.
Music equals playlist, open brackets, home slash user slash music, close brackets, then
output dot ulcer, open bracket music, close bracket.
Playlist and output dot ulcer are functions, so they have all sorts of variables.
Playlist has one for randomizing the music track to be played, or refreshing the playlist.
Output has all sorts of options with different formats, codecs, and devices.
This being a script, you can build it like a computer program.
What if you wanted to randomly mix in jingles to the playlist?
Then you would add a line which would redefine music as music with a random chance of picking
the jingle track instead of the music.
The most powerful element of the script is the fallback function.
This allows the stream to prioritize one audio source over another.
For example, if you had a live stream coming into liquid soap, you could have it interrupt
the random playlist.
When the stream ended, it would fall back to the playlist again.
Another feature is a dynamic playlist, where using simple telnet commands, you can add
tracks to a queue.
Click this up to a web interface, and you can have listeners making requests.
Liquid soap has just hit a version 1 release, and I haven't messed with it for a while,
so I'm sure there were tons of features I have no idea about.
I totally recommend checking out how powerful it is.
Recently, I discovered a project called AirTime, which uses liquid soap as a back end for web-based
scheduler.
I've not worked with it extensively yet.
But it does a lot of neat things to keep a multi-host automated radio station running.
You can assign time blocks on a calendar to particular hosts.
The hosts can then create playlists of audio for their blocks.
Even the uploading of content is as easy as clicking and dragging the files into the browser.
The only thing it doesn't have is a way of generating playlists itself, and avoiding
dead air.
But AirTime is on constant development, and this is planned.
Once it uses liquid soap on the back end, it's simple enough to add a random playlist
and music yourself to the script that AirTime runs.
The biggest piece of Floss Radio software is Rivendell.
Rock Study, dependable radio automation.
Build another proven Linux platform.
You're experiencing Rivendell radio automation.
This is different to what I've discussed so far, in that this is designed for a traditional
broadcast radio station with dedicated work stations.
It runs a MySQL database combined with a shared network storage to catalogue all the music
and audio.
There is a suite of applications including AirPlay, a touchscreen-friendly device for DJs
and hosts.
It can generate playlists of music specific to your needs, for example, avoiding the same
artist in a row or no more than 380s tracks per hour.
It has a Dropbox system allowing you to dump a ton of tracks into one folder, and it
will automatically process them and add them to the database.
And with the database just a MySQL server, it can be easily moved, backed up and restored.
Seriously now, don't you have better uses for $15,000?
This is the open source Rivendell radio automation system.
The newest version incorporates a web interface for uploading tracks and modifying the database.
Rivendell can be tough to set up, and the documentation is a bit lacking for newbies.
But for a good demo, check out the neat Ubuntu Live CD called RRA Ubuntu.
You can even install it, and within 30 minutes have a fully set up system.
It runs on ALSO primarily, but there is good jack support if you can set it up.
The best radio automation system you'll never pay for.
Rivendell radio automation.
I'm probably going to be doing a lot more with all these technologies on my day job as I'm helping with a student radio station.
We've had a liquid soap random playlist with jingles, live streams and requests for a while now,
and we'll soon be moving to a full on radio station in the next few months.
So Rivendell will hopefully be a big part of that.
I will likely do another episode about my experiences.
This is Ork on DK.
Thanks to the projects I talked about, we'll be in the show notes, along with ways to contact me.
Thanks for listening and happy hacking.
You have been listening to Hacker Public Radio at Hacker Public Radio.
We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by a HBR listener by yourself.
If you ever consider recording a podcast, then visit our website to find out how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the economical and computer cloud.
HBR is funded by the binary revolution at binref.com.
All binref projects are crowd-responsive by linear pages.
From shared hosting to custom private clouds, go to lunarpages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under creative comments, attribution, share a like, 3.0 license.
