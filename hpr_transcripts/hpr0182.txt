Episode: 182
Title: HPR0182: LinuxMCE: Interview with Thomas Cherryhomes
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0182/hpr0182.mp3
Transcribed: 2025-10-07 13:07:14

---

ðŸŽµ
Hello and welcome to Hacker Public Radio.
I'm Monster B, and today I have an interview with Thomas Cherry Holmes on the whole NXMC
project.
Welcome to the show and how are you doing Thomas?
Not too bad, how about you?
Pretty good.
Could you tell us what is Linux MCE?
Well, I guess I could best answer this.
Okay, think about all the devices in your house.
Think about your house.
Your house has a number of different pieces of technology that you use on a day-to-day
base.
You have, typically at the center of all of this, at the very least, you have lighting,
your lights, your lamps, your individual fixtures on the walls, et cetera, et cetera.
You also have media stuff systems such as your media center, your BCR, DVD player, et
cetera, et cetera.
Some houses actually have security systems.
Others have climate control, and you have, of course, a telephone in front of your house,
although a lot of people do use cell phones these days, a lot of people still have landlines
coming into their house.
What Linux MCE is, actually, even though we call ourselves Linux media center addition,
we are actually a smart home platform, one of the very first of its kind.
What this means is, we install a particular computer that you can build yourself into the
closet in one of your houses, say a wiring closet somewhere in the garage or in the pantry
somewhere.
It really doesn't matter.
It just needs to have adequate ventilation, et cetera, but I digress.
Once you've installed this server, at least at the very least, storage for your media,
it may also contain tuner cards for your TV, it may also contain interfaces for lighting
control systems, climate control systems, et cetera, all going into it.
It will essentially take over every single aspect of your house.
Now, think about the different methods of control inside your house, all the different
things that you interact with on a user interface basis.
You have, of course, your computers that you work with, but you also have your cell phones.
You may have PDAs and or internet tablets, such as the Nokia N810, whatever.
You may even have IP telephone with intelligent touch screen displays that can run web services
if you do.
Not many, but the number is increasing.
But all of these different devices can be used to control every single aspect of your
house.
Now, of course, you've got the core machine that you install.
You've got the different control devices, which we call orbiters, which can unify every
single aspect of the house.
And then, attached to each TV in the house, you have a disk with PC, which we call a
media director.
There's nothing special about it.
We do have specific hardware requirements due to the nature of the software, but there
are really nothing more than standard diskless PCs that you plug up to your TV.
And once you do that, you have access to, again, it's an orbiter, so it has access to
all of the house functions.
You can turn lights on and off.
You can change your air conditioning climate control.
And the most important thing is that in the media director, you can watch any media in
the house by media, we have course mean audio files, video files, DVDs, et cetera, as
well as live TV or recorded TV.
Now, how we do all of this is we have, there are a variety of open source projects that
are already out there that do these individual components very well, Zenny, MythTV, Asterisk,
so on and so on.
What we essentially do is we take these particular pieces of software and we add a whole bunch
of integration loop and wrap them all in a message bus protocol that allows all of the
individual disparate pieces of the system to communicate with each other to provide a
cohesive whole while using the orbiters, the individual devices such as yourself on
your internet tablets, laptop PCs, whatever, as forms of control.
Now all of this combines together to produce what is essentially one big smart home system
in appliance form.
And I'm saying it, unlike other systems of this time, we have two major advantages.
One, our system is relatively inexpensive compared to other solutions that are in similar
areas, such as Crestron and AMX, and two, unlike Crestron, AMX, Control-4, et cetera.
We have access to, and you have access to, all of the source code that makes all of
this work.
So it can be modified, extended, not only by installers, but interested hackers and
end users such as yourself.
And all of this basically combines together to produce some interesting artifacts.
Let me take you through an example.
Okay, let me, let me second here to hold my breath and I'll explain.
Okay.
It's late in the afternoon, you're watching TV and all of a sudden your friend Steve
called you on the phone.
The first thing you see, the TV's in the house immediately show that someone is calling
on the phone, you hear the ring on the TV, you answer the phone on the TV.
The TV's have a USB microphone attached to them, so you can use the TV in and of the
self as it's all a phone.
You talk again.
Say, hey Steve, how you doing?
Hey man, what's up?
You want to hang out?
Yes, sure, come on over.
No problem.
Now the interesting thing what happened was, I was watching
you notice that I was watching something on the TV.
Well, when the phone call came in, it paused what was on the TV so that I could answer the
telephone automatically.
And when I finished answering the telephone, I hung up using the remote and the movie kept
back on playing.
It's later on in the day, Steve comes over, he knocks on the door, rings the doorbell.
The doorbell is attached to the system through an interface, but I also have a panasonic
IP camera attached, and I also have a small, simple, sip-based door phone at the door.
So what happens, he rings the doorbell, I see a camera feed outside, and it connects
me with the door phone outside.
Now the way that we typically have this set up is that we use the cell phone for such
interactions, mostly because it carries it with you and it actually allows us to have
a greater amount of control that way.
So even if you're, for example, out front of the house in the backyard or something, you
can still see who's at the front door, look at them on the cell phone, and if you want
to let them in, you can tap the button on the cell phone to trigger an electric door strike
to open the door.
Now he comes in, you guys, please hang out, watch couple movies, whatever, okay, great
time for him to go, he splits, and you decide to take him to watch something, you decide
to take him to watch one more thing for you to bet.
Now during this time too, the sun has already gone down, and the lights have already adjusted
to this, one because we already know when sunrise and sunset happens, we have an event
that comes together to trigger for such things as time of day, sunrise sunset, for certain
things like when somebody enters or leaves a room, there's a lot of different ways you
can do presence detection, et cetera, et cetera.
So the lights have adjusted themselves automatically, everything's cool, and everything's nice
and chilled inside the house.
Well you figure, okay, it's about 1130 at night, you want to go to bed, but you want
to continue watching what you're watching.
Well you want to take this into the bedroom, well no problem, you have your cell phone,
and you always keep it on you, it's in your pocket.
You decide that you want to watch, so you pick up your cell phone and you hit, and you
hit all of me to turn it on, put it back in your pocket, and as you walk from the living
room to the bedroom, the system eventually figures out that you're no longer in the living
room, that you're in the bedroom, lifetime of about 30 seconds, and it will take, stop
everything in the living room, and bring what you're watching in the living room into
the bedroom automatically.
Now this is possible because Bluetooth is extremely low intensity, and it can be confined
to single rooms in a house, so you can set up a situation so that every single media
director has a Bluetooth dongle, so that you can track presence all throughout the house.
You can also do this in a variety of other ways too, such as using one wire eye buttons
or using RFID tags, however you want to do it.
The point being is that presence detection is not only possible, but is prevalently implemented
throughout the system.
So you're done watching what you're watching in the bedroom, but you've passed out before
that's all happened.
So the movie stops in the bedroom, and roughly 10 minutes after, it notices that you're
not using your TV anymore, so it turns off your TV.
It turns off any AV receivers or anything else that's also connected to it, you're done,
and if you have an additional event triggered for an activity in a room, you can simply
tell it to turn off the lights after 10 minutes of time off, so the lights turn off as well.
Now that is just one example of a scenario of what happens when you can take and unify
all of these disparate pieces of formerly disjointed pieces of open source software under
a common message bus, and provide a way to easily take and have a user say what they
want to do in certain situations.
That is, in essence, what Linux MC actually is, it's a smart home system built from the
ground up.
I've made a little to everyone.
I mean, that just, extremely amazing.
Just to get started, besides you just need a basic computer, right?
You need, at very least, the way that we have this system set up, if we have very specific
requirements, for the way that certain things need to be set up.
This is actually one of the biggest stumbling blocks whenever somebody first comes into
our project.
They immediately think that they can install this on any piece of hardware that they can
think of, and they wonder why when they drop everything in, why it doesn't just work.
Let me explain.
What you need at first, at least, there are two ways that you can run this software.
You can run it as a dedicated machine that fits a new garage, whatever.
We called that a core.
It's not much more than a file server.
It runs the basic RAM application.
It runs the asterisk, it runs file server services, et cetera, for the entire house.
Or you can run it as a hybrid, which means that it is both a core and a media director in one box.
Now, regardless of the configuration that you choose, you have to have two network cards inside the machine.
Now, you may be asking yourself, why would a media center be needing two network cards inside the machine?
Again, this is not just a media center, this is a smart home system.
So, one of the aspects of what the system does is that it becomes your firewall and your DHDP and your central file server, all in one.
Again, even mine, this is supposed to be an appliance.
But the reason that we need to take over, there is one contention that we have with a number of people that are always asking us, why do we need to take over DHDP?
Well, consider the prevalence of IP based devices popping up throughout the home.
We need to be able to determine when those devices come on or off the network.
Examples of those devices would include other media directors.
Keep in mind that media directors, in and of themselves, are disc plus TCs, they boot off of the core.
So, we need to be able to give them an IP address.
We need to be able to provide the file sharing services, et cetera, and do everything that needs for those to function.
But other devices as well, such as Cisco IP phones or IP telephones that connect over Ethernet.
We need to be able to find those devices and give them an address, et cetera.
But we also need to be able to find out when other devices, such as Windows file servers or network attached storage appliances, such as a buffalo tarot station, pop on and off the network.
And the only way that we have been able to do that in an effective way out of the box without requiring the user to be a technical wizard from hell, is to basically take over every single aspect of DHDP services.
Now, with that said, it is also the Internet gateway, and we do provide a comprehensive IP table based firewall as part of the administration interface.
So, that aspect is taking care of as well.
So, you need, in essence, at least, if you're going to go the hybrid route, you need one PC that's going to be, and you could, for example, put this in the living room, and have it be just the primary system, since it is the core, it would have to be on all the time.
And it would have two network cards, the first network card going to your modem, the second network card going to your internal network, for example, connect it to a switch.
Commonly, we have people that have links with WRT 54G routers and the type, you know, the little one router boxes.
And what we typically tell them to do is to take the router box and disconnect from the LAN port, and plug everything into the LAN port, all the LAN ports, and just disable the DHCP on the router itself.
That way you get access to the switch aspects of the router, and you also get the access points, so even that's possible.
Now, so that's basically it. Now, with the full house installation, any time, once you have the core, once you have the core server set up, you see it on the network as a self-contained file server.
You can get to it either via Samba or NFS, and it just shows up in the file server, and you have spots to put audio, video, all the different types of media, as well as providing a handy way to do backup to all the missions inside the house.
One of the applications that we actually have that comes with Linux MCE is a backup program, so that you can do backups of your workstation to the core.
It's currently a Windows only application, but we are going to port it over to Linux and MacroLith Tim, as well.
Also, so you have the file server, and you have a number of media directors, one for each TV, and the only thing that you have to do for those devices is basically just plug it into the network and tell them to boot off of the network.
It will find the core. The core will figure out that this is a new workstation, it will set up a brand new NFS root for it, an NFS image, configure it, throw you into the audio video wizard, so that you can say, okay, I've got a 1080p TV.
I have an audio receiver that can do 5.1, DTS, whatever, set all of that up. Once it's there and it's configured, then it will go through the rest of the setup wizard, which you can tell it, what model TV you have, what model AV receiver that you have, and the devices that you have, etc., etc., and most of the time from media directors, that's all you have to do.
Once those are in place and it knows how to control the devices at that particular media director, it's ready to go, and you can use any remote or better to take and now control every aspect of that TV, which brings you to another point.
We offer legacy audio video control. What does this mean? Well, every TV that you know has infrared, right? Well, what you can do is attach an infrared transceiver.
We recommend, highly recommend, in fact, we almost tell people point blank that they need to use the USB UIRT, and attaching infrared emitters to the back of it, either attach the infrared emitter nipple to the individual infrared devices that you need to control.
Once you do that, you can tell an XMCE about the devices. Essentially, at the worst case, you're basically pointing a remote control at the transceiver and saying, okay, this button does this, this button does this, channel up, channel down, and put some myths and myths in this.
Once you tell an XMCE about the different devices how to control them and how they are connected, Linux XMCE will manage them automatically.
What this essentially means is that when you press a button on your remote or your orbiter, Linux XMCE will figure out automatically which devices to send it to.
So, for example, if you press volume up or volume down, well, guess what? If Linux XMCE knows that you have an amplifier, it will send the command to do volume up or volume down to your amplifier automatically.
If you have, like say, for example, if you want to use a blu-ray player, you can connect that up.
And if you have, let's say, for example, either Ethernet-based control, so you can control it over Ethernet or if you just have infrared control, if you're watching, if you select blu-ray, if you select that you want to watch blu-ray, well, guess what?
All of your button presses for play, pause, rewind, et cetera, will automatically go to the blu-ray player.
Now, notice that this is in stark contrast to universal remote controls such as the logitech harmony, et cetera, because you're no longer pressing, you're no longer specifying that I need to go into the EV mode, or I need to go into the satellite box mode, et cetera.
Linux XMCE figures out where the button presses need to go for which devices. This also includes cable boxes and what not, by the way.
And what you can also do is, in addition to connecting these devices up directly, you can also plug them into, you can also plug them into tutor cards so that you can replicate them throughout the house.
Now, with that said, the tutor cards that we normally support, the PBR 150, 250, et cetera, from HOPHOP have been phased out, as you know, the great analog blackout is coming this next year.
And so we are moving to support the digital tuners and the digital component in an outcard such as the HOPHOP HD PBR.
And what this essentially does, for example, I want to watch the Blu-ray while I can select the Blu-ray, and if I have it connected up to the tuner, it will let me watch the Blu-ray through the tuner.
But that essentially allows me to overlay Linux XMCE's menu on top of everything so that I can still interact with the rest of the system.
But you also have the ability, let's say, for example, that you have a standard definition tuner, and you can't see everything in high definition, or you have a cable box that's high definition, and you want to be able to watch in high definition.
We have a workaround, at least until we have the HD PBR.
Remember earlier that I said that Linux XMCE can control your devices, it can switch input, it can make sure that everything is in the right state so that the button goes to the right places.
You can select A.V. mode while you're watching the Blu-ray player or your high definition cable box.
Linux XMCE will switch the inputs on your TV, it will switch the inputs on your amplifier automatically if one is connected, and you will see the high definition output of your player, and the button presses on your remote.
Again, go to the Blu-ray player or your cable box with an automatic.
Now, whenever you do something that does require a menu interaction, for example, Linux XMCE goes, okay, oops, we need to display a menu.
No problem, it flips the inputs and everything back over to the media director so that you can see your menu.
So, yeah.
I'll tell you what, this is amazing, because I was thinking it was like a myth TV alternative, I had no idea it had all this stuff going on.
Okay, let me explain. We do use Myth TV as an option for one of the PVRs, in fact, it is the default option.
But keep in mind that we use Myth TV for its recording and for its recording and basic TV functions.
We also have support for VDR, because a lot of European users use VVB and love using VDR.
Convergent Home Technologies, which is one of the commercial arms of people that are using code based off of one XMCE, is the VDR port.
And it's about to be released, and it's the next version with our next release, which will be out sometime closer to the end of the year.
I can't make any promises yet. We're still in the process of doing some release engineering for our alpha.
We won't talk about that just yet, but you don't have anything officially to announce.
But, like I said, we've got these disparate pieces, and all we do is we wrap them so that they can talk to each other.
So, yes, while we do have Myth TV, we only use it for the PVR aspect.
If we don't use Myth video, we don't use Myth games, we don't use any of those other pieces, because we've already got them in XMCE as discrete devices.
So, we don't need to use it.
As a matter of fact, one of the things that's actually on my plate is to get rid of as much of Myth TV as user interface as possible, and push it over to Orbiter so that you can use it all throughout the house.
And that's kind of the whole thing, too.
The promise of Linux XCE is literally transparency of everything throughout the house.
I can give you another example.
I have over here 3 Sony VGP XL1B, 200 disc DVD slash CD jukeboxes.
They're connected into my core, but they could just as easily, I could just as easily have one of these sitting up in my bedroom upstairs.
It wouldn't matter, because Linux XCE will do all of the plumbing necessary to make any media that is accessible through any one of these devices throughout the rest of the house.
If I had, for example, a DVD sitting up in the DVD drive in the media director somewhere down in the basement, it could say, oh, there's one down in the basement.
And it would show up in my media file list. That's the other thing, too. Everything is consolidated.
It doesn't matter where your media is. It could be on the core. For example, RIP media that's on the core.
We do provide DVD ripping functions and whatnot, by the way.
It could be DVD that's sitting inside of a jukebox or inside a DVD drive somewhere.
It could be media sitting off on a NAS Brits somewhere. It doesn't matter.
It all shows up in one place. Your TV shows, your videos, everything shows up in one place.
So, yeah, in essence, what we've done is taking things to the next step.
A lot of the last 10 to 15 years of open source software have been about building the infrastructural pieces to make stuff like this possible.
Now what we're doing is essentially taking all of these individual disparate pieces and providing a cohesive glue for all of them to work together.
And building a user interface on top of that, that's anyone can use.
And anywhere. I mean, let's say, for example, I have my cell phone.
When I'm inside the house, my cell phone is just another remote control. I can use it to change TV channels, turn the lights off, turn the lights down, whatever.
And trigger media, whatever. It doesn't matter.
When I walk outside the house, it figures out that I'm no longer inside the house with Bluetooth.
And it triggers the offline mode. At which point I can either trigger house scenarios inside the house like, for example,
oh, let me turn the house lights off, or, oh, hey, I'm going to be going home in 30 minutes.
I want to turn the air conditioner on early to the hot outside, et cetera, et cetera, those sorts of things.
But you also have the ability to trigger and turn on and off the security systems because you have a security panel on your cell phone that you can trigger from there,
the way you walk into the house. And you can also view the security cameras inside the house from outside of the house on the phone as well.
So we use this to great effect too for the door phones, et cetera. So it's like, for example, and I've had this happen so many times where I live in an apartment and quite often the delivery guy comes by while I'm at work at 11.30 in the morning.
And there's nobody here, so he doesn't leave the package. He could just leave it to leave it in the door next door, but he doesn't know to do that.
So he rings the doorbell. It calls me on my cell phone. I pick up, hello, yep, I'm a delivery guy. Oh, yeah, by the way, yeah, go ahead.
And I look, I see that it is a delivery guy. He does have a package. Yeah, go ahead, leave it at the door next door.
But yeah, even so, but the other aspect too, is that what if you have one aspect that I haven't mentioned too much, is that yes, there is a security system in here.
You don't even need a panel for it. All you need is a motion sensor that when it comes to E can control at least, and a security camera and you've got the basics of a particular security system.
Now, let's say, for example, that somebody manages to try to break into the house, they trip one of the sensors, like, for example, at the very least, the motion sensor.
But they could just easily trip the, if you have door contacts or window contacts, et cetera, those get tripped.
The first thing that happens is it finds the nearest camera to those sensors. And it says, oh, okay, trip, hey, some pictures.
It sends that picture to my cell phone while I'm out front of the office and calls me on the cell phone. It gives me a notification message, hello, this is Pluto.
There has been a security breach in the master bedroom. What do you want to do? One, call the police, two, call the neighbors, or three, my favorite option.
Speak to the person inside the house. Now, what this does is basically since I have all of the stereo systems and everything attached to a media director or what not, or to a squeezed box, for example,
we actually, you can use, if you have a squeezed box, you can use a squeezed box as an audio player, so whatever.
So you can take, it will call your cell phone, connect to them with the asterisk system at home, and you talk, and your voice comes out the loudspeaker out of every single loudspeaker.
Keep in mind, too, that since Philipsium CE, assuming that you configured Linuxium CE to even know about your AV devices, it knows about them.
So it can do things appropriately, like turn on the amplifier, setting it, set the volume to 50% so that they can hear you, etc., etc., all the little details.
So all of this automatically. So, yeah, I know I've been a bit long-winded, but there is a lot more to this system than the name actually lets on.
Like I said, it's truly amazing, because I was going to ask you how you play movies on it. I had no idea it did all this.
For movies, we actually have, for movies what we do is we actually have both Zenny and Emplayer wrapped in our message bus, which we call DCE.
For the case of Zenny, we actually use Libzini directly. For Emplayer, we basically have a standard bill of Emplayer that has the slave device enabled so that we can send commands to it via a socket.
That's ironically also how we talk to MythTV. We're also one of the few systems using MythTV that actually uses the network control port, which was originally designed for Xbox use.
So that we can keep track of system states and be able to send commands to MythTV so that everything remains seamless so that we know where it is inside the system and whatnot.
So what is it based on? Is it its own distro or do you need something else?
Okay, but first a bit of history. Linux and CE started off was originally started off as a system called Pluto home.
Written by a company called Pluto Inc. They initially based the system on a variant of Debian.
It's originally a variant of Debian storage. And as such, it's basically Debian with a whole bunch of very custom glue and scripts underneath.
The amount of infrastructural glue underneath the particular underneath this operating system itself is nothing sort of staggering.
At last count, there are over 200 some other scripts that are not part of the standard system. That are stuff that actually takes care of the plug and play, that takes care of system maintenance, that configures devices, when it finds them, et cetera, et cetera.
Linux and CE initially started as a for Pluto home designed to run on top of Ubuntu. It has since moved to Kubuntu because at the time Kubuntu was the KWM was the only wind manager that actually supported Composite extensively.
And you may be asking why we need Composite. We actually need Composite and OpenGL quite effectively because our top end user interface uses an alpha-blended UI.
The whole user interface principle is that it's all about the media. So your media plays full screen all the time. And we try to, whenever we need to display a menu or whatnot, we try to stay out of the way as much as possible.
So the buttons for the main menu, et cetera, are semi-transparent. And a lot of the menu functions and whatnot employ a certain amount of opacity so you can still see the stuff behind it while you select the stuff in front of it, et cetera, et cetera.
And Kubuntu was the only choice at the time, although if we really wanted to, we could push this back into Ubuntu whenever we wanted to.
The main thing that's preventing this from running on other distributions at the moment is the sheer amount of time that it takes to engineer all of our custom scripts to run on another distribution.
Let me give you one small example. We have what is quite possibly the most intricate auto-mountain script known to man.
We actually do database lookups when we need to mount a device. So basically what happens, we have a lot of scripts and stuff that try to detect a device once a device is detected.
It goes into our database and the database can hold all the configuration information. So whenever we try to, whenever we need to look at a particular disk, we figure out where it needs to connect to, and we send messages to our scripts to look up in the database, where the disk drive is, where it needs to go, and we build a route to it.
And do all of this on the fly as we do, for example, like an LS, to look at what's on the disk, what's not.
And when we're done with, and when we're done with what we need to for that particular device that times out 15 seconds later the device is unmounted, we do this so that if you want to, for example, if you wanted to, you could just take an unplug the USB, you could plug in a USB disk.
You would see all the, on to a media director or the core, it doesn't matter, you can plug it anywhere in the house, it will find it. All the movies show up, et cetera, et cetera.
Okay, you're done with it. Unplug it. Okay, it's gone. Everything goes away. So we, there was a lot of infrastructural work that was done there to make all of that possible. And currently a lot of that stuff is very Debbie and specific.
We are looking for people to help take and port this to other systems, but quite frankly everybody who has come by has been, you know, the certain poppy sort.
Oh, yeah, I can get this done in a week. Oh, yeah, no problem, no problem. And then they look at the system and we never hear from them again.
And, yeah, it's, but we are, yeah, for those of you who are looking for a challenge, and I give you not, this is probably going to be one of the most challenging things you've ever worked on.
For the challenges of porting this to other systems, adding additional plugins and whatnot, we are looking for additional developer manpower.
Other thing that we're looking for specifically is we're looking for user interface designers to use our user interface system.
That's another thing too. Now, spend just a few seconds on this. We use a multi-targeted user interface system, which is Orbiter. Orbiter runs on a bunch of different devices.
Everything from tablets to cell phones to the Cisco IP phone to the on-screen display is on the TV. They're all running the same code.
But we had Pluto had to design a user interface designer that would accommodate for all of these different types of displays, but make it so that you could define things like the actions of a particular button or user interface action once,
but be able to differentiate between the different looks of how it's going to look and interact on all of these different devices, because they're all very different.
We need developers and whatnot who are very good with logic and the things, but we also need user interface designers and artists and whatnot who are not afraid to use some very unconventional software to get some of these things done.
What's the best way for them to contact you?
The best way for them to contact is quite literally is actually in the forums. I say that because the forums, by the way, are forums.limicsmc.org.
That's forums.limicsmc.org. And I say the forums specifically because not only can you leave messages to all of us, you can post messages in the developer forums or the users forums, etc.
But we also have a link to the IRC channel, which opens up a Java chat app to our channel online.limicsmc.org so that you can talk to us.
If you're interested in doing development work or helping with documentation, we need lots of people to help with documented this vast chunk of code.
When Pluto left us this code, they left us something close to 4 million lines of code and almost none of the documents.
So we've had to basically tighten over the range of everything, figure out how all of these individual disparate pieces work and build onto them for the process.
It's been an interesting challenge to say the least.
We'll just back up a little bit. So you're saying any Debian-based distro would work, as long as it has KDE, or would you?
It would. That it would, but you would have to port it. Again, right now we support. We support Kabuntu 7.10 out of the box with our current release. I would not install it on anything else right now.
We are working on a version for the upcoming 8.10 risk. We do not know exactly when that will be done because we are dealing with a number of other issues as well.
But we are working diligently on it and we hope to have it done on time for the 8.10 release. All things considered.
Now, like I said, the reason being is that, again, this isn't just some dinky little blitz-taken thread, myth TV on top of the first and stuff on top of that.
This is an entire comprehensive system with a lot of custom plumbing that takes a lot of work that you decide to want to port this to other systems.
The goal, of course, is to try. Our mid-term goal, short-term goal is to get the next release out.
Mid-term goal is to take and push as much of the custom stuff as we possibly can into standard Ubuntu packages so that they can be pushed upstream.
And then from that, then we can maybe start thinking about pushing this onto other distributions.
But that's kind of the whole thing about this system is that this system is extremely vertically oriented and right now all of it has to be installed.
Okay, and then the download is an ISO of the complete system with Ubuntu and everything wrapped up in one.
We have two different forms of which you can download it.
What we highly recommend is that you get the Quick Start DVD.
The Quick Start DVD is a 4.3-dig download that contains both Ubuntu 7.10 as well as the complete Linux Simpsi E-Install.
In fact, what we do there is we basically, the install basically takes formats, the target disk that you're going on to wipe everything out.
It's like an OEM install. Your wipes everything out, and partitions formats everything out.
Unpack a completely frozen copy of Linux Simpsi E that's ready to run the setup wizard and then reboot.
As an advantage to that, the install time takes about 20 to 25 minutes from start to finish before you start to save the setup wizard.
Now, the downside is of course that if you have any partitions or anything that you want to keep, it will wipe them out.
With that said, we do have provisions on the install DVD.
If you're installing onto an existing Linux Simpsi E-Install, it will ask if it figures out that there's an existing install.
It will ask if you want to preserve settings and or home, which is where all your stuff gets stored.
So, there's that. If you have more custom needs, you can use the CD-Install, which basically means you have to get a copy of proven to 7.10.
And then you have to get the two Linux Simpsi E-Install proven to first, and then stick in the first Linux Simpsi E-Install, and click on the Linux Simpsi package to install it.
When it asks you for the second CD, you put it in.
This is available in 64 bit.
It is available in 64 bit. We have versions for I-386 and AMD64.
Very cool.
Well, I think you answered all my questions plus some.
Well, it's very, I admit, it's a bit overwhelming, but the thing is that most people, they come to us and they see the name Linux Simpsi E-Install.
It's been kind of a double-edged sword with us, because one, it's given us tremendous amounts of exposure.
But most people come to us looking for something that's kind of like an alternative to myth TV, or XBMC, Xbox Media Center, or Elisa, or you know, Elisa, or D-D-D-D-D-D-D.
We give them the big sales pitch, and they look at us like a deer in headlights, because they were not expecting something quite like this.
Now, I would like to give you a kind of a set of perspectives here.
I have heard from a number of people. They often ask me whether or not they can afford something like this.
And the answer is very much, yes. For this apartment, I have literally almost one of everything.
And I have the full kit and caboodle. I think I'm a developer. I have every single orbiter type that we support, so that I can check user interface stuff.
I have a Cisco IP Telephone. I have microphones and everything set up for my media directors. I have multiple media directors.
And I have a complete security system document consisting of everything from doorbells, to doorbells, to motion sensor, to magnetic door contacts, all of this.
And all of this in, I'm looking at about 4,500 in parts for everything. And expanding this out a bit, I recently did an install for a bed and breakfast in Texas.
And to give you an idea, 13 rooms, 57 light switches, six TVs, each with media directors, two new voiceover IP telephones, one coreless telephone.
They already had PDA, so we used those as their existing control devices. We replaced their cell phones.
And basically had four of the different rooms and what not we placed, a little Nokia N-800 panel on the wall, wherever they wanted to have a place where they wanted to control the different house functions.
For every single end to do all of this, I mean we're talking about a system that has everything from lighting control to media, to, they have free terabytes with the media currently on there.
And they can add more just by going out to best by buying a bus or a terrace station, bringing it home and plugging it into the network.
Using, let me catch my breath, they have climate control through an Apple Air 8870 thermostat connected via RS-232.
And they have, so they can control thermostat and what not through the orbiter.
And they have, oh yeah, sorry, and in the side here, one of the things that we do, one of the things that you do when you set up a system like this, it will ask you for a floor plan.
Now the floor plan is really nothing more than just a ping file or a gift or something that you upload of something that you draw in GAMP or INK or one of the many thousands of home drawing programs to draw floor plans.
And what you do, after you do that, and you configure your device to say that you have like say 12 lights in the house and you have your door sensor as your media director or where your cameras are, you place all the individual devices on the floor plan.
And once you do that, you see a button in every single major media, every single category, lights, media, security, telecom, etc. call floor plan, which you can click on.
And instantly see the floor plan in your house, along with the devices on that floor plan.
So if you want to control a specific light in the house, you can see if it's on or off, or you can turn it on or off right there from the floor plan, that sort of thing.
Or let's say you want to watch the same movie on multiple media directors inside the house where you select those TVs, you select what you're watching and it will take and stream them to all of the TVs in the house automatically.
That sort of thing. So with that said, basically, yeah, back to what I was saying, all of this functionality, all of this functionality was, for all the different hardware and everything, cost was about 8,000 parts.
Just as a comparison, I decided to bring in a Crestron, either. Crestron, if you want to look them up, www.crestron.com, does home automation and office and building automation, large field building automation as well.
They do systems for large companies and mansions and that sort of thing. A Crestron system.
For what we were going to do for my father's place, and keep in mind that they don't have all of this functionality. They would not have had telephone control, I would have had to have bought a separate PBX for that.
They would not have had the media control. I would have had to buy two different systems for that. I would have had to have had to have by a kaleidoscope for video and overture for audio.
I would have had to have, I would have had to have had a security system panel and all of these disparate systems. And then over here, I have the Crestron system handling just lighting and audio video switching and control.
No media storage or anything, just basic switching. It's a glorified switch box. They priced it out, starting out. It was going to cost about $120,000 to wire up that house.
And that did not count the programmer needing to stay there for his time, but to stay there for six weeks to program the system because I can't do that. Only as a registered Crestron programmer can do that.
So just to put that in perspective. And that system doesn't do one tenth of what our system can do.
Okay, I got a new B question for you. Now this involves wiring. So would you say like a new construction would be ideal for this?
Okay, wait, wait, wait, wait. Sorry, that I did not explain. Okay. And this is even actually, this is even better. With systems like Crestron and whatnot, yes, you have to wire everything.
Times of custom wiring, tons of everything. The best mess. The good thing here is that, let instance to support a variety, a wide variety of different home automation standards.
Of course, if you have an existing X10 installation, let instance that you can use that with the appropriate computer interface, such as a Cm11A.
If you have an addition, we also support Instion. SmartHome.com has an excellent system called Instion, which is X10 compatible and also has its own system.
Both of those aforementioned systems, X10 and Instion, work through the power line.
So basically what you do is you, for things like floor lamps and whatnot, you plug in modules that plug into the lamp and then plug into the wall to provide control there.
And for things like existing light fixtures and whatnot, you replace all you do is replace the light switch.
You just have to ensure that your light switch has neutral running to the light switch box.
If it doesn't, you can pull one from an adjacent output or whatnot. If you are not comfortable with any of this, you can of course hire an electrician to help do the work for you.
This is very straightforward and it does not require any custom wiring at all. For those two systems right there, we also support Z-Wave out of the box.
In fact, Z-Wave is what we recommend the most. The reason that we recommend Z-Wave is that Z-Wave works over a lot similar in that you have plug-in modules that plug into the wall for your thing like your floor lamps and whatnot, and you have your replacement light switches for the wall, but the actual transmission of commands happens wirelessly.
So it's infinitely more reliable and the more devices, for Z-Wave and Instion, the more devices that you have adjacent to each other, the stronger and more reliable the network is.
So basically, in the simplest of cases, telling the computer to connect to control these things is a matter of plugging in the modules and replacing the light switches that need it.
Then, carrying them up to your master controller, once they're paired up to the master controller, you can go, you can pick any Linux MCE machine in the house, any media director in the house and go to the setup wizard, at which point it's recommended actually that you do it at the core because that's probably where your computer interface is or your Z-Wave or whatever.
And you go to the lighting section and you say, okay, it says, I need to pair with your master controller.
When you set your master controller down next year at the computer interface and say, go, and you press go on the controller.
It finds your computer interface, you communicate with it, uploads all the information that it knows about in the system.
Linux MCE then knows about all your lights in your house.
It will go through and say, it will go through each light in the house and turn it on and turn it off and ask you where it is.
I'm now controlling the light, which room is it in?
Okay, it's in the bedroom.
What kind of light is it?
It's a four lamp, accent lamp, door sconce, et cetera, et cetera.
You select these things and once that's in place, okay, Linux MCE can now control your light.
And it knows which room they're in.
And after which, after you configure your devices, your things like your media directors, your lights, your climate control, and what not.
Linux MCE will automatically put buttons on your orbiter controls for all of your different devices.
For example, if you have lights in a room where you have at the very least on and off.
If you have lights in a room with a media director, it will add a showtime event so that whenever you're ready to see a show, it will dim the lights in the room automatically.
And when you're done with the show, we'll bring them back up.
Things like that.
Okay, that's really cool.
When you first said that, when you lived in an apartment, I was like thinking, wow, you'd probably lose your security deposit doing rewiring, but there is no wiring involved.
It's like the light plates, right?
Yeah, just at the light plates.
And I didn't really even do that here.
All I basically did here since I don't really, since I only really have ceiling fans from my light, I don't turn them on anymore.
I just basically put, I put floor lamps, I put nice floor lamps wherever I wanted light and then plug my lamp modules into those.
So I didn't even do any of the lighting here.
I didn't even do any of the wiring here. I didn't need to.
The only wiring that I've actually done is basically the installation of the door contacts and the window contacts as well as the doorbell.
And I asked my landlord if I could do that beforehand and he said, sure, no problem.
It wasn't any big deal. It took me about an hour to do both of those things.
So yeah, done.
Yeah, and if you're moving, you can take everything with you.
Yes, exactly.
Yeah, that's pretty neat.
Well, I think you covered everything.
So, but the thing is that I do want to spend some, I want to spend a small bit of time here telling what's going to be happening in the future.
What you see right now, even in its current form, Linux MCE is a formidable smart home system.
We still have a lot that we need to implement, particularly in the area of climate control and whatnot.
We can currently do things like control pools and hotpubs, jacuzzi, that sort of thing.
But we need to be able to add support for things like vent dampeners so that you can install a vent damper in your air vents and provide multi-zone climate control.
So if you want to make one room cooler than another, you can do that or you can turn off air for certain rooms and others if you're not in them.
But we also need to, we also have a lot of other things in the pipeline as well, such as, I've written a game media type and currently we support MAME out of the box.
Basically, if it detects that it adds a folder called games to your media files and if you drop MAME ROMs in there, it goes, oh, here are some MAME ROMs, it goes out installs MAME and turns on the orbit interface for it.
So basically, it's a completely integrated part of the system and eventually one of the things that we actually, one of the things that we actually do have, we have a feature called monitor mode, which we actually use in several different places.
For example, when you're watching a DVD and you go to the DVD menu, we know when you're at the DVD menu, so we periodically send picture frames of the DVD menu to all the orbiters in that room.
You can pick up one of the orbiters in the room and click the menu item on the screen to get to that part of the DVD.
It even happens on the cell phone too, you can even do it from the cell phone, it's kind of cool.
But we also provide that functionality for playing games as well.
So let's say a parent wants to watch their kid playing a game and they're in another room or whatnot, they can select their bedroom or whatnot.
And if they're playing a game, they see the game playing on their orbiter via their PEA or a tablet or their cell phone, whatever, that sort of thing.
And I'm actually going to be adding functionality soon enough, and that will allow you to stream the same game to multiple rooms inside the house.
I'm still working on some of the logic to make that possible.
So that'd be like some from an Xbox or PlayStation?
That's just for games that are emulated on the media director itself.
Now the reason you can't do things like hook a PS3 or whatever up to it, it's actually a very simple thing.
It has to do with the fact that when you digitize through a tuner card, guess what, is it a delay?
Usually about a quarter of a second delay, and that can be a big pain in the ass if you're trying to play a video game through a tuner card and you're about a fourth of a second behind and all of a sudden you're like, oh crap, I just got killed.
That's not feasible in any form or fashion at the moment.
Things will change though.
So we've got game support, whatnot.
We also have, we're also going to be adding support for a lot more internet-streamable content, such as a shout-cast, such as such a shout-cast, internet radio streaming, that sort of things.
Support for podcast RSS, such as your show, as well as, I'm going to explain this one, other types of services.
But the thing is, no matter what, and for all of these different things, like say if you're keeping something on YouTube, if you're looking at something on YouTube or if you're looking at a podcast RSS, whatever, it's all in the same place.
All of my YouTube videos are in the same place as my recorded videos, as my, as my recorded videos, as my TV shows, as my DVDs, et cetera.
I just filter out what I want to watch.
So everything gets consolidated into one place.
So we're going to see a lot more media types than, media types and whatnot, actually supported.
Another thing that we'll be seeing a couple of releases down the line is support for open office. We'll be embedding open office so that you, an open office viewer so that you can view your documents on a TV screen and print them to the nearest printer, for example, when you're about to look at the door to the office to do something.
Then so on and so on. Lots of neat things coming down the pipeline. I also want to add an instant messenger inside the orbiter as well so that you can answer instant messages on any TV or orbiter device inside the house.
That's sort of thing. Lots of neat things coming up.
I can't wait to try this thing.
I do want to say we have specific hardware requirements. Again, I want to iterate this again. You won't go wrong if you use a PC with an Nvidia for, let's say, a hybrid.
If you're building a hybrid or a media director, use an Nvidia graphics card to 200 or better.
You need at least 512 mics around. I would highly recommend at least one gig.
Memory Associates these days, please load us on it.
Efficient storage, of course, and two network cards. Use this thing as it is intended. Please make it the center of your house, make it your router, make it your firewall, and things will just work. We promise.
It's when you don't do that. It's when you go against that. That things don't work as they intend to and you spend days and days banging your head against the wall.
So it resists the urge.
Now would you recommend 64 beds over 32?
Honestly.
No. It's not an issue. It's not an issue. It's not an issue. There's really no reason.
What? You might get a three to four percent performance increase.
It's for those people who absolutely know I want to use AMD 64 because I have an AMD 64 and there's really no reason to.
Unless they have four gigs of RAM or more.
Yeah. And that's true. I mean, we may see some performance increases once the CPUs get fast enough to, and that's the other thing too.
Right now we're a little ahead of the curve as in we do support ripping blue rates to the core, but you have to have the absolute fastest thing out there to even think about playing them right now.
Because we do not do, because Nvidia drivers do not do any acceleration whatsoever.
8.264 acceleration whatsoever. So everything has to be done on the CPU.
So this isn't start contrast to what you might think. All of the power in the system needs to be at the media directors.
Your media directors need to be fast hot rods.
Your core is a file server. It doesn't need to be that fast. It just needs to have plenty of storage.
And even that's not true because you can keep your storage in mass blocks. It doesn't matter.
And that's the other thing too. We have a storage radar that constantly runs that checks the storage space available on every single thing that it knows that it can talk to.
And it will automatically when you choose to rip something, like say if you choose to copy a DVD or a CD to the system, it will automatically choose the disk that it thinks is the largest that can hold it automatically.
So it figures this stuff out on the fly.
We also have support for UP&P as well.
So if you have a PlayStation 3, if you have a dealing UP&P media player type device, I've even used my Nokia N810 running Canola with the UP&P plugin as an output device.
It can, those devices can play anything on the Linux chips to eat core. Conversely, if you have a UP&P file server or what not already in the system and a UP&P storage appliance inside the system, it's also a UP&P client.
So it will go out and find those UP&P shares and bring them into the system as well automatically and put them in as part of the media list.
That's pretty neat. Now I know what my Christmas present is going to be or part of it. It's going to be a lot of work.
Well, here's the thing. If you're really interested, if you're seriously interested, read the forums, contact us in the chat room.
We've been through all of this. We know what works. We know what doesn't work.
And when we say, use this by God, you should use it because it will save you a lot of time and energy in English.
And if you do these things, it literally is, plug and play. You drop it in, it just works.
It's a very apple way of looking at things, but, well, we're looking for people to help add additional support for Harvard, so, hey, you know.
Well, I noticed on the IRC, up at the top, on the titles, is Lennox MC, Lennox Tag Roundup?
Yes. Is everyone there?
We were coming up.
Actually, now that was actually, we need to change that topic. That was back in May 26th until May 31st in Berlin.
We were present at the Lennox Tag Show. Lennox Tag is, of course, the Europe's premier Lennox event.
We had a very good showing there. We killed at the show. Our booth was continuously packed.
I mean, there was always a line of people looking at all of our stuff because what we did to the Lennox Tag Show was we brought everything that we had.
Most of our setups. We took and disassembled our setups and brought it with us on the plane all the way over to Europe, all the way over to Berlin, and assembled all of this stuff.
And we had, at last count, when we looked at the, at the device tree, when we finally finished up, we had about 140 different devices that we had connected into the system,
their range and some blight to all of our cell phones, our PDAs, all of these different things working together, security cameras so that they could see an actual system in use and working.
And let me tell you, when they saw the fall or me functionality working, their jaws just hit the floor.
But it was basically more or less, it was, it was, oh God, how many of us were there 10 of us? 10 of us? 10 of us? All in that booth?
That's kind of funny. If you're normally at one of these trade show booths, you spend some time at the booth and then you get tired of spending some time at the booth and you want to walk around.
We love this system so much. We never left the booth. All of us were in that booth all the freaking time selling.
And we had to be, because there were people coming up to us just constantly looking at this thing. We were giving our little sales pitches and showing the system off and whatnot.
And people were just absolutely dumbfounded. And when they finally asked us, well, how much does this cost? The software is free. And that's when they blew, you know, their brain exploded.
Are you going to be any trade shows in the United States?
We're still trying to figure out, we're still systematically trying to find a way into the Linux trade shows here in the States.
We have a definite gig at Linux Talk every year because of the huge reception that we've got there.
We have various people who are involved with the project who have already given talks at various local shows.
For example, Barry McCormick just finished up a show in Salt Lake City at the local open course event there at the University of Utah.
And it was received extremely well there. And we have lots of people that give little talks like this all over the place.
We had another user get another talk on Linux MCE down in South Australia and it was well received there as well.
So, little by little, you aren't going to see us at the trade shows, little by little.
I have a couple more for you. I don't know if you heard of them. Ohio Linux Fest?
No, I have not.
It's coming up October 11th and then there's a new one called Southeast Linux Fest which the first one will be next year around June 13th.
Okay, fantastic.
South Carolina.
Okay, fantastic.
I'll put all the links in the show notes and if you want to check it out.
Beautiful, that will be great and we will definitely, if we can find a way to provide a show presence there we will.
The biggest obstacle to being present at a trade show and of course sponsorship.
But of course now with the increased exposure with Linux MCE, especially with the show that we gave at Linux Talk whatnot,
we hope to be seeing considerably increased sponsorships so that we can do these individual shows.
Because there's a lot of logistical support involved in bringing us all together in one place and being able to afford the appropriate boot space.
We need at least a 10 by 10 booth and that's somewhat constraining to be able to show off our stuff.
So, yeah, a lot of this is still being worked out.
We're still in the very early ages of being a community based project.
It's no longer just concerned, it's no longer just Pluto holding the reins in everything.
We're now a completely autonomous and autonomous community in and of ourselves.
And we're learning to stand on our own two feet and as such, you know, when we will, you will be seeing as that trade shows in the future.
Although, I don't have any to announce at this point in time.
Not to jump around on different topics, but how many developers do you have on the team?
Currently, there are hold on a second. Let me actually count.
And this is all under the GPL?
The majority of it is under the GPL. There are some pieces that Pluto initially wrote which they used for their own commercial enterprises which are under the Pluto public classes.
It has left the GPL except that if you decide to bundle the software with hardware as a cohesive piece and you need to contact Pluto for licensing,
we are in the process actually ever placing those PPL pieces with GPL code.
So, yeah, most of it is under GPL. Two pieces under PPL, which is almost like GPL.
There are 11 of us that are doing development work and we're spread across the globe.
I had to think about that one for a bit.
I don't really think of it in terms of we have X number of developers.
We have people who are constantly working on the code and we have people that come in and out to work on various aspects of things as they have time.
Of course, this is a volunteer-based organization. I would also like to point out with now that I think about that.
We just filed for 501C3 incorporation for our nonprofit organization in the state of New York,
at the Linux Institute Foundation. The paperwork will be going through within the next couple of weeks.
So, we will have an administrative umbrella for which to do all of our legislative concerns.
So, there you go.
I think it was a good interview. Got all the information I needed. Plus some.
I guess you weren't expecting all of it.
No, I didn't. This surprised me.
So, I mean, yeah, okay, so this thing is lazy.
Yeah, it does that, but that's, you know, yeah.
But that's kind of like saying that Albert Einstein was a patent clerk. So, you know.
Well, you know, I really, I really hope you do take and take a look at the project to see what we've done to take an insolet.
And I said before we are where one of us is always available on the chat room to help out people.
We do. Some of us are there pretty much constantly, and we can get kind of stressful answering the same questions on and on and on,
even when people don't read the facts. But, you know, it's just the nature of being a volunteer based organization,
but there's always someone there to help. And we've all been through the rigmarole of installing this system.
We know what works. We know what doesn't.
So, we can help you and others install a system to do all of the things that you see in our demo video.
I don't know if you saw it, but on YouTube, we have a demo video, a Google video. We have a demo video.
It's also available from the Linux MCE lipstick. It's 24 minutes long. And I kid you not. I swear.
I have had people actually come up to me and say that you guys are just advertising. There's no way it can do all of this stuff.
And I'm running all of this in my house. It does do all of this. It does exist. It does work.
So, it's a bit much, I guess. But we're trying to attack a much bigger use case and trying to provide something that previously did not exist.
A smart home system. A real one.
That is amazing. I'll put the link to the video in the show notes too.
Fantastic.
Now, you sell the CDs too, or the DVDs?
Yes, we actually, we're having a bit of a logistical problem with the DVDs right now.
The person that was in charge of that is not available at the moment, so we're trying right now to get an alternative source for the CD.
Once we have an alternative source done for pressing and making a CD, then we will take the link back up to be able to sell those DVDs and whatnot again.
But until then, like I said, you can download it off of the site and burn it onto a disk.
We have two versions of the DVD. We have a single layer, DVD and dual layer.
The only difference between the single layer and the dual layer is that the dual layer has the high resolution, high definition version.
So, it makes a good demonstration piece as well.
All right, excellent. Well, I want to thank you for joining me tonight.
I enjoyed this very much.
And if you ever have any updates, just get a hold of me and we can talk again.
We'll do.
All right, thank you.
All right, there you go. Thank you, Thomas.
If you would like more information, the show notes are located hackerpublicradio.org and monsterb.org slash hpr.html.
And if you'd like to contact me, my email address is monsterb.edlenicscranks.info, or if you would like to chat live, I'm located over on free node.
Add hash Lenicscranks.
All right, thanks for listening.
Thank you for listening to hackerpublicradio.html.
hpr is monsterb by tarot.net.
So, head on over to CARO.ENC, all of us need you.
Thank you very much.
