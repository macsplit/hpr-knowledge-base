Episode: 1384
Title: HPR1384: How I Got Into Linux and OSS
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1384/hpr1384.mp3
Transcribed: 2025-10-18 00:35:29

---

Music
Music
Music
Music
Music
Hi, my name is Keith Murray, I'm a developer and software architect from Vancouver, and
this is my first podcast for hacker public radio.
It seems that telling the tale of how you came to be an active user of Linux or open-source
software has become the de facto first-show topic, so here's my story.
The first computer I ever owned was purchased secondhand from a local company who'd recently
upgraded all their systems.
It was a second-generation Intel Pentium system with precious few system resources, but it
was mine.
All mine.
I played with it for a few months trying out different configurations and software packages,
and of course different operating systems.
I tried pretty well every OS I was familiar with at the time.
This of course meant that I'd pretty much just tried about 16 different versions of Windows.
After a few months of running it in this default configuration, I became curious about Linux.
I'd seen the distribution CDs attached to magazines and the back covers of Linux for
Dummies books.
I picked up a copy of Red Hat Linux for Dummies and began my triumphant march into the world
of open-source software.
Well, maybe it wasn't so triumphant after all.
I was able to get this system to install, but I had trouble getting it to recognize anything
more than the most basic hardware.
After a couple of hours I had a working system, with no network card, no sound card, and
no webcam.
I poked around for a while, and before the night was over, I was back into Windows, and
my Red Hat partition just sat there taking up disk space for a few months.
I tried off and on over the next year or so to get Linux working the way I wanted it.
Red Hat 7 had drivers for my neck, and once I got online I was able to get the sound
card working.
No thanks to some of the people I found in a couple of chat rooms I was looking for help
in, telling me to RTFM without ever really providing me guidance as to where to find
the M.
Ultimately though, I didn't find that Linux was going to suit my needs at the time.
As much as I enjoy a project, I didn't feel like I wanted to spend all my time just trying
to get things working.
It would be years before I made another serious dive into the Linux world.
Well, Linux wasn't for me, at first.
My interest in open-source software had certainly been peaked.
I soon discovered that there was a great deal of free software available for Windows as
well.
Sometimes you hear the long rants of people who try to insinuate that if you buy a computer
with a proprietary OS, then you're also stuck paying for all your expensive proprietary
software as well.
As most of us know of course, that isn't really the case.
Whether it was the days of shareware and freeware available from all sorts of places during
the 90s, or the days of open-source software in the 2000s, there's pretty well always
been a way to get free or very low-cost applications for nearly every platform.
A quick aside.
When I say free throughout this podcast, I'm speaking monetarily.
I'm not going to make the distinction between free as in beer and free as in freedom.
It's a complex issue that I just don't have the time or quite frankly the patience to
get into today.
I begin to really enjoy playing with various kinds of open-source software.
Some are things that most of us are familiar with, the Firefox Browser for one.
Other applications I picked up during this prime period are things that I continue to
use to this day on the various platforms I interact with on a daily basis, like Audacity,
which I'm using to record this podcast.
There's even a couple of open-source applications that are only for Windows, like NotePad Plus
Plus.
And there are even large corporations making light versions of their software available
to those who can't afford or can justify spending hundreds of dollars on large commercial
software packages.
Microsoft has been offering, for example, an express queue of its Visual Studio software
development tools since 2005.
While it doesn't have all the bells and whistles of their commercial product, it is a very
serviceable IDE for students and hobbyists.
As my usage of the internet grew through the 2000s, I began to vary the technologies
I use even more.
I signed up for a web hosting count in 2005, with a company that provided me shell access
to my shared hosting server.
That server, running on CentOS, allowed me to direct command line control over some of
the aspects of my hosting service.
This became the first time that I was able to use Linux machine effectively.
Not long after this initial exposure to a practical Linux implementation that I could
make use of and really enjoy, it was time for me to buy a new computer.
I decided that it was time to move myself to an OS that had a nice terminal interface
that I could use just like the one on my fancy new web server.
One that was based on the foundation of a free Unix-based OS, and I speak, of course,
of the Mac.
Despite my recent positive experiences with the server-side Linux implementation, I wasn't
prepared to hand over my desktop to a Linux system just yet.
I was, however, prepared to start offering Linux a role on the server side of my computing
life.
I was in need of a file server and a lamp server to do testing and playing around with some
web technologies, so I decided to restage my old Windows desktop as a server running Ubuntu.
In truth, this was probably more of a test server than a production server, and by that
I mean, I never did really entrust any of my data to it, other than holding some backups
of my data that came from my Mac and my Windows machines into my home at the time.
There was little else for this machine to do.
It did, however, set very important groundwork that would be added to down the road.
As I mentioned in the introduction, I'm a software developer in my day job.
My primary experience with software development is on the Microsoft Stack.net, see sharp,
that sort of thing.
I've written code in several other languages over the years, PHP, Python, Z, Java, but
I do work primarily with.net in my day job, so it was easy for me to turn that direction
when I wanted to begin working on software projects in my spare time.
Since it's easiest to work with that platform on Windows, I decided that it was time for
me to get a second computer, a desktop machine running Windows 7 that I could use for building
applications.
It had been a few years since I'd purchased the Mac and running Windows 7 in a VM on
a somewhat underpowered Mac at this point, was becoming a bit difficult.
So a second machine was in order.
Due to the age of the Mac, this had become a bit of a second primary machine.
I would use the two of them interchangeably and would need to move data between them fairly
regularly.
I'd tried using the older Linux PC to handle this task, but at this point the hardware
was nearly a decade old and the old 40GB IDE hard drives were getting a bit long in
the tooth for me to have much faith in them.
For the first year, I ran the Windows desktop with some file shares open that I used when
I needed to share data between the Mac and the PC.
As I first year wore on, I found that I was doing less and less development work on
the Windows machine and more and more web-based development work from the Mac on the Sento
S web host.
It had become clear that it was time for another shift.
This began my great Linux experiment.
I'd become very familiar with Ubuntu and virtual machines over the past few years and
listening to shows like the Going Linux podcast, I kept hearing all sorts of good things
about people's experiences with Linux as a desktop OS.
Having done my stint with the Mac, I figured it was time to take another shot at easing
the Linux desktop, since things had undoubtedly improved during the intervening decade and
my initial problems with Red Hat would no longer be an issue.
And for the most part, that was exactly right.
I had initially planned the project to be about three months long, but as I detailed in
a fairly expensive blog post that I'll link to in the show notes, I wrote at the time
that there were just too many issues for me to cope with.
Not all of these were technical.
To be fair, some were the result of a major shift between platforms, but ultimately I decided
that a Linux machine was just not a good fit for me as a primary desktop machine, and
the experiment was cut short after only three weeks.
While it was very clear that I could do anything on a Linux system that I could do on a pre-installed
commercial OS like Windows or OS 10, many of these tasks required more investigation,
more adjustment, more tweaking, learning, failing, redoing, frustration, and more importantly,
time than I was willing to commit.
That may not be consistent with the hacker ethos, but it was simply the way I felt at the
time.
What I didn't do was switch that machine back to Windows.
I learned something very important about how I use computers, and quite frankly I needed
a server, a good one, something reliable, with a wide variety of software packages that
could do specific things that I wanted, and I wanted something that could run with a
minimum of overhead, leaving all of the system's resources for the services and applications
that it hosted.
For me, Linux is almost purely a server OS.
Now, I've been running a Linux server in my home full-time since the conclusion of
that experiment back in 2010.
The original server hardware has been donated to a family member, and I recently did a
server build, my first hand build PC at nearly a decade, and I used that to assemble its
replacement.
It performs a number of services and tasks which keep things running smoothly, and provide
me with peace of mind as I carry out my day-to-day activities in the digital world.
I may take some time in a future HPR episode to talk about some of the things that I have
my server do for me.
I've also recently changed hosting providers, and now I have a dedicated VM running devian
to host the various websites that I'm involved with.
But that too, is a topic for another show.
I remain confident that the day will come when a Linux distribution will truly challenge
for a spot among mainstream PC operating systems.
Until then, I couldn't be happier with the performance as Linux as a server OS.
I hope this slightly different take on how I came to Linux story has been of some interest.
If you're interested in any of the other things I do, you can find me on Twitter at kdmurie
or a blog at kdmurie.net.
Thanks for listening.
You have been listening to Hacker Public Radio, where Hacker Public Radio does our.
We are a community podcast network that releases shows every weekday and Monday through Friday.
Today's show, like all our shows, was contributed by a HPR listener like yourself.
If you ever consider recording a podcast, then visit our website to find out how easy it
really is. Hacker Public Radio was founded by the digital dark pound and the
economical computer cloud. HPR is funded by the binary revolution at binref.com.
All binref projects are proudly sponsored by linear pages.
From shared hosting to custom private clouds, go to lunar pages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under a creative comments,
attribution, share a like, lead us our license.
