Episode: 2106
Title: HPR2106: My Podcast Client
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2106/hpr2106.mp3
Transcribed: 2025-10-18 14:22:07

---

This is HPR episode 2106 entitled My Podcast Client.
It is hosted by MrX and is about 20 minutes long.
The summary is a show about My Podcast Client.
This episode of HPR is brought to you by An Honesthost.com.
Get 15% discount on all shared hosting with the offer code HPR15 that's HPR15.
Get your web hosting that's Honest and Fair at An Honesthost.com.
Hello and welcome, Hacker Public Radio Audience.
My name is MrX, welcome to my 14th HPR podcast.
I'm doing today's show because there was a call for more shows.
HPR is getting dangerously short of shows.
Imagine for a moment how much you would miss HPR if it was gone.
How many other wonderful and varied future shows would you be denied the privilege of listening to?
This is what's at stake.
HPR is run by the community for the community and they simply have more shows than they
would know what to do with if everyone contributed just one show a year.
All you need to do is record something and send it in.
You can make the process as simple or as complex as you wish.
The community doesn't matter, so come on, how about it, pick a blood recorder and let's hear a story about the first thing that pops into your head and we should all find it interesting.
So the day's show has been rushed out but for the reason just explained.
I did plan to do this show but not at this time and not quite in this order, however needs massed and it'll probably be a bit rough and ready.
The day's show is about my podcast client and my podcast client of choice is HPR.
I chose this for the single reason that it was able to import my large existing collection of podcast feeds from IPR.
Unfortunately HPR is no longer being actively maintained which is a shame because it's such a great piece of software.
It does such a nice job at least for me anyway it does.
It tends to go quite about its business with no intervention or fuss, so I really can ask for much more.
According to the HPR webpage, it says HPR is a tool to scan and download podcasts such tools are often called podcatchers.
HPR is a command line tool for Linux and other project systems, free-based eMac OSX, etc.
It's quite a few features, a few highlights are that it's easy to learn and use.
It has automatic discovery of feed metadata and can import iPod or settings.
The software was written by John and I'm going to butcher the statement I'm afraid.
John Goers, GO-G-O-E-R-Z-E-N, I'm sorry John, if you like it you can send a few dollars my way via my tip jar.
This is certainly optional and doesn't buy you anything so there you go, that's what it says at the top of his page.
Obviously the first thing you've got to do to start using a thing is install it on an Ubuntu system or a Debian-based system,
you'd obviously use App-Dash-Gate, package management or whatever.
I'm just going to have a look and see if it's still available.
Now I've got an old version of Ubuntu running on my server and if you just check App-Dash-Gate,
no, App-Dash-Cache-Search-H-P-O-D-E-H-P-O-R, and H-P-O-D-R, tool-to-scan and download podcasts so it's still available on that.
Now I think it's at Ubuntu 12.04, I'm not quite sure, so it's a really old version of Ubuntu.
I'll just try a, just like the curiosity, App-Dash-Cache-Search.
Now this is on Raspbian running on my Raspberry Pi, let's see if it's available on that in a second now.
No, that's a shame, so it's not available on Raspbian, so that's going to be a first problem, it's probably not going to be available.
So I'm not quite sure how useful this is going to be, but as I said before, it's kind of rushed out, so the first thing, once you've installed the H-Podder,
the first thing I did was to import my podcast feeds from iPodder, which I was using at the time,
and you do that with the command, H-Podder, space, import-iPodder, space, dash-dash from equals and then the path to the, to your iPodder file,
and that'll import all your, your old feeds. Now that was this, that was a color feature that this podcast client had,
and was why I chose it in the first place, because I couldn't really be bothered them recreating all these feeds that I had.
Actually, using the client itself as pretty straightforward, from the command line, you just enter H-Podder, space, add, space,
and then the URL to the feed that you're wanting to add, and that adds it, and then finally, once it's added, to update and download the feeds,
you just issue the command, H-Podder from the command line, and off it goes, and obviously you can automate that,
process and make it do it, at Booter, or you have a cron jobs or whatever, and the thing just just runs away quite silently,
doing its thing, as in when you set it to do so.
The, if you want to get a list of H-Podder commands, you can issue command, L-S-Command, so H-B-O, H-Podder, L-S-Command,
there you go, and there's a whole pile, add, catch up, disable, download, enable, fetch, import, L-S-Cartus, and there's a whole pile of them, really.
So, I don't think,
well, there is, I'm going to say there isn't a man page, but there is actually, there's a man page for the application.
So, that's actually all there is to it, you just add your feeds, and then just run H-Podder to catch them,
and actually all you need to do, H-Podder puts each podcast feed and its own individual folder, and groups them that way,
I don't know if you can customize that in any way, but I find that works well for myself.
Other commands you might find useful is there's the L-S-Cast command, and so I'll just do that, L-S-Cast, oh yeah, sorry.
So, basically, if you do L-S-Cast, I'll display all the podcasts I've configured within H-Podder, for each podcast you will see the podcast ID,
the number of pending downloads, the total number of episodes ever seen by H-Podder, and the title of the podcast.
You can optionally add the dash L, if you add the dash L option, then L-S-Cast will also display the feed of the URL for each podcast.
So, another useful command is H-Podder Update, and what that does is that updates all the feeds, without actually downloading the content,
so the manual says H-Podder Update, the update command will code H-Podder to look at each podcast feed,
it will download the latest copy of the feed and compare the episode mentioned in the feed to its internal database of episodes.
For any episode mentioned in the feed that is not already in the internal database of episodes, H-Podder will add it to the database and set its status depending.
So, as H-Podder, space, update, space, and then optionally add the Cast ID, so that's, you know, what feed do you want to update if you don't include that, then obviously updates them all.
And the Cast ID is a number, so for each podcast, H-Podder gets a numeric ID.
This ID is automatically assigned by H-Podder, and it is not changeable.
The ID is given out when a podcast is added with the add command, or with the L-S-Cast or L-S-Episode command.
The ID is designed as a constant way to refer to a particular podcast.
A podcast title may change, or even its feed URL, but the ID of a podcast will never change.
It's also easier and short to type on the command line.
Several commands can take a list of podcast IDs.
If no IDs are given, the command will default to operating on all podcasts.
One or more ID can be given, separated by spaces.
If IDs are given, then the command will operate on only the podcast with the given IDs.
The special keyword all may be given, which tells the system to operate on all podcasts.
This yields the same result as giving no IDs at all, so that's how the IDs work.
So another command that sort of goes along with update is a download.
So the download command is used to actually perform the download of podcasts to your system.
By default, download will download all available episodes.
You can have a specified only certain podcast to process.
If you do, all available episodes for only those podcasts will be downloaded.
Optionally, the cast ID may be issued, but if all this command will operate on all podcasts,
you can limit the podcast on which it operates with this option.
Another useful command is catchup, hborder catchup, hborder space catchup.
In a catchup, we'll cause hborder to mark all but the most recent episodes are skipped.
This will prevent hborder from automatically downloading such episodes.
So if you're starting through a show, which has got hundreds of episodes,
and you don't want to get all the back catalog, you can use this command for that very thing.
It's got two optional parameters, one's a number of dash a number.
By default, only the single most recent episode is exempt from being caught up.
If you want to exclude more episodes from being caught up,
and this allows more to be downloaded, use this option to allow more episodes to remain downloadable.
That's a sudden, so you just give that as a number.
So the number you want to catch up by, if you want to download another,
the most common 10, I suppose you can just do add 10.
And then after that, you give option of the cast ID, which tells it which podcast feed you're talking about.
Hope that makes sense.
So hborder catch up, the number of a podcast you want to download,
and which feeds you want to apply that to, that's really what that is.
What else have you got?
hborder rm, cast ID, optionally cast, hborder rm and cast ID,
which this case isn't optional.
So this command will remove all knowledge about a given podcast from hborder,
including all entries about that podcast in the episode database.
One or more podcast ID are required.
See the section below in the best friend podcast IDs for more details.
Unlike most other hborder commands, like except an empty podcast ID list,
to mean all all podcasts,
rm does not because of the destructive potential such a request.
So you must issue a cast ID so that when you do the rm command
so that it, it's to a specific feed and not the whole damn lot.
Suppose you could use the all command, the special all command,
maybe I don't know how to do that, I won't be doing that anyway.
hborder disabled cast ID.
So this command will flag podcast as disabled.
Podcast flag to disabled will be skipped during an update download or fetch.
They will still participate with all other commands hborder commands.
hborder LS cast will notify you of which podcasts are disabled.
This can be useful if you want to stop following a podcast for a while,
but I think you might want to come back to it in the future.
The podcast URL and your download history will remain an hborder database
unlike with hborder rm command.
Disabled podcast can be reenabled with hborder enable.
One or more podcast IDs are required, so there you go.
So of course, obviously the next command will be hborder enable,
and that's just reenabled the podcast again.
One final thing I added a couple of the aliases to my bash underscore aliases file.
Actually, I've got a few actually.
So the first one I've got is the first one displays a sorted list of all podcasts.
For some reason, when you do hborder space, aliases cast,
it doesn't, for some reason, it doesn't list your feeds in any order.
I'm not quite sure what order it is.
I could never have worked that out because I thought well,
maybe it would do it alphabetical, isn't alphabetical.
And then I thought well, maybe it gives each feed a number,
so it'll do numerically an order of the cast ID that doesn't do that either.
So it just seems to be a random order.
I don't know what order it is in, but anyway,
it really is that to just aliases cast all.
And what that does is it issues the command hborder space aliases cast.
I'll pipe that to sort with a dash in, which is sort numeric,
I think that's what the aim is, from memory, and then pipe that to less.
So then what it does is it displays the list of feeds in numeric ID order,
and the highest number is obviously the most recent feed,
and the lowest number is the very first feed, the very earliest feed basically.
So that's aliases cast all.
I've got another one that displays a sorted list of active podcasts,
and that's a, that's, I call that one, aliase cast active.
So that an aliase file has got the command hborder space aliase cast.
I picked that to sort dash in, and I haven't looked at these for ages.
And then that pipes to f-crepe, f-crepe, or f, I don't know why.
And then dash v, and then in brackets disabled in square brackets,
there's what hborder, and then pipe that to less.
So what hborder does is every feed which is disabled,
every feed which is disabled has in brackets disabled in it.
I don't know why I did it that way.
So I guess what that does is it shows all that ones are not disabled.
So by default, they must be active, I suppose.
And then I've got, I've got another one which is called aliase cast disabled.
And that does hborder space aliase cast pipe to sort dash in, which is numeric, f-crepe.
But rather than using the dash v option which says,
what's not, if match things that I've not got the disabled string in it,
this is looking for the disabled string in square brackets.
So in this case, that shows all the feeds which I've got disabled in it.
Hope that makes sense.
This podcast was definitely put together, and I'm sure it shows.
You have quite a lot of rough edges on it.
And I'll say again, I don't know how much use it will be to anyone
who seems unfortunately that hborder is no longer maintained.
Great shame because it's a great podcast like I said before.
There's a lot more hborder, a lot more to hborder, some of which I've only discovered
while pulling this podcast together.
I'll probably never use the more advanced features because as I mentioned before,
the program works so smoothly and just does what I want with minimal effort.
It's a real shame that it's no longer actively maintained.
But I'll continue to use it until I find I can no longer install it from my LeBun2 repo.
Okay, that's about it for this podcast.
I hope you enjoyed the podcast.
Remember, as I said earlier, if you have an interesting story or passion,
why not share with the rest of us.
There's a vast community out there.
Give your bombs and give us a show.
I'm sure you'd find it interesting.
If you want to contact me, I can be contacted at.
MrX at hpr at googlemail.com.
As MRX, AT, HPR, the art symbol, googlemail.com.
So until next time, thank you and goodbye.
You've been listening to Hiccup Public Radio at hiccupublicradio.org.
We are a community podcast network that releases shows every weekday, Monday to Friday.
Today's show, like all our shows, was contributed by an hpr listener like yourself.
If you ever thought of recording a podcast, then click on our contribute link
to find out how easy it really is.
Hiccup Public Radio was founded by the digital dog pound and the Infonomicom Computer Club
and is part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly.
Leave a comment on the website or record a follow-up episode yourself.
Unless otherwise status, today's show is released on the create of comments,
attribution, share a life, 3.0 license.
