Episode: 4355
Title: HPR4355: Record player audio - Streaming with Darkice
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr4355/hpr4355.mp3
Transcribed: 2025-10-25 23:36:02

---

This is Hacker Public Radio Episode 4355 for Friday 11th of April 2025.
Today's show is entitled, Record Player Audio Streaming with Darkness.
It is hosted by Archer 72 and is about 10 minutes long.
It carries a clean flag.
The summary is, Archer 72 has a brief overview of streaming a vinyl record to his laptop.
Hello, this is your host, Archer 72, for Hacker Public Radio.
In this episode, this is my third show involving a record player.
I am using a Zoom H1 Essential stereo handy recorder microphone recording into
audacity for the show.
Picking up a record at the record shop expands my music choices.
I get a chance to talk to the owner on the weekend when he is searching for new music.
He is an archaeologist and a teacher at a local college during the week and is knowledgeable
on all the music in his shop.
I wanted a way to listen to the records while on my laptop, preferably with headphones
as to not disturb the household.
This is done using a combination of dark ice to capture the stream and ice cast to stream
it to a local network.
What is ice cast?
Ice cast is a streaming media audio-slash video server which is currently supports Ogbora
Cynthiaura, Opus, WebM and MP3 streams.
It can be used to create an internet radio station or a privately running jukebox and many
things in between.
It is very versatile and in that new format can be added relatively easily and supports
open standards for communication and interaction.
Ice cast is distributed under the GNU GPL version 2.
The default config file is located in user-slash-share-doc-icecast.xml.disc.gz.
If the default config gets mangled or corrupted by myself, several other types of configs
are also in user-shared-user-slash-share-slash-doc-slash-icecast.
That includes a bare bones config and the installed ice cast config is located in slash-etzy-slash-icecast2-slash-icecast.xml.
This configuration needs to be personalized by changing the location which for myself
is Cynthiana Kentucky.
I'll leave in the show notes what I changed my email address to.
The default password is hack-me, you have to change it to a more secure password.
This is located under the authentication section of the configuration file under source-password
field.
The host name also needs to be changed.
In this case it was the IP address of my Raspberry Pi 192.168.x.x is the format typically
used.
There are a handful of other fields to customize.
The first is mount point and I have it set equal to live.
This is the mount point of this stream on the ice cast server.
The next is name.
In my case it's dark ice, vinyl stream.
It's the name of the stream.
The description is this is my vinyl stream.
Next is URL and I set it to HTTP colon slash slash local host.
This is the URL related to the stream.
The genre is podcast.
You select yes or no for public to advertise the stream.
You can opt to have a local dump file which I set to recording.og.
This also records to a file as you're streaming.
Metadata is set to yes to enable metadata and that's the last of my configuration for
ice cast.
Now I'm ready to use dark ice.
What is dark ice?
Dark ice is a live audio streamer designed to record audio from an audio interface such
as a sound card and encode it and send it to a streaming server.
It supports various streaming servers including ice cast 1 and 2, shell cast and Darwin streaming
server.
Dark ice can encode audio in formats like MP3 and agborbus.
To use dark ice you can configure it with settings such as the audio input, device, sample
rate and streaming service details including the server's address, port and authentication
information.
This description of dark ice is a result of using the Brave Search LLM or large language
model.
The default config is located in slash user, slash share, slash dark, slash dark ice, slash
examples, slash dark ice.cfg.gz and is copied to the slash Etsy directory.
From there use the GUNZIP command, for example GUNZIP space dark ice dot cfg dot gz.
I use the config file from the blog by Stefan Mueller on STMLLR dot net.
This is dated August 10, 2012 as a template for my configuration.
The configuration I used in the end is dark ice dash pi dot cfg.
The audio device is configured in the input section as defined by the a record dash
lowercase L to list the capture device which in my case is the barringer UMC 202HG USB
audio interface.
In the general section the duration is set to zero which is the duration of encoding
in seconds, zero meaning forever.
The section of the config file for the audio input looks like this.
Device equals plug hw colon zero comma zero.
This refers to card zero device zero.
From here you should be able to start dark ice.
The command is dark ice and the ampersand symbol.
From here I was looking for a way to update the currently playing metadata but my coding
skills are not too good.
For this I use cloud.ai to generate code from the prompt.
In this script update metadata dot sh you may want to change the host to an IP address
of where you have the ice gas server.
The port should stay the same it's port 8000.
The mount point is whatever you pick this case the default might be slash stream.
User is admin password.
You change from hack me to the ice gas admin password and song for the moment is unknown.
The usage for this script is update dash metadata dot sh space dash s space in quotes what
you would like it to be in my case I did a test and put hpr test in quotes.
If there are any suggestions for improvements please leave feel free to leave a comment or
upload a show of your own.
I look forward to hearing about if and how other people are using a personal streaming server.
Also I'm looking forward to the show from the reserve queue dated 2024 1013 entitled Fred
Black what LP records do I have that's about all I have thank you for listening this
has been archer 72 and tune in for the next episode of hacker public radio.
You have been listening to hacker public radio as hacker public radio does work today show
was contributed by a hbrlisnet like yourself if you ever thought of recording or cast click
on our contribute link to find out how easy it leads hosting for hbr has been kindly
provided by an honest host.com the internet archive and our sing.net on the Sadois status
they show is released on their creative commons attribution 4.0 international license
