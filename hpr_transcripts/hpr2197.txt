Episode: 2197
Title: HPR2197: Why you should not say Free Software
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2197/hpr2197.mp3
Transcribed: 2025-10-18 15:34:16

---

This in HPR episode 2197 entitled, why you should not say free software.
It is posted by Ken Fallon and in about 7 minutes long, and Karina Cleanflag.
The summary is, Ken suggests that the term free software is a word.
This episode of HPR is brought to you by an honesthost.com.
Get 15% discount on all shared hosting with the offer code, HPR15, that's HPR15.
Better web hosting that's honest and fair at An Honesthost.com.
Hi everybody, my name is Ken Fallon and you're listening to another exciting episode of Hacker
Public Radio.
Today, I want to talk about the use of the word free software and why I think it is actually
a bug.
As we all know, in the English language, the word free has two meanings.
You have free of cost and free for freedom.
This doesn't occur in other languages, for example, in Dutch, you have farai for freedom
and gratis for free of cost.
However, we are talking about the English language and let's assume that that's the compiler
of choice that we're using.
So in the English language, free needs to be prefixed with a namespace.
What I mean by namespace is very simple concept.
Two people are called Bob.
Two people call Bobwork for the same company.
So if somebody tells you to bring something over to Bob, you need to know whether it's
Bob and Accounting or Bob and Sales.
So you need to always say Bob and Accounting or Bob and Sales.
In computer, in the realm of computers, this would be considered to be a reserved word
or coming from a particular namespace.
Namespace clashing is a very bad thing people try to avoid.
In fact, the GNU-C library reference manual sales, and I called section 133-reserved names.
The names of all library types, macros, variables and functions that come from the ISOC standard
are reserved unconditionally.
Your program may not redefine these names.
And it goes on.
Other people reading your code could get confused if you're using a function named exit
to do something different than the standard exit function does.
Preventing this situation helps to make your programs easier to understand and contributes
to modularity and maintainability.
If we give a finish more allowed, then these other functions would not work properly.
This version 218 was written by Sandra Lossmore with Richard Stallman, Ronald McGrath, Andrew
Oman and Yurich Drepper.
So this namespace thing is a common enough problem in programming.
In XML, you can get rounded by defining namespace at the top, but every single problem that
I've had with XML, well not every single one, but the vast majority of problems are to
do with the incorrect use of namespaces.
It is just a pain having to redefine these all the time.
So for example, our compiler, which is the English compiler, you would need to declare
every single time that you mean what you mean by the word free or otherwise it's open
to interpretation.
This is basically what I'm saying.
This is why I don't like the word free software.
It is a bug as far as I'm concerned.
Now it's an interesting question, because the people who come up with this were programmers,
they knew this would happen.
It's not as if the concept of paying money for software was not known at the time, and
I've checked Wikipedia, link in the show notes, to the history of software, and around 1979-1983
sort of time frame.
We have programs like WordStar, WordPerfect, VisiCalc and Lotus123, all of these were
considered killer applications for the PC, and I thought maybe RMS, or whoever, free
software foundation people wouldn't have known about that.
So I went and downloaded some byte magazines from around 1979-1983 from archive.org, put
up there by Jason Scott, host here on the network.
And there are loads of examples of software being sold for cash in there.
A lot of them are obviously collections of what would be described as you're paying
for the material and you're just shipping the software, but that in itself, I have software
I am paying to get that software, so if somebody handed me a disk that was free, then there
would still be the disambiguity of, is this free software in the sense of the free software,
or do I need to pay first?
So at the time, the disambiguity of this choice of name was still there, and there are definitely
some ads in there that clearly show proprietary software for sale.
So I don't know, I don't know why he picked that name.
I haven't had a good example, and to be honest, it's only an English problem that other
languages don't have this problem.
That in itself is not an excuse, because the free software foundation is a US foundation,
his primary language is English, so that's the compiler of the day.
So why was it not, why was it not, why was it called free software at all, and why was
it not treated as a bug after that?
So do you know what I'm going to do?
I'm going to be at FastDem, and if I see RMS and get a few minutes, I will definitely
ask him.
I don't know if he's gone.
I know Bradley and Karen are going, and I'll definitely make a effort to talk to both
of them.
Maybe they know, maybe there's a how-to somewhere.
But that basically is my reasons I don't like using the word free software.
I do use it, of course, but I don't like it, get a twitch in my eye, you know.
So it gives segfals as people just get confused.
It leads to buffer overflows, as there's too much information to take in, and there's
timeouts occurs where the amount of time needed to explain free software exceeds the amount
of time and lots of it to talk about free software.
So that's it.
If you don't agree, then feel free to record a show yourself.
Or if you know, if there's an article, or if you can talk to RMS or something about
why free software was picked, it seems like a nod, a nod choice, given at the time it
was, there were software, there was software, you know, what we term free now.
Now, like, you see right here, I can't even explain the difference between free software
free as and free, because I need to every single time make a definition.
So if you had called it, I don't know, a GNU blip software, GNU software, then I could
happily just say, at the time, there was software, GNU software available and proprietary software
available that you could get for free and paid.
So yeah, it's, it's just a bad bug and it's been, it's been around for a long time.
We need to get rid of it or not.
Okay, the best thing you could do actually, if you care so much about this topic, HCTPS,
column 4.4.4.4.3.3, so fsf.org, 4th slash donate, they're currently running a drive.
If you can afford it, throw them a few shekels, that would be fantastic.
Okay, tune in tomorrow for another exciting episode of hacker public.
Radio, radio, radio, radio, radio, radio.
You've been listening to hacker public radio at hackerpublicradio.org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HPR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out
how easy it really is.
HackerPublicRadio was founded by the digital dog pound and the infonomicom computer club
and is part of the binary revolution at binwreff.com.
If you have comments on today's show, please email the host directly, leave a comment on
the website or record a follow-up episode yourself.
Unless otherwise stated, today's show is released on the create of comments, attribution,
share a live 3.0 license.
