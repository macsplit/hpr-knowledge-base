Episode: 1270
Title: HPR1270: Fathers Day Special: Jon Kulp interviews his Dad
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1270/hpr1270.mp3
Transcribed: 2025-10-17 22:43:51

---

Rollin', okay.
So this is John Culp again in Louisiana and I've got somebody special here, it's my
dad.
Hey dad.
Hi.
He's got a finger in his mouth right now.
I thought it'd be fun to talk to him because he's the person that I know who's been into
computers the longest of anybody I know probably.
You said you were building computer boards back in the 1960s?
Well now I worked at the educational testing service at Florida State University when
I was a freshman and that would be in the spring
of 1962 and I had to hand-wire the boards for correcting tests which were the correct
answers and then the algorithm for counting the grades and everything.
So that was my first experience with any kind of computer thing.
It wasn't like a guy that was when they did the original computers and they programmed
in zeros and ones, you know, it didn't have any programming involved in it and then
I took Fortran 2 which was brand new language back then and we had an IBM 7094 in the
physics department that we used for our nuclear accelerator and they would allow us one
run a day and so you had to punch cards and turn it in if you had to keep punch air
you lost a day and you had to learn to bench check your programs and run through the logic
because it's not like today where it doesn't work, you just make a change on a terminal
and you run it again and everything's interactive and here we'd have an assignment do each
week and you may only get five or six runs total and this got to be right.
So you learned to be careful and I got so that when I programmed something I expected
to run the first time I don't expect that it may be perfect but I expected to run.
I don't think very many younger programmers who haven't been through that kind of training
care, they'll let the compiler debug their program for you see that get all their key
punch errors or their coding errors, syntax errors and all that stuff.
The stray missing semi-cold owner, Curly Bracer, just let it do it, you know.
I could see that I've been shell scripting for a while now and at first I had errors all
the time but I've gotten to the point now where I generally expect things to work at first
but it's just because of some experience. I want to go back to what you were saying about
the testing thing. So you had to wire a board as a sort of a key, is it like a...
You had a grid that matched the grid on the electronic scoring and then you would plug
the grid a wire into a board that matched that grid and then plug it into another board
that matched that the test would run against and you'd plug it in for the correct answers.
If you plugged it in the wrong place then they got this test board run.
Interesting. So the earliest computer I can remember, you know this is of course
long before I was born when you were doing this stuff. The earliest computer work I remember you
doing was in the early 80s when gradually boxes full of binders began to arrive at the house
and in these binders I suppose were just manuals on programming languages and what was all that stuff.
I got a first computer I actually owned was I guess it was a heath brand, a 4.77 megahertz
computer 8086 I guess and it was a lot of RAM, it had 640 megabytes which at that time...
I can't possibly have been 640 megs back then. Well maybe it was a computer we were just looking
out out in the office only had 384 megs. Okay well there was 640 kilobytes. Yeah okay.
And you know I mean it was it's 10 times as much as one of those little
Trash 80s or Commodore 60. Yeah I remember my friend Mark that I skated with had a C64.
Yeah and I got with it a 4-track compiler and a cobalt compiler
and it may have had some accounting kind of stuff or I don't know I didn't use it.
I remember I was afraid that they were going to make me teach cobalt.
Oh at app it? At no at Lipscomb. Okay so I didn't I told them I knew I had a program
but I didn't tell them I knew I had a program cobalt. Okay the cobalt compiler then required five
passes to do a one compile. It was a monster and 4-track was very nice you know it was a pretty
fast compiler. So what do you I mean what kind of programs were you writing what were you trying to
do with these things? Well to put it out far back you want to go you know I'm a statistician
I was writing programs primarily for data analysis or I wrote programs that would
do what people would do with Excel stuff because I prefer to run my own programs than the
use Excel. With Excel around in the early 80s? Something like it probably was. There were
spreadsheet applications back then okay but you know back in the 70s late 60s early 70s you right
after you were born I was doing computer support for our nuclear work line. And
computed the damage as nukes hit targets. I expected. And compounded the damage you know and
so we would I had a program that ran
I think it would norm this was on IBM 360 it would take an hour to run
to compute the damages. Should mention that my dad was in the Air Force for 20 years so I'm
assuming it was in this capacity that they were asking you to do these kinds of things. Yeah
after I came back from my flying tour in Vietnam. So somewhere along the way in there you also
got involved with the Heath kit building things. So the first question then is how in the world did
you ever convince my mom that it was a good idea for you to start getting these packages and
building things and having parts all over the house. I didn't. I didn't ask her. They just
started arriving. And I don't remember what sort of reaction she had to that. It didn't bother
a bit. Okay it went for it. She's the same, didn't she? She's a very patient woman. So what is
Heath kit for anybody who's not familiar? What was Heath kit? It was a electronics kit. You
could make radios. I made a oscilloscope. I remember that well. They would send you all the parts.
You'd get all the resistors and capacitors and a circuit board that had nothing on it and
instructions on how to place the things and you'd go all a step by step and build your circuit board.
If you were lucky it would run and if you weren't it didn't. It was an expensive way to
make a TV set or something. I remember I did make a TV. I remember we watched it for years but I
also seemed to recall that you had to send it for troubleshooting. Yeah and it turns out that
it took them almost a year to fix it. I had done everything according to the way it was supposed
to be. All the checks worked. It just didn't run and they never would say what they did to get it
to run. I paid the 75 dollars or something like that for the they had a flat fee. If your kit
didn't run you'd pay this much and they would fix it. Well I don't know what they did
and they were very moot about it but there must have been something embarrassing to them.
Well I hope so. It wasn't embarrassing to me. I mean if you had done something really down it seems
like they would have told you. Possibly. They're still in the business of trying to sell stuff.
Of course they're not anymore they're bankrupt and they went out of business. I remember looking at
those catalogues. In fact for the show notes for this episode I'll probably put a link to one of the
old catalogues in white bill up in New York sent me a while back a link to like the PDFs of some
of these old Heath kit catalogues and man did it bring back memories. I remember looking at those
things. My oscilloscope worked perfectly. I remember the little meter that you made. Yeah I
still use it. It's a Vulto meter. What else was there? It seemed like it was progressively more
difficult things building up too. I was taking a class on correspondence course and on TV repair.
That's what I did. Yeah and so that's where all of this stuff I have a dot matrix generator
that you can put in the back of a TV and generate the things and then adjust the all of the stuff.
The things you learn 30 years later. Yeah but I just thought it would be fun to do.
Yeah well you've always been a do-it-yourself guy way back to when you were a new married guy and
couldn't afford to pay somebody to fix your car. Oh yeah. Going into the base workshop and
just getting into it. Yeah we had a hobby shop that was very nice. Yeah I mean we didn't get paid
very much and so the hobby shop made a big difference. I remember right after I got my 64 votes
wagon I took it for six month checkup or 6,000 mile checkup for something it took half a month's
pay. Oh and I said I can't do this man you know I'm not paid it but so I I said next time I need
an all-chage I'm going to the base hobby shop and that's what I did and I went in and
told the guy running it. I said I don't know a thing about it but I can't afford these
prices anymore and he says well here's what you do and that's where I started learning.
Awesome. Many fun memories are standing around waiting to hand you a tool or
yeah something like that while you're under a car or a bus or a bus during the 80s it was I
guess when did you get that heath computer that would have been about 1982 or 83 right.
I actually got it probably it may have been as late as early 84.
Okay but it wasn't it couldn't have been earlier than 80s right and then I remember here's
one that it'll make you smile a bit so I remember many times during my teenage years where
I would say oh boy I sure need to call Todd right now I need to call Microsoft and I'd
pick up the phone to call him and I hear it's yeah quickly followed by from the other side of
the house what in the world were you doing online all that well you know we only had a 300
bought connection to the school right and so I was either transfer of files or doing some other
kind of work at night such I mean like what I mean what were you doing because the internet as we
know it now wasn't even a glimmer in the eye of yeah right I'll go ahead and thought of it yeah
exactly so did you just use it to get into the library catalog or transfer file I mean what is
sometimes I sometimes I'd be running SPSS or some other statistical package okay and and
transfer and data back and forth and let it run on the server then downloading the results
you said I said did that kind of it so you were just using it as kind of a remote terminal yeah that's
about all you could do is a remote terminal yeah it wasn't too awful long after that maybe I
must have been in college when you gave me that heat computer because you got something better
and I remember the very first time I ever connected to an outside computer it was when I was
in Chattanooga I logged into our library catalog and man it took a long time but it was amazing
to be able to get the library catalog from my apartment but like through the phone lines it was
faster than getting in your car and driving to school it was now if I had to do a whole lot of it
it would have been faster to go to school yeah but if I just need to check one thing sure it was
definitely faster that way I mean well as a computer we were just working on or trying to work on
opinion three sitting there forever trying to get just a boot right and that's a powerhouse
compared to what I was using sure yeah so you then you were what professor mathematics for a while
chair in the math department and eventually moved all the way up to be vice president of
information technology yeah is that the title at not quite as close enough yeah essentially
so what what kind of things do you have to do at a university as a BP of info tech is that
more of a whatever the president wants you to do that a management thing or do you get to do
anything technical and fun a little bit of technical but mostly management I mean
um I was responsible for all of the telephones well we only had 5,000
the computers remember I had K through 12 at a university I didn't know you the other K through 12
under you also oh yeah okay and we had to provide the computer support for you see on
um basically three campuses all of two work contiguous um and it's sort of like running a
telephone system with a computer system for a town of 5,000 you know I had to worry about all
the administrative software plus the the software to support the academics and every professor
thought that the one little package that he wanted was the best package and the most important
package regardless of how much money it cost and so you have to be able to tell people you can't
have it and be the bad guy you know um but as much as possible you you try to to support everybody
and ensure that that what they want to do in their classroom they're able to do
um and at the same time try to enforce some kind of standards so that you're a limited number
of technicians aren't breaking their backs over something from one person and letting a dozen
people go unserved so I mean it's a it's a balancing act I was fortunate enough to have highly
talented and dedicated people working for me um I never had serious problems with people not
doing their jobs um the you had a bigger problem of telling people you know really you need to go
home and you get some sleep yeah I think nerds in general have a habit when there's a problem
that's bugging them they just keep pounding away at it until they can fix it well we would we would
call um coffee coaks um cookies and all that network supplies network supplies
because that's what kept our network going in the middle of the night exactly that's pretty
funny yeah so um what have you been doing since that you've retired from that job but you still
it seems like you're in seems like you're always tinkering with some kind of code programming this
or that well you know I wrote that program that that does statistical auditing sets up a design
and takes a sample and then gives the results for a statistical audit of sale in new stacks
for states and eight states use that um I've resisted writing in C sharp or C++
um they're the the languages of choice now but uh I settled on visual basic because that was
believe or not it purely because it was the one that was closest to Fortran
okay and and I started to to write in Fortran for the uh the gooey interface and uh at the time
it was so cleatsy that that's why I chose to to use the um Microsoft
and it's it's a large program you know I don't know if I even even breaking it up into dynamic
link libraries and things and putting in pieces to it is still 50,000 lines of code so if you
were starting fresh right now um do you think you would start some other programming language
I do see probably C sharp today okay simply because that's the language of choice uh but it
seemed you know that we did the Y2K thing and there was a joke going around at the time that a
a cobalt program programmer got really tired of the Y2K thing so he had had these people freezing
and but the idea that they would wake him up after Y2K and they forgot about it
and uh he got woke up in um 99 97 and um they woke him up and said we understand you know cobalt
because they had a Y10k problem oh dear um there's a huge amount of legacy code around
in uh uh cobalt and uh visual basic and uh the banking industry especially has a huge amount of
cobalt and um I think it's going to be around for years to come are there still people learning
this now or are they learning it just on the fly because they have to solve a problem or most
most people are learning it on their own and uh because I don't think any colleges are teaching
cobalt anymore but I I met one of our graduates a couple of years ago and she says you know I hate
to admit it but all I do is write cobalt all day long no way and she says I'm just she's working
for a big bank and she's maintaining legacy code oh boy and uh there's a huge amount of it
I guess there would be I mean if you were inclined to do that kind of work you could probably find
plenty of work uh helping people with their cobalt cold code I suppose yeah I think a cobalt
programmer who who's willing to to to get into the Nesson Boltson and really maintain um some of
that sophisticated legacy code would never be go hungry they may go crazy yeah they wouldn't go
you know yeah you know I've never done any kind of compiled language I'm not a programmer not
my PhD in historical musicology but I've gotten real nerdy over the last few years and and I do
scripting and so I suppose if I were the one language I'd like to know much better be Python
yeah because yeah it seems so flexible you can write stuff that works perfectly on windows
mac and linux yeah and uh but it's you know it's a it's a high level language it doesn't run as fast
as the compiled things but it it seems like the kind of thing that would work well for me I know
Jezre does a lump number of things in Python it um it's interpreting it's not it's a scripting
language yeah and I've actually done a few little things in Python but they've only been
projects where I was just trying to kind of learn how it worked and I was rewriting something that
I had already done as a bash script just trying to make Python do it and I feel like I'm not
by doing it that way I'm not really taking advantage of what Python could do I don't really know
it I've never taken any courses in any any of these things well you never you never
do all the capabilities of a language when what you're doing is making it act like another language
exactly you see and um but I don't do
near what is capable in in the .net framework now it's it's virtually indistinguishable
between visual basic and C sharp and I can write C sharp and I can read it you know
uh there's only one or two instructions that are not common and in another revision of
Microsoft Visual Studio they'll probably be indistinguishable the visual basic people are
well complain that you make it look too much like C sharp and the C sharp people saying what do
you mess them with visual basic stuff for but then there's F sharp out and there's a there's a
bunch of other languages right in my world F sharp yeah and um I think you you know you pay
your neck for you take your chances it's a perfect fourth above C sharp yes yeah that's probably
the way they they think a more perfect fifth below yeah depending on which way you want to go
so I don't know what I mean I've never done anything with it with it but if you go search google
for F sharp you'll you'll find you know people writing stuff right in that language so does it the
idea of writing web applications interests you at all they hate it oh you hate it I hate right
the webs you know I wrote the the website for the our lines district a few years ago and one of
the happiest days of my life was when I found a guy who would take it over and I wrote the website
you know when I had my business and were you talking about just HTML code or PHP or I wrote some
HTML but I wrote mostly an ASP okay that's another life itself yeah active server pages okay
and I don't think I've ever seen anything or so yeah that's a little different than a web
application now just had a lot of compile web behind behind code oh okay to make things work
cool yeah I don't know how to do any of that either well you're blessed yeah I just know how to
do scripting that's pretty much it but I love scripting well good really fun because it's very
it's very useful and you've done a lot of things with it and you certainly have gotten you
money's worked out at Lily Ponds and yeah doing those things so what kind of projects do you want to
do I mean are there things that just interest you that you want to do or you just write new projects
when somebody hires you to do it I haven't been paid for a long time if I find something that
I think needs to get done then I will try to write a program to do it I've right now you know
I'm in the Lions Club and and I wrote an application that allows us to to keep a database of the
people who received glasses from us or hearing aids and stuff because we had some problems with
people trying the game to system and get more than they should you know more frequently in the
mission and we have two clubs in Telloma so they go back forth and stuff but I put that on
them put the database on a server and you can connect through to my server and synchronize the
database with your laptop and so you can call up a person and then when when you've finished if you
provide a service to him you can synchronize again so if they go to the other club they can look
at and say hey we just got the other club just got you a pair of glasses you know that kind of thing
and I do I wrote a program to to hack into some commercial software that we bought
at church they advertise saying that they would do a report you tell them the report they want
and for $150 they'll write that report so I sent them the requirements this is what we want
and they came back and said well we're too busy to do what I can do what it hacked me off so mad
I'll tell you you know I just paid $600 or whatever to the software you say it's very good software
so I kept on their case until finally they they gave me enough information about the database
and I could figure out that it's really it was really a debased database okay and so I got hold
of to make sure I bought a thing that would allow you to look at debased databases and you could
change the stuff but it wasn't debased and found out where the data was that I wanted
and so now what I do is I it's actually a Fox Pro kind of thing and I got the Fox Pro driver
and I copy their I go in and I copy their database those tables I don't modify them I just copy
them and then I put them in the SQLite and I run the things and I print do the report that I want
and then delete the file that I created so what they did is they got me man and it took me
over a year to figure out what what the database was but I got the program and and then I went
on their community site and I said okay all you guys if you want this program contact me and I'll
send it to you guys we share that's the open source spirit sure well crap come on I mean
did with a what you had to do is keep track of if it was a church attendance program and you keep
track of of the last time people attended portion and then it would print out a column for the
people who had missed that week or missed two consecutive weeks or three consecutive weeks or four
or more consecutive weeks and it's not that hard to do you have to set up some counters and
some things and keep track of stuff and and then it also printed out everybody that was a
shut-in or was away at college or away in the military so just to keep track of people that
maybe they need cards or they need visits or some other kind of thing and it seemed to me like
it would be useful to and you know they they have the requirement if they write a program
report for you that they can offer it to anybody which is fair you know so I offered it to anybody
so does Linux have any place in your in your whole setup
well you know I've got that network attached storage and with this run a known cloud
and that's a that's got Debian on it right that was kind of a trick to get that set up wasn't it?
yeah there's a real paint it's on a QNAP TTS 209 and the newer ones I think are easier to do
it's got an ARM processor and but we got it to work and you you did it you did most of it
well that was the own cloud part but you installed the Debian yourself didn't you?
yeah you had to SSH into it or something and then yeah you still have to do that
it was a bit of a trick because it doesn't have an output for a monitor you can
no there's no monitor at all yeah and I would like to do more Linux in fact I would like to
to translate that program that I wrote I'd like to translate all my programs into to running
them on Linux and Mac you know that the people could choice of what platform they want
and Mono has got a little bit more available in that area and I saw an advertisement for an
application or an addition for Microsoft Studio that would allow you to compile use the
Microsoft Studio IDE would be able to compile for Mac or for Linux nice and and if I get
get a little bit better at it I've got to be better enough for me to be willing to break out the
wallet and you know if I if I don't uh I don't think I'm gonna do it I'm not gonna pay for it
you see are there no free tools that will allow you to do this without too much trouble?
Mono has some free tools that let you do it but but their their IDE is not nearly as good as
Microsoft Studio and to be able to to be running it and what you normally do and just go up and
click a button and say compile this for a Mac and it says okay and compile it for Mac is worth
something pretty handy yeah especially if if there's a huge amount of translation you have to
do from one thing to another I would like to to learn more about programming for Android
um I've got an app that I did for the the um coffee county industrial board that uh calculates
our return on investment when we offer incentives for companies to expand or to build you know
come in and um I really would like to to rewrite it so it would run on an Android tablet
mm-hmm I've got in the Zeus tablet maybe I should have bought a Windows tablet then I would be able
to do that almost immediately but uh you did the right thing if I if I rewrote it in something for
Android you see then you know you carried around on a tablet PC instead of regular PC
mm-hmm say that would just be a fun thing to do but I don't know I actually downloaded the Android
SDK yeah at some point and tried to do seems like I wanted to do something that would download
a certain podcast and I didn't get very far it yeah it was really foreign to me but I've never
done any kind of development in my life I have no training answer yeah and you you would probably do
better at it than I would well I've done a little bit with a road of a couple of little simple
programs with Android but what I'd like to be able to do is write a program that would allow me to
have a a SQL server database that I can I can synchronize with an Android device
okay sort of like CalDad does mm-hmm but but I don't even know if if there's any kind of
interface at all that you can get into a SQL server database and do it but I haven't worked hard
on it then this year's district governor has kept me pretty busy yeah and uh so I haven't
been able to do any woodworking even you know it's serious when you can't get out of your shop
exactly yeah my dad has an excellent workshop out in a detached garage all kinds of amazing
tools made me a really nice bicycle wheel-truing stand in a span of about an hour to one day
one more day okay well thanks dad appreciate it to me a lot more than that but it's beautiful
well I appreciate you talking to me about all this dad I'm hoping the HPR listeners will find
it interesting I'm surprised that anyone would find any of it interesting yeah well the audience
is a bunch of nerds yeah well they're very very well forgiving then well they uh I've had a
number of them when I was doing my own podcasts about shell scripting things like you know I don't
really feel like I should read through this script I mean people would find it so boring and then
somebody email me so oh no no no I love hearing people read through scripts well you know if
you can find one thing that saves you some time or helps you do a problem you've not been able
to figure out it's worth it yes I'll give a crass commercialism here you know commercial
you know I still maintain my experts exchange membership because and I'm sure that
they're scripting they have almost anything you can imagine on experts exchange and you put
in a problem and usually within 45 minutes somebody has made a suggestion on how to fix it
and it saved me so much time for me it's either the forums or my status net timeline there's always
almost always somebody who can respond with something they've been through it already and they either
have found that you can't do it or they have found a way to do it either way it saves you time that's
right either way it saves you time all right well thanks Tim good talking to you and welcome I'm
gonna turn it off now you have been listening to Hacker Public Radio or take up public radio does
we are a community podcast network that releases shows every weekday Monday through Friday
today's show like all our shows was contributed by an hbr listener like yourself if you ever
consider recording a podcast then visit our website to find out how easy it really is
Hacker Public Radio was founded by the digital dot pound and the economical and computer cloud
hbr is funded by the binary revolution at binwreff.com all binwreff projects are crowd
sponsored by luna pages from shared hosting to custom private clouds go to luna pages.com for
all your hosting needs unless otherwise stasis today's show is released under a creative
commons attribution share a lot he does own license
you have been listening to Hacker Public Radio at Hacker Public Radio does our
we are a community podcast network that releases shows every weekday Monday through Friday
today's show like all our shows was contributed by a hbr listener like yourself if you ever
consider recording a podcast then visit our website to find out how easy it really is
Hacker Public Radio was founded by the digital dot pound and the economical and computer cloud
hbr is funded by the binary revolution at binwreff.com all binwreff projects are crowd
sponsored by luna pages from shared hosting to custom private clouds go to luna pages.com
for all your hosting needs unless otherwise stasis today's show is released under a creative
commons attribution share a lot he does own license
