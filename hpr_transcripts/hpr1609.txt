Episode: 1609
Title: HPR1609: Sigil And The Process Of The Epub In FOSS
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1609/hpr1609.mp3
Transcribed: 2025-10-18 05:47:16

---

It's Thursday 2nd October 2014.
This is an HBR episode 1609 entitled, SIGIL and the process on the Deepa Winfoss.
It is hosted by Lost in Drunks and is about 38 minutes long.
Feedback can be sent to Lost in Drunks at e-mail.com or by leaving a comment on this episode.
The summary is Lost in Drunks rumbles on and on about his current process for creating
Deepa's using Lost in Drunks.
This episode of HBR is brought to you by Ananasthost.com.
Get 15% discount on all shared hosting with the offer code HBR15 that's HBR15.
Get your web hosting that's honest and fair at Ananasthost.com.
Hello this is Lost in Drunks, also known as David Collins Rivera.
This episode is, well I'm titling it, SIGIL and the process of the e-pub in free and
open-source software.
It's a crappy title, but it pretty much tells you what I'm going to be talking about.
I want to apologize if the audio is bad here.
I'm doing this Dave Yates style, this is recording this on my Sansa clip and it's
clip to the brim of my cap and I'm sitting in my car.
I wrote a book, a novel, it's called Street Candles, you can find it on Amazon.com right
now and probably other venues in the future.
I'm not really going to talk about the book per se.
This is about the process I learned and this is a breezy, just a breezy overview of the
process that I learned along the way going from essentially bare metal to a finished e-pub.
All roads lead to Rome, many do, but many lead out into the wilderness where you can get
lost or set upon by barbarians.
The e-pub process is needlessly complex and not just for free and open-source software
users, even people in proprietary software circles, people that only ever use windows,
you know Macintosh, these people have the same complaints that I've had, you know that
I had all along the way.
It's not a simple process, it's not straightforward and nobody has a one-stop tool that really
does what they always claim they're going to do, right?
Now, Cigil is kind of the foss, I'm going to say foss for the open-source software.
I'm going to say Cigil is probably our tool, right?
It's the one that we like to use, right?
It's cross-platform, it's in Linux Unix, it's on Mac, it's on Windows, and it's very
popular, but there are proprietary tools that exist that, you know, even more complex
than that one, but even people that use those things, they have many of the same complaints
that I've had, it's just not a simple process, okay?
Now, this is not an in-depth look at the tools, I'm not going to do that, all right,
because I'd be here forever.
This is just kind of a thumbnail sketch of the tools that I've learned to use and in
what order I use them, and you may or may not find some value in this.
I can tell you this, that each tool that I'm going to talk about here, they require their
own skills, that is to say you have to know how to use those in order to use them efficiently,
right?
If you hear us about something here that you like, or it sounds interesting, but you
don't know how to use it, I guarantee you, it's not going to be as fast for use as it
was for me, because I'm using the things I know.
If there's something here that does the same job as something you already know, by all means
stick with what you already know, you know, again, every single one of these things, you
need to be familiar with them, you need to know how to use them, to get, you know, the
maximum speed and efficiency out of it, and if it's not, you know, fast and efficient,
trust me, it gets really, really annoying, really fast, you know, you get bogged down
and searching on how to do a thing, you know what you want to do, but you don't know
how to do it, that's frustrating, and it's a tremendous waste of time.
So whenever possible, stick with the tools you know.
Now, sigils in the title of this particular episode, so if you're following along on
this one, right, and you're not familiar with sigil, that's one you can't do without
if you're going to follow this format, or follow what I'm doing, basically, and I'm
not saying you should, I'm just saying what worked for me, sigil, there's a learning curve,
there's naturally going to be a learning curve, and I'll talk a little bit about that
when I get to it.
But that isn't where we start.
No sigil is pretty much where we end, where I start is in plain text, all right, I write
in plain text.
My novel was written entirely in the plain text word, it's not word processor, but the plain
text tool nano, right, and that's come standard and most Linux distributions and probably
most Unix, or it's certainly available to Linux, you know, every Linux and Unix that
I've ever heard of.
It's a very, very simple command line tool for writing out text and code and stuff like
that.
Well, I'm not much of a coder by any means, but I write, and it's a wonderful tool for
that, especially if you get really used to using it.
Like any tool, and I'm not saying nano is superior to any writing tool that you may be familiar
with, but like any tool, the more you're familiar with it, the faster you're going to be.
And I'm pretty fast with nano, you know, comparatively speaking.
I want sat in front of, I don't know, I don't know, I installed some new distribution on
one of my machines and open office came by default, and I opened it up and I had no idea
what to do with it.
I'm not kidding.
It was horribly daunting to me, horribly daunting.
And I had to get out of there and I had to go back to nano, because that's what I'm familiar
with.
If you prefer, I don't know, if you prefer VIM or Vi, if you prefer EMAX, if you prefer
open office, if you're on Windows, if you're listening to this and you're on Windows and
you prefer, you know, office, I don't know what they use on Mac, but whatever that is,
if that's what you're familiar with and you're comfortable with it, by all means, that's
what you should be using, okay?
But I like plain text for a bunch of reasons, okay.
First off, nano is a very simple tool to use, you know, the learning curve, you do have
to get used to some of the keyboard shortcuts, because they're not shortcuts, those are the
way, that's the only way you can, you know, work with them because it's command line, right?
But aside from that, it's a very simple tool to use, right?
And the end result is plain text, and plain text can be turned into almost anything.
And that is a massive, massive advantage.
If you've been burned by proprietary formats in the past, trust me, just go with plain text.
Yes, yes, there may be a little bit more work trying to turn it into whatever format you
want.
But if you go back to it 10 years from now, guess what, you're still going to be able
to open it, okay?
And I've been burned a bunch of times, and I'll bet you have too.
So plain text all the way, I recommend that.
You can do what you want, but that's what I think you should do.
Okay, so we start with plain text, and we write our book, bam, I've got a book, I've got
street candles, bump, bump, bump, bump, bump.
Street candles, by the way, is a science fiction space opera book, and that's about the
biggest plug I'm going to give for it.
And it is available now in Amazon Lookup Street Candles under David Collins Rivera, that's
me, and if you want to, you can check it out.
You can check out the formatting, and understand if you're that interested, understand where
I went with it, you know, all these things that I'm going to talk about, and that I am
talking about, you know, what did I end up with?
Okay, so I ended up with street candles, and the plain text, once I had that done, and
I had it, you know, NANO has a spell checker, so I spell checked it all, and I did all
that stuff.
Once that was done, I brought the plain text into, well, first off, no, let me do this,
let me say this, it's important actually, because you're going to need this later on when
it comes to actually putting the e-pub together.
Each chapter of your book should be a separate file, okay?
That becomes important later, all right, so why not start now?
So you have your plain text file, chapter one is one file, chapter two is another file,
chapter three, et cetera, et cetera.
Your introduction, your post script, you know, all of that stuff, separate files, each
one, stick them all in a single directory, all their own, nothing else, you're organized,
everything's there, okay?
Next, what I did was, I brought it into the latex word document processor, lix-lyx, okay?
I said late, did I say latex or latex, it's latex, okay?
The reason I did this, because I wanted to get a well-formatted or a halfway-decent
formatted, xhtml file out of it, from plain text to xhtml, right?
So I didn't really do very much formatting at all in lix, right?
I could have, because there are many tools for it, but I didn't, and the reason I didn't
is because you can do all of that later on in sigil, right?
And much of it gets lost from the native lix format when you export into other formats,
right?
Not always, but often, it can happen, especially with xhtml, right?
So you do something really good, you know, you format your entire novel using the tools
in lix, and then you export to xhtml and where the whole my formatting go, only some of
it's here.
And that's because not everything is supported, okay?
So simpler is better, very little formatting in lix, that's what I did, very little, okay?
Lix is a typesetting tool, ultimately, latex is a typesetting tool, it's not for e-pubs,
right?
You keep talking about having a direct export to e-pub, and I think there's some experimental
stuff that's available right now, but ultimately, it's not for e-pubs, okay?
It's for typesetting something finished.
Now, if you want to produce a finished PDF, Lix is a fantastic tool for that.
And of course, if you want to output it into, you know, the various latex formats and
stuff, or things that can be derived from latex, it's fabulous for that.
PDFs look spectacular in that, especially if you have one of the themes that you can
get, you know, they're online, and you can make a particular book look a certain way.
And I don't have anything in print right now, actually, you know, in dead tree format.
None of my work is in dead tree format yet.
But if and when I ever decide to do that, Lix is going to be my tool of choice, because
you can take a PDF and print from it.
And if it's properly formatted, it will look sharp.
It will look gorgeous.
And Lix is a wonderful free software tool to get that job done, all right?
Now when I used Lix, I did do a little bit of added formatting while I was on it.
And like I said, very simple, a little bit, okay?
I did things like put in a line break, and I used different, you know, titles and things
for like chapter one, chapter two and stuff like that.
And those were exported, they more or less kept the same, so that when they were brought
into sigil later on, you know, that was one less step I had to make, all right?
Those are very simple, simple things.
And they can get converted into HTML code very simply.
Now one of the things about Lix is that you can import plain text and export XHTML.
That's a very simple process.
It's very straightforward, very fast too.
But you can't go back, right?
If you have an XHTML thing, it won't import into Lix, all right?
Once you have your XHTML, if you do any work on that, you're not going to get that back
into Lix if you want to work on it in Lix.
So you've got to go forward, you can't go back.
Now there may be, you know, it can be done, all right?
Yes, it can be done, but not in Lix.
You have to use other tools, other methods to format back, right?
It's possible to do that sort of thing through various other steps, but you're going to lose
all that formatting anyway, right?
All the formatting that you did elsewhere, it's going to be gone and you're going to end
up probably with plain text or something broken.
There probably is a way to convert XHTML into latex code and latex code can be imported
into Lix, but I don't know how to do that.
One better verse that this sort of thing probably could, but I can't, and I didn't,
you know, want to spend three weeks researching.
Now then, what is the point of Lix entirely?
To get the XHTML or an HTML file at the very end, all right?
To go from plain text to XHTML.
With her many methods to do that, you don't need Lix.
Originally, my first book, it was in novella called Motherload, also available on Amazon.com.
Motherload, I used the C monkey suite, which has an HTML editor, very, you know, playing
old-fashioned kind of HTML editor, you know, integrated into the C monkey suite, and that's
what I used for Motherload, right?
The first time around.
I redid it just recently, and I used sigil.
I used this format.
I used this method, and I redid it and it went, you know, fast and smooth because, you
know, I already knew how to do it at that point.
But, in other words, your end goal is to get HTML or preferably XHTML files from your
plain text, and there are probably a lot of ways to do that, and if you're more familiar
with another tool, I highly recommend you use that tool to get there because it's going
to be faster for you.
It's going to be easier, and Lix is, it's, again, it's not really meant for that, okay?
Yes, it can do it, but it's meant to produce books on its own.
Right?
It just not e-pubs, and, you know, it's an extra step, it's an extra tool that you probably
don't need.
Point in point of fact, I have been experimenting with another tool since StreetCandles, since
I published StreetCandles, okay?
The other tool is called TXT2, the number two HTML, okay?
TXT2HTML.
It's a command-line tool, it's for Linux or Unix.
It does exactly what it sounds like, it takes plain text and turn it into HTML, okay?
It also does, XHTML, you know, you can give it a flag, and it'll output XHTML files.
It does some default formatting for you.
For instance, if you were to write a sentence in bold, a short sentence in bold, with no
special characters in it, space above and a space below, it will automatically put that
in bold, right?
So if you, I said write it in bold, what I meant is write it in capital letters, just capital
letters, space above, space below, it will put that into bold, it will embole that for
you.
Now that may not be what you want to do, but in many cases, when I do that, it's a help
to me.
So for me, it's a feature, not a bug, for you, it might be the other way around.
But because it's a command-line tool, it's very fast, you know, a moderately sized plain
text file is going to be processed in about a second or so, something larger will take
longer, but not, you know, you're talking a matter of seconds, okay, and you end up with
an XHTML file, which you can then import into sigil and get some work done.
Now then, I, again, I haven't done any major, major work with TXT to HTML, but it's very
promising, and I am going to continue working that route.
And if I can cut out Lix entirely from this process, I'm going to do it because Lix, as
I've said, is overkill for what I need.
Now then, either way that you, whatever method, whatever way you get your HTML file into sigil,
if you were using a real HTML editor, something really good, you could probably do most of
your formatting, actual formatting of your text in the HTML editor.
If not, you can do it all in sigil, okay, and that's what I did.
I had a lot of special formatting that I put into street candles, and sigil was able
to do pretty much everything I wanted it to do, but that doesn't mean that I knew how
to do everything, okay, there was a huge learning curve, and I only really know a small subset
of the skills required to use it.
And for that matter, that's true of every single tool I've been talking about.
All the way down to nano, which is possibly the simplest, actually TXT to HTML is probably
the simplest, but even that, I only know a few of the flags, because that's all I need
to know, okay, but it can do a lot more than that.
Now then, sigil is a big thing.
I am not going to give you a real overview of that program, that deserves an episode
all on its own, and maybe I'll do one if there's enough interest.
But basically, sigil is a tool to do nothing but produce ePubs, okay?
It's in many of the repos in Linux and Unix distributions now, even about a year or two
years ago, it wasn't, but it is now, and it's not that hard to get, even if it's not in
your repo, just do a web search for a sigil ePub processor, and I'm sure you'll find
it.
Okay, one of the things about sigil is it is, because I've been using all these tools beforehand,
you've probably come to the conclusion that it is not a soup to nuts tool.
You can't go from plain text to a finished ePub in sigil on its own.
Now you could use it as a word processor if you wanted to.
It's, I guess, fully featured enough, especially if you fully intend to end with an ePub,
that's all you really want.
It's an adequate tool for that, assuming that's all you want to do with it.
But like I've said before, if it ain't plain text, you're going to be locked into some
kind of formatting issue, and down the line, if say you wanted to put it into some other
format, you're going to be locked into XHTML, which is what the ePub is made up of.
However, that isn't where you are, because if you follow it along with me, you have many
versions of your work now.
You have plain text, you have XHTML, and now you're going to have an ePub.
So sigil requires that the files you're importing into it be HTML or XHTML.
Now I say that with quotes requires, okay?
Because it does support plain text, and of course you can start with a blank page and just
type in whatever you want, or copy and paste, or whatever.
It does support plain text, but converting that plain text into the proper formatting, trust
me.
It's a lot of work.
It really is.
A lot of work.
Because it's not putting in your spaces.
It's not putting in any bold, or italics, or any special formatting of any kind, and
a modern ePub has those things.
So it would still be a tremendous amount of work.
Honestly, it's more work to work with plain text here than it is to process it beforehand.
I'll just put it that way.
Okay.
Now, what's so special about an ePub?
Why does it want XHTML?
Because the X in XHTML refers to XML, all right, and essentially what we're talking about
is CSS, or cascading style sheets.
And it uses those for some of the formatting of the finished ePub.
And the purpose of that is so that it can flow across different size screens and use different
types of fonts, and people can adjust the size of it as they want on their different devices.
Because again, you have no control over what device this is going to be read on, right?
So it cannot be as simple as a PDF.
Now, if you've read PDFs, unless you have a really giant tablet where everything just
looks okay on it, if you're reading on any other tool like that, you know, PDFs are
not a great thing to, at least for me, I've never had a really good reading experience
with a PDF when it comes to reading a novel or any long work like that.
They're just very awkward and very difficult to work with.
And they're not optimum.
They're not optimum because they don't reflow.
They're just what they are.
You know, there is close to the author's original vision as pretty much anything else can
be.
That's what makes them so perfect for types and when it comes to printing and into dead
tree format because that's going to be the way you want it to be in theory anyway.
At any rate, yes, you want to know a little bit of CSS when you're walking into sigil.
You know, it does it all automatically for you, but if you understand some of the CSS
and you don't have to be an expert, I'm no expert.
I learned a few things.
I learned a few tricks, a few things, you know, a few things in the code part of it that
helped me along the way and it will help you a lot.
If you don't understand any CSS, take a month, one month, 30 days, and just bomb it.
Just look at basic CSS and what it's for and how you can do it by hand, all right.
And in that 30 days, you don't use a special editor and all this stuff.
Just do it by hand, right.
And by the end of that 30 days, you will have all the skills you need and you won't need
anything else in order to do an EPUB.
You know, if you wanted a job, you know, as a web developer, that's a different story
and no, that's not good enough, but for this, yes, yes, I believe it would be.
Okay, so most of the formatting, as I said before, can be done in plain HTML, not
in XHDML, if you don't want to.
However, sigil wants XHDML and it will convert your file automatically.
You will end up with an XHDML file at the end and it will have XHDML code in there, all
right.
So just keep that in mind because that can be good.
It can be very, you know, it can simplify a lot of things for you.
It can also screw up whatever formatting you had in mind in advance.
That's another reason why it's a good idea to leave any of the major formatting to this
step at the end, right, near the end anyway.
And this is your biggest step, it's the longest step because you have to go through your book
from soup to nuts and get your formatting correct.
And that's what you're doing right here, okay.
sigil will do some of it automatically for you, it could also screw up some of your work.
So just be aware of that.
If you understand the underlying code, if you understand HTML and you understand CSS,
again, you don't need to be an expert by any means, you can look up anything you need
to know, right.
You just can't be afraid to go in there and you can't be thrown and overwhelmed by it
because then nothing's going to happen.
Just understand it enough to know what it is you need to look for out there on the interwebs
and understand what you may need to do in order to fix it.
And it goes a long way.
It really, really does a little, just a little bit of knowledge like this goes a very
long way in this particular situation.
One of the nice things that sigil can do, it can do things like embedded fonts, right.
So if a particular, like say you want all the chapter titles in one font while the rest
of the book can be either in another font that you dictate or what's better is leave
it as the default so that whatever device the reader is reading your book on, they can
chain to that into whatever their favorite font is.
Whereas the chapter title that you want on a particular font, you can do that.
You can embed the font and have just that font.
And most of the time, most devices these days will be able to recognize that.
There are always exceptions.
There's exceptions to everything when it comes to ePubs.
But most of the time, you can get good results doing that.
So that's one thing it can do.
It can embed artwork, it can embed tables, it can embed, you know, you can do a lot of
that stuff that you would want a word processor to do or a, you know, a very simple, wizzy
wig, web design sort of thing, sigil is kind of a combination of all that stuff.
And so it can do some things like artwork and tables and, you know, a couple other things
like that.
And, you know, and it's easy to do, it's very easy to drop those in.
There are, you know, there are buttons right there and you can just block, put it where
you want.
Okay.
It can do table of contents, it can create a table of contents for you.
You can make that table of contents invisible.
That is to say, as someone's thumbing through the book, they don't see a table of contents.
But if they search in their device for a table of contents, one will pop up.
That's what I did for street candles.
That way people don't have to go through pages and pages and pages of table of contents
because most people don't care about that unless they're looking for something in particular.
So it's there if they want it, if not, they're not going to see it.
You know, and that, but you can do it the other way too.
You can put it right there and make it, you know, a table of contents that people can see
and use and interact with it all times.
That's up to you.
And it's a very simple thing to do.
It also does bibliographies, it can do an index, it can do a lot a lot of stuff.
And there are add-ons and all sorts, like I say, sigil deserves an episode all on its own.
But suffice it to say that there are many of the tools that you need in sigil to produce
a novel or even many non-fiction works.
You can move stuff around in any order you want.
You can rearrange the chapters, you can put the table of contents where you want.
You can do anything.
You can put it anywhere you want.
One of the complaints about sigil that I've noticed in various forums and blog posts
and things like that is that, well, essentially, it's not a, how do I put this?
It's not a designer's tool.
Now if you're someone like a web designer or a graphic designer of some sort, this is
not the tool for you, okay, because it's not powerful enough.
There are some proprietary tools out there and they're fine, you know, probably better
for something like that.
But there are a lot of books that, like a novel generally formatting is not very complex.
But there are a lot of books where they are, anything like an art book or a coffee table
book of some kind, this is not the tool for that.
This is not the tool for that.
You'll have to find something in some other way to produce your final e-pub.
There are other styles of books that are not especially easy to work with.
Business self-help books can be very difficult because they have a lot of, you know, a lot
of small tables and a lot of indented blocks and a lot of special formatting and a lot of
small, sometimes a lot of small graphics and it's very complex.
I've seen some really bizarrely complex books that are like that.
And this, again, this may not be that tool for you.
You know, it just may not be powerful enough or maybe it will take such a learning curve
to get it to do what you want it to do that it just, it would be easier to use something
else or even pay somebody else to do it, you know, entirely.
However, if you go the sigil route and you've done the things as I've listed them out
in my rambling manner here, you've ended up with an e-pub.
You have your book, okay?
Now, there are other things you're going to want in there, you're going to want to cover.
You can import a cover into sigil and it's its own thing, it's a cover, it's not just
a plain old graphic, it's a cover.
What are you going to use?
Well, I used Inkscape, so that's another free software tool.
I used Inkscape to create a cover for street candles and bam, there's my cover.
So there, I'm done, right?
I'm all done.
Well, yes and no.
Yes, I have a book, yes, it's up on the interwebs right now, just on Amazon, but eventually
I'll have it elsewhere when I figure out what I'm going to do.
But I can tell you that one of the things that you should do and that I should do, you
should have yourself an editor.
If you can't afford a real editor or a line editor, you at least should have a proofreader.
Professional proofreader is better, but if you have a friend or loved one who's willing
to give it a shot, that's good too, especially if they're a really good speller.
I didn't have those things.
I didn't have it available.
I couldn't afford an editor, I couldn't afford a proofread, I couldn't afford anybody,
but me, all right?
So it is what it is, and there are typos in it, and that's not great.
And they're the kind of typos that a spell checker is never going to catch.
For example, for example, the word council and council, one is spelled with an EL at the
end, one is spelled with an IL at the end, and they mean two separate things.
I got those mixed up, and if you read street candles, you'll see where.
And I do it repeatedly, all right, and it's those kind of mistakes that no spell checker
is going to catch for you.
And that's why you want another set of eyes on this thing.
I did the best I could, and it's not bad, and I don't think it's so horribly rife with
typos that it's unpleasant to read, but all of these tools are still not enough.
You still need help.
You still need someone else to look at it.
You can't catch it all.
You think you can, you can't trust me.
So that is essentially it.
Now I know it's very complex, and I know it was a buttload of information, and it's kind
of rambling.
And I apologize for that, but I usually work from a script for this reason exactly because
I do tend to ramble and forget things.
But if you have any questions about anything I said, or about, you know, if you need clarification
or my opinion about something that I talked about today, then feel free to contact me.
I'm at lostinbroxatgmail.com, that's L-O-S-T-N-B-R-O-N-X at Gmail.
And I hope this was at least partially valued, at least some people out there.
If you take anything at all away from this, take two things.
One, plain text is better than pretty much anything else.
For long term use, for long term use.
And two, sigil is pretty darn good for novels, all right?
It is pretty darn good.
And if you haven't looked at it before and you have an idea for a book, I think you should
take a look.
It's really worth your time.
And I said there's only two, there's a third one.
This process is not simple and it's not straightforward and it's a lot of work.
It's ridiculous, frankly, it's ridiculous.
This process is needlessly complex and it's because there is no soup to nuts tool.
There is no easy command line tool where I put in plain text and get a beautiful e-pub
formatted the way I want at the end.
It's impossible.
It can't be done that way.
It takes a lot of hands on, you know.
It's like building a website, right?
Yes, there are automated tools, right?
But we've all seen websites that were made with automated tools and they're awful.
They're not good enough.
Their tools meant to be used by people who already know what they're doing.
I can't say that I already know what I'm doing when it comes to producing and the finished
quality looking e-pub.
But I'm getting there and the tools that I just talked about were the method I used to
get there this last time.
My next book, which should be out, Lord only knows when next year, year after I'm not
sure, I'll probably have a different workflow and a different set of tools that I'll be working
with.
In which case I'll come back and I'll talk about those and talk about what I learned.
And right now, it's a process that has steps and you have to plan them out.
If you're not prepared, you are going to be one of those people lost in the wilderness
and running from the barbarians.
And I guess that's about it.
Thanks for listening and take care.
You've been listening to Hacker Public Radio at HackerPublicRadio.org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast and click on our contributing to find out how
easy it really is, Hacker Public Radio was founded by the digital dog pound and the
Infonomicon Computer Club and it's part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment
on the website or record a follow-up episode yourself.
Unless otherwise status, today's show is released on the Creative Commons, Attribution,
Share a Like, free.org licence
