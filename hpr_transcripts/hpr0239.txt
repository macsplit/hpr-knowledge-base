Episode: 239
Title: HPR0239: SourceCast Ep 6
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0239/hpr0239.mp3
Transcribed: 2025-10-07 14:39:39

---

welcome.
Hmm.
I will do whatever!
��게
Today
Howdy today
Howdy
What?
陈岛
Nothing urgent
I fuckin'
Yeah, he said he's not dead, yes he is, he's not not.
He isn't?
Wow, he will be soon, he's very ill.
I'm getting better.
No, you're not, you'll be still dead in a moment.
I think I'm going for a walk.
You're not fooling anyone, you know, look.
Feel happy, I feel happy.
Hello and welcome to Swiss Cast Episode 5.5, I'm JD.
And I'm Jeremy.
And we are back.
As you can probably tell, if you listen to this show, we have not had an episode in what,
about two, three months, Jeremy.
I'd say three to four years after the beginning of time, give or take.
That'll work, that'll work.
It was mainly because I've been crazy busy with work and it turns out that the box that
I was using Skype on and I was using for reviewing discos died horribly.
So I finally got a, well now I have a dedicated Skype box that pretty much has no other purpose
than Skype.
So hopefully we shouldn't run into these issues again unless, you know, somebody goes
to the back of my house and cuts my internet tubes.
Oh dear.
Yes.
The next door to a business for right now, where is Steam?
If everyone would call from episode 4.5, I said Steam for Linux will be out about two months ago
from when you're hearing this.
Turns out the person who I got my information from, either I understood the wrong or something like that,
that's when he assumed Val was going to release Steam for Linux.
Basically, they have the final code.
It's sitting on a Steam server or on a Val server somewhere.
They just have to roll it out which no one except people at Val know when that's happening.
And I don't really know anyone at Val.
But I got to have some Spass F in my Century.
I was so pumped up for it.
I know.
I was too, I wanted to play me some portal and some Counter Strike source and all that stuff.
But I guess we'll have to wait a bit longer.
But if any Valve employees are listening to this, which I doubt, release it already.
I know you have the source there.
Just release it for the love of Pete.
So hopefully, source for Linux will be out eventually.
Okay.
So on to viewer feedback.
And most of it predictably was where the hell is the next show.
We'll start off with Dave and Indiana who said,
Hi, JD and Jeremy, haven't heard any new shows recently and really hope you guys haven't given up on it.
Sourcecast quickly became my favorite Linux-related podcast.
You do a great job and it's extremely entertaining.
It would be awesome to see an update on the side or a post, explain the situation.
Hope to hear more shows in the future.
I'm particularly looking forward to a slacker review print disease, my district of choice.
Thanks for your time and effort.
Hope you guys are both doing well.
Thank you for the feedback and we're back.
And in fact, just to give you a little tidbit, we may have teased it previously on our previous show,
but our next show of you is going to be part of us and we will tease you some more about that later in this show.
But it looks, it looks extremely promising so far.
We also have some comments on the forums and otherwise.
And theodore responded to our Fedora review and said hello.
First time visitor and listener, I enjoy the episode, even if I didn't agree with about 50% of what you guys said.
On upgrading though, you are 100% correct.
As a Fedora user, I long ago accepted the fact that upgrading simply isn't an option.
For better or worse, every new version has a clean install.
That's the truth and this is my own commentary here.
That's the truth and damn it, it shouldn't have to be like that.
I know it's that way and I know it's always going to be a cleaner install than doing an upgrade because upgrades can sometimes leave crap behind.
But come on, I don't want to have to schedule backing all my shit up around a digital release.
He continues as to proprietary software and drivers such as codecs and video card drivers does not include in a Fedora and never will be.
One of the core principles of Fedora is blah, blah, blah, blah, blah, Richard Stalman.
Everybody hates freedom, blah, blah, blah, blah.
And my response to that is, sure, I totally understand the problem with proprietary code.
But at the same time, you're being a little bit unrealistic if you're saying, hey, come use Linux.
We want more desktop Linux users, but don't expect to have flash or don't expect to have any 3D video games because that requires proprietary driver for your video card.
That's a load of hooli.
I understand that you can't include it, but that's not to say you can't make it ridiculously easy to pull it in from a third party.
There can be a middle ground on that.
Yes, I mean, all Linux, as much as they're not aimed at the desktop new Linux user, they do it the right way.
The NVIDIA drivers, the ATI catalyst drivers are all in the extra repository, which is enabled by default.
I don't see why other distros can't do this.
Enough of that. That'll do it for viewer feedback.
Onto the next issue. And as we've talked about in a couple of previous shows, I recently became an Arch Linux user for desktop.
I sort of do a half and half. I use Gintu for all my servers, and I use Arch links for all my desktops.
And we sort of kept an ongoing dialogue with how that's gone.
And, well, unfortunately, one of my favorite applications in the whole wide world is Miro.
I probably am subscribed to 80-ish shows, you know, be them, video podcasts, or regular podcasts, have hundreds of shows downloaded.
I mean, I'm to the point where I probably watch, except for college football games on TV, and Mythbusters maybe.
I don't watch TV anymore. Miro is sort of replaced TV for me.
And damn it to hell. Arch Linux pushed Python 2.6 from testing into the main repos.
And you might ask, okay, well, what's the problem with that?
The problem with that is that Miro doesn't work with Python 2.6.
They haven't even started making it work with Python 2.6.
And from me piddling around in the code, it's a total clusterfuck.
Oh, you would think somebody just would like try to open Miro in the testing repos.
That's all you had to do was try to open Miro and watch it vomit on you.
Gah, Q&A, where is it? Where the hell is it?
And I gotta say, I gotta say, this is kind of the fault of everyone.
And this is a little JD rant. You're all guilty.
But fucking Python, it seems like Python changes their damn API every two months with things broke from Python 2.4 to 2.5.
Things obviously like Miro in your situation broke from Python 2.5 to 2.6.
I'm sure things are gonna break from Python 2.x to 3.0.
Why can't they just settle on an API and only make fixes and API additions?
Why do they have to go and bloody change everything on a minor release?
I don't understand why they have to go and change everything.
And I, you know, I profess a lot of ignorance as to what, you know, the Python team is doing under the hood.
But I can at least hazard a guess that it's pretty serious because I know if you're a gen 2 user, take a look.
You're still running Python 2.4.
Now you're running it simultaneously. You've got a sort of a hybrid system where you have 2.5 and 2.4 resident on the system.
But portage still uses Python 2.4 because if you try running it on 2.5, you'll fuck up your system.
Also, it's not only Python's fault with all the shitfaring, it's also the applications fault.
I mean, yes, it's a pain in the ass because, like I said, Python releases versions that break the API every two months and it's annoying.
But you should run the betas, which exists because it's open source code and say, oh, the API develop doesn't work.
Maybe I should change some stuff and at least release a bug fix version that works under every version of Python.
And it's also actually an X's fault for, well, not testing all the Python shit in the repos, but I can't really blame them for that because there's so much stuff written in Python that that would probably take weeks.
It's just, it's, it's fail. It's a big shipment of fails, what it is.
Yeah, it's not good. It's at least the development is faster than actual development, but actual doesn't break the damn API every three months.
Well, geez, that's not saying much. X word development is measured in geologic time.
Yeah, they have to count rings of trees to find out when the last version was carbon dating.
Okay, so on to our next topic, which I will lead us into before handing it over to you because this is sort of your forte.
And this is badass applications that you probably haven't heard overused.
And my first one is Finch, just like the bird because appropriately, it's part of the pigeon package.
And it is a command line IRC and A.O.L.S. messenger and Yahoo, and just about it, yeah.
And it's not like what, you know, typically when you think of command line IRC or messenger clients, you think of, say, Bich X or something along those lines, this is different.
This actually has a command line windowing system. It's all shortcut driven. It's not as insane as Emax, thank God.
But it's decently intuitive and easy to use. And the reason I love it is because I can sit here and run Finch within a screen session on my desktop and go take my laptop to Joe Blow, OpenWireFi, Starbucks, or wherever.
And then SSH back to my desktop, and I can securely I am without wondering what the 12-year-old with the leaked hack source sticker on his laptop is doing.
My second favorite application, it is pretty rare, and this one is one that I'm betting almost nobody's heard of, is called Alliance.
The URL for it is alliancep2p.sourceforge.net. And the best way I can think of to describe Alliance is if old school Napster married Bitt torrent and had a love child.
It's like old school Napster. A better description would be instead of p2pf2f because it's more friend to friend protocol. It's private p2p networks.
And you set up your own network and then you generate a key code that anybody else running Alliance can put in. And that key basically hashes out your IP address and what port you're running it on.
And so they can connect to you and then they can invite their friends and you sort of form this cloud-like infrastructure that's decentralized and private.
And all traffic going across even it's got a built-in chat and a search feature and all that. But all traffic going across this cloud sort of decentralized network is encrypted. And I love that.
That sounds to me very much like a decentralized version of DC++.
The extra benefit that I don't think DC++ does is Alliance swarms like Bitt torrent does. It hashes all the files you're sharing. So it's not fooled by the same file having different file names.
So if you go and download a file, it'll check the hash value of everybody else on the network. And if multiple people have it, multiple people will send it to you Bitt torrent style.
I don't think DC++ does this because I believe DC++ and I could be wrong. I don't deal with it much.
It uses a central server where all the files are handled. It's just unlike Napster, that central server can be usually private.
Yeah, I absolutely love it. It's great if you want to have a private file sharing network for your buddies or even for a development team.
If you're switching away, if you're throwing around builds of software all the time, this would be great for doing that securely and easily.
Yeah, and since you know your builds might be like a tar ball of binary or something, you can exactly use SVN for that.
Exactly. So on to you, Oguru and Meister of Rare, but awesome software.
Yes, I am the king of rare software that no one has heard of, but some of the stuff I've got today, you've probably heard of, but either never used or don't know why it's awesome.
First up, Dialog. Everyone's seeing end curses menus, whether it's, you know, doing the kernel compile or doing an install of some rare distrell that uses end curses based menus.
Except it's a big to code because you've got to code them in C. You might not know C.
My suggestion is an application called Dialog. It exists for almost every distroit in the repos of tons of distros.
Arch Linux actually uses it for its installer, which I found out only recently.
Basically, it lets you write an end curses like menu in shell script, which very simple.
You just run Dialog, dash, dash, message box, the resolution you want it to show up as, what you want to be in that message box.
You've got a little message box that pops up when you run the shell script.
Nice little app could be useful. Second is Axel. Everyone's used WGET. Everyone's used Firefox for downloading stuff.
But the problem with WGET is that it's a pain in the ass to download kind of multi-node to download the file in multiple pieces to max out your connection if the servers slow or something.
Axel is basically a download manager for the command line similar to basically down them all, where it makes multiple connections to the server and downloads the file in multiple parts.
It's simple, but it can be extremely useful. I mean, I use it so much that it's surprising.
Next up is pastebinit. Everyone has probably been on IRC, and usually if you're hit with IRC etiquette, you don't paste a 20-line config file to an IRC channel.
That's just not cool. You have to pastebinit.
No, of course not. You instead paste a 20-line ASCY petabare from 4chan.
Exactly, exactly. What pastebinit is is basically you cat a file into the pastebinit program, or you send it in with a pipe, or you can do really anything, or you link it to a file, and it'll do it's magic for two seconds, and they'll spit out a pastebin.com URL for you.
Again, quick, easy, and you don't need Firefox to do it, because I've tried pasting things with e-links. It's not fun.
Next up, CSH. This is one I'm sure everyone has probably heard of.
It's an alternate shell to bash, and the reason I personally like it is it's got an insane amount more features.
I mean, it's got so many built-ins, and it can do so much that basically it can do so much that I'm not even going to talk about what it can do on this show.
I'm just going to link in the show notes to a comparison between it and bash, because I could probably do a whole show on just what CSH can do.
Next up is Biddlebee.
Jeremy talked about Finch, which, as we mentioned, is a command line I am client.
Let's say you're like me, and you can't find a good I am client, because I've tried Pigeon, I've tried Finch, I've tried Copied.
I can't find one I like. Biddlebee lets you chat with your aim buddies via IRC.
Basically, it creates a small IRC server. You connect to it with any client, and it joins you to a channel, and all your buddies are in that channel.
You can just highlight their neck or message their neck, and it acts like you're having an I am conversation with them.
It's very fun. It's got almost all the features of a normal I am client, except you can do it via IRC, because everyone loves Smirk, or everyone loves IRSSI, or whatever IRC client you like.
Next up is another one that probably everyone's heard of. Are you still there?
Yep.
My screen went blind, I was just wondering if you were still there.
Next up is one everyone's probably heard of, and I'm sure a lot of people have used, but I've got an interesting story that makes it kind of a different use.
GDP, also known as the GNU debugger. Basically, when an application crashes, normally it won't display much on terminal output, except, hey, we had a crash.
Sorry, can't tell you what's up. There was a crash.
No soup for you.
The application Nazi. Gotta watch out for that one.
But what GDP is, you run the app inside GDP, and you make it fail. You do whatever you did originally that made it fail.
And it'll spit back at you exactly what line in the code failed, and a bunch of memory maps and shit that pretty much only the developers would understand.
But it can be useful for you in some cases, and it can be useful for the developers to fix the bug.
It was useful for me in one day, Firefox just randomly started crashing on me. No reason why it just crashed, crashed, crashed.
So, I tried it in safe mode, I tried disabling all my extensions, nothing. So I ran it in GDP.
GDP basically spat out a bunch of errors, like, you know, error with LibC6, that I can't fix, error with LibXUL.
Well, that's an internal Firefox error. Why? And then it gave me one error with LibPango.
So I went on and I found out what version of LibPango I was using, and I was a little bit out of date.
And I found out that there was a bug fixed that might actually fix my issue.
So what I did is, from that I knew to compile the latest version, build it, install it, and after that, Firefox worked great.
Well, it goes to show that, you know, even if you're not that advanced, you should still run things through GDP, run crashes through GDP to try and find the bugs for yourself.
Maybe you'll get lucky and be able to fix the issue, or for the developers who, you know, file a bug and maybe they'll fix the issue.
Next up, grip with the color switch. Everyone's file use grip, but one thing I only recently found out about is, you can run grip space dash dash color,
space the rest of your grip command, and if your terminal supports color, it will display what file I found it in in one color.
The text surrounding what you searched for, and another color, and the text that you searched for in a third color.
Yes, it's a minor thing, but it's really useful when you find it, because it can sometimes be a bitch to look through 200 grinds of grip output.
My next selection is, well, this is more Debian and the Ubuntu specific, but it's extremely useful if you run Debian or Ubuntu,
CalBuilder and PBuilder. CalBuilder, well, basically it's a front end of PBuilder, so I'm not going to explain to much what it is specifically, but PBuilder basically creates a miniature CH root for whatever version you specify,
and in Debian, of course, you can specify stable testing or unstable in the Ubuntu, you can specify, you know, hardy, intrepid, gutsy, whatever.
And after it creates the CH root, you can let's say you're running intrepid, and you want to run a package from Johnny, the new 9.04 release.
But since it was built against new dependencies, it doesn't work.
Hold on, hold on.
John T.
Yes.
Jesus H. Christ.
What the hell kind of a name is that?
I wish I knew.
Continue.
Yes.
We'll talk about the retarded Ubuntu naming scheme in a future episode, perhaps.
But like I said, let's say the fact that you want to use from Johnny was built against new dependencies that you don't have.
So it fails to install.
What you can do is you can go to the Ubuntu package web interface thingy.
You can download the Debian source files, which you'll usually be.
And dot ORIG, original.tar.gz, a diff.gz, and a.dsc.
I'm not going to explain what they all are. Maybe I'll make a mini episode about the whole Debian packaging fun stuff.
I want to upgrade to this version, but I don't want to install it from source because that can sometimes have issues.
And it can be a bit to remove.
It can be useful in the cases of like, of course, I want to upgrade to this version, but I don't want to install it from source because that can sometimes have issues.
And it can be a bit to remove and stuff like that.
And I can't use the Deb. So you run it through, you know, PBuilder, CalBuilder, and you've got a Deb that works.
Really quickly, the difference between PBuilder and CalBuilder is that PBuilder makes that CA truth that it uses to build packages.
It makes that a tarball that really you can't extract, you can't, you know, tar it up again.
Everything has to be done with PBuilder and it's a pain in the ass. CalBuilder does the same thing, except it does it inside a folder.
So you can see a truth into that folder, install any special dependencies you need, mess with different stuff if you have to enable, like, you know, for example, the multiverse repo, the build something,
or something like that. It can be useful.
Next up is XPWS, also known as XPersonal web server.
If you've done a lot of work on Windows, you've probably used HFS, which is a very nice GUI app for serving files quickly where you don't have to upload to a web server.
You just start the app, drag and drop a file into it and people can access it.
XPWS is a similar app for Linux because personally, I used to use HFS a lot and I haven't found a similar one, except for XPWS.
It runs a little tray icon and you go in there, you set what folder you wanted to share and on what port.
And then you just right click the icon and select start and someone goes to your IP, colon, the port, and they can access, you know, all the files you shared.
It's very nice. It's not exactly secure. I don't think you can do PHP and all that, but for just sharing files between friends, it's more than enough.
Next one, I work on a lot of public servers where I have to be adding users all day long and it's a little application called PWGen.
All you do is you run it and it generates, you know, like 20 secure, eight character random passwords that, you know, you can just use and kind of throw away.
It's quick. It's easy. Everyone needs it. You know, next up, music on console. If for some reason, you don't like using your desktop for music and you have a headless server like me, but you don't want to screw with any of those, you know,
even bass players like MPD or XMMS where you have to run the separate Damon and client. It's a pain in the ass.
What you can do is you can run music on console and it's basically kind of like a console version of XMMS. Really, there's not much more I can say about it.
And that's really all I have. When you say it's a console version of XMMS, are we talking like it's got an in-cursor's kind of menuy kind of thing or?
Yep. Yep. It's got a little menu with, you know, down the bottom, it's got like current playing song and like how long it's into the song and a little volume bar and like at the bottom, it's got like, you know, what the different key combinations do.
On the top on the left pane, it's got your file browser and on the right pane, it's got your playlist. Nice. Yeah. It's a great little app, especially if you don't have, you know, like I said, if you don't have X and you don't want to deal with any of the Damon players, which as I only recently found out, cannot play music over the bloody network.
See, now I'm going to take the, I'm going to be the devil's advocate here and be the Ubuntu fanboy. See, that's why we have Pulse Audio. Oh God. Yes, that's what, that's what all these people in like with all these Damon players said, you know, oh, you can use Pulse Audio for that. No fuck you. I don't want Pulse Audio.
Do not want. Yes, but not bothering. I challenge you right here on this podcast to come on and debate with me about why Pulse Audio doesn't suck.
I hear a challenge. Do we have any tankers? It would amaze me a few lessons.
But yes, that's, that's about all I have for really cool apps that you probably haven't heard of and all the links will be in this show notes.
Okay, so to tease a bit about our next distro release, so we did for door last time and that's sort of marching our way down from the top of distro watch.
And now it's time for an obscure distro and we have chosen partists for this go around.
I don't think we could have gotten much more obscure man.
Yeah, let me read the distro watch description about partists. Partists is a GNU slash Linux installment clearly editing here, distribution funded and developed by the scientific and technological research council of Turkey.
That's the country of Turkey, not the, you know, butterball variety since we are near Thanksgiving.
Partists has a range of unique features such as, oh God, here come the open source names.
A startup framework of partists to speed up the boot process and pie side PC, something like that, an efficient package management system with a user friendly gooey.
And just to add to the obscurity, add to the pain, when I was playing with this distro a couple of months back, I decided to go on the IRC channel and see what was going on.
Other than myself, there's literally only one other person on the partist IRC channel.
But oddly enough, I mean, this seems to me similar to Susa where the country is developed in, it's huge.
But outside the country, nobody's like Kurt of it.
You know, the Turkish army uses this version of Linux.
I don't know if that's an endorsement or if I should be afraid of it now.
You know, not that, you know, not that the Turkish army is going to, you know, really come scare you if you're a major power.
Yeah.
Basically, kind of first impressions here.
To me, the distro seemed like the perfect combination between arcs, Linux, and the boom too.
This based upon, you know, a little bit of preliminary intel about what they do, standard straight off the top when you install, this could be our first 10 for Granny.
It could be, and it could also be our kind of number one distro overall, because like I said, we love our arcs, Linux.
We love our boom too for the noobs.
And this seems to kind of combine the best of both worlds, because it's got an easy installer.
It's got a GUI for everything, you know, GUI by default.
It installs all the restricted extras by default.
Fuck yeah.
That's what I'm talking about.
Now I wouldn't really say we like Ubuntu so much as we have so far found it the best available option.
Yeah, for new users as well.
Also, the other interesting thing is it's rolling release, which you don't see on a new user distro very often.
Let's hope they do a better job of going.
The only two that I can think of are Forsight, which...
Oh God.
Oh God, listen to episode four if you want to hear how that went.
Forsight and PC Linux OS, which uses apt RPM, which makes me hate them.
And also it seems like the package format.
It's not as easy as Arch Linux is, but it's much easier than Dabs or RPMs.
Those are the only two other ones that's easier than.
Let's hope they do a better job of QA than the other rolling...
Well, the only other rolling releases that...
Well, we've only covered one so far and that's Arch.
And at least recently, when I've been using them, there have been problems with QA.
Not on the little stuff, but the big updates, KDE 4.1, a major kernel update, Python 2.16.
Shit where it was pretty obvious, you know, there was nobody there checking, you know, all the apps to make sure everything was still working.
Yeah.
Now, of course, as I mentioned earlier, I used Gintool on my servers, but that's a whole other ballgame on quality assurance, because unlike all the other distros,
you can choose straight out of the main repositories, you know, several versions.
Yeah.
So if they go and fuck up the latest version, you just go pull a different one out.
Also, I mean, stuff stays math, soft math and testing for freaking years.
I remember when it was taking a known version, six months from the time it was released till the time it hit stable.
Yeah, the KDE team in Gintool basically said, you know, don't plan on seeing KDE 4.0.
In fact, you might want to write off the first few versions of KDE 4.1.
Unless you're in, you can go ahead.
I do believe 4.1 was actually now in stable.
Yeah, that's okay.
But yeah, it was a similar thing with even KDE 3.0.
The KDE 5 came out and they're like, yeah, don't plan on seeing it until 3.5.1.
And you know, they basically say, you know, skip the first major release. We'll be fixing bugs.
So as usual, you can email us.
I'm Jeremy at sourcecast.org, and he is JD at sourcecast.org.
Check out our forums.
There's a couple interesting threads there. Should we do a video podcast, lots of distro suggestions, things of that nature.
You'll find show notes there as well.
And so until next time, I'm JD or shit.
No, you're not, I'm JD.
Fuck.
And so until next time, I'm Jeremy.
And thanks to the Core i7 being released this month, I'll actually be able to compile
Jintu in less than one week.
CLMG!
CLMG!
CLMG!
CLMG!
CLMG!
CLMG!
CLMG!
CLMG!
CLMG!
CLMG!
Thank you for listening to half the public radio.
HPR is sponsored by tarot.net, so head on over to see ARO.NAC for all of us to meet.
Thank you very much.
