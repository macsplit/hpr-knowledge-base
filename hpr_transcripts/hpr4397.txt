Episode: 4397
Title: HPR4397: Transfer files from desktop to phone with qrcp
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr4397/hpr4397.mp3
Transcribed: 2025-10-26 00:14:37

---

This is Hacker Public Radio Episode 4397 for Tuesday 10 June 2025.
Today's show is entitled, Transfer Files from Desktop to Phone with QRCP.
It is hosted by Klaatu and is about 9 minutes long.
It carries a clean flag.
The summary is, use a QR encoded URL to quickly share a file on your local network.
I have found a really quick way of getting data from your computer to your phone.
And it is great.
I have been using it a lot for, I think, probably two or three years now.
And I figured I should probably talk about it on Hacker Public Radio.
So here it is.
It's called QRCP.
It is a project that I found from an article that found it on GitHub.com.
So GitHub.com slash Claudio D. Angelus slash QRCP.
And that is, of course, QR as in a QR code and CP as in the copy command.
To send a file from your computer to your phone, all you have to do is type in QRCP and then
give it the path to a file that you want to send.
So in this case, I'll do a QRCP example.jpeg and hit return.
And it renders a QR code right there in your terminal.
It's really, it's surprising, like if you're not expecting it, you get this big QR code
on your screen.
In your just standard terminal, and I'm talking about any terminal, like a QR XVT even can
do this.
Maybe some kind of fancy, fancy terminal emulator or anything like that.
It's, I mean, it is a terminal emulator, but it doesn't have to be anything fancy.
It doesn't have to be like GNOME terminal or something.
It can just be an old standard terminal emulator.
Hit return.
It renders a QR code in your terminal and then you can point your phone at it.
And as long as you have some kind of QR scanner on your phone, I use QR scan from
FDroid to kind of interrupt the process and ensure that after I've scanned a thing, I'm
aware that I've scanned a thing.
So you scan the QR code, you press accept to continue.
I've checked the link and want to visit the website.
And then the file that you have asked to transfer is downloaded to your phone.
How is this possible?
Well, it's quite simple actually.
So if you, if you, if you do this, QRCP example.jpg or whatever, and then go over to a
different terminal and do like a netstat command, netstat-tcp-dash-listening-tcp-listening-tcp-listening.
Let's do dash dash, what would it be, tool pin, tool pin program-dash- I feel like there's
one more that I need here.
Oh, you can not need UDP program.
Maybe that's it actually.
Yeah, let's just do that.
TCP listening program.
So netstat-tcp-dash-listening-tcp-dash-program.
Yep, that's it.
You do see eventually if you scan through this list of open, open ports that exist, that
on port 8080 of your local host is a, in my case, PID 13730 and the program name is QRCP.
So QRCP has simply created a little HTTP server running on your machine, pointing to exactly
the file that you have provided it.
Now, you don't even have to open up netstat to see all of that.
You can, I mean, QRCP does tell you what the address is.
In case you, for some reason, don't want to scan the thing or cannot scan the thing.
It tells you you can go to HTTP colon slash slash and then whatever your IP address is, like
let's say 192.168.0.5, colon 8080 slash send slash, in this case, Y in 44.
But in another case, it would be, I don't know, I 046 or whatever, it'll auto-generate
something pseudo-random so that you can provide a relatively short URL really to go to.
And because that URL provides exactly that file, the download just starts automatically on
whatever device you're going to that URL on.
So it is really, really handy.
And if you're just sitting at work or something like that and you just, you just need to get
like this stupid file from there to here and you just don't want to be bothered putting
it on some kind of, I don't know, shared cloud thing and then going on your phone and going
over.
It's just so, so quick, you just point your phone at your screen and you're, you've initiated
the process.
It is really, I mean, obviously your phone needs to be on the same network, right?
I mean, it isn't, it is a local transfer, not a local, but it's a local network transfer.
It is not, the QR code does not contain, in other words, the data itself.
You are not transmitting the data through QR.
The QR is just the URL that point on the local network that points to the file that you
want to transfer and then your phone knows to, that it follows that QR code, assuming
you permit it to do so, to that, that URL and, and the only thing there instead of being
a web page or something is the file that you want to transfer.
And so it transfers itself to the thing requesting it.
It's really, really brilliantly simple.
It's fast, it's convenient.
I love it.
I've been using it a lot lately.
And I do have other tools available to me.
I've got KDE Connect on my home computer.
I've got sort of a KDE Connect hybrid thing for GNOME, called GNOME Connect, which actually
uses the KDE backend, or the KDE Connect backend, rather, on my work laptop.
So I do have other methods of doing the same thing with varying degrees of integration.
The KDE Connect stuff is brilliantly integrated in a plasma desktop.
And honestly, I very rarely use QRCP on my home desktop.
But on my work laptop, GNOME Connect isn't quite as polished as, as KDE Connect on plasma.
So sometimes it is just easier to do QRCP, or sometimes I'm helping a friend with something.
And we, it gets to the point where it's like, okay, we're going to need to be transferring
the transfer, some files back and forth quickly.
Let's just get QRCP installed, or maybe it's already installed if it's a computer that
I touch often.
And then we can transfer files.
And like I say, it doesn't really have to be to your phone.
The QRCP application does expose the URL for you.
So you can just type in the address, the port, slash send, slash whatever randomized code.
You've been provided.
And then you're still downloading the file quickly over your local network.
Really, really simple.
Installation is equally, I guess, as simple.
You go to github.com slash Claudio D Angelus slash QRCP, or you just do an internet search
for github.com and QRCP, you'll get there pretty quickly, I feel.
It's on, at the time of this recording, it's on 0.11.6.
And the, the releases are numerous.
There's obviously the source code itself that you can just download and compile.
I mean, there's also a dev package, an RPM package, a tar.gz, and what do they call
it, a macOS package, and apparently a Windows package.
I can only vouch for the Linux versions of this.
I've never used it on any other platform, but I mean, it seems to imply that it would
work on other platforms.
I don't know if there's further setup required on other platforms, or if it really is just
as easy as it is on Linux, I'm not sure.
You could try it out if you have access to other platforms.
Either way, QRCP makes transferring data, I think, sort of almost as easy as you kind
of want it to be.
Like if I always dream of just kind of like a system where you can just, I don't know,
where there's just no interaction somehow required.
Like I just want to kind of like press my phone up to the screen or something and sort
of rub it around until the data gets into it or something.
You know, like something really easy, and QRCP is almost that easy.
I mean, you do have to type in the command and you have to point your phone at your screen
to scan the QR code, but beyond that, that's it.
It is very fast, it's very simple, it feels very magical, although it clearly isn't.
It is a nice little application though.
So if you've never heard of QRCP, now you have, you should go try it out.
Thanks for listening.
You have been listening to Hacker Public Radio at HackerPublicRadio.org.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording podcasts, click on our contribute link to find out how
easy it really is.
Hosting for HBR has been kindly provided by an onsthost.com, the internet archive and
our sings.net.
On this advice status, today's show is released under Creative Commons, Attribution 4.0 International
License.
