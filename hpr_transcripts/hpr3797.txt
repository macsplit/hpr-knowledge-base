Episode: 3797
Title: HPR3797: How to submit changes to HPR
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3797/hpr3797.mp3
Transcribed: 2025-10-25 05:28:30

---

This is Hacker Public Radio Episode 3,797 for Tuesday, the 21st of February 2023.
Today's show is entitled, How to Submit Changes to HPR.
It is hosted by Ken Fallon and is about 32 minutes long.
It carries a clean flag.
The summary is row and shows Ken How to Submit Changes to the new HP Arstatic site.
Hi everybody, my name is Ken Fallon and you're listening to another episode of Hacker Public Radio.
Today I am joined by Roon. Say hi.
Hello everyone.
So, this show where short of shows obviously because it's HPR and because essentially you,
dear listener, need to submit me some more shows to this here, a podcast, because it's a Barkam podcast,
where our shows rely on people submitting stuff.
What type of stuff Roon will be of interest perhaps, how to submit a change to the HPR website?
That would be, I think, a great interest, a great interest to me to have more people submitting changes to the HPR website.
Okay, to give you some background, our current website was developed back in the day, 17 years ago.
And we are now, yeah, the code is a little bit flaky, I think everybody involved with this will agree.
And we got called out by Popeye from the Ubuntu podcast from me.
And essentially the word was open source, you called, or stuff complaining about it.
And you stepped up and created a website.
Do you want to, what sort of tool to generate our websites? Do you want to give us a bit of background on that?
Sure. So, I know Ken had mentioned in the various places, the email list, and on maybe some community news,
I wanted the website to be statically generated. I decided, hey, that would be interesting.
And I'd already helped out a little bit with the free, free culture podcast website.
And knew it was generated using the toolkit template. It's a pearl template for generating static websites.
So I thought, hey, Dave knows that pearls been around. Don't think it's going anywhere.
So I decided to create a site generator for HPR using the toolkit template.
Basically, it's just a pearl script that then calls that and then it allows you to use the templating system to create new pages and add it to the site generator relatively easily.
Yeah, it's not that rocket science. He actually, the whole pearl part is really the thing that I intend to be changing most.
It's probably just the template. And that's pretty standard, I think, across those templating tools.
But it's got loops in it and spaces. You can see the HTML and in between the HTML, there are various different methods that you can use for commands or whatever.
Right. I mean, it's very similar to like PHP. It's just not being run on the server as you're doing it. You're just running it beforehand and then saving the output static HTML.
Yeah. So our goal here is to be able to have a static website that you dear listener can or sink down to your Raspberry Pi or similarly, similarly tool low spec low power machine and serve a mirror image of the HPR website from your fiber internet connection at home.
So we have a massively distributed mirror type content distribution system provided by the community. What could possibly go wrong?
We sort of have a proof of concept working so far. So yeah, so that's actually running now as you listen to this on hobby public radio.
Which is our thing from HPR dot horning dot us. Yeah, cool. So that's pretty much that. So when we make, when we make updates to the website, we'll regenerate new pages.
And then those can be our safe down to your local server and served easy busy 11 squeezy. But how do we as an open source project allow you to go in and fix some code. So that's where we are now.
So is our code hosted.
So right now is generally being hosted by honest host at repo dot an honest host calm. You do have to be.
Or dot net. Well, sorry about that.
Just pops up in my browser. So I don't really look at the dot part that much the ending.
You do have to become a member, which is free. It's just to help I guess cut down on spam and people just, you know, running a mock on the in the repo.
Just quick word about that. That's that's the Josh who graciously takes care of all the stuff that we do server wise and keeping out dealing with the tax and all sorts.
This the he already had a version of get T running and it was get lab actually and it was.
It was not pleasant for him to have to maintain. So as a result, any thing that he's commenting on here or requirements to simply register is reasonable.
So what we can always do as a later date is make the entire code base just available somewhere else as well.
So that when you do your or think you build on the repo as a as a by the way.
Yeah, I think that's the that's the plan.
So then we come to the situation where Mickey of tronic.
It's a very valid request to have links to the various different files and various different places.
So for one reason or another, they're working included because they're working included.
So it's a bug. We're fixing this. We fixed it on the PHP site. And now what I want to do is go and fix it on the static site because in the future, that's the only place changes are going to be allowed.
I basically want to know, OK, I asked you what is the procedure then for for doing this.
And you said, you sent me a list and I said, well, let's record a show about it. So that's what we're doing.
So I think number one I've done so far is a gun to repo doesn't on the stores.net. I've logged in.
I had already created an account. I set up my two factor authentication.
So I logged in and put in my free OTP plus thing in there. I know I'm here looking at looking at the web page. So what do I do?
So once I logged in and you'll want to find the particular repo, there are actually a couple hosted on there.
But you will want to find, I think it's called HBR generator repo.
Yes, RH, I'll just go ahead and HBR to underscore generator.
Yep. Right. And so then now, whether you want, you want to fix the bug or not.
If you want to, if you find, you know, a request, you can basically submit a request for a change to the website.
Be it whether you're going to do it yourself, hopefully or, you know, just as suggestions like, hey, I found this bug.
You would go to the issues section of the repo and then create a new issue.
So I either I could do that. Can or if you want to.
No, I already Chris one issue.
So I had audio links to on the index index full and series pages. So the way that's our issue.
So the public's page needs to send. We've built an example, et cetera, et cetera.
Okay. So now that we've done that, you can also provide labels like the label.
There's only a few. I think it's like bug fix, new feature or feature request.
That sort of thing.
Just make it a little easier for us to eyeball it.
How would you reckon this is?
I mean, it's sort of either one. I mean, it is, I guess a feature, but I technically it's probably more of a bug for website.
Yeah, that's totally bug. Yeah, let's let's plug it as a book.
That sounds good.
Once you've done that, if you if you are, then want to submit a code change yourself.
What I find it great is I create a new local branch on my machine to make the change.
So it's, you know, get check out dash B name of your branch.
Okay.
Okay. Should I do this play alone?
Sure. Yep. That sounds good.
I typically name my branches like I for issue and the number and then either dash or an underscore to separate it and then basically the title of the issue that I gave it.
Maybe a little abbreviated on just that when I'm looking in my branches, it makes it very easy to find it.
And then when you're referencing it for other people, it makes it easier to link back to the issues that they can read about the details like why you're creating this branch.
Okay. So the first thing I need to do is get the code from somewhere.
So what do we need to do on the website?
Right. So if you're on the website, if you look under the code tab.
Yeah, the very first it says pull requests, you find lot load and SSH.
And there's that download repository.
Right. So that gives you, you can select either HTTPS or SSH for the, and it'll give you the URL for when you're cloning.
Then you could go to get clone. And then if you're using SSH, you would use the SSH link.
If you're going to just use the HTTPS, you know, you'd click on that and copy that and paste it in to get you the HTTPS link.
So I'll put it in here, get clone, get to reboble, blah, blah, blah.
There's probably some settings that you need to have done this before. So I know it's going to work.
I mean, it will prompt you for a password if you don't have that set, that sort of thing.
And you can put your SSH keys up there as well and all that sort of stuff.
But presumably if you're submitting code, if you just want to make an issue, you go to the website, your press button, you make an issue.
That's it. Your work here is done.
If you're submitting code, presumably you've used it before and this will be how you do it.
I've got that downloaded.
Okay. So now is when you'll want to create your branch, your new branch to work on.
So if I remember some of chat shows, I said you get stars or something.
If you could do get status, that'll show you, should show you you're on the main branch.
Yeah, I need to change it to the directory first start.
Yeah, on branch main, lovely.
Right. So now you can type get space, check out space dash B space.
It's like.
And with as Taty says, we shouldn't use shorter things.
So let's have a, let's just have a quick look here, get space what?
To get check out command, so get space, check out.
And then you want to give it the dash B option that says you're creating a new branch.
And then you space and then the name of the, whatever name you want to give the branch.
So I'm just open on to get check out page here, man, get dash, check out.
So get check out dash B.
Yes.
And so what do I call this?
Ken underscore.
Yeah, you can call it whatever, you know, whatever makes sense to you.
I, like said, I usually would like I dash 70 underscore fix.
Download something like or whatever you call the issue.
You know, the first couple words.
Oh, yeah, yeah, yeah.
Let me do that.
One sec.
Fix links to all of you.
How about that?
Sounds great.
Sorry for the delay here.
Hopefully the listeners won't hear and truncate silence, but.
Okay.
So I can just do that.
Anything else?
Get check out dash B and then the name.
Anything else?
No, once you've done that, then you can start making your changes.
So when I do get status now, it says on branch, blah, nothing to commit is working directly.
Yep, that sounds correct.
And I just need to fire up your favorite text editor and make the changes.
Okay.
What I'm actually going to do is modify the readme file with a extra dose because.
We don't want to be here all day.
That's good.
What can I add to this for the, I'll put hacker public radio on the, yeah, I don't know.
I don't know what to do.
I don't know.
Now the code is free.
Or I could actually try fixing the episode link.
Which one?
Which one would that be?
So I'm looking at the templates directory and then there's content.
Template.
Okay, let's look at the series, shall we, for a start?
So I've got content series, content series, episode series, episode.
So it's got to be one of those three.
Which, where did you change it on the index page?
Like on the main page, I think is where you changed it.
Yeah, it's in certain places, but the easiest one for now is the series one.
Okay.
Yeah, there it is.
So hold on.
Let me fire up my editor real quick so I can sort of walk you through some of that.
Okay.
So it's actually in the, on the page that says in-depth series.
What the series ID.
So on the, so there's two pages here related to the series.
There's the main top page with lists all the series.
And it's got in-depth series as the main header and number of episodes.
And that sort of thing.
And then inside of that, there's.
In another one.
That deals with the number of episodes.
So if I click on the accessibility one, for example, there's a thing now.
And when I open that up, it also gives a description of the series.
Right. Sorry.
So which file were you looking in again?
I missed it.
So content-series underscore episode dot TPL dot HTML.
And there's content-series dot TPL dot HTML.
And I think the one I need is underscore episodes.
Yes.
So what I want to do is add some HTML in there, which is listen in Og speaks or MP3 for us.
Where the Og speaks and MP3 link to the link to the page.
And there's going to be a small type.
And back in the tickets itself, there's the PHP version.
Right.
Okay. So that if you look down there where there's the four each at the end.
Yep.
And then in that, there's a macro called show summary.
Yep.
So we need to sign that show summary macro, which should be in car.
What did I call it?
I think it's share utils.
So I'm open shared utils dot TPL dot HTML.
And I'm just going to go back and.
Copy the macro name, which is show underscore summary and go back to share details.
It's actually I think there's a shared dash episode dash summary dot TPL dot HTML.
That's like where I put it because.
Well, I found that in several places shared episode summary dot TPL.
We do want them guessing.
Yeah.
Yeah.
Yeah.
Yeah, shared episode summary is where the macro is defined.
Super.
Okay.
Great.
Excellent.
Couldn't be better.
So looking at that code, it says.
It's got the common symbol.
And so less than exclamation mark dash dash percent space and then all caps macro.
And then the name of the sum show summary.
Bracket show comma hide host comma bracket space block in all caps percent dash dash square.
So presumably that goes down for down until the end section.
So macro end of my phone.
Yep.
Yeah.
Yep.
So.
Right probably.
Right above the end tag for the macro.
There is the show dot summary.
It's between two HTML P, you know, a P opening and a P closing bracket.
Yeah, paragraph.
Yep.
And so I'm guessing I haven't looked at the HTML yet on the website that gets generated.
But I'm guessing you put it down under there.
So we've got tags which are being displayed.
I see on this page.
What I'll do is I'll just paste into the chat.
This link will be in the show notes.
The two different versions.
OK.
And I'll just quickly make a little bit of an image just so we have comparison.
One second.
Yeah, that's not going to work.
Pasting an image into the mumble chat isn't going to work just as by the way.
So I'll paste it into matrix for you to see.
OK.
Right.
I'm sure that we can if I mean one way to test it would be to just stick some text.
Right under there.
Like holder and then generate those pages or a page.
And see what it looks like.
That's usually how I, you know, do it.
Yeah, that's fine.
You know what I'm going to do is is that for anything I'm just going to put in a.
We have the message will be R.
So that should be visible on the.
So what we're trying to do here is basically identify the location where we need to have the code.
But I think that defeats the purpose of this episode as such.
So what I'll do is I'll just put in anything at all for now.
Sounds good.
I mean, I do have a.
If I can find it real quick, there is a macro for inserting.
I think those.
Links, I don't know if it'd be formatted quite correctly, but that might be another way to do it.
If I can find the macro real quick hosted by all I'm getting is.
OK, so let's not worry about that.
So what I'm going to do in is put a HTML comment.
I can comment in there that your code goes here basically and we'll see how we go from there.
OK, OK, now I've saved that met the change, presumably everything works.
Fantastic.
And I'm ready to do the next step.
OK, so once you've made your change and you're happy with it, then you just do your normal get, you know, get add the changed file.
No, no, no, there's no normal.
I've never done this before.
OK, I'm sorry, normal for me.
Very good to get.
So now I've changed my file.
Yeah, and I look at get stars.
Yeah.
So showing a modified file.
Yeah, should be showing a modified file.
So then if those changes are what you're happy with, you would then do get add and then the path to that file.
Yeah, just did that.
And now it's a modified file.
Yeah, get stars.
So modified files means they're now ready to be committed.
So if you've got more files you want to add in this commit, you could then modify them and add them later.
Or you can make all the changes and add them all at one time, however you want to do it.
But once you have them all, all the files ready for a commit, then you would do your get commit.
OK, let's do that.
Yes, as I wait patiently for you to tell me what to do.
OK, OK, so get commit should fire up.
If you just do a plain get commit, that should fire up your default text editor.
Yeah, got a default text editor and it says here.
So.
Yep.
So at the top of the.
It usually there's like a blanks line and then it'll like say give you some instructions and then a list of files that have been modified.
And any like ones, any that are basically gives you sort of a get status at the bottom.
So it'll say, you know, files that will be committed files that have been changed and then files that are not tracked.
OK, so I've got one file modified and I'll save this file and exist.
Shall I?
Well, so what you do is then give it a that's where like up at the top you make your.
Your commit message.
Yeah, Adam, you know, I've added a line here added comment.
Add a comment to file as example for HP or 3797, which is what this is going to be released as.
OK, sounds good.
So then you would just hit save and then exit.
And get status says nothing to commit work and directory is clean.
Right.
So now you could like do more changes and commits.
I mean, this is your local, you know, your local get repository.
So if you know, you can do a short series of commits just so that like you can go back.
Ideally, you have everything tested and working at this point because I don't want to embarrass myself by pushing it up.
But we're fast forward to that.
Happy day.
Everything's ready.
What next?
Yeah.
OK, so you're happy and you're ready now to push your changes back up to the repository for everybody to review.
So this is where you would do a get push command.
But does that not push up to the main branch?
Well, so yeah, so you have to get so you have to give it a location.
So basically the full command would be get space push space origin space the name of the branch.
So origin says push it, you know, back up into the cloud.
And then the name of the branch is saying I want to put it at that repository in the cloud on this branch.
So what would you use for this?
So I would do get space push that origin, dash origin or not that's origin space origin.
Sorry.
Space and then I usually just copy and paste the name of the branch from my stat like I usually do a status first.
And then I just copy and paste the branch name at the end of that.
Yep, doing that right now.
So I have get space push space origin space I 70 underscore fix links to audio with underscores.
Sounds good.
So then you just hit enter and it should hopefully push it up or it will tell you if there are any issues.
So no issues creation you pull request and the two repo new branch fix links to audios.
Right, so now if you go back over to your browser and you go back on to repo, that an honest host calm.
Yeah, I'm there.
Okay, so now if you look at the branches, I see three branches.
Let me make sure I'm not sure I refresh my screen, but let me click on click on the branches.
So I'm looking at I'm looking at.
The role forward slash hb or underscore generator.
And I see code issues.
Where would I see the.
Okay, so yeah.
So if you're on the code tab.
Yeah, underneath that.
Yeah, there's there's a drop down that says branches got you.
Yeah, so there's there's like three branches right there.
Yeah, and you can click if you click on that.
Yeah, that'll give you.
Yeah.
So there you'll see, you know, the default branch, I see branches, my.
I 30 series name for pound name branch.
And then I see your new branch.
And then if you look there, you will see in that row, a new pull request.
Yeah, clicking on that.
If you're ready, yep, then you can click new pull request.
Sorry, I'm just trying to say then it'll give you a page and then you name.
Your pull request or give it a title.
I can't remember what it's the name field or title field.
I usually do like left square bracket.
I so for this case, it would be like left square bracket.
I 70 right square bracket space.
And then I usually just reuse the name or, you know, some expanation of the issue name.
It might change a little bit depending on the PR, but usually it's fairly close to just whatever issue name I gave it.
Sorry, I'm completely lost.
Okay, so back on the branches page.
Yep, got that.
And do you see, and you see your, your, your branch?
Yeah, and there's a button that says new, new, new, new peak pull request.
Yeah, right next to it, yep.
Yep.
So if you click on that, that should bring up a new page to create a new pull request.
Yeah, that's it.
I see it there.
Yep.
And then.
And then yeah, so then the title or name.
I give it is usually, you know, based on the issue number.
So like left square bracket, I 70 right square bracket.
And then space.
And then and usually I just reuse most of the text of the issue title.
Or, you know, something close to that.
So when I press the green button, new pull request.
So then once you're on that page, then there is another green button.
Like once you've done filling out all the information, then you're actually submitting the new pull request to be generated on the, to be added to the server.
Okay.
So there.
So I'm on a page here now that says new pull request select select the branch to merge into and the branch to pull from.
So I'm going to merge into the main.
And I'm going to pull from this one.
Right.
And if I press new pull request, it's it requires me to fill in the comment.
Yes.
And that's where I put in the I I 70.
Yeah, there should be I should have brought it.
I'm trying to bring one up hold on.
Let me let me jump in on to that other my other branch.
So I can pull up a new pull request myself.
So I can make sure we're on the same page.
Sure.
All right.
Yeah.
So you did remember that extra new pull request thing.
But anyway.
So yeah.
So you put in the title, which I, for the title, I give it like, you know, the issue number.
In brackets.
And then basically the issue.
And then there's a space below to give a more detailed comment.
Depending on how big of change it is, you know, I'll just maybe give some backstory to it.
Or if I've made certain assumptions or changes to the code, I don't know.
I just try to anything that might feel useful in the comment to future people.
Reading back to figure out why this was done.
I try to put it in that, you know, some things are so small that just you don't need much other things.
If you're making a big, you know, pull request, you might need to explain some things.
Okay.
So that was us.
You pull requests then.
Great.
And I usually do like put a label.
And if it's a bug, I put a bug.
If it's a feature request, I put a feature request.
That sort of thing.
Okay, I'm going to put it in the title as you suggest.
Let me see.
Sorry, this is painful.
So I 70 fix audio.
Actually should be a demo for HPR.
Let's do that.
Okay.
And then I can press create pull request, I guess.
Yes.
And then once that's accepted, I should be able to refresh my screen and see your pull request.
Okay.
And I just really forgot to take a screenshot of that.
Anyway, to sort of this.
Well, you now have the only open pull request.
Okay.
So let's leave it there and can you just delete that one please because that's enough.
So at this point, as a contributor, we're done and you just review the code and that would be that.
Yeah.
Okay.
So let's leave it at that there.
Thank you.
That was very useful.
Now I need to figure out stuff.
The actual code.
And we can do that all fine.
Okay, guys.
Thanks very much for taking the time to do this.
And tune in tomorrow for another exciting episode of Hacker.
Public Radio.
You have been listening to Hacker Public Radio at HackerPublicRadio.org.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording podcasts, you click on our contribute link to find out how easy it really is.
Hosting for HBR has been kindly provided by an honesthost.com, the internet archive and our sings.net.
On this advice status, today's show is released under Creative Commons,
Attribution 4.0 International License.
