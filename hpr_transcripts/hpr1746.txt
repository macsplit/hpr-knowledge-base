Episode: 1746
Title: HPR1746: Scale 13x Part 3 of 6
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1746/hpr1746.mp3
Transcribed: 2025-10-18 08:45:02

---

This is HPR Episode 1746 entitled Kale 30x Part 3 on 6.
It is hosted by Lord Rush and Blood and is about 53 minutes long.
The summary is 8 interviews from Kale 30x.
This episode of HPR is brought to you by An Honesthost.com.
Get 15% discount on all shared hosting with the offer code HPR15.
That's HPR15.
Better web hosting that's honest and fair at An Honesthost.com.
Green's Hacker Public Radio, Lord Drockenblut here at Scale again and I am with the folks from
the LPI booth right now and who do I have the pleasure of talking with today?
I'm Emily and I do marketing and PR for the Linux Professional Institute.
And I'm Chuck Bixby, Director of Regional Development for North America.
Now for the people at LPI, could you guys tell them what LPI is and what's its primary goals?
Absolutely. So we've been around for about, we just celebrated our 15th anniversary in last October.
And we do vendor neutral Linux certifications.
Is there anything you'd like to add into that, Chuck?
Yeah, we're committed to workforce development of Linux and open source professionals.
We have a nice career path through our professional certifications.
And also an entry level certificate that makes it easy for folks to kind of dip their toe in the pond and learn a little bit about Linux
and make decisions on whether that's a good career pursuit for them.
Or to complement their IT discipline, whatever that might be.
Now the certification or the one you were just talking about, that is fairly recent.
What's its name and kind of what was the genesis of that one?
So Linux Essentials is our newest certificate.
It's an actual professional development certificate program.
It's our newest program of the four that we currently offer.
And we really wanted to give a pathway to people who are maybe not a Linux systems administrator,
which is sort of more of our LPIC line.
So we wanted, you know, people who are cloud professionals or network professionals
who need some verified Linux skills, but maybe aren't ready for the full LPIC series.
An opportunity to prove that they've got some Linux skills.
Now, what about the LPIC and you tell people more about what levels you have?
Because to my knowledge, there's three levels.
But if you could kind of inform people what those levels are,
kind of the rough idea of what each one would cover.
Sure. So we have our professional certification series is our LPIC series.
It does consist of three levels.
They are not independent of each other.
So they build on each other over time.
So LPIC 1 is sort of more server focused.
It is our first level professional certification.
LPIC 2, which is sort of more network based.
And then our third level is LPIC 3, which is more enterprise focus.
And that consists of one specialty exam in either security,
mixed environments, or virtualization and high availability.
Now, for the people who might be interested in taking these now,
at events such as scale and other ones,
there is a discounted price typically.
But what is the normal price and how would someone go about registering for
and going to take one of these certifications?
Absolutely. So we, Pearson View delivers all of our exams worldwide
through their testing center network.
So anyone could sign up through Pearson View to take a test there.
We do do them in a discount when we do exam labs at events such as these.
But our standard LPIC are about 103 per exam.
Our LPIC 1 and 2 are two exams to complete that certification.
So at a rough one, it would be just over $200 for both tests
for, say, the LPIC level 1 certification.
For LPIC 1, actually, because it's two tests, it's 183 per test.
So it's a little over 360, but our exams are good for five years.
Okay, I'm sorry, I misheard you.
I thought you said one something, not one 83.
So I apologize for that, folks.
No worries.
So anything else you'd like to tell the hacker public radio resources
they might be interested in?
Yes, if you have any further questions or want more information or details
on what the exams cover, you can visit www.lpi.org.
And I will say, folks, if you ever make it to an event where LPIC is,
be sure to stop by. They are great folks.
And they have some really cool things they tend to give away.
I'm sitting here looking at some really cool penguins with the LPIC logo on it.
Chuck, is there anything else you'd like to add before we kind of wrap this?
No, thank you. We really appreciate your time.
Okay, final question, because I was asked to try to get this one with everyone.
What is your preferred text editor?
I just used a standard text editor on the Mac.
And you, Chuck?
Ditto.
All right, everyone out there.
This has been Wardrock and Blue at Scale 13X.
And I'll see you on the next interview.
Greetings, everyone at Hacker Public Radio.
This is Wardrock and Blue.
Here at Scale 13X still.
And I'm in front of the One Course Source booth.
And who do I have the pleasure of talking to this morning?
I'm Sarah.
And Sarah, what do you do at One Course?
You personally, and then we'll go on to One Course itself.
I am Sales and Marketing for One Course Source.
All right. And what does One Course Source provide to the community?
One Course Source provides training and courseware materials for technical companies as well as individuals.
And at a rough idea, what does the training cause?
Because I think people, all too often in interviews, they kind of get to that last.
And I would prefer to kind of hit that early so people know so they can make decisions on whether to keep listening to me platter or not from there.
Absolutely.
The courses for the LPIC classes are normally about $1,900.
Many classes are $300.
And then the programming classes are about $9.95.
They are on sale for scale, though.
And they're down to $4.99 for the LPIC, $99 for the many classes, and then $3.99 for the programming classes.
So if someone goes to not just say scale per say, but other events you guys might be at, those are prices they can have a rough idea that they will be seeing in general.
Yes, generally we do discounted prices for events.
And what kind of training overall do you guys offer?
You were telling me more than just the LPI before we started recording?
We also do pearl programming, shell, unix, Ubuntu, and then the later part of this year there will be additional courses that they'll be training on as well.
Alright, and if people are interested in one course source, where should they head to to find more information?
OneCourseSource.com
Alright, is there anything you'd like to add before we put a wrap on this one for now?
If they have the opportunity to stop by scale, stop by the booth and get more information, or visit us online.
Alright, well thank you for your time, and this has been Lord Drockenblut at scale 13x.
Greetings, Hacker Public Radio, here's Lord Drockenblut at scale 13x, and right now I am at the Elementary OS booth, and who do I have the pleasure of speaking with this morning?
I'm Cassidy.
And I'm Katie.
And what are your guys' roles with Elementary?
I'm one of the founders and UX designer.
I'm his wife.
Alright, so Elementary OS is, as I understand it, a fairly new kid on the block.
What kind of sets Elementary apart from a lot of the other distros available right now?
So the whole operating system was pretty much designed and founded by designers.
So we take a user experience that we think is really easy to use, and then turn it into software.
So rather than using the technologies that are available and then figuring out how to implement them, we start with the user experience and work backwards towards the technology.
Anything you'd like to add, ma'am?
That I'm not a typical Linux user, would you say?
And so Elementary is really accessible for people like me who aren't power users.
Cass said that there's like a lot of under the hood tools that Linux users are typically used to, but it's still very simple for people who are new to Linux.
Now since Katie brought it up, how is Elementary's accessibility?
And I'm not talking, I'm talking more for blind or people with physical impairments.
How is its usability in that respect right now?
So we're built on top of a lot of nome technologies.
Like we use GTK and we use a lot of the nome accessibility things that are built into nome.
So on that front we're very similar to any other distribution like Ubuntu or Fedora or Nome,
where we have an on-screen keyboard, we have screen reading and we have high contrast mode and things like that so that people can use our software.
Alright, and if people wanted to check out Elementary OS and learn more about it, where should they start?
Elementary.io is our website and you can check out information about us there and give it a download.
Now if people are interested in getting involved past that, where are areas that Elementary OS could use help, you think?
We always can use more people who are familiar with GTK or programming on Linux.
And if you go to elementary.io slash get-involved, there's information there as to how you can get involved with the project.
Alright, and anything else you'd like to add before I get to the final question we put a wrap on, thanks for now.
We released our stable version Luna, almost a year ago I think now and we're coming out with Freya Beta 2.
We just came out with Freya Beta 2 and Elementary OS Freya should be out an stable version within the next few months so it's exciting because it's built on the latest LTS of Ubuntu and a whole host of new changes and fixes under the hood.
So it's really cool.
Alright, well, and thank you for pointing out what the base is, I had almost forgotten that question.
The last question I was requested to ask people, what is your preferred text editor?
I actually use the Scratch text editor, it's something that is actually an elementary project and it uses GTK source view.
So it's very similar to G-Edit but it has a lot of the nice elementary design features built in.
And is there anything you'd like to add Katie before?
We put a wrap and what is your favorite text editor?
I have used Scratch for some front-debt web development.
And so anything else you'd like to add before we put a wrap, anything you think I might have missed?
Nope.
Alright, well this has been Lord Drockenblut speaking with the folks at Elementary OS at scale 13x.
Alright, this is Lord Drockenblut at scale 13x.
And right now I'm at the gobotarturocylon.js booth.
It appears.
And who do I have the pleasure of speaking with today?
I'm dead program, also known in the real world as Ron Evans.
And I'm the ringleader of the hybrid group where the creators of a bunch of different open source robotics and physical computing frameworks.
Including SilentJS, R2, and Gobot.
And who else do we have here today?
Hi, I'm Manolo Evans and I'm the son of Ron Evans.
I'm Adrian Zankic.
Zankic on GitHub and Twitter and all that stuff.
I'm Nathan Zankic and I made all the websites for the robotics programs.
Alright, so what are you guys here showing and kind of what are you guys doing in general?
So we love robots and physical computing and we love to program them.
So we created some frameworks to make it easier in languages that we use typically every day, JavaScript.
Go is a new language.
It's not as used as by as many people but it's very powerful, very concurrent.
It's created by Rob Pike and others at Google.
Rob Pike, as you probably know, listeners, is the creator of UTF-8 and the Plan 9 operating system.
So Go is a really powerful language for programming concurrent devices.
And anything we see, we think, wow, how can we make it move?
Well, thank you for telling me that.
I never knew that Go came from Plan 9 basically as I'll put it at least.
So I'd see you guys have some really interesting looking hardware here.
What do you have on display today?
So we have a bunch of different toys with us.
One thing about toys, any sufficiently advanced technology starts out in the form of a toy.
So if you want to know what the future is bringing, just go to a really, really great toy store or Maker Fair, of course.
So we have a few different toys that we brought with us.
We have the Sphero robots from our friends, Sphero of Boulder, Colorado.
It is a microcontroller with a Bluetooth radio and an accelerometer.
It rolls around under Bluetooth control and it has a whole API.
So we can program that using SilentJS R2 or GoBot.
We also have the new Ali robot, also from Sphero.
This thing goes, it's Bluetooth low energy, so it uses a lot less power.
It takes that power and puts it into the motors.
So this thing, it looks kind of like a tin can on steroids and it can take jumps.
Top speed of about 15 to 20 miles an hour.
Which I haven't had a chance to clock yet, but I did bring my LiDAR light device.
So I'm going to use my LiDAR to actually check the speed of the Sphero later on.
And then I have my MIP robot from Huawei, the same company that originally created the RoboSapien.
This is their latest Bluetooth low energy controlled robotic toy.
It's the year of Bluetooth low energy toys, I guess.
Definitely, and if people want to check out more of what you guys are doing,
get involved, start playing with things, where should they head to?
Well, we've spent a lot of time on our websites, on documentation to make it easy for people to get started.
If you go to silanjs.com, or if you go to gobot.io, or if you go to r2.io, that's a-r-t-o-o.io.
We have full versions of all of our open source frameworks.
They're all patchy 2.0 license, so you can use them in either your free to use,
or even your commercial projects.
And they're really great way to get started hacking using higher level languages that you already know,
and that you probably already love.
Okay, well since you brought it up, why did you make the choice of a patchy license over something like the GPL or other licenses?
Well, without getting anybody upset, the problem that we have with the GPL is we don't have anyone to pay our rent.
We needed to have something that could be used as part of a commercial project if we wanted to get companies to pay us to do things with it.
So we elected to go with a patchy 2.0 in order to have both commercial and non-commercial uses.
We want to see non-commercial uses and not put limitations on them, so we didn't choose something like the LGPL.
So having that double standard seemed very confusing.
So instead of doing dual licensing on your code, you chose a license that allowed for the dual purpose if I'm understanding correctly.
That's our understanding. Now we are programmers, not lawyers.
We don't play them on web episodes either, so we don't really know the details of these things, the way that lawyers would,
and lawyers don't even agree upon them.
But our best understanding is that this was a way for us to provide for both commercial and non-commercial uses without anybody worrying about infringing.
Since there's a real exciting movement of young companies that are trying to build either hardware products or hardware enabled services,
and we wanted to make it possible for them to use open source to do so instead of looking at closed source options.
All right, and is there anything you think I've missed you'd like to tell the hacker public radio audience?
Hardware is really fun. Don't be scared. You don't necessarily have to learn how to saw there, but if you do, there's lots and lots of great people out there willing to help you.
There's makerspaces opening up. There's lots and lots of exciting movements, and the community is really interested in helping people get started with hacking around with hardware.
All right, and final question I will have for all four of you is, what is your preferred text editor?
Uh, preferred text editor. Well, most of us use VAM.
All right, and just to verify, what's your guy's favorite text editor?
VAM? Yeah, VAM, of course.
Yeah, VAM. All right, there we go. One booth, four guys. VAM enabled.
This is Lord Drockenblut, signing off.
Greetings, hacker public radio. This is Lord Drockenblut at scale 13x.
And right now, I am in front of the Syslog and G booth if I'm not mistaken.
And who all do I have the opportunity to speak to this morning?
My name is Ishto Ansable, and I am the product manager responsible for Syslog and G product.
And I'm Peter Tarnik, the community manager of Syslog and G.
All right, so could you kind of tell the hacker public radio audience what Syslog and G is and where they might put it to use?
Yes, it's a logging solution. It's both for clients and the server side.
Actually, the main strength of Syslog and G is central of collection.
It can send logs to the center. It can filter, process, do many things and store it all forward to visualizationally acting against one.
Now, why would people use Syslog and G over things that are already implemented
in a Linux system already? What advantages does Syslog and G provide?
Syslog and G has a quite flexible configuration language which makes it very easy to implement complex logging solutions.
And looking at some of this, there's also mention of some encryption and other things.
Are those things that don't exist in other systems that are kind of come by default?
Well, out of the other significant advantages of Syslog and G basically is it is very high speed.
So, basically, if you would like to collect log-message and a single server, you can go up to 600,000 events per second.
That basically what really separates Syslog out of the other log-for-action solutions.
And I know the audience I'm listening right now would be interested. What licenses Syslog and G under currently?
It's under GPR. It's on GitHub.
So, it's a GPL V3 and if people are interested in the code, it's on GitHub. Where would they go on GitHub?
Exactly. It's github.com.
Well, we'll make sure and it's B-A-L-A-B-I-T folks.
Now, if people want to get involved with Syslog, either contributing code, using it, where's the best place for them to go to get started?
So, our picketing system is on GitHub. GitHub issues. You can fork it from there, the source code.
Any time we will request timely. And we have a quite busy mailing list as well.
And there is obviously the Syslog and G.org website, which you can visit.
And basically, what you can also do is all those Syslog and G is written in the C programming language.
Now, we make it possible that you can add modules in Java programming language, in Python, in Perl, even in LUA.
So, it makes it relatively easy to contribute because you don't necessarily need to use the C programming language to add your destination, for example, of destination.
So, people can extend the functionality of Syslog and G as they need using other languages that they might be more comfortable or familiar with?
Yes, yes. And is there anything you think I've missed that you would like the hacker public radio audience to know?
I'm not reading. We will have a presentation Sunday in the afternoon.
One can get known with the basics of Syslog and G, message parsing, and also the language bindings, my colleague can mention.
Well, thank you for pointing out. I think I need to start informing people a little better that unfortunately, these interviews probably won't come out until about over the next month or two after this.
So, my apologies for that, but I think scale is working on being able to record and release these so people might be able to still see it.
Do you guys have any videos and stuff directly up, or is it just kind of search on YouTube for anyone's particulars?
I guess what I'm saying is if I go to syslog-ng.org, are there any kind of tutorials up there that I could find?
Without tutorials, we don't have yet, but probably it's a good idea to keep something there.
We have some links how to get started, quite detailed documentation, many blocks detailing how to do specific things in syslog-ng, but not yet videos.
All right, so there's a lot of good information on the website. You just don't have videos at the moment, and that's something that might come.
And the last question I have is, what is your guys' preferred text out of here?
I prefer Joe, as I coded in Turbo Passcar many years ago, and it has the very same keyboard shortcuts.
And you, sir?
I typically use Emax and for simple things, just get it.
All right. Well, this has been Lord Dragon Blue for Haggar Public Radio at scale 13x.
And who do I have the pleasure of speaking to?
My name is Shane Groot, I'm the Vice President of Technology Operations at OpenX.
Now, what is OpenX? What do they provide to the community?
OpenX is an advertising platform.
Primarily centered around real-time bidding and supply side. And we are heavy open source, not only contributors, but adopters and users.
And we are based in Pasadena, and we're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled.
We're here at Scaled to talk more about OpenX and why you might want to work here.
All right.
Now, what have you guys released to any code the community could get their hooks into?
You can evolve, use, you know.
Yeah, we actually have.
We have a couple of open source projects that we support.
I actually don't remember them offhand, but we have a couple of JavaScript projects that are submit.
We also are part of the OpenRTB effort, which is an open source real-time bidding platform.
And we support that within our exchange.
And probably more that I don't remember right now, but yeah, we get back to the community quite often.
All right.
So, if people are interested in OpenX because it looks like you guys are here primarily looking for new talent to join you.
Where should people go to contact you guys?
These are just ways to go to OpenX.com slash careers.
It's our career space.
You get a lot of really interesting information up there about the roles we have open.
We are looking for a lot of talent this year, so we definitely need people all year long.
And we're primarily centering these days around Python, big data, and then of course my team, anybody with a strong,
unique Linux background and set reliability.
So those are the three big focus areas.
All right.
And is there anything you think I might have missed at this point, you'd kind of like the hacker public radio community to know about?
Yeah, I think one of the unique things that separates us from a lot of other companies is that a lot of the hacker community appreciates large scale, big scale, and doing things in the thousands of nodes perspective.
And when you're dealing with problems that are at the millisecond level and not at the full second level, it presents unique challenges for scalability and performance.
And it's really fun to work on.
So if you were thinking about working in a company like Google but you didn't want to get into the big engine and just be a single cog, I think OpenX is a great fit for you because we have a lot of the same problems that Google does without some of the maybe disadvantages that some people might think is a disadvantage working in a company like Google or Yahoo.
So now I will say I have the chance to speak to someone yesterday who was talking about timing issues.
I think that go even beyond what you guys would and I just want to present it to you so you can hear this.
NASA actually has a very unique problem with timing on a Postgres S2L database that is in orbit because now you're starting to run into issues where time.
Your event could show up before it was actually sent according to time service but that is perfectly reasonable and that they have three databases are basically always talking to each other and reconciling because for them bit flipping is a true issue in space.
Yeah, that's actually a really interesting problem. Similar to some of the stuff that we're working on right now.
Not quite that sexy maybe in some ways because we're in the advertising space but still interesting and difficult to deal with because a lot of times when you're dealing with time and you're dealing with millisecond response times and we our platform actually sits in the middle of a lot of transactions.
Yeah, you get some really interesting data synchronization problems particularly when you have multiple locations on the planet that you have to synchronize data with so yeah, that's a fascinating problem.
I mentioned reading more about that.
I don't know if the talk is out there but it was a Postgres SQL and the gelman's here he's with Postgres SQL so if I find him again I'll try to point him your way because you'll let him know you're interested.
Now last question, what is your preferred text editor?
It was a question I was asked to ask.
Oh God, it's one of those questions.
Oh man, all right. I'll go with, I'll go with Vi, not even Vim, just Vi, that's my preferred.
All right, well folks, this has been Lord Dawkins Blue at scale 13x.
Greetings Hacker Public Radio, this is Lord Dawkins Blue, still at scale 13x and currently I am with Think Pinkwin and who do I have the pleasure of speaking with this morning?
Christopher Wade.
Now Christopher, could you tell the Hacker Public Radio audience a little bit about Think Pinkwin, its goals, missions, what it's trying to accomplish?
Yeah, so basically Think Pinkwin is a company that sells free software, friendly hardware.
Everything that we sell is going to work really, really well with any GNU Linux distribution out of the box as long as it's got a fairly recent software stack.
We do also support older distributions and long-term support distributions.
So there is a lot of our hardware that will also work with things like CentOS, Debian, you know, things that have an older software stack.
Now what sets Think Pinkwin apart from the rest of the competitors in this kind of market space?
Basically everything that we sell is free software friendly.
So what most people don't realize is that most of the competition actually has proprietary drivers and firmware pieces which can become hinderances when you go to upgrade from one version to another.
You may not have support at all. It's a big problem for printers to laptops and desktops and Wi-Fi cards and 3D accelerated graphics.
Alright, and what kind of range of products do you guys offer?
Anything that you could probably think of as far as hardware and accessories go.
Web cams, dial-up modems, laptops, desktops, parallel port cards, Firewire cards, graphics cards, printers.
Alright, and now one announcement I'm aware of you guys had recently.
You brought a new piece of technology into your guys' space as I understand it.
Was a new router?
Ah yeah, so we came out with a 100% free software friendly router.
So basically all the distributions, embedded distributions for routers currently include non-free pieces because most routers are depending on chipsets which are depending on non-free pieces.
So they wouldn't work on most routers without those pieces.
So what we did was we came out and we stripped out those pieces and put it on a free software friendly router that wasn't depending on any non-free pieces.
And so that part of it is called Liberty CMC which is the embedded distribution and it will work on other devices potentially in the future.
Right now it's primarily for one particular router. We are working on a newer router, a more higher end router which will hopefully come out with maybe a month or two,
depending on how things go.
Alright, and does it have any unique capabilities such as being able to plug a USB hard drive into it and share it on my internal network or anything like that?
Yeah, so the one we're working on right now, what we're hoping to have out is I believe we're going to have a gigabit ethernet support as well as a USB port.
So you will have additional support. There may also be some additional features that are unique to the router that we're going to come out with because it will have a lot more RAM than most routers have.
Alright, and what is the name of that router that you guys sell right now and can you say what the name of the next one is?
Yes, it's a free software friendly broadband router I believe is what it's called on our website.
And that's just thinkpankwind.com under wireless router, or actually wireless or networking section, sorry.
Now I'm also, I believe, was aware that thinkpankwind offers some unique tools for distributions that some other sites don't have available to them.
I believe you're referring to the optional accessories that you can purchase with it.
Those are nice, but I believe there was some stuff on the website where you could click on something and do some installs.
Maybe I've got something confused here, but I thought you guys had some tools to help make things a little easier for new people.
As far as hacking on the routers?
No, I mean on like your laptops, your desktops and so on.
So sorry for that confusion on my part.
I don't, I'm not sure what you're referring to.
It's possible, but I'm not sure what you're referring to.
I wish I could remember the name.
I would remember listening to the link, link, tick show while back when someone from thinkpankwind was on there and they had mentioned some tools on my website.
That was like a Firefox extension I want to say for helping identify software and install it.
But maybe I've...
Yeah, so yeah, we did.
We had out a tool, unfortunately we discontinued the tool, but it basically helped users locate free software, friendly websites for video and other purposes.
So for instance, if you went to Netflix, it would redirect you to another website.
Unfortunately, or actually fortunately, a lot of these issues have kind of been resolved over time.
So the tool became less necessary.
Well, on the Netflix side of things, you know, you're going to have to have DRM involved.
So Netflix in and of itself has not been resolved, that's for sure.
But there have been... I'll give you an example.
Where before we allow sites needed Adobe Flash, they no longer need Adobe Flash for video streaming.
So you no longer really need a tool to direct users at a site that is free of Adobe Flash.
All right, so you guys have kind of discontinued that tool because you feel most of that has been resolved and it's not really a needed tool anymore?
Yeah, it's a lot less critical of a tool at this point in time.
It could definitely be useful, unfortunately, to continue to maintain the tool with the constantly changing versions of Firefox,
just wasn't worth it considering all the other things that are changing in just in general.
So if someone were interested in maybe picking that tool up and continuing it,
that's something where someone could contribute who maybe has more time than you guys do to bring that tool back and help keep it going.
Yeah, it's not a tool I would have liked to discontinue,
but it's just that there's other things that are more important as far as putting the money into other areas
that are probably going to be more beneficial to more users.
All right, and if people want to check out what you guys have to offer, where should they head to?
ThinkHangWin.com.
Anything you think I've missed, anything you would like to hack a public radio audience to know before we kind of put a wrap on things.
No, I think you pretty much summed it up.
And the last question I was asked to ask people is what is your preferred text editor?
I'd have to say Emax.
So you like booting up an operating system to change a text file?
Bad joke on Emax being such a large thing that some people call Emax an OS unto itself.
So you like booting up an Emax OS to write a text file?
Yeah, I don't know where that joke got started, but I thought we actually might have started that joke even,
but I'm sure it was probably a long time ago if somebody started it.
Well, I will tell you, I actually ran it across one time.
Someone had put a guide up on how to make Emax and them both run as like PID, one or two.
I mean, basically, it turned it into your OS.
Yeah, Emax is definitely...
It's got everything under the hood that you could probably want as far as a text editor goes.
And then some...
Alright, well this has been Lord Dragon Blue at Scale 13X with Think Penguin.
Alright, folks, this is Lord Dragon Blue at Scale 13X and currently I'm at the Cody booth.
And who do I have the pleasure of speaking with?
My name is Garrett.
I'm a user named Garber on the forums.
I'm a developer for Cody.
And I'm Nathan.
I'm a user named Nate Thomas on the forum.
I'm the project manager, community manager, sort of every man for Cody.
Now, for people who may not be aware, can you kind of tell the history of the Cody project where it started and kind of where it is now?
Sure.
Cody started in 2002 as the Xbox Media Player.
And it was originally meant purely for old modded Xboxes from back in those days,
way before the Xbox 360.
Around 2008 it got ported over to Linux and from there it got ported to basically everything else on the planet.
And right now it runs on Linux, Windows, Macs, iOS and Android.
And lately we've been pushing a lot of the Raspberry Pi stuff because we just like Raspberry Pi quite a lot.
But for the most part it runs everywhere that you can possibly run software at this point.
Now, technically, if I under on the technical side of things, what has been the shift in Cody because as I remember it was originally built using an Xbox specific tool
and has moved now to being under a more open software.
What's kind of been the history there? What did it start as? Where is it now?
Well, once we moved over to Linux, everything had to become completely standard Linux built stuff.
So we were using auto tools or auto-con for a while.
Now we switched over to CMake, which is cross-platform and solves a lot of problems.
All right, now what does, sorry, I'm still in the XBMC frame set.
I used, I started using it back in 0203 when it was getting started.
But what kind of area does Cody fulfill for people?
I mean, the whole point of Cody is to provide a 10-foot interface for people to watch and play back their local media as well as online streaming content.
So if you have local movies or TV shows, you can watch them with a nice interface so you can browse through on the couch.
It's kind of a little bit of a different platform than for example, VLC, which is down the booths a couple of ways,
which is more of a desktop, media centers, a desktop software that plays back media files.
We're more of a couch software and to some extent moved on these days to tablets as well.
So you have the 10-foot interface and you also have kind of a nice tablet interface for dealing with your local content.
Now for a very, very long time, XBMC and Cody, they were only kind of local playback or from certain streaming services.
But recently there's been some work on PBR and Live TV support.
How is that coming along, you think?
It's coming along at this point much better in Europe than America, mostly because most of the devs who are doing a lot of the
support for Live TV come from Europe.
So the spec is mostly based around DVB, but the way Cody works with PBR sources is Cody itself isn't actually a PBR tuning service itself.
What it uses is back ends like TV head end or VDR or things like that to hook into over the air TV or cable TV depending.
So as those various TV services to VDR and TV head end kind of improve, then Cody sees the improvement without actually needing to do anything.
We've been moving towards add on a lot of what we do, so you can update without having to update Cody.
And that's just one area where we're doing exactly that.
And what would you guys say are some of the more exciting things that are in Cody's near future, things that are being in development right now, you know, a kind of data but coming out, you know, coming on strong?
Well, I would say two of the big things, Garrett here, obviously, he's working on something called Retro Player, which allows Cody to play old games from, you know, the Super Nintendo days.
And things like that. We've actually, we've actually got some hardware here. We haven't got hooked up that lets you plug in an old Super Nintendo cartridge that you can then actually play Super Nintendo games directly in the Cody interface.
It's not hooked up at the moment because it's definitely very much a horizon thing. It's not working very well right now. So that's a big one.
Now, what is this device you have Garrett, where can people acquired and kind of tell them more about it in general?
Okay, so this device I'm holding right here, it's a little black box, and on one end it has a USB port. On the other end it has a Super Nintendo, and is that Sega Genesis?
It's also a adapter for N64. And an N64 adapter that supports controllers, which lets you plug all of these old cartridges and controllers into a computer.
I'm working on software that lets you play those games in Cody. So this is kind of similar to this device, kind of similar to like the Retron 5 without the software.
It's actually quite similar to Retron 5. It doesn't have a lot of limitations that Retron 5 does. Retron 5 I believe is Android based or some embedded Linux with a bunch of emulators strapped on top.
All of these emulators are integrated into the software, so it's a much more fluid experience.
All right, and what other things do you see that are kind of exciting developments in the code right now?
The other thing, at least I'm personally really excited about, is the improvement to UP&P. We're looking at in the future. On our blog every once in a while we've talked about eventually turning Cody into a mesh network.
So a lot of media center companies out there these days work on a server client basis, like just for example take Netflix.
Netflix has clients that can't do anything, and a server by itself that can't do anything, you need them to work together to do anything. Whereas Cody is a server client all by itself in every instance of Cody.
So in the future what we're excited about is getting two instances of Cody talking together. Each instance could have its own media on the server, and it would populate both libraries with all the media.
So if you for example had a tablet that had something that you wanted everybody to see at somebody's house, you can take the tablet with you to your friend's house and he's running Cody.
And it would automatically add whatever's on your tablet to the Cody environment at your friend's house without having to do anything at all.
So basically one way to put it is you're working on a federated service for Cody.
Sure, that sounds good to me.
What are kind of your guys's personal Cody setups like?
What's your personal Cody setups like at home?
Well, mine is I have a pie hooked up to my TV. I have a gaming PC that sort of where I do all my heavy lifting and actually actually do all my work.
And I have a bunch of tablets and things that I play around with.
Let's see, I have a pretty cool little set top box. It's entirely solid state. So there's no moving parts, no fans, perfect for a media center because it doesn't make any noise whatsoever.
Pretty cool little device.
Now is that the only part is that the only part of your Cody setup at home or is there more to it?
I have Cody in every room hooked up to every TV. It's I have many, many Cody devices, but my favorite one by far is the little shuttle case that has a passive heatsink.
Alright, and what is the license of Cody currently and has there been any changes from when it kind of started as XBMC on the Xbox to now?
No, it's GPL 2 and it's always been GPL 2. We don't foresee it changing any time in the future.
And what I remember I think a while back there was a rather big change in the main UI switching to QT if I'm correct.
That hasn't happened in our project.
Okay, maybe I'm mistaken. I thought there was a major...
There was a Google Summer code project for Linux where we've added a windowing engine or something like that.
I forget what it was exactly.
I don't remember. I don't know.
Anything you'd like the HPR audience to know about Cody that maybe I've missed at this point?
It's awesome.
Yeah. And if people want to get involved with Cody, if they want to use it, where should they go to find out more?
Check out our forums. It's forum.cody.tv.
Alright, and the last question I was asked to ask people is what is your preferred text editor?
I'm going to go with a notepad plus plus.
Alright, I have to admit I mostly use Macs. So for me it's J-Edit, but I'm embarrassed to admit that.
Alright, well, thank you, gentlemen, for your time. This has been LordDrock and Blut at Scale13X.
You've been listening to Hecropublic Radio at HecropublicRadio.org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HPR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out how easy it really is.
Hecropublic Radio was founded by the Digital Dove Pound and the Infonomicon Computer Club,
and it's part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on the website or record a follow-up episode yourself.
Unless otherwise stated, today's show is released on the create of comments,
attribution, share a like, free.or license.
