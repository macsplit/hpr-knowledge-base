Episode: 1103
Title: HPR1103: Thoughtkindness: In Defense of Media Freetardation
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1103/hpr1103.mp3
Transcribed: 2025-10-17 19:02:07

---

Hi, my pseudonym on the internet is Epicanus and I am a free-tard.
Greetings greetings fellow netgazers. It's me again. I warned you that if nobody stopped me I'd be back and here I am. Finally, or at least my voice.
Or a series of bits containing a digitized representation of my voice. Actually, appropriately enough, that's really the topic of today's episode.
First though, I want to apologize about disappearing for so long, but a severe attack of life required us to spend some time moving the asylum for the sufficiently nerdy here, over 2100 miles from its original location.
That's like 3,400 metric miles for you people living outside USA land. Being busy with trying to get a business off the ground and not go broke in the process has been distracting.
I don't feel too bad though, since as of right now, it looks like hacker public radio isn't hurting for shows, and it could be another month or more after I submit this before it makes its way through the queue and you hear it there anyway.
In any case, it just took a long time before somebody got around to saying my name three times while looking in a mirror, but evidently someone finally did because here I am with episode 01 of Thought Kindness.
Before I get into the topic of today's exceedingly late episode, I wanted to give a quick follow-up on Bunnies, my laptop from Ohio computers that I mentioned last time.
Bunnies had been chugging along pleasingly for about eight or nine months since I got it. However, at that point, it suddenly keeled over dead while I was using it.
Well, actually more like, but whatever. The point is, something internal had out its magic smoke and the machine was an instant paperweight. Time to see how the warranty service was.
I'll spoil it up front, warranty service was actually great. Once I got it back to Ohio computers, they checked it out, replaced the motherboard, and shipped it back quickly.
There was about a week's delay involved in me getting the hard drive extracted and dealing with failure of a daring experiment that I had just happened to start doing with my pair of external USB backup drives before this happened that cost me several days to resolve.
But once I'd gotten that dealt with and gotten my laptop's hard drive backup current, the rest was easy. I don't want to spend too much time talking about this before I get to the main topic of today's discussion, so I'll just sum up.
First, as I mentioned, Ohio's warranty service was, for me at least, excellent. Second, actually getting this system open to the point where I could actually get the hard drive out was both harder and easier than I expected.
Harder, because there is no access panel for anything, and it's necessary to remove something like 22 screws from the bottom of the case to get it apart. But easier, because none of these screws seemed to hold anything special besides one screw labeled as holding the optical drive in place, and one labeled as holding the keyboard in place.
So, once all of them were removed, and the optical drive pulled out to get to the last two screws, the bottom of the system came off neatly, revealing the CPU, RAM, and hard drive and easily reached locations inside.
And third, trying to access a ButterFS file system in a Raid 1 configuration across a pair of external USB drives turns into a huge difficult to resolve mess if the USB hub you're using is faulty and makes one of the drives keep kicking offline while you're trying to write to the file system.
And don't give me any of that, was he, oh no, you should never do something like that with external drives crap.
I wanted to try it out, and you can't make an omelet without denaturing a few pre-embryonic chickens. If anyone wants to hear the story of this experiment, let me know, and I'll put together an episode on it.
For the record, I lost no data as a result of this, just a bunch of times sorting out how to get the ButterFS file system divorced.
Oh, and apologies to Jared for missing the question about battery life that he posted on episode zero's comments way back then.
To be honest, I really don't know what Bunny's battery life is like.
I mean, I do occasionally unplug it and use it for a few hours away from power, but my own approach to mobile computing is to make sure I have plenty of ways to run chargers.
So I never have to sacrifice performance in the name of, oh my god, every time I charge my phone, I'm afraid my battery might get electrical syphilis and die, don't make me plug it in, please.
So in short, as far as I can tell the battery life is decent, but I'm not really a good judge of that by the standards of most cord-fearing mobile device users.
All right, onto today's real topic.
I was originally planning to do an episode on geotagging, but then one day Twitter, like a passing pigeon, dropped upon my head a link to someone's podcast with a review of the PowerPress podcasting plug-in for WordPress.
Since PowerPress supports AugVorbus Audio, and had recently come out with a version supporting HTML5 audio features, I figured I'd download the review and give it a listen.
The podcast series in question is called The Audacity to Podcast, which is a pun because evidently the use of the open source audio editing software named Audacity is a major theme.
Audacity is awesome software, by the way I use it myself.
This made me hopeful as I downloaded episode 33 to hear the review, but then I started listening and heard yet another re-iteration of the same friggin theme that I've heard too many times before.
I quote, and the reason Firefox, by the way, doesn't support MP3 is because of how Firefox is released under licensing terms and conditions and blah, blah, blah, all this legal stuff.
And they decided that they would not support MP3 because MP3 is not an open standard.
So it's a decision they've made to not support it, which is crazy.
Seriously? You're telling me people still don't get this? Terms and conditions, blah, blah, blah, legal stuff?
I was reminded of the words of a great philosopher from the early 20th century who said,
that's all I can stand, I can't stand no more. And so I pushed back the geotagging episode and decided to at least try to present an explanation of why this matters.
It's taken me a while to put this together because there's a bunch of different issues here, and I'm trying to get this done in little chunks of free time that I have and new developments keep popping up that make me need to go back and revise things.
When I started working on this, it was just going to be all, hey, everybody, AgVorpus is more widely supported than you think it is.
So you should totally get to work putting more AgVorpus in audio tags on web pages. And I was worried I'd have trouble coming up with more than three minutes of things to say.
And now, a year later, the episode has bloated uncontrollably like that guy in Akira, except without the part with the imploding because of the creepy psychic mummy kids.
And also, I don't have one of those cool motorcycles. Wait, what was I talking about again? Oh, right, online media.
My thesis today is really that being a participant is far more vital to the health of the internet than being a mere consumer.
And therefore, everyone ought to be striving to post their own media on the internet.
Oh, and also that legally free media is more useful and much more widely supported than it gets credit for and everyone should be using legally free media formats or at least openly supporting and promoting them.
Okay, two Theses.
Oh, and people are way too obsessed with their computers, cell phones, and eye gadgets being televisions when we should not be neglecting audio media online.
Three, three Theses. You notice I said audio and not music for hang on. Let me try this again.
You ever go fishing? Have you ever experienced that thing where you cast your fishing line out?
And then when you reel it back in, you find it as somehow nodded itself up into a gigantic wad of tangled line that looks like it ought to be a roadside tourist attraction somewhere in South Dakota.
Visit the Wheat Palace, come see the world's biggest pile of chewed gum, the world's largest mass of tangled fishing line, and for a limited time only hear the world's most convoluted attempt at a hacker public radio episode ever.
Anyway, I think my brain did that when I tried to organize this episode.
All I'm trying to get at today is pretty much just three points.
One, participation in internet media is really, really important. More so than I think people realize which sometimes annoys me.
Two, easy methods of participating are necessary, and that means legally and financially easy in addition to technically easy.
A distinction that I think sometimes people gloss over or miss entirely, which sometimes annoys me.
And finally, three, quit making it sound like it's too hard to participate, Magnabit.
People keep doing things that make it sound as if you have to be a movie producer or a professional musician to have any reason to produce your own media, for example.
Or making it sound like the technical and legal issues make it really hard to get your media out to everyone, unless you're some kind of weirdo techno geek so nobody should bother, which sometimes annoys me.
Did I mention the situation annoys me? Oh, okay, just checking.
As you can tell, there's a lot of fecal matter for me to cover today.
What? If a bunch of feces is fecal matter, then a bunch of feces is fecal matter, right?
Anyway, there's a lot of different stuff tangled up here. Technical stuff, legal stuff, ethical, practical, and political.
There are also numerous stakeholders and their motivations to consider as well.
Hacker as an artist, and other creative types, as well as lawyers, Maglim and Iacle business executives, corrupt politicians, those stupid, obnoxious friggin' ancient Babylonians.
No, wait, the Babylonians go with the geotagging episode.
But anyway, the point is that there's a lot that I want to try to cram into this episode. This is probably going to be messy, but I'll try to make it coherent.
I guess a bit of technical background is in order to start with, so now is a good time to chug some caffeinated cogitation fluid so you don't fall asleep while I start spouting off about what I think I know about multimedia formats.
Those of you who already know this stuff will either find it boring, or have a great time listening for mistakes that I might make, and hopefully everyone else will at least get some useful information out of it.
In case it's not obvious, today's topic is sound and video that can be distributed from webpages and played back either in a web browser directly, or downloaded to some sort of portable media player.
In particular, I would like to focus on media, especially sound, that you might want to create and distribute yourself rather than merely downloading and consuming.
It's easier than you might think, but figuring it all out can be a bit confusing.
And don't worry, I will also talk a little about video in case you're really into making videos of your kittens, or homebrewed porn, or blackmail material, or whatever combination of the three Spinger propeller beanies.
First, let's start with the issue of file formats and codex, which are frequently confused with each other's.
See, a file format is really just a kind of container the codex is in, like an avi file or an MPG file, while the codex, like H.264 or MP3, are the more important part because, you know what, just think of it as your lunch.
No, seriously. Let's say it's lunchtime, and you hate yourself, so you go over to the local muck donalds and buy yourself a crappy meal with the actual intention of consuming it.
So you roll up to the window and you're awesome tricked out Geo Metro, and tell the incomprehensible distorted voice that comes out of the evil plastic clown next to the menu.
Hey, I didn't come here to answer a bunch of stupid questions about what I want. I'm a consumer, and I just want to be fed. Now take my money and give me my dang crappy meal.
Having put the evil plastic food clown in his place, you roll up to the window, throw a lot of money dismissively at the costumed guy who has your food product, collect your crappy meal box and drive off, mission accomplished.
Now, crappy meal box is like file format. As long as you know the secret to unfolding the top of the box, you can get to the food inside.
The same way that if your software understands the secret of opening a file format, it can get to the data inside.
Getting it whatever's inside either container is usually not a big deal, and it's usually not all that complicated to move the contents from one kind of box to another.
But wait, what is inside the crappy meal box? Well, yeah, it's a crappy meal, but what kind? You didn't actually think about that, did you?
No, you were too much of a big shot consumer to be bothered. Could be a hamburger? Could be a hamburger with cheese-like food product?
It could even be chicken macglobules with authentic artificial fructose and acid sauce. Who knows? The problem is, maybe you're allergic to the meat glue they use to make the chicken macglobules.
Or maybe you keep kosher in a form strict enough to consider the orangish plastic slab that's sitting on top of the meat-like product to be cheese, quote unquote.
And therefore, unpermitted to the fact that there is some amount of detectable meat in the patty.
And, did they give you tallow soaked potato-based squish fries or a couple of pathetic plastic wrapped apple slices?
The box is just a container and doesn't necessarily tell you anything specific about what's inside.
In the same way, an AVI video file, for example, doesn't tell you what kind of video or audio is actually inside of it until you open the file and look.
The specific types of fudular items inside the box are like the codex in your media file.
In order to eat your crappy meal, you need to know how to open the box, but even if you do know how to open it, it won't do you much good if you aren't able to ingest and digest the allegedly-edible components inside.
Usually, this is much more of an important problem.
At this point, I could stop torturing this analogy and fill several minutes of audio with a long list of file formats and codex.
But for our purposes, there are really only a few that we need to worry about, along with one or two others for historical reasons.
All I'm really trying to get at here is that when people talk about kinds of audio or video files, they usually seem to want to describe it in terms of the metaphorical box, the file format.
Even though whether or not you can actually make use of it is more dependent on exactly what kind of data is inside, that is the codex.
File formats are usually referred to by the dot and three or sometimes four-letter code at the end of the file name, stick, that's used to indicate the file type since the dark ages of MS-DOS.
Some old school examples are dot ABI or dot MPG or MPEG video files or wave dot WAV audio-only files.
More relevant to today's topic, we really only need to concern ourselves with.
The number of possible codex that can be used inside any of these file formats is downright bewildering, but thankfully we need only concern ourselves with a few of those today.
For audio, there's PCM, MP3, yes the same name as the file format, Vorbus, and most recently Opus.
I'll also mention FLAQ, Speaks, Codec2, and AAC briefly later, but you don't need to worry much about them for now.
For video, for now we only need to worry about VP8, Theora, and H.264.
Video that's distributed over the internet today seems to most frequently be stuck in .FLV format, which is the file format for video in macromedia's, I mean, Adobe's,
dying flash browser plug-in technology.
Although many open source media players like MPlayer and VLC know how to handle this format, it's usually assumed that in order to see what's in the file, you'll be using the occasionally problematic and increasingly abandoned flash plug-in for web browsers.
The .FLV file format can actually have several different video and audio codecs, but most commonly these days they seem to contain proprietary H.264 video, and also proprietary AAC or MP3 audio.
I won't say much more about this one today because A to heck with Adobe, and B we have other easier options now.
I will mention that for audio-only streams, the flash plug-in can handle MP3 files if you use a flash-based player, of which there are several open source implementations.
As you probably already know, and if you didn't, you will in a moment, the latest version of the language used to build web pages is HTML5, which now has built-in methods for including video and, as people seem to keep forgetting, audio inside web pages without having to use a special web browser plug-in.
This still leaves ancient non-HTML5 supporting browsers hopeless and dependent on plugins anyway, but virtually all modern web browsers include support for this.
As you might expect, the evil steves of tech, by which I mean the late jobs and Balmer, favored only proprietary formats and codecs whose controllers demand license fees and use restrictions to use them legally.
For audio, we're mainly concerned here with MP3. I'm under the impression that Apple Safari will also play AAC audio files as well, which is a newer proprietary format that I don't really care about and won't really discuss much today, mainly because it really only represents about the same quality as Vorbus, or slightly worse than Opus audio, but with even worse versions of the same legal problems that MP3 has and less wide support.
For video, the evil steves favored MP4 files, usually tagged as .m4v or .mp4, and containing proprietary H.264 video codec and the aforementioned AAC audio.
I'm not certain, but I think the evil steves browsers allow MP3 audio tracks in the MP4 video files too.
The H.264 video codec is widely regarded as a high quality video format, but patent licensing fees and legal threats are a deterrent for a lot of people, but more about that later.
On the legally free non-proprietary side, depending on how you count, we have two or three OGG file choices and WebM.
An OGG file with only a Vorbus audio track, which is usually what is meant when someone just says OGG, or an OGG file with both a Vorbus audio track and a video track using the Theora codec, usually specifically called OGG Theora, and given a .ogv file name, just so it's obvious there's video in it.
More recently, we also have .opus files, which is an audio only OGG file containing sound encoded with the shiny new Opus audio codec.
OGG has actually been around a long time by computer standards. It's based on a video codec called VP3, which was developed by a company called ON2 back over a decade ago in 2000, ON2 graciously donated VP3, patent license and all, to the ZIF foundation back in 2002.
ZIF quickly got to work on it, and the first alpha quality release of the encoder and decoder came out a few months later. Unfortunately, ZIF's developers then got too busy doing other things, and it took more than half a decade of the alpha code sitting around slowly obsolescing before development really started going anywhere again.
To be fair, the other things included working at a paying job to earn a living, so I can't really complain too much without being an unreasonable jerk here, no matter how annoyed I might be.
Work was starting up again about the time Mozilla decided they wanted to incorporate support for legally free HTML5 video in their next release of Firefox, which at the time was version 3.5.
By that point, Theora was ancient in internet years, and there was a lot of whining about the relative video quality.
In my experience, it's true that Theora's video quality is lower compared to newer H.264, the same file size, but is perfectly adequate for the huge fraction of internet video that is made of drunken fratboy cell phone movies, or unnecessary video of Leo Laporte's lips flapping while he sits in a chair interviewing somebody on Skype.
Considering the appolingly huge number of people I see still using awful animated gifs for displaying video clips, I don't think super high quality video on the web is quite as urgent for every use case as some people insist.
And I tend to just roll my eyes and move on when the relative video quality complaints about Theora start.
Speaking of On2, though, while Theora was languishing as if, On2 was still developing newer better video codecs.
Some of them are occasionally found in FLV Flash videos.
They eventually got up through VP6, VP7, and VP8, and then Google bought them.
Google then turned around and open-sourced VP8, and put together the WebM file format for audio and video on the web, using VP8 video and Vorbus audio.
I'll get back to Vorbus in just a moment.
VP8 turns out to be a nice, high quality video codec, and its owner is explicitly not threatening people for using it without paying fees or asking permission first.
This arguably makes Theora obsolete.
A strong majority of all HTML5 supporting web browsers in use as of mid to late 2012 support one or more of the legally free media formats already, and nearly all of them if you're willing to install a free add-on for your operating systems media framework.
Of course, the two large dominant corporate entities who are being run by the evil steves, that is Apple and Microsoft, really don't like stuff like this from outside their control.
Apple's iPhone refuses to support Aug Theora, or Vorbus, or any other free codec under any circumstances, and I'm not holding my breath that will see any of it on the Apple-Aping Windows phones,
that Nokia is being forced to exclusively manufacture by their ex-Microsoft CEO, Stephen E-Lop, what the heck is the problem with tech executives named Steve?!
Back on the audio side, everybody knows MP3.
It's been around since the early 1990s back when people had to use FTP servers to trespass on the RAAA's copyrights,
downloading digital songs one at a time for hours, over a dial-up connection to listen to later on their 486s and Pentiums running Windows 3.1.
Yes, it's been that long.
These days, MP3 is still treated as a sort of industry standard, to such an extent that most portable digital audio players are usually just referred to collectively as, quote, MP3 players, unquote, regardless of what other formats they may support.
The audio quality is generally more or less acceptable at moderately high bit rates, like H.264 video though, MP3 audio still has patent restrictions and license fees associated with using it legally,
despite having been around for nearly a quarter century.
Ziff, remember Ziff?
Went and developed the Vorbus Audio Codec specifically to be a non-patent and comberd, higher quality, legally free, audio codec, as a substitute for things like MP3,
and which could be used by anyone, including major businesses, who wanted to focus on producing creative audio rather than paying protection money to patent lawyers.
You can make a legitimate case that using theora video instead of proprietary H.264 video is a step down in quality.
However, Vorbus Audio is definitely higher in quality than MP3 Audio, so there's no excuse there.
In my experience, a Vorbus Audio Stream sounds about as good as an MP3 Stream that is one or two steps larger.
For example, 128KB Vorbus Stream generally sounds at least as good as 160KB MP3 Stream, and a 64KB Vorbus Stream of a speech sounds reasonably good,
while a 64KB MP3 Stream often seems to sound like the speaker is talking while playing with a bag of broken glass shards underwater,
so Vorbus Audio seems to hold up substantially better than MP3 at low bit rates.
This is useful if you're paying for your own bandwidth, or trying to download on a slow internet connection, or both if you're on a smartphone in the US.
In short, switching to Vorbus from MP3 is most definitely an upgrade.
One problem codex like MP3 Vorbus and AAC have is that they are high latency, meaning the time between reading a chunk of audio data out of the file and decoding it into sound you can hear can be quite long by computer processor standards.
This doesn't really matter for playing back pre-recorded audio, but it's a killer for interactive uses like live online voice chatting.
Recently, Ziff and Skype, with the backing of Mozilla and others, have developed a new standard called Opus, which combines technology from Skype's silk codec, optimized for human voice sounds at lower network speeds, and Ziff's Celt codec for high quality general purpose audio.
In addition to easily beating MP3 in quality, Opus seems to even beat Vorbus and proprietary AAC audio at the same bit rates and listening tests.
How much would you pay now? But wait, there's more! Opus was specifically designed for low latency, which makes it extremely good for interactive audio and live chatting.
It also turns out that for such high quality output, Opus is surprisingly easy on the CPU, so there should be no need for special hardware decoder chips, spare batteries, or fast processors to use it.
Opus probably deserves its own episode, or at least a big chunk of a more technical episode, so I'll restrain my enthusiasm here other than to say that Opus and Aug files is already supported in Firefox 15 and later for audio tags.
And as I record this is already going into Rockbox, VLC, Mumble, and various other projects, some of which will likely be released by the time you hear this.
Opus is also currently one of the only two codecs that are mandatory to implement for the web RTC standard for voice chat and other live audio on the web, so I expect Opus to become quite popular for all sorts of audio applications very quickly now that it is an approved IETF standard.
I'd like to point out that I already have a portable media player that handles Opus just fine, as the nightly builds of VLC for Android seem to be working great for me, and I've been listening to Opus files on my Android phone.
Rockbox based Opus playback may already be available by the time you hear this.
I'll mention PCM just to round out the audio section here.
PCM stands for Pulse Code Modulation and actually comes in several variants, the details of which we don't need to worry about here.
Basically, 16-bit PCM audio in a wave file appears to be supported for either pretty much all HTML5 browsers or all HTML5 browsers besides Internet Explorer 9.
I've seen it claimed that IET9 supports waves files, but I've also seen it claimed that they only support wave files for the non-standard BG sound HTML tag and not for the standard HTML5 audio tag.
I don't really care for two reasons.
One, I'm just assuming Microsoft is going to continue stomping its speed and digging in its heels, and throwing itself on the floor, and throwing a tantrum, and dancing around on a stage in a sweatshirt soaked white shirt while chanting in front of its employees, and generally trying to slow everyone else down.
And if so, it's a waste of effort to worry about them, and two, wave files are really lousy for all but a very few Internet distributed audio uses anyway.
I would not have mentioned it at all, except I think it's worth knowing it exists, just in case you need it for some odd reason.
Those are the only codecs we really need to worry about today.
As far as file formats for media is distributed by web servers, we can limit ourselves to three kinds of audio and three kinds of video.
Well, four kinds of audio if you count wave files, which I don't.
For video, one option we have is legally-free WebM.
We also have legally-free.oGB, OXIORA files, and proprietary MP4 or M4V or whatever you want to call it.
For audio, we have legally-free Opus, OgVorpus, and WebM audio, and we have proprietary MP3.
Yes, there are also proprietary AAC files too, but again, I don't care.
It's redundant for our purposes today, and I'm really only mentioning it here since it's often what they combine with H.264 video to make proprietary videos.
I said I was going to briefly mention some other audio codecs, so here goes.
FLAC is the free, lossless audio codec, which gives you archival quality audio suitable for converting to other formats later if you want to,
but with roughly half the space taken up by wave files for the same purpose.
I would not be too surprised to see support for this format showing up in Firefox or Opera and maybe Chrome eventually,
but for now, it's not really a factor on the Web.
Mostly because even at about half the size of wave files, FLAC files are still huge by internet download standards.
FLAC is its own special file format, though still open and legally-free, and not actually in an Og file despite now being developed as a ZIF project.
Speaks is a legally-free, low-band with codec designed specifically for carrying good quality speech, most often used for voiceover IP, but occasionally used for storage of spoken audio.
There was some consideration for including support for this type of file in Firefox, but the development of Opus has made Speaks effectively obsolete.
In fact, this was exactly the reasoning given in Mozilla's bug tracker entry explaining why the feature request for Speaks support was rejected.
Codec 2 is a relatively new project, and also mainly for voice and designed for extremely low bandwidth.
It looks like it's currently running it around 2.5 kilobits per second, which I think means you can host about 10 voice calls over an old school dial-up modem connection at the same time,
if latency wouldn't drive you insane.
The project is still in early development, but it seemed interesting enough to mention what with US cell phone carriers eager to make you pay 5 bucks a megabyte or whatever obscene overage charges are these days.
As a bonus, Codec 2 compresses your voice so much that you actually sound like a speech synthesizer rather than a natural voice, which is kind of neat in a childish sort of way.
Codec 2 is really mainly being designed for ham radio use, but I could see it being useful for other low bandwidth voice over IP applications.
Of these, you might find FLAQ and Speaks files for download online right now, but probably not in HTML5 audio tags any time soon.
You should start seeing opus files popping up any day now if things stay on track, with web-based voice communication applications, live audio streaming, and quite probably increasingly in place of WebModio, Ogbormus, and Crapiold MP3.
Okay, almost done with the boring stuff. Just one more bit of relevant trivia. Whatever form of media I'm talking about today, you're pretty much always going to be getting it from a web server in some form or another,
which makes the problem of distributing things much easier. Well, okay, you could be getting the media legally or otherwise from something like BitTorrent.
But for purposes of today's episode, we don't need to worry about that. I just mean that we're not talking about data that needs to be sent by some specialized media streaming server from real media that they still exist, right?
Or Microsoft or Adobe in its own special streaming media format. But rather, the same general-purpose web server software like Apache, EngineX, or Cherokee that's in common use these days, and readily available for anyone to distribute their files with, and that nobody needs special clients software to access.
There. Now I'm done with the boring technical stuff.
At this time, I'd like to take a moment to address something that I know some of you are thinking. Oh, don't try to deny it. I can smell the thought even now, festering in the air like stale flatulence lurking in an elevator.
You're thinking, but Epicanus, that's all very interesting, but so what? Consumers don't care about all that technical crap, and they don't care about the stupid freedom stuff, and they're not worried about boring patent law crud.
They just want to listen to their Justin Bieber MP3s and watch their videos of skateboarders suffering testicle injuries on YouTube, and the evil steves already permit media and proprietary formats by default.
What would you say to consumers to get them to opt for legally-free media instead?
It's a valid question, I suppose, and I have given it some consideration.
After thinking about it for a while, I think what I would say to consumers is...
To put it politely. Sure, it's true that this cleverly crafted and highly intellectual argument is far too nuanced to win over consumers.
Not that it matters, though. It's not as though they're going to help. Consumers are the fundamental problem. Their pathological contentment provides a constant drag on progress and makes things harder for the rest of us.
If you're not sure what I mean by this, try asking a web developer how they feel about Internet Explorer 6, or indeed any version of Internet Explorer, and having to deal with Microsoft's ongoing project to ensure that we never run out of things that are supported just fine by every browser except Internet Explorer.
Fortunately, we don't actually have any need to argue with consumers, and I'll tell you the good news about why in a moment.
But first, I want to clarify something important about today's episode. I'm not here to talk to them. I'm here to talk to you.
See, the fact that you're even listening to this, and especially if you're listening to this from Hacker Public Radio, suggests that you have, or at the very least, want, some aspect of the hacker nature in you.
I'll save a detailed discussion of what I think of when I say Hacker for another episode, but at least since hacking is a fundamentally intentional and interactive sort of thing, I think I can safely assume that you are not interested in being a mere consumer, but rather an active participant.
Today's episode is dedicated to you, and everyone else who is not content to sit passively, mouth a gap like baby birds, waiting for some mom-a-bird vendor to cough up some product for you to consume.
Is anyone else getting hungry?
Mmm, chicken macglobules. Never mind, moving on.
Freedom to participate is something that we need to actively protect. As the popular saying goes, freedom ain't free.
When I first started outlining this episode, and I actually expected I'd just be able to point out the threat of patent lawsuits is sufficient reason to avoid encumbered proprietary media.
Certainly, few of us are rich enough to survive what I like to call a law siege. We're a wealthy and powerful corporation, surrounds a smaller entity with lawyers until they're starved of money and have to surrender to a settlement, no matter how unjust.
After doing a bit of digging, though, I think that particular threat is somewhat exaggerated, though it is real. The true threat is actually more subtle and insidious.
Patent restrictions are an important driver of the threat, though, so let's talk about that for a moment.
Since I'm mainly concerned with audio here, for reasons that I promise I'll get to later, let's start with MP3 patents as an example.
Hypothetically, it is a requirement that somebody pay the overlord of the patents related to MP3 audio encoding for permission before you can legally turn your own audio recordings into MP3 files to post on the web.
On the other hand, it turns out the patent overlords here really don't care much about most of us.
For the wall of patents around MP3 files, as of when I checked, their website actually specified that if the quote entity, unquote, using MP3 makes less than $100,000 per year, then no license is needed.
Quote entity, unquote, meaning either you as a private person or your company if you're doing it professionally, I assume.
Now, I anal, that's how you pronounce the acronym for I am not a lawyer, right?
Anyway, I'm not qualified to give real legal advice or anything, but from my reading, they weren't saying $100,000 from selling MP3 stuff, but rather $100,000 from all sources.
So the fact that you may not be making much money specifically off of internet audio does not matter.
If you make a salary and investment income totaling $99,000, $999 and $99 cents, and you get even a penny worth of ad clicks on your MP3 website, you owe patent license fees.
Even then, though, I'm guessing many of us don't have yearly incomes that high.
So for most of us, we could probably stick MP3 files and audio tags all over our websites and not have to worry about it, assuming we weren't trespassing on someone's copyrights in the process.
Unless, of course, you have it set up so that the MP3 plays as part of some kind of interactive webpage, in which case maybe it's now a game and you owe them $2,500 anyway.
Gotcha! Now you know, one reason why so many game developers actually use Og Vorbus for their game audio.
And, of course, if you're just posting MP3 files yourself and you accidentally become financially successful enough to make more than $100,000 one year, they could, hypothetically, track you down and legally demand a lot of money.
The Mozilla project, on the other hand, certainly does bring in more than $100,000 annually, which means they cannot legally stuff an MP3 decoder into Firefox without coughing up a big pile of protection money.
And even if they did, this is important, pay attention.
The permission to do so does not transfer over to anyone else who wants to work on their own variant of Firefox's source code.
And since the freedom for others to work on the code is one of the explicit goals of the Mozilla Foundation, this is a problem.
Even more importantly, this license also would not cover anyone who wants to make MP3 files, meaning there's no real way for the Mozilla Foundation to pay off the patent fees to the point where everyone can participate.
That was the deal breaker, the end, game over.
Terms and conditions, blah, blah, blah, legal stuff, cheese and rice.
Since I'm now on that subject, let me mention the even bigger and more Byzantine wall of H.264 related video patents.
You may have heard that the entity in charge of selling permission to do anything with H.264 video, who called themselves the Motion Picture Experts Group Licensing Association, has promised not to charge for patent licenses, but this claim is wrong.
It turns out that there are really three sets of patent licenses being demanded here.
There's a license for the consumer end, which is to say a license to decode H.264 video so you can actually watch it.
It appears there is also an additional set of extra patents that you have to license to make H.264 video in the first place, which is to say an extra charge to actually participate.
And after that, there is a third set of licenses on the amazing innovation of sending already encoded H.264 video over the internet.
It's only that last set of licenses that have been supposedly been made royalty free.
So, the Motion Picture Experts Group Licensing Association magnanimously promises not to sue you for having a web server with H.264 files on it.
How incredibly generous of them.
If you actually want to create or view the video legally, though, you'd better be prepared to cough up some cash.
I did try to read the licensing overview documents from the Motion Picture Experts Group Licensing Association.
Dang, that takes a long time to say, can I just call them the MPIG License Ass for short?
Anyway, as I said before, I anal, and I'm still not sure I understand the license requirements completely.
The division of licenses into three separate categories seemed pretty clear to me, but it's not at all clear to me exactly when the fees would kick in for anyone who isn't a typical corporate entity, either selling software licenses or gadgets, or acting as a traditional money-making broadcaster or big-budget media publisher.
If I'm reading the document from the MPIG License Ass correctly, and there's no guarantee that I am,
once you go over 100,000 copies of an encoder or decoder, you suddenly start owing a pile of money, which is a problem Mozilla has with this, as well as MP3 Audio.
I'm assuming these fees are one reason Google was supposedly deprecating and claimed they intended to remove H.264 support from Chrome.
Either that, or they're just saying that disingenuously in hopes of negotiating a discount on H.264 licenses.
Similarly, although I've read that they won't sue for sending H.264 video over the web, the current license overview document from their website as of late July 2011, when I first started working on this episode, suggested that once you hit 100,000 viewers or downloads, you are suddenly on the hook for a pile of money again.
The exact amount, depending on whether or not they define what you are doing as, quote, free television, unquote.
It kind of looked like there might be a 2 cent per file transfer fee, or a $2,500 per year fee, or maybe both, unless you have less than 100,000 transfers or viewers, and it's a Tuesday during a full moon and the propeller on your bringing these spends counterclockwise rather than clockwise, or something.
It's not at all clear to me where the open source X264 encoder project that implements the standard would fall in all this mess either.
By the way, the open source AAC codec project would have to pay $1.2 million to be legally licensed, since their project seems to be a, quote, PC enabling software, unquote, according to the definition on the AAC licensing site when I looked.
Oh, and, are you European types who, who keep saying, well, we don't allow software patents in the EU, so neater, neater, neater, it's just you American pigdog stupid ads.
Google up European patent EP0618540, you may be in for a shock, or maybe not, maybe they just meant some kind of crazy metric zero, which is bigger than the imperial zero used in the United States.
Anyway, the point is that at least one widespread stupid software patent has been upheld in German courts.
The impression I get from the licensing information I've looked up so far does seem to imply that while the patent threats around digital media are real, they're probably somewhat exaggerated sometimes.
I don't think it's safe, legal, or even reasonable or ethical to just ignore the legal restrictions opposed by the intellectual toll booth operators, but being sued into oblivion doesn't look like the major risk for individual users.
Again, I anal, but it looks pretty clear to my untrained eye that these patent toll booth rent seeking business models really don't care too much about people like us.
Judging by the way this license terms are structured, it seems like they mainly just want to soak other rich corporations with the pockets, and it would probably cost them more to pay the lawyers to file the paperwork than what they could extract from the likes of us.
The true problem then isn't really the likelihood that the MPIG license asks will send lawyers to invade your house, rape your puppy, eat your baby, hey intellectual property lawyers have to eat too, you know?
And, incidentally, bankrupt you and leave you homeless.
No, as I see it, there are two real issues regarding dealing with the patent restrictions.
There's the ethical problem of just saying like, hey man, they're probably going to come after me, so I might as well break the law, which obviously I do not advocate.
And then there's the more serious issue.
Think about what I just described of the MP3 and H.264 licensing terms.
Think about how the terms seem to say, well, you don't have to pay as long as you don't make too much money, or as long as you don't actually reach too many people, or in the case of MP3 as long as you're not using it for anything interactive.
I perceive a pattern here.
Sure, we'll let you through our toll booth, come on in, get comfortable, you're just helping us entrench our stuff deeper into the market.
Don't worry, we won't hurt you.
As long as you aren't doing anything important, our enemies and who I originally thought it was.
It's not malicious tech executives, cackling and plotting ways to use their intellectual precious to crush those apathy nerds as-
Well, maybe Steve Valmer, but mostly not.
Instead, our enemy is made up of media industry figures represented by the likes of Andrew Keane, author of Cult of the Amateur, and who apparently quite literally believes that little people like us should not even be allowed to participate at all, lest we pollute their precious cultural fluids with amateur fluoride or something.
Lately, I've begun to think this, even more than simple monetary greed, is what drives apple corporations notoriously fickle control freakery, and the ancient recording industry's eagerness for expensive lawsuits against kids and grandmas, and other non-wealthy people they can't possibly be making a real profit from.
Once at stake here is not mere money, but the ability to include ourselves in the broader cultural conversation at all without having to be approved by a lofty cabal of elitist butt nuggets.
The license fees are merely a pull tax to keep out the riff raff.
As a bonus, they can claim to be all in favor of free expressions since they're not actually controlling what we can say, just who will be able to hear us.
If they don't like our message, they can exclude us from their markets, leaving us isolated in a closet-like free speech zone, where we can say whatever we want, as long as we're content to just hope someone will happen to metaphorically wander past our obscure corner outside the walls, closely enough to hear our muffled utterances.
That means our best legal, ethical, and practical recourse, as I see it, is to bypass the entire ridiculous participation prevention system and stick to using and promoting legally-free media.
All we need to do to succeed is to get the rest of the world to join us.
And don't assume bigger organizations are going to do the work or even help much here.
The best we can hope for from Microsoft and Apple is that they don't actively block the ability to use legally-free codecs, which Apple already does on their consumer eye gadgets, although not their laptops and iMacs yet.
And Microsoft is doing this partially with iE9, though they at least allow WebM for now.
Although I'm glad Google released the VP8 codec and helped develop the WebM media format, at the moment I'm convinced they don't have any real intention to promote it if they ever did.
Their focus seems to be entirely on video here, specifically on YouTube, and their half-hearted efforts to make it available there seem to have been stalled for a long time.
As apparently, they can't figure out how to insert ads into video without flash.
Despite the fact that I would have sworn you can watch YouTube on iPhones and iPads, which have no flash support.
Maybe I gadget users get to avoid ads?
Right now, my guess is that perhaps Google only bought on two for the patents.
And they're promised to drop H.264 support from Chrome in favor of WebM, which seems more likely to have been a cynical bargaining ploy to use when renegotiating their H.264 patent license fees
with the MPEG license-ass, rather than a genuine interest in not evilness.
I've gotten pretty cynical about Google, it seems.
As far as I know, you still can't even get WebM video off of YouTube without manually navigating to YouTube.com slash HTML5 and manually enabling it.
And then manually doing it again every friggin' week or two as whatever cookies that page sets expires.
And when you do, last time I checked, they still tried to discourage you from using it by having HTML5 videos auto play, whether you like it or not, assuming they even have an HTML5 version of the file up in the first place.
I realize that Google being in perpetual beta is a running joke, but shouldn't we be seeing some kind of progress by now at least?
Even Mozilla, Mozilla, who I was praising for their efforts towards open participation on the Web, has recently decided to capitulate on proprietary H.264, MP3 and AAC decoding support, in a way that avoids actually providing a license for it, meaning that even the Mozilla foundation is indirectly encouraging media that not everyone has a right to decode and, more importantly, fewer people have the right to legally generate.
As I prepare to record this, I've seen numerous posts online which make it sound as if they've given up entirely on video.
As the posts emphasize that, to paraphrase, gosh, they just have to do what Apple says, because they have to get onto mobile devices, which have hardware decoders for H.264.
And if they don't do that, they might lose more market share, and then there will be nobody left to help at all.
Now, I appreciate them for getting us this far with support for AUG and WebM audio and video, so this wouldn't annoy me quite as much if it weren't for the fact that I'm not seeing anything suggesting any kind of campaign or project to effectively and actively promote weaning the web back off of the do whatever Apple commands formats, and back to formats that we can all legally participate with, at least as far as video.
Mozilla's strong backing for Opus gives me some hope for this on the audio only side from them, but I'm not sure I'd bet on this just yet given their apparent video-obsessed focus.
Maybe we're all doomed.
DOOMED! No wait! Get that cyanide pill out of your mouth. It's not that bad. I know it seems bad. I mean, sure, everybody knows it only a handful of free-tarded ideological zealots use this stuff, right?
And it's not like nobody's tried. I mean, the free software foundation did that play-og thing, which was a big flop. Don't deny it. I was, and technically still am, on the long dead mailing list for that, although the list no longer seems to work.
And from what I remember, all they seemed to care about was whether YouTube would support AUG theory video, and when Google said no, they just sort of gave up and left it to rot.
For example, they were still listing this week in tech as an Aug-Vorbus netcast, three years after Leo Laport left the Aug-Feed to die with a snide little message about how only like three people were using it.
And anyway, it was just ever so much work and extra time to put out the extra audio format, despite the fact that it's apparently really no difficulty at all to put out two or three extra seeded guy with a microphone video files for the same show.
Now, the FSF has a PlayFreedom.org page that's supposed to have something to do with WebM, but at least as of late 2012, for the last year and a half or so, it still consists of nothing but a one-line form where you can sign up for the email list, so they can tell you when they get around to decide to do something eventually, maybe.
Hey, FSF, anybody home? Hello? Somebody here order a large media freedom pizza with open sauce and extra cheese? Yeah, this kind of bugs me.
To be fair, I actually did get a reply from Matt Lee, campaigns manager at the Free Software Foundation, and it sounded like they were actively working on this now, and that PlayFreedom.org should actually have something on it real soon now, probably, perhaps.
It might even be helpful as long as it's not just a rehashing of the Morabund Play-Ogg pages. At this stage, I'll believe it when I see it, though.
For the record, I'm firmly in favor of the Free Software Foundation's goals and the importance of copy-left style licensing, and the vital role they've played in making GNU slash Linux the awesome spiffitude that it is today.
But I don't think standing on street corners and costumes, shouting at anybody with an iPod or copy of Microsoft Windows, is going to help increase the use of legally-free media much.
So, no effective promotion of legally-free media from Google, not as much as one would like from Mozilla, and not even much of any from the FSF.
Without effective promotion, how the heck are we supposed to get support for legally-free media out to Joe Sixpack and Jane Twilight movies so they aren't dependent on the proprietary formats, especially when it seems like major corporations either don't care enough or are simply unable to help much? Can it even be done?
Well, here's some good news for you. Remember when I said I didn't need to argue with consumers? I don't, and neither do you.
It's already done. Despite what aristocratic media professionals and the wannabes who ape them seem to think, a solid majority of the public on the web with modern browsers today is already capable of handling legally-free audio and video.
According to the figures from the Global Stats stat counter, currently more than half of all browser users are either on Firefox or Chrome, both of which support legally-free audio and legally-free video,
and both of which are available on all major operating systems. That means more than half of all users on the web will be able to listen to Opus, OgVorbus, or WebM audio and video if you put it on a web page.
Internet Explorer, as usual, has to be special, but even it will apparently allow WebM if one installs the Microsoft Media Framework component.
If you include that, nearly every web browser can handle playback of legally-free audio and video.
Of course, this leaves one overrated holdout. Apple Safari, with its whopping 7% or so of desktop browser traffic, which Apple isn't really focused on, and seems likely to move away from in the near future.
And Safari for iOS. Uh-oh. iPads all over the news, that must be a big deal. Except it's not.
Safari for iPad barely registers on the Global Stats stat counter list, with a whopping, amazing, 2.7% of web browsers.
Whoopie.
Pretty much all of the remainder is people stubbornly stuck on Internet Explorer version 8 or lower, and there's probably no helping them, short of asking them to type GetFirefox.com into their browser.
Hey, they don't call it Microsoft Firefox Downloader for nothing.
In the meantime, for now at least, I believe the ZIF QuickTime components still enable OgViles to play for the few percent of people using Safari on their computers.
It's worth mentioning, by the way, that the media component downloads I'm talking about aren't just browser plugins.
They actually enable the formats for everything on the operating system that uses QuickTime or Windows Media.
That means, once you install them, you can actually create files in those legally-free formats and not just consume them.
And the capabilities extend beyond the browser to everything on the system that uses QuickTime or Windows Media for its operations.
As people start finally upgrading from Internet Explorer 6 and other obsolete browsers, the situation seems like it can only get better.
If there's enough legally-free media out there to listen to or watch, more of them will opt for Firefox Chrome or Opera when they grow out of old Internet Explorer versions.
In short, virtually every modern web browser that is actually being used today either supports high-quality legally-free web media out of the box or with an easily installed free download.
And that will still be true after Apple further isolates themselves by disabling user-supplied QuickTime components.
So, although I get pretty agitated about the occasionally limp support Google Incorporated and the Mozilla Foundation have sometimes expressed lately, they do both deserve some real credit and thanks for making this much possible.
It's even been reported that Microsoft Skype will be supporting WebM for video conferencing.
If Skype is going to be adding WebM support or at least VP8 video and Opus Audio, even after Microsoft bought them, I'd consider that a good sign.
Skype is also a major player in the development and promotion of Opus after all.
On the consumer gadget side, I don't have as many hard numbers, but I will point out that by far the most popular and still fastest-growing platform for smartphones, Google's Linux-based Android system, always has had native support for Aug Bourbus Audio built right in, and since the Gingerbread release, which, as of late 2012, is the most common one,
they also support WebM audio and video files.
Currently, the proportion of Android in the smartphone market appears to have easily topped 50% and is still climbing.
Let me rephrase that. It is being reported now that as of mid-2012, a majority of smartphone users are on the Android platform, which means a majority of smartphone users can handle legally-free audio and video automatically.
To put it another way, practically all new smartphone devices that people actually buy nowadays from anyone besides Apple Corporation now support legally-free audio and video as of mid-2012, despite the impression that celebrity-obsessed media may give by having an ecstatic fit every time Apple announces a new color for the iPhone,
I have no idea what the actual market shares are for dedicated portable media-player platforms that aren't also phones, but I do know that outside of iPods and the handful of abandoned zoons still out there,
a surprisingly large range of even the cheaper so-called MP3 players, like the Sansa Clip, for example, actually include Aug Bourbus Audio support as well, even though some of them strangely don't even advertise it.
If you have a random, quote, MP3 player, unquote, that you've picked up in the last few years, it might be worth a few minutes of your time to throw an Aug Bourbus file on it and see what it does with it.
The delightfully diverse market of new Android-based tablets and media players just starting to flood out onto the market now can also be counted on to support Aug Bourbus and WebMedia.
For some of the MP3 players that really are just MP3 players, there's also the possibility of upgrading some of them with the Rockbox firmware to get Aug Bourbus and Opus support.
It's too early to say whether Firefox OS will get very far in the mobile market, but if they manage to have some success, I could see that as another platform for dedicated media players in addition to phones, and which would also support Bourbus, Theora, WebM, and Opus right from the start.
So really, although there's still room to grow, the problem of people being able to handle legally-free media is mostly solved.
The real problem, as I see it, is just a need for more of what the pros vaguely referred to as content.
That is, in order to help make sure that we'll be able to maintain free and open channels over which we can still reach a meaningfully large audience,
we need to make more audio and video available in legally-free formats to keep them from losing momentum and fading out.
This brings me to the last bit of theses that I need to grunt out here, and it's all based on a couple of simple observations.
It's a heck of a lot easier to produce audio than video, and it's a heck of a lot easier to find time to listen to audio than to watch video.
The first one ought to be pretty obvious. Someone making video usually doesn't want to just put out a silent movie,
so they need to deal with everything that audio producers deal with, plus the complexities of editing and encoding video as well.
This is definitely not to suggest that I would discourage anyone who wants to, from producing WebM or Opus,
but if I'm going to sit here and encourage as much media participation as possible, I may as well recognize that audio media is a substantially lower hurdle for a participant to get over.
For someone on the receiving end of media from the internet, audio content is also less demanding of attention than video,
and can therefore be listened to without being too distracting.
I can easily listen to audio while safely operating a motor vehicle, cooking over a hot stove or open flame,
walking around a crowded shopping mall without falling into a fountain, and so forth.
Trying to do those things while my attention is being commanded by video would likely result in vehicular manslaughter charges,
a dish of hand flambé, or an embarrassing and time-consuming lawsuit against small security people for making fun of me in the surveillance video of my accidental swim.
In short, there are more opportunities for someone to listen to audio than there are for someone to watch video, making it a bigger potential audience.
That's why I think the obsession with video is a problem.
I often get the feeling that there's an implicit assumption that all media on the internet is supposed to be video,
except perhaps for big budget corporate musical productions on iTunes.
For example, there's an interesting side project supported by Mozilla called Popcorn.js,
which one of these days I might make an episode out of.
It's a JavaScript framework for coordinating things happening in a web page with the playing of HTML5 media.
However, their website makes it seem like it's only for video.
One page describes it as, quote, jQuery for video, unquote.
Another says, quote, makes video act like the web, unquote.
Yet another says it's for, quote, integrating the web into video production, unquote.
This is more than a year after I confirmed with the developers that it is suitable for audio as well,
but there's a stubborn implicit insistence that nobody cares about anything but internet TV.
I think this assumption may discourage people from participation,
because they may feel they're not up to producing video,
and aren't musical enough to compete with professional music,
and therefore must not have anything to contribute.
Of course, you know that's not true since this episode itself,
along with the rest of hacker public radio,
and other non-musical internet radio type shows are obvious examples,
but I suspect there are a lot of people out there who don't realize it.
And with this, I think I've finally come to the last important part of today's episode.
I didn't come here today just to complain, I actually have some suggestions.
See, fundamentally, what needs to happen is that we need to homestead the wild web,
and we need to do it quickly before the digital cattle barons take it all over,
and fence it off with barbed wire, toll booths, and armed guards,
and leave the rest of us shoved into barren and isolated virtual reservations apart from the rest of the internet.
Up to this point, it seemed to me that this has been approached all wrong by well-intentioned advocates,
with the focus apparently being on petitioning big corporate media to do it for us.
It doesn't work.
It's like instead of loading up a wagon and heading west,
we're all going down to Wall Street and begging the banks to buy prairie land and build roads and houses to sell to us there.
It's like saying that everyone would benefit by taking a walk in the woods,
but we're not going to go there until somebody builds a Starbucks in it for us first.
I'm arguing here that the proper approach is from the other direction.
We make the trails, and make the destination attractive, and others will follow and help us build it further.
Fortunately, the basic process is as simple as shampooing your hair.
Blather, make legally free media files, post them online, rinse, repeat.
Here are some things I think we all ought to be doing.
Now these are obviously just my opinion and therefore entirely optional,
but I must warn you that when my genius and divine ride is finally recognized
and I am inevitably declared supreme emperor of the internet,
or at least hired as a campaigns manager by the Free Software Foundation or something,
these will all likely become mandates, so you may want to take notes
if you don't want to be sent to the digital salt mines during the purges.
What I would like to see is all of us putting legally free media all over the web.
Online media doesn't need to be a major production.
For example, for years many people have had a habit of posting images or links to images
and comment threads and blog posts and so on.
Posting audio or video using HTML5 tags should be no more difficult.
I say go for it.
Stick that spastic cat video up as an actual web M video instead of a crappy animated gif.
Post a car crash sound effect as Opus, Aug Bourbus or Web M audio in audio tags
instead of a stupid picture of a car crash with fail captioned on it.
Whatever, not everything on the web has to be a major work of art.
When putting audio up on the web, ideally I think we should be using Opus and Bourbus.
Eventually it'll just be Opus, but given how widespread Bourbus support is
and the fact that it'll probably be a year or two before a new portable media player
start coming with Opus support built in, there'll be a need for legacy Bourbus support for a while,
much as there has been in some places for MP3.
I know, I know, despite the fact that a large proportion, maybe even a majority,
of your listeners are able to now handle at least Bourbus just fine,
whether they know or not.
Some of you still won't be able to bear losing the fraction who cling to their eye gadgets.
Yes, I recognize that this is sometimes a legitimate concern right now.
In that case, my personal suggestion would be to go ahead and offer MP3
as long as you're not making more than $100,000 a year
and not using the audio for anything that could be called a game,
or you're prepared to cough up license fees.
But if you do, I would suggest making clear that MP3 is offered as a legacy format
for devices that don't yet support Bourbus or Opus,
to help break people out of the rut where they believe that quarter-century old audio technology
will be the, quote, standard, unquote, for all eternity.
Also, when you do this, I would suggest encoding at the same file size as your Bourbus or Opus files,
where the difference in quality may be more noticeable,
unless you're spending your bandwidth on high-bit rate audio.
On that subject, my personal recommendation is to aim for 56 kilobyte encoding in all formats
for low-quality speech recordings, such as telephone conferences.
Aim for about 64 kilobyte for high-quality speech recordings,
or speech with only a little music or other non-speech sounds.
80 kilobyte for most mixed speech and music or other sounds and streaming audio from the internet,
96 kilobyte for most general-purpose audio, including high-quality streaming and audio for downloading and listening to offline,
and 112 kilobyte should be quite good enough for just about everything else.
128 kilobyte out of surprise for commercial-quality music for everyone,
except the people who insist that monster cables make the zeros-rounder
and the ones sharper in their digital music,
and they're probably going to insist that only a huge losses format like Flack is good enough anyway.
Yes, I know MP3 can sometimes still sound substandard, even at 128K,
but isn't that what I've been saying?
My 20-year-old computer can't seem to handle desktop effects in KDE 4.9 as well as my new one does either.
It's time to upgrade.
For reference, based on listening test results and my own experience,
the general guidelines seems to be that for most bitrates that you're likely to use for internet-distributed audio,
Vorbus at a particular bitrate will sound as good as an MP3 that is one or two steps less compressed.
So, for example, a 64-kilobit Vorbus recording should reliably sound as good as an 80-kilobit MP3.
112-kilobit Vorbus stream should sound at least as good as 128-kilobit MP3.
I haven't yet done much personal testing of Opus,
but so far it appears that Opus should be worth two steps up from MP3 at the same rate,
and if so, a 56-kilobit Opus file should sound as good as an 80-kilobit MP3.
A 96-kilobit Opus file should be as good as the common 128-kilobit MP3 files that are out there.
The difference in size can be substantial and a huge improvement in being able to download quickly and carry more audio with you offline.
I would also suggest asking for AUG or WebM or Opus audio from online audio sources,
but do it politely, casually, and personally.
More or less, the opposite of a noisy internet petition, which I think tends to outright turn potential supporters off.
Getting a petition and a bunch of similar formletters make it look more like more of an astroturf campaign by rabble browsers rather than a genuine desire of actual people.
I think the various human beings at media organizations would be more influenced by hearing from a moderate number of random individuals,
expressing an interest in Opus or Vorbus audio apparently spontaneously, then by getting bombarded with an obvious campaign for a week.
The same thing goes for various media software projects.
I'd love to see Media Goblin move to Opus support by default, for example,
and Native Opus support for Audacity would be handy.
So long as the developers aren't too antagonized by constant pestering, I suspect most relevant projects would be receptive to the requests.
Try AUG Vorbus on your portable devices.
This early in the development, I suspect there aren't any media players that support Opus yet outside of very recent Rockbox versions,
but having Vorbus capable media players to use for downloading audio from the internet can be handy,
and other people who happen to own the same device would benefit from knowing AUG Vorbus is supported on it.
You can also try HTML5 browser software for yourself.
I've set up a page specifically for trying out HTML5 audio, where you can test your browser's support for various audio formats.
As I record this, I currently have Opus, WebM Audio, AUG Vorbus, Wave, MP3, and Flax samples for your convenience at,
http slash slash, hpr.dogphilosophy.net slash test.
If you're not sure what a particular browser supports, here's where you can find out for yourself.
Most importantly though, produce Vorbus and Opus audio, and get it out there on the web where people can get to it,
and help others do the same.
I intend to help with both of those needs, which brings me to the last part of the topic for today.
In addition to producing more audio, definitely more often than once a year from now on, I'd like to build something.
Whenever a big name podcaster or digital radio show producer is asked about providing a show in AUG Vorbus or other legally free format,
it seems like you always get one or both of two excuses.
Number one, gosh, the only people who could even use it are a handful of obsessed borderline autistic nerds,
which hopefully by now you know darn well is no longer true and hasn't been for years.
And number two, you get, oh but it's so hard, legally free media is strange and different and it's so much work we can't possibly handle it.
Not too long ago, I made an offhand comment about the fact that the This Week in Tech network has a weekly show specifically about free Libre open source software,
which is not available in any free Libre open source media format.
And as the usual chorus began, the host of the show in question, Randall Schwartz himself descended from on high in the famous tech media personality heavens,
and he looked upon my comment and spake unto all present the wisdom and knowledge gained from countless years of relevant experience in the form of two sentences, repeating those same two excuses.
He complained of not having quote resources, unquote, to handle an extra format beyond the two extra video files that they're already generating alongside the MP3,
and he complained that almost half a decade ago, before HTML5 and before Android and before augurba support in portable media players stopped being a novelty,
that only like 1% of the people were using the aug feed when they had one, so obviously it'd be too much effort.
I tried to find out what he meant by resources, but it was too late. He'd already disappeared in a puff of incomprehensible pearl code, leaving me to speculate.
I'm assuming resources doesn't refer to bandwidth, since if anything, an augurba speed ought to be able to save bandwidth by providing an equivalent quality file at a smaller size.
Maybe he meant CPU resources, but I wouldn't think a few minutes of CPU time is a serious burden, especially compared to the computer resources involved in manufacturing two separate video feeds for people that want to spend an hour seeing Randall Schwartz's admittedly awesome looking microphone.
The best I can figure is he's gotten corporatized and he meant human resources. And he's referring to either the fact that whoever pushes the button on the encoder and copies the resulting files to a server would have to spend a few extra minutes copying one more file,
or I'm guessing more likely, he would mean that nobody at the network is really familiar with anything but whatever proprietary Apple software they're using to generate their media is.
And therefore, since Apple hates Warbus, they just assume it would take too long to figure out how to work around it for some strange alien format, or that they'd have to pay to acquire a new human resource that has the necessary knowledge and skills, and they don't want to do that, nor put out a call for volunteers from the outside world to handle it for them instead.
While I was speculating someone else explained that, to paraphrase, if only I'd try producing some audio myself for something like hacker public radio I would understand the terrible burden.
Thing is, while I'm certainly no Randall Schwartz, I actually had by that point already produced 5 or 6 audio show episodes in multiple formats, one set of which was actually 4HPR, so I'm still baffled.
It is true that it took me some effort, especially the first couple of shows, and that I would estimate that it has been taking me up to 20 or 30 minutes extra to finish preparing the extra files, and I can certainly understand how that would be a lot of effort to add on a weekly basis.
However, the only reason it's been taking me that long is that I've been intentionally doing most of the process by hand.
I'm a learn by doing sort of person, so in order to try to better understand what's really involved in producing audio online, I've ended up spending a lot of time taking wave file output from audacity and running it through command line encoders, trying different settings, and then pulling up tag editors to manually insert show notes and album art and other metadata into each file, and then copying each file to where I want them on my server and handcoding the HTML to present the files on the web page.
One important lesson I've learned is, there's no friggin' reason at all that I can find that this couldn't all be automated down to a simple, low-the-original push-the-button sort of process.
In the interest of replacing some of the complaining with productivity, I'd like to try to make that happen, and I'm saying it right here, so that if anyone likes the idea, they'll keep harassing me about it until I get it done instead of letting me get distracted and procrastinating for another year.
What I have in mind is a web-based interface, wherein you would upload your original audio and optionally a picture of recover art, and it would check to see what kind of files they are and whether it can read them, and assuming it can, you get a single form into which you put metadata like the audio title, the album name, the comments, the show notes, and so forth.
You select what files you wanted to generate, and then you push the button.
The server would then spawn whatever encoder processes are needed to convert the files, and in the end, you'd get a simple page with download links, where you can grab the finished audio files.
Initially, I'd want to support OPPOS, and then VORBOS, and once those two are working, I'd probably add MP3.
Sample HTML5 audio tag output that you can cut and paste into another web page, HTML5-based preview capability for the generated files, automated uploading of the output to another server, video support, and various other features could be added as things go on.
I've actually done something like this once before, for a professor that wanted to wait for grad students to generate standardized HTML5 compatible files to post to his lab's experimental wiki-based electronic lab notebook system.
I don't recall it being too difficult to build, so what I have in mind here seems quite reasonable, and since even if nobody else would use such a thing, I would, so it's very likely I'll get it done eventually.
If you would like to see this happen, or if you would like to hear more audio from me, be patient, and it will happen.
If you want either of these sooner, pay me. Oh, not money. Well, if you really want to, I'm sure I can find some way to make it possible, but as a self-proclaimed social media street walker, what I really want to be paid is attention.
I encourage anyone who is interested to harass me about working on things whenever you see me online or even in person.
You can reach me through comments on this episode at hackerpublicradio.org, on my own website at hpr.bogphilosophy.net, and occasionally on free-node IRC lurking in the August planet and lately opus channels.
I may try to follow up this episode with a somewhat more technical tutorial on generating and posting audio to the web if anyone's interested.
Let me know, and until next time, don't just sit there dynamic, record something.
You have been listening to hackerpublicradio or hackerpublicradio.org. We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by a hpr. listener by yourself. If you ever consider recording a podcast, then visit our website to find out how easy it really is.
HHPR is funded by the binary revolution at binref.com, all binref projects are crowd-responsive by linear pages.
From shared hosting to custom private clouds, go to lunarpages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under creative comments, attribution, share a line, read our own license.
I am a free-tard, but I haven't recompiled my kernel from source in two weeks.
Hey, 3.6 is out. Oh crap.
