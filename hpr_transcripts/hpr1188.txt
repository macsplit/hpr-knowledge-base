Episode: 1188
Title: HPR1188: Rmail in Emacs
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1188/hpr1188.mp3
Transcribed: 2025-10-17 21:18:31

---

Hi everybody, this is Ken here with an update on the Sourna project. There's only 11 hours
to go as I record this. There have been 235 funders so far. That's a massive increase
on yesterday and they have contributed $8,633 of the $20,000. So that's a 43% goal. Bear
in mind that regardless of what happens tomorrow, all that money will be going to the Sourna
project. So this is quite important. Remember, last little push now folks, if you haven't
donated, this is your chance to donate. Yes, it is. Even if it's only a small amount or
a big amount, it's absolutely fine. But you can also definitely now help spread the
word by passing this on to celebrities or popular people with large amount of followers
and followers on Twitter, or on Facebook, or any of the other social networks that may
be available to you. We accept cash from all donations, from all angles. In other news,
Tlatu just uploaded a show yesterday, which is kind of good because I need to edit it anyway,
to edit in this clip. And his last show was released on 2012-1127 and looking here at the
Q and the last show, the host with the latest show is 2012-1219 and that was Charles N.J. So
therefore, based on the new scheduling rules of the person who has not posted the show
the longest, we'll get on to the top of the queue and that will be Tlatu today.
Steer to the queue as it stands, there are 15 shows in the queue. Hooray! Unfortunately,
those are only from four hosts. So we will be alternating shows between Ahuka and 5150
over the coming period of time if people don't submit shows in the meantime. With the
new queueing system, it is highly likely that your show will get bumped up to the top of
the queue if you have not released the show since 2012-19 and then the other one is 2012-27
and January 10th and January 22nd. So those are the short last show release dates for
the good folks who have contributed a show. In other news, Haka Public Radio Community
News is going to be on in 9 days, 22 hours, 6 minutes and 9 seconds at the time of recording
this. I'm going to post the show and have a cup of Roy Busty. Feel free to join me.
You're listening to Haka Public Radio Community News.
You're listening to Haka Public Radio. Hi everyone, this is Klatu and in this episode
I'm going to be talking about our mail, that is a letter R-M-A-I-L-R mail, which is an
application that you can use within GNU EMAX to check your mail and to reply to it and
delete it and all the other things that you would normally do with email. So I spoke about
GNU EMAX a couple of episodes or quite a few episodes to go now and I spoke about it for
a couple of episodes, specifically three. It was a three-part series. I think I might have
snuck in something about Doc Book and Public in which spoke a lot about GNU EMAX. I don't think
it was specifically an EMAX episode though, but I spoke about it back then and I probably mentioned,
I imagine I don't know, I haven't really listened to those shows in a while, but I imagine I
mentioned that I have been using EMAX a lot myself lately and that really hasn't slowed down.
There are some days where I really do just kind of live in EMAX. So an application that handles
email from within that operating environment is quite nice. It's very handy to have available,
so you don't have to background EMAX and go out to mud or something like that. You can just stay
within EMAX, you can check your incoming mail, you can write a quick message and send it off,
little things like that. It's a small matter of convenience and it's kind of nice, so I thought
I would cover it here because it's a neat application actually. So our mail, I think you might have
access to it without EMAX as well, but I'm speaking very specifically about it from within EMAX
because that's how I've been using it. The nice thing about our mail and mud and probably
pine, although I have to admit I haven't used pine in this workflow that I'm about to tell you about,
so I'm not sure, but certainly mud and our mail, they're just in UAVs, their mail user agents,
they are not MDAs or MTAs, whatever the other ones are called, I think that might be it, but they're
not mail transport agents, they're not mail delivery agents, they are simply the mail user agents,
meaning that you can have one inbox file and you can use our mail and mud on it without any kind
of conflict because they're not handling any kind of backend stuff like delivery and filtering
and sorting and stuff like that. That's a powerful thing for flexibility because what it means is
I can be SSH into a server and not in EMAX at all and check my mail in mud or if I'm SSH into
that server and I'm living in EMAX that day, doing a lot of EMAX stuff like writing or coding or
whatever, then I can again quickly check my email without ever having to kind of leave the environment
that I have sort of up and running at that time. I could also send a quick message, delete some
messages that I don't need anymore, all kinds of things with our mail, all from within EMAX. So it's
it's a matter of flexibility for me and it's also a matter of interest for me because I'm kind of
interested in eSpeak which is the voice enabled, the screen reader enabled EMAX hack that some
blind user out there maintains and it's kind of nice because it creates an all-text environment
for blind users and it reads everything off of their screen for them and it all kind of works
through EMAX. So having an email application that you don't have to fire up from within eShell
or something ridiculous like that is kind of nice. It's just all very integrated with the whole
eSpeak, eList, EMAX kind of environment. So lots of different reasons to be interested in this
for me and for you again it could be a matter of convenience if you are a new EMAX user. So before
I get into the specifics of our mail which at the end of the day it's just a mail user agent if
you've used one text-based user agent you've used them all sort of not really but anyway you get
the idea, I mean it's a text-based mail user agent. It's a mail client that doesn't have a GUI,
it just has you interact with it as you would with much or IRSSI for instance. You know lots of
keyboard, centric shortcuts and things like that but the real trick I guess is understanding the
back end of your e-mail system enough to set this thing up correctly. So here's how we could talk
about that. I've covered this before in I think a GNU World Order episode which is my other show
that I do at GNUWorldOrder.info. You should go subscribe I guess if you want but I'm going to talk
about it a little bit again here because I feel like well number one I probably understand it
better by now anyway and number two you might not go hunt down that episode. So here's how internet
e-mail electronic e-mail rather works or electronic mail you know that what e-mail stands for. I'm
assuming it does. So here's how it works. Well actually I'm bluffing I really don't know how it
works but here's how I think it works. So there's a server on a computer like a server application
and it's called send mail or you might be using something else but it would be something whose job
it is to well send out some e-mail and so the way it does that is the way that everything else on
the internet works you know I mean it looks for a domain it looks up the DNS entry for that and
it figures out where to take this this message this text message it does that and it ends up
somehow to your e-mail server whatever kind of e-mail server you have let's let's imagine right
now that you're running your own because essentially if you're going to be doing a lot of terminal
e-mail stuff on your computer you almost kind of have to think of yourself as an e-mail server or
at least it helps me to think of myself as an e-mail server because that just it makes the back end
make a lot more sense. So it ends up at your server your e-mail server it knocks on whatever port
you have available for e-mail for incoming e-mail and once all the authentication stuff happens
do you like how I just skip over that so there's authentication magic and then it delivers the email
into the hands of something called a mail delivery agent so the thing that has been traveling
towards your server up until this point has been the mail transport agent that's called the MTA
and again that would be something like send mail or I think you mail things like that probably
what is it dovcott I don't really know I've only used send mail myself so there they are they
they're there that their job is to transport the email from one box to another box now once it's
at the box it it it it authenticates it gets in and then it drops off the email into the hands
of the mail delivery agent in d a delta in m d a the m d a would be a program like proc mail that's
the really really sort of popular one that's almost almost ubiquitous I mean it's it's it's a big one
proc mail and it is proc mail's job to receive e-mail and then kind of look at it and see where it's
supposed to be placed on the system so for instance if you have one email address that is
receiving e-mail and then it proc mail could could parse all the different messages and find out
oh this one is to clad to this one is to gourd this one is to I don't know somebody else
and and then it can distribute those to other other mailboxes so that's what proc mail does
and you've probably heard of proc mail recipes and all the different rule sets that it has
so it's a pretty complex and robust application and it comes with a couple of utilities I know I
use four mail a lot so it's it's useful big it can get complex so that's proc mail and again the job
of it is to sort the mail essentially it it it it it has received the mail and now it sprinkles
it through the system to all the different eagerly awaiting e-mail box accounts that are on that
server and after that's done the only thing left to do is for the user to look at the e-mail to
read it to read and respond and all that other good stuff and those are of course the mail user
agents the two that I guess I am most familiar with in the terminal are mut and our mail although I
used to use pine a lot and did a hack-up of radio episode on it so if you're at all interested in
pine then then do check that out so that's the setup right you've got mta getting the email from
one server to another you have the mda distributing the email within your your email server and then
you've got mua is looking at the email reading replying deleting sorting stuff like that the good
news is that most Linux distributions at least in my experience so far already have the mta
most commonly send mail could be something else but seeing a lot of send mail already configured
you don't have to go in and and build that that's just something that that send mail kind of does
and even if it's not already installed you can install it and it it's ready out of the box it
knows how to send mail from your computer to some other place that's one third of this equation
that that really you don't have to worry about so that's the good news the other news it's not
bad news but the thing to keep in mind is that send mail as its name implies is a sending mechanism
it sends email out from one server to another very few of us unless you really are running your own
email server very few of us leave our computers with the email port open ready to receive anything
that that knocks so on your own computer if you're going to use our mail or mutt for that matter
or anything else you need some mechanism to kind of probe whatever middleman you use for your
email so whether that is your ISP the email that they offer you or some some server that you
that you have a vps slice on and they've configured an email server for you like the way some of
the big web hosts do or whether it's a service like Gmail or I don't know probably Yahoo or whatever
other email services are out there whatever that that thing is for you whatever wherever your address
lives that's your that's your actual email server right so we want to go to that email server kind
of knock on its door and authenticate and and see if there has been any email delivered to it
meant for us and then we'll pull that down to our our local computer so again that's
that's two different ideas there's there's one of a of an actual email server which of course
its job is to receive email from another server so it's it's got that email port open listening
ready to receive email your laptop or your home desktop it doesn't have that it's
hopefully behind a firewall and and you probably don't really want to deal with running your own
email server these days at least that's what everyone tells me haven't actually tried it myself
but it seems to be a pretty popular model that you use some other email server where there are people
paid to sort of filter out all the obligatory spam and all that of the good stuff and then you go
and fetch your mail from that server and in fact that's exactly what you use to get your email
from that server it's an application called fetch mail fetch mail is again a pretty simple
little application to set up it's it's not really that scary it's it's a little bit um
it it has its own syntax and it's an interesting syntax so for for fetch mail to work you you
simply create a dot fetch mail RC file in your home directory and then you give it sort of a
a little almost human readable kind of line you'll you'll hear it so it's it's poll P O L L
space the domain that you want to get your email from so maybe it's um
GNU world order dot info or actually it would probably be more likely it would be
mail dot GNU world order dot info space with proto that's with and then space proto pr ot
as a t o as in protocol space pop three in this case we're doing it with pop three colon user
quote clatu at GNU world order dot info in quote there has password quote fubar close quote
is clatu here and once mda quote slash user slash bin slash prock mail close quote okay so what
on earth did I just say so that that's the line that's the configuration line and and as you can
as you can hear it it is it sounds very human so you just kind of have to keep in mind the syntax
so it's just pull the domain name with proto pop three in this case colon user and then whatever
user name is on that server right so it's it's user fubar there has password fubar is clatu
here so you're you're telling it what user it's almost like an SSH command it's you're telling
log into this domain as this user even though I am such and such here now that might be the same
on both servers I tend to use clatu on most of the servers that I joined but sometimes clatu is
not available so I use not clatu and that becomes a little bit weird for me because then I do
have different user names on different servers so in my case I might have user space quote not
clatu at GNU world order dot info close quote or if you're if the mail server that you're using
does not require or does not want the at domain name extension on the user name it might just be
not clatu or it might be clatu so you have to define the user that you're logging in to your
mail server as so user quote not clatu close quote there as an over there has password quote fubar
close quote is clatu here and once mda user been prock mail so there we're just defining the
password of the remote server we're saying hey all that corresponds to who you know as clatu
here on this server and pass everything that you get all the mail that you fetch pass that on to
the mda of in this case quote slash usr slash bin slash prock mail close quote and that does the exact
function of going out to a server knocking on its port and authenticating with the password which
yes is plain text here so you want to make sure and I think fetch mail won't even let you do it if
it's not but you want to make sure that this file in your home directory is only readable by you no
other group no other person should be able to read this this configuration file is it weird to
have yours password and plain text in your own directory absolutely it's nuts I have no idea why
there's not encryption on this it's really really bizarre it's also the only way I really know how
to do this so fetch mail go out knock on the server authenticate copy over the email the new email
there to your local computer destined for the user clatu and sending piping all of that email
to some india some some program that will be able to then distribute all that email
throughout the rest of your system okay so if we're using prock mail if you have prock mail on
the system that you're configuring the the configuration isn't it doesn't have to be terribly
difficult again it's a very very complex application potentially I mean it can be as complex as you
want it to be but the the most basic kind of configuration is really only needs to be four lines
and and it needs to be stored in your home directory in a file called dot prock mail rc and the
four lines in mine for instance are path equals slash usr slash bin mail der equals dollar sign
home slash mail so that's the directory that I want to store all of my mail in default equals
dollar sign mail der that's the folder I just defined slash inbox so that's the default location
where all those emails are going to get dumped into that's just a file inbox and then log file
equals dollar sign mail der slash logs because I I guess we ought to have a log file so that's
that's all that prock mail really needs to be it doesn't have to be fancier than that if you're
the only user on your system getting email I have an account on a server where prock mail is not
available to me it's it's not in it's it's it's somewhere in I think it is in usr slash bin
but it's it's not something that I'm allowed to create recipes for I have no access to prock mail
so there's another little application that you might want to check out if prock mail either
is not available to you on your on whatever server you are doing this uh this stuff on
or if prock mail just happens to be too maybe complex or something there's this handy little
mail delivery module called t-mail that's t as in tom mail m-a-i-l t-mail delivers mail to
users inbox or a designated folder possibly um I say possibly because it really depends on how
the server is set up and what kind of privileges you have but uh t-mail is a nice little alternative
lightweight or I call it lightweight I don't actually know it's like footprint but I do know that
in terms of the simplicity of of setting it up it it it is kind of it's it's even easier than
prock mail not the prock mail is necessarily difficult but but it is there's zero configuration
practically so for instance on this particular server I might have a poll can you mail
doctor new world order dot info with proto pop pop three colon user not class who there has past
word fubar is clatu here and once mda quote slash usr slash slash pkg slash ben slash t-mail
space clatu plus r-mail closed quote all that's doing is saying okay fetch mail once you've
gotten all the email from whatever remote server I'm asking you to get mail from I want you to
pass it on to the mda of t-mail and I give the exact path just in case and then I give it the user
and the folder that I want it to deposit my mail into so in this case it's clatu and then the
plus sign and then the word r-mail all in capital letters and the reason I chose that is because
that's where r-mail wants to look automatically for local email is r-mail so that's my fetch mail
and t-mail configuration on one of my other servers and that works really well so either way you
want to set up proc you you want to set up fetch mail to go get your mail use your proper user name
proper domain name obviously and the proper password for that remote server and then bring it in
as your you for your username and dump it into some file probably in your home directory
there are other ways to do it you could put it in some kind of system level directory but
I don't think that makes much sense if you're if you're being this manual about the process you
may as well make it all go to your home directory because that way it will travel with you it'll be
portable and and you won't lose your configurations if you if you I don't know redo your system or
something like that so t-mail or proc mail for your mda there's not again there's not a whole lot
in in most cases there's not a whole lot that you need to do for either of those two programs
you'd you'd really only need to delve deeper into proc mail or t-mail for that matter
but really I think you'd want to go with proc mail for this but you'd you'd want to delve deeper into
that if you do have a lot of different accounts that you're checking and you need them to be
deposited into separate files or someone else's home folder stuff like that and that's
way outside of the realm of this tutorial so at this point we've got all of our email fetched
we've dealt with the delivery step proc mail or t-mail has placed it into some file and now
there's a mail user agent out there just waiting to open up that file and parse it and and show it
to you in a friendly kind of manner I mean understand and and maybe you ought to do this if you
if you're this far along you may as well just do a less or a cat on on your inbox you know do it run
fetch mail and you might want to do fetch mail space dash k so that keeps the email if you don't
do the dash k it will erase the email and then if it doesn't know where if you've configured something
wrong it won't know where to drop it off at like it won't if it can't find email it'll just it'll
still delete it off your remote server so fetch mail space dash k is a really good sort of safeguard
against deleting email that you might want to read someday without you know before you get everything
configured after you got it all configured you can discard the dash k and you can have you can
let fetch mail delete things as much as it wants to but at this point you've got a a file and you
again you can you can do a less on it you can actually see what it contains and it'll be ugly but
I mean in theory it's not in theory it is it is all of your email concatenated into one big file
and of course most user agents from what I understand kind of they look at the the front lines
and kind of separate the messages based on that and then of course they they can see most of
the header text from you this is why you don't see the the headings like x dash iran port dash
anti dash spam dash result received from this server and received message id date from you know all
of these different things that the header usually contains when you do like if you get spam and
you're curious and you go look at the headers that's what you do finally see but in general like
in real life when you're looking through your email you just see the from in the two maybe the cc
or the bc well not bcc well maybe the bcc if you're the bbcc person and then and then you see the
message so it makes it a lot friendlier and obviously it it makes it into it makes it look like
separate messages so that you don't have to go through and just literally delete chunks out of
like this one file which in theory you could do all of these things but I don't know why you would
know you'd much rather open emax and then launch our mail so you open up emax and you can do a meta
x or alt x or escape x whatever gets you into the mini buffer to issue some command meta x is what
I usually use and then type in our mail that is again the letter r m a i l all lowercase that launches
the interface for our mail there's some r mail stuff that you can actually do without launching
that interface but let's let's do it this way first so within our mail immediately looks for
a file called our mail all capitals located in your home directory if that does not exist
then it will look to your mail school the default mail school on your system which is the same
location that when you just type in mail or mail x on the terminal that's what that's looking at
your mail school this may or may not be something that you actually want to look at in our mail
I know that my mail school on a lot of my systems are things like emails from cron jobs and stuff
like that they're not things that I actually think of for myself as email our mail can be directed
to some other location if you hit meta x our mail dash input I think it is let me test it but
pre sure that's where it is inputs yeah our mail dash input and then hit return then it'll ask you
okay well what what file do I want do you want me to look at this is very similar to mud
and and this is why I like them both because they don't really care what they're looking at they
don't they're they're not like for instance thunderbird or or cameail nothing against either
those two applications I use those on separate systems as well but they don't they don't create
like a little folder and and have all your messages kind of organized in that folder and in order
to get it to a different email application you have to figure out how to export it out of out of
that client and then import it into the next client not like that it's it's it's a big file with a
bunch of emails concatenated together into it and then you launch your user agent and it looks
at the file it parses it and it gives it back to you and a user friendly format I really like that
I mean I don't know how I feel about these huge files with all these messages concatenated into
it I I guess in a perfect world somehow I could have a directory with a bunch of files each
representing one message and they'd all somehow magically have a really nice user friendly name
associated with them rather than random letters and numbers but whatever the point is that that
there's a there's a high level of modularity here so you can point our mail at any file that
contains a bunch of emails concatenated together it will parse it again I think it's based on the
from line I could be wrong about that I could be mixing that up a little bit but but it it
parses it for you it makes it look friendly it if you're in emacs which you are but if you're
in a terminal that that supports antsy colors then you get all different kinds of colors and shades
and things like that so that it sort of stands out you know the subject line is blue or the the
heading is is blue the text is green highlighted the the normal text is white the commented you know
the previous messages in the thread are red it it it looks good it's easy to read it makes it very
kind of user friendly in the very traditional sense of yes this is actually useful for the user
so that's our mail looking at your email you can go to the next message with uh alt in or
alt p for previous or I guess you call it meta I'm calling it alt right now alt p for previous alt
in for next that works you can jump to the first message with the I think it's the the less
than sign and the last one with the greater than sign and you can hit keys like r for reply or d
for delete or x for x-punge lots of very quickly accessible and pretty memorable keyboard shortcuts
and again this is all within emax so if you do hit r it brings up a new buffer with the two and the
from and the cc and stuff like that already filled out based on the contents of the of the message
that you just read that you're applying to it gives you a blank line or it gives you a commented
line telling you where to start typing your message you type some some things and then you hit
control c control c to send it and it sends the message so the question is how does it send that
message well the answer of course is through send mail probably that's if if that's what's on
your system and it frequently is um and and that's kind of the nice part that's the nice one of the
nice things about this it just uses your standard send mail settings for this computer now that's
nice if you're on a box that has all that stuff configured correctly that might not work so well
if you are not on a box that has all that configured correctly so again i i did say earlier that
you usually don't have to configure send mail and and that's true strictly speaking but
the the problem may arise that your is p probably doesn't want to see email coming straight
off of your box right they they don't like it when we send email straight from our computers
sometimes they they certainly not to some random server they want to you you you probably have
to go through an smtp server in order to get your email out into the world otherwise it'll probably
be blocked because it's going to look like spam to a lot of a lot of email servers and that's just
kind of a side effect of the spammy world we live in so the workaround for that that i found when
i was doing when i was configuring mutt for the first time was called is called m smtp so m smtp
is a mail transport agent very much like send mail but instead of actually sending it to a destination
it sends it to as you could guess an smtp server again the the configuration for m smtp is not
terribly difficult it it can be interesting if you're if you're i mean depending on
how your server is configured the one that you're sending email to so for me i'd like to use SSL
when i can so i my m smtprc file in my home folder consists of defaults tls space on
tls underscore trust underscore file space home clatu mail thought premium server ca.pem log file
space till the slash dot m smtp dot log and that's just to get SSL working this can be found online your
the the the thought premium server certificates you can find that online at thought actually they
they they make all of their certificates available for download so if you download them and put
them in some place in your system your system may also already have them but if not you can
download them i downloaded it and stashed it in my mail directory and then point the tls trust
file to that then then i mean if your server recognizes that then then that will be the the ssl
certification that you need to get that sort of working okay so that was just for ssl then the
rest of the stuff is a fairly traditional looking um configuration files it's account space i
don't know new world order that's just a human readable that's the name of this account from clatu
at new world order dot info so that's what you're setting your from line to post smtp dot
new world order dot info for instance it might not be that for you well it actually definitely
won't be that for you but you know it may be smtp out dot secure server dot net for instance i
i have a an account with go daddy that uses that i think or i did at one point um smtp or sometimes
it's i don't know it can be anything you have to look you have to look on your your your host
settings and see what their smtp server is that they want you to send stuff to port space
five eight seven maybe or nine nine five or whatever the ports are these days that people are using
for tls or ssl uh what's the other one four six five or something i don't know user space
again this is the the user account that that smtp server knows you as so in my case it might be
not clatu at new world order dot info or it might just be not clatu or it might just be clatu
it really depends on again what that server is configured to to accept as your username makes sense
right and it's funny because they're all a little bit different where they they can be different
so you you kind of need to know what those settings are do they want you to give your full account name
do they just want your username how is it set up authentication type i have it off space plane
and then the password through bar and then the account default that i the default
thing that i want smtp to always use is the new world order account because it's actually the only
account i have on here so um so you i mean just look at what your server accepts as the
different authentication methods and and it will tell you how to kind of configure your s your
ms mtp rc file create one of those put it in your home folder dot ms mtp rc and again make sure
that no one can read it but yourself because it does have your password in there in plain text
really strange and then when you the first time you send an email from rmail you will be asked
how do you want me to send this and you'll have three different options one will be to use your
default transport agent that would use send mail which again depending on your setup may or
may not be correct you might want it to use send mail if it can it will and it will go very smoothly
because your server already has send mail already configured and it's going to work if you have
no such if you if you if you don't have something set in place like for smtp and stuff like that on
that server then that's not going to work for you if it's not an email server it's probably not
going to work for you it might for a while but in my experience it gets flagged as spam eventually so
go through your your smtp server that'll be I think the I'm working off of memory at this point
because it's not in front of me so I think it's a second option is that you can
use some other program and in this case in that case you would want to define for our mail yes
use slash usr slash pkg slash bin slash smtp or whatever the path of smtp is and that way it will
or m smtp and that way it'll look for that program and it'll run that instead of send mail so m smtp
becomes your transport agent off of that box to an smtp server and then send mail or whatever they
use qmail whatever kicks in and and make sure that email gets from their box from their email
server to some other email server and then there's a third option and I don't remember what it is it
might be something like post-pone and just deal with it later I'm not I don't remember but that's
the easy way to set your your mail transport agent in our mail just make sure that you have
or or at some point make sure that you have m smtp rc configured or existing and configured
correctly so that you can use your isp's in the smtp server or your web host whatever you're using
okay that's sort of it for this stuff actually um not quite though so a couple of other things
that you're probably going to encounter are the desire to just send an email maybe you don't
want to go into our mail maybe you don't need to see your inbox all you want to do is send an email
well happily that's really really simple from within emax you can just hit control x and then the
letter m as in mail and it will create an empty email message for you in in a new buffer you can
send it to someone you can put a subject in there in a front line and some text and then again
just control c control c and it sends that message to whoever you've defined as the recipient
so that's really handy as well again there's just really fewer and fewer reasons to ever leave
emax the more you start using the features that it has to offer and there are many but even more
than just the convenience of having everything in emax like writing and checking email if that's
a concern for you even more than that for for people who maybe wouldn't use our mail as much
getting used to the whole system of of send mail or m smtq and proc mail or t-mail and these kinds
of these unix tools that make email work getting used to that really does help when you start wanting
to to flex your your email capabilities a little bit maybe make it a little bit more modular or
maybe use a server that you have some access to but not all the access that you would normally want
you can still use some of these tools because a lot of these are very kind of user centric things
that don't really affect the the server itself or that you know it doesn't it doesn't muck around
with the the server's email settings but it still can take advantage of the ability to go out
and check mail with fetch with fetch mail bring it into your home directory and then distribute it
and parse it so it can be handy for for a lot of different reasons and it just so happens that
our mail in new emax can be part of that workflow if you want it to be so hopefully this has helped
you understand email and our mail and some of the options that are available to you on on really
any Linux or unix system thank you very much for listening
you have been listening to Hacker Public Radio at Hacker Public Radio.org we are a community
podcast network that releases shows every weekday Monday through Friday today's show like all our
shows was contributed by a HPR listener like yourself if you ever considered recording a podcast
then visit our website to find out how easy it really is Hacker Public Radio was founded by the
digital dot-pound and the infonomicum computer cloud HPR is funded by the binary revolution
at binref.com all binref projects are crowd sponsored by linear pages from shared hosting to
custom private clouds go to lunar pages.com for all your hosting needs unless otherwise stasis
today's show is released under a creative commons attribution share a line lead us our license
