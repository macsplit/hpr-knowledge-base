Episode: 739
Title: HPR0739: The Knightcast KC0053 : Wirelessly syncing content to your Ipad and Ipod.
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0739/hpr0739.mp3
Transcribed: 2025-10-08 01:48:01

---

No!
On the edge of a real and cyberspace, there's one place you can go.
On the edge of a real and cyberspace, there's one place you can go, and you found it.
Welcome to the nightcast.
The one and only podcast, the TuneStack, and your way of life, and let's that technology
work for you.
My name's Nywise, and for the coming 60 minutes I'll be your host on KC-0053, yeah I think
it's 53, wireless syncing to your iPad.
For more information and the show notes, please head on over to www.nightwise.com, that's
K-N-I-G-H-T-W-I-S-E.com, where you'll find the links to everything that we talk about
and to place the plop down your feedback in the comments section.
You can get in touch with us via email, feedback at nightwise.com, or you can follow us on Twitter,
twitter.com slash nightwise, and you can also ask your questions via Twitter, just use
the hashtag hash deer nightwise.
Our questions will then automatically be posted on our Facebook page, which can be found
on Facebook by just looking for nightwise.com, and we'll answer them there, and you can
also interact with other nightwise.com fans.
If you have not been subscribing to this content, it's the first time that you listen to it,
you can subscribe to the content by clicking on the nightwise.com media feed.
That feed is in the top right corner on the nightwise.com website, subscribe to it and
your favorite pod catcher and get all of the nightwise.com content delivered to your
favorite pod catcher automatically.
Hey, guys and girls, done with the routine of introing the show and telling you where
to get in touch and how to subscribe.
It's a weekly or almost weekly ceremony, if we can call it like that, or a routine, but
it has to be done because we love our new, our existing nightwise.com listeners.
We love our new fans because we have new people joining the show every day, and it's nice
to point out where it can go and what they can do.
And remember, if you're listening to the show and you want to tell your friends why not
tweet about it and give them the link, and that way we can have more nightwise.com fans
and have our family ever growing, which is fun.
Oh, hey, hey, it's Friday, quarter past 11.
I am on my way from Eindhoven to Brussels using the mobile recording studio once again.
And today I just want to give you guys some tips and some pointers on technology that
I have been working on recently.
Today's show is going to be about the fact that I have purchased an iPad 2, yes, shocking
drum roll, and how I use technology in a very unconventional way to get content to that
iPad 2 while coloring outside Apple's lines.
So it would be interesting to tell you guys about that.
It's going to be a little bit of an ad-lib episode.
I don't have any show notes in front of me.
I am driving.
So why not join me in my Friday festivity, lean back, enjoy, and let us tell you about
the iPad 2 and how you can get content on iOS devices without having to use a friggin
little cable.
Well, as we say, let's get into the meat of the matter.
Welcome to the digital revolution.
OK, now as most of you know, I have owned an iPad for almost a year now.
It's been a year since I went to Germany and picked up my iPad 1.
And because I was so such a hungry geek that had to have his toy right away, I chose
a 64 gigabyte 3G iPad 1, which I've had for almost a year now.
In the beginning, I was kind of, you know, a little bit buzzed about the device.
And I thought like, well, this is kind of an expensive device to be buzzed about because
I bought the most expensive one, although I didn't really need that.
And I thought, you know, when the buzz wears off and the hype wears off, am I still going
to use this or am I still going to see this as a kind of handicapped version of my laptop?
Well, it turns out a year after that, I noted to Neanna, I said like, you know, this case
that I have, this nice iPad case is starting to wear, show it's wear a little bit after,
you know, a year of use.
And she said like, well, that's more than normal because basically you've been carrying
that thing around everywhere.
And to be honest, when I really started thinking about it, it's true.
I am amazed at the fact that I've used that tablet device so much in the last year because
I thought, you know, I would only use it to sit on a couch and surf a little, but it
turns out that I've been using it for much, much, much more.
One of the things that I use it for is, of course, surfing, twittering and web-based stuff
like that, but also consuming content, watching videos, reading books, I've actually finished
my second book on my iPad one a little while ago, not on the Sony PRS, but actually on
the iPad, but that has something to do with winter and reading inside and needing the
active lighting of the iPad display.
But you know, all in all, I have done quite a bit on it and I am really surprised reading
of recently installed some apps that allow me to take notes, I have my to-do list on
there, and more and more, I am starting to use the iPad as a replacement for whipping out
the laptop when I'm on the couch or running them around the house, and I'm also using it
to consume a lot of content and also create a lot of content.
So when the iPad 2 came out, I said, well, yeah, the iPad 2 is out and it's not really
that exciting and it isn't really that exciting because if you think of it, there isn't that
much out there that really, you know, changed with the iPad 2, it was a little faster,
so it was a little thinner and it had a camera.
So all in all, it wasn't really worth the purchase.
So why did I get one?
Well, first rule of being a geek that lives on the pinnacle of new hardware being an
early adopter is that you never should hold on to your hardware too long because if you
do, you'll have a very hard time selling it.
So I knew that, you know, if I wanted to get an iPad, if I wanted to sell my iPad 1 for
a reasonable price, I would have to do so now and not wait until the iPad 3 came out because
then it wouldn't be worth anything.
So I looked around on the pricing and everything that was on the market, you know, how much
did iPads cost and stuff like that.
And I settled for a reasonable price for my iPad 3G and my 64GB 3G and that reasonable
price was only slightly more than the price of the 32GB Wi-Fi only iPad 2 that I wanted
to have.
Now, I know what you guys are going to say, not wise, why the downgrade?
Well, downgrade, it's not really a downgrade.
First of all, I took a good look at how I had been using the iPad in the last year.
And to be very honest, I think I used a 3G stuff about five times.
It was very convenient when I could, but I used it about five times.
For the rest, it was all Wi-Fi or hotspotting my Android phone and stuff like that.
So I thought, well, 3G, I don't really need that.
And I looked at the volume of content that was on my iPad and it wasn't half full at
all.
So I thought, well, that 64GB, you don't really need that either, now do you?
Just, you know, not what you need, but what you use, you don't really use that.
You don't really use 3G and you don't really use the 64GB.
So I walked to the store and I took a look at the 32GB Wi-Fi only and took a look at the
price.
Then I said, how much money do I want to spend on the upgrade, deducted that, and that
was the selling price of my iPad 1.
I have managed to sell it quite quickly.
The new owner is very happy with his purchase.
It's somebody I work with and she was ecstatic when she got it.
So that's nice.
And I have an iPad too.
So I'm briefly going to run through what I think of it hardware-wise.
Now, if you're an only adopter and you want the latest stuff, yes, go for it.
I mean, sell your iPad 1 now before the 3 comes out and get yourself a 2.
If you haven't known an iPad before and you want one now, well, get one.
If you haven't owned an iPad 2 and you want an iPad sometimes, wait.
Perhaps the Android tablets that come out or wait for the iPad 3, you never know.
But all in all, I thought like, yeah, right, it's just a newer model.
So it's just an upgrade.
So I have a more recent model if I want to sell it again, it gives me a better price,
stuff like that.
But after a few days, I did notice some differences.
A, it's lighter.
Not much, but it is lighter.
But when you're carrying it around all day long, it helps if it's a little lighter.
So that's nice.
Two, it's thinner.
Do you really notice that?
No, absolutely not.
But if afterwards you get your hands on an iPad 1, the iPad 1 feels a little clunky.
But you know, for those 3 millimeters, it's thinner, but that's about it.
It is faster.
And that is something I do notice, especially when I'm reading PDFs and stuff like that.
So it is faster.
That's a good thing.
There's a camera.
Well, there's a camera.
It's not very exciting.
But on the other hand, it is convenient.
I've managed to use my camera in a situation where the combination of having the camera and
being able to write or touch your screen to manipulate that those images is very, very
handy to come by.
So it's kind of nice.
I use my iPad quite a bit for note-taking, because basically I have discarded pen and paper
for my life.
I am no longer taking pen and paper with me to work.
I no longer have a little list with to-do items.
I just have my iPad.
My iPad is my digital sidearm.
It carries around my to-do list.
I have all my notes on there.
I take all my notes on there.
And privately, I sketch out the show notes on it.
And professionally at my work, I use it as my, you know, my notepad.
And I really like that.
And the addition of having a camera to import visual information into the iPad as well
is quite nifty.
So all in all, I'm pretty impressed with the upgrade.
I didn't think that the small changes that the iPad, too, was offering would be worth
it.
I went for the 32 gigabyte Wi-Fi only model, and I must say I haven't even noticed that
I don't have 3G.
I hotspot my Android phone whenever I need to really get online.
And well, otherwise, I just use the Wi-Fi that's around.
And it's pretty nice.
So I like using it.
I am impressed with the device, and I'm pretty happy I did the upgrade, especially
because it didn't cost me a lot.
If I were to have to buy a complete new one, I wouldn't spend the money on it.
But you know, if I could just sell my old one and chuck in a little bit of cash and get
a new one, well, that's fine by me.
But of course, what is even more important than the iPad and the device is what are you
going to do with it?
And one of the things that I've been using my device for quite a bit was watching movies
and stuff like that.
Now you know my epic story when it comes to listening podcasts.
I'll give you a little bit of a sketch.
I'm on the road quite a bit.
And in order to stay in the car, I listen to a lot of podcasts.
I think I listen about to 30 or 40 or something in a week.
And I always like my podcast to be fresh in the sense that I want my podcasts to be the
latest episodes, and I don't want to look at a playlist that said like, yeah, listen
to that, listen to that, listen to that, I've got nothing to listen to.
So I want to be able to have fresh content every day.
Now if you are looking at this by the book, you should wake up in the morning, launch your
PC or your Mac, launch iTunes, download all the podcasts and iTunes, hook up your iPad
or your iPod via a little cable, sync over the podcasts, and go to work.
I go to work at 630 in the morning, presumably preferably 615, that makes the traffic jam
a lot shorter.
So having to get up 10 or 15 minutes earlier, especially to do this manual task was something
that annoyed me to no end.
Second of all, I absolutely detest the fact that I have to use a freaking cable.
I know I've rant about this many, many times, but I still get pissed about it when I talk
about it.
And advice that has 3G and Wi-Fi and is a very advanced and still needs to be synced
with a little stupid freaking cable.
Come on.
Thirdly, I hate iTunes.
I absolutely hate iTunes.
iTunes has swallowed all my music.
It's in there.
I'll never be able to get it out.
And I really hate that.
And I would hate to have to use iTunes as well for my podcasts and for books.
And you know, for just getting stuff on your iPod slash iPad, I don't like it.
And I'm somebody who likes to, I'm not somebody who likes to automate, who likes to do those
things manually.
I hate that as well.
You know, this is my computer.
This is something that automates my day.
This should be technology that works for me.
Turns out I work for technology.
I get up 10 minutes earlier to download podcasts, sync them over and be out the door.
It's cool.
So I have come up with a series of hacks and workarounds that allow me to get content
on my iPad without having to use a cable and in a fairly automatic way.
This is a process I'm going through.
Because quite frankly, I've been working on this a little while ago, some of you who
might have caught the latest Doku cast episode might have caught the script that I wrote
to download podcasts and put them on my Android phone.
That's one.
And I've kind of worked along the lines of that script and worked on, worked on top of
that development to come to the project or to the phase where I am today in wirelessly
or and automatically getting fresh content to my iPad in order for me to be able to consume
it wherever I want and whenever I want.
So that's what we're going to talk to today.
What we're going to talk about today.
I'm going to show you my hacks and stuff.
As I said, it's mid-phase because by the time that this podcast is out or within a few
weeks, I'll probably will have found out more things and I'll be able to share some more
tips with you.
But at the point where I am today, it's already pretty cool to be able to do all these
kinds of things beyond the specific guidelines that Apple put out there and the stupid freaking
white cable.
So that's what we're going to talk today.
I'm going to talk to you about, in essence, about how I automatically download podcasts,
how I automatically select the latest podcasts and which tricks you can use to get podcasts
and other content to your devices without having to use iTunes, without having to use
a freaking cable and without having to get up 10 minutes earlier in the morning in order
to make everything work.
So sit back and relax as I give you a fairly geek-intensive, high-geek level look at
how I do stuff.
But perhaps you'll be able to pick some tricks and some tips out of there and we'll be talking
about all kinds of applications and those might be very interesting for you guys and you
can find new ways to have technology work for you instead of the other way around.
Now, one of the things I do a lot is spend time in the car.
I spend quite a bit of time in the car.
I am in the car right now and looking by the side of the traffic jam ahead of me, I'm
going to be quite some time.
Good thing that we are together here and we can talk to each other.
Well, I can talk to you and you can listen depending on where you are.
Perhaps you're in the car as well.
Perhaps you're also stuck in traffic in that case, not alone.
But whatever.
I spend quite a bit of time in the car and one of the things that has kept me sane in
the car over the last few years is without a shadow, without listening to podcasts.
I absolutely love listening to user-generated content about topics that I find interesting
and lately I've been listening to a lot of music and stuff that is out there and kind
of completely veered away from mainstream audio.
Media, actually, because I think radio is daytime radio is punishment to me.
This requires me to have a lot of content to listen to and fresh content to listen to.
I mean, refreshing my podcast subscriptions in the beginning of the week and just doing
that once a week is not enough for me, so because by the time I am through about Wednesday
or Thursday, I've completely depleted my list and I go insane in the car.
So one of the things that I really want is fresh content.
What I also think is pretty important to me, at least, is the fact that all of this happens
automatically.
I leave pretty early in the morning and having to wake up early to download fresh podcasts
and sync them over to my device with a stupid cable and only then be able to leave is something
that I really, really don't like.
It's annoying, it's tedious and it's against my principle of having technology work for
me.
I think I should not work for technology, technology works for me.
And I hate iTunes, I absolutely detest iTunes.
iTunes is a big, sluggish, fat mama that just sits on my Mac and hordes and hogs all
of the content that I have on there.
iTunes is already eaten all of my music and now when I just, you know, have it, have it,
have it's merry little way, it will want to eat all of my movies as well and it will want
to eat all of my books and apps and stuff like that and all of it for me to be able to use
my iPad or my iPod.
And I don't want that to be quite honest.
I really don't because, you know, when you have like five songs, three apps and two podcasts,
that's great.
That's just fine.
If you have 15,000 songs, just getting the genius results to Apple is something that takes
a lot of time.
If you're on the clock and you need to leave for work every five seconds is very, very
long.
So I don't want that.
So I kind of thought, you know what?
I want to have a few requirements regarding my pod catching adventures.
Now for those of you who have listened to Casey zero zero fifty two story time, we talked
about the scripts that I made and for those of you who caught the last dokey cast, you
will actually be able to look at the script that I designed.
And my requirements, what I wanted is kind of at the basis of all of that and what I'm
going to talk to you today is kind of an extension of all of that or kind of in the middle.
So before you start on any project, you should give yourself some requirements, say like
this is what I want.
So what I wanted was automatic, what I first wanted was remote subscription management.
I wanted to be able to manage the podcast that I subscribe to from any computer.
Very important because when you're somewhere and you learn about a great podcast and you're
not behind your Mac and you're not behind iTunes and you can't find it in the iTunes store,
you're yes, that's what was your fracked, that's what was what I was going to say.
So that's one of the requirements to I wanted my podcasts to be downloaded automatically.
Not get up 10 minutes earlier to press the button to download podcast, even though iTunes
is set for automatic download every hour, it's still be able to do that manually, having
to be able to do that manually, having to be kind of required to do that manually, not
going to happen three podcasts should be available everywhere.
Yes, you can share your iTunes music directory to other computers in the house running iTunes.
Good.
No, that doesn't work if your computer is not running iTunes, not good.
And by the way, you can only share your music, you cannot share your podcasts, not good,
it's not something that we want.
So I kind of got annoyed with that, I thought like, okay, this is one of the requirements
that I think is important.
I don't want to be in a situation where I need to do that, oops.
I think I just, no, I thought I just missed an exit, but I didn't.
So I wanted to be able to access those podcasts on any device from anywhere over the network
without having to really put tedious work into that.
I also wanted my podcasts to be available on any device, not just on the Apple devices,
I wanted them to be available everywhere so I could get to them from any computer that
I was using.
That was something that was important to me as well.
And I didn't want to use a freaking cable.
I wanted to be able to update my podcasts from anywhere.
And finally, I didn't want to use the web.
No, I wanted to be able to, I mean, an individual download client on every device that I was
using and using the internet all over, using the cloud all over again, every time I wanted
to update podcasts on a certain device, that was not the plan either.
I wanted to download my podcast once and use my local network and some nice nifty tricks
to meet the requirements that I just listed.
So my quest began.
First of all, the first requirement was that I wanted to be able to have my podcast downloaded
overnight when I was sleeping, not in the morning.
I wanted to be something that could be done on a machine that would be running overnight
in my house, which is quite frankly my Ubuntu server, so that's a good deal.
That's a good thing.
My Ubuntu server is absolutely great at running overnight.
It does all kinds of things.
And I thought like, well, you're running overnight.
You're going to be the podcasting or the podcasting computer of choice with Ubuntu Linux.
Next I wanted to have a pod catcher that would enable me to do a remote subscription management.
G-POTA turned out to be quite great.
G-POTA is a graphical pod catcher that you can install.
It gives you the ability to subscribe and download podcasts using the application or using
a web-based service.
So just sign up for G-POTA, link your G-POTA installation, your client to that cloud service.
Log into the cloud service and you can see which podcast you subscribe to, which episode
you downloaded, you can add subscriptions and remove subscriptions via the website and
then push that updated list to your local client.
So that way I could really manage podcasts from anywhere.
I liked it.
Then I wanted to be able to automatically download my podcasts.
So presumably, preferably five o'clock in the morning.
Now G-POTA does have the ability to download podcasts every so and so seconds.
So I thought like, yeah, every 600 seconds or, you know, I just want you to do it in
the morning once, once a day in the morning, I'm not home for the rest of the day.
Just once will do fine.
So I thought I will take 24 hours, divide that by 60 minutes or multiply that by 60 minutes
and multiply that by 60 seconds and that's the amount of seconds that I need to enter
into the interval rate.
And then I thought if this is a 24 hour cycle and I wanted to do it at four o'clock at
night, I have to enter the 24 hour value four o'clock at night.
So that was not really good.
But there's a good thing.
G-POTA has command line commands, which allow you to do that.
So using GPO update and GPO download, which are two command line commands that you can
script and scripts, you can schedule, I was able to tell G-POTA to update the subscriptions
and download them every 24 hours.
So those were the requirements, cloud-based subscription management.
That was checked.
Availability to run the application overnight was a monolinic system that was checked.
And of course, scheduling and running scheduled download and updates of podcasts once
a day checked.
Onto the next requirement, I wanted to be able to have the podcasts accessible throughout
my network.
That was easy.
I told G-POTA to download all the podcasts in a certain folder and shared that folder
via Samba.
So just by browsing network shares, I could click my way through the folder where G-POTA
folder would be downloading all of the files in automatically.
And I could just share that out via Samba and play the podcast via the media player of
the computer that was using, every computer in my house has Samba, so that's good.
And for the boxy boxes that were out there, that was also great.
I just pointed the boxy boxes toward that shared folder and I said dear boxy box, here's
some audio and some video content.
So using boxy, I could also play back the content that was in there.
I also wanted the application to automatically delete content, which was also an important
thing.
I mean, I didn't want it to store up endless amounts of podcasts and fill up my hard drive.
I wanted to say to the application, you know, every so and so days, delete the old podcasts
in my case, 14 days.
So after 14 days, it did exactly as it was supposed to do, it would erase G-POTA as a setting
in the settings menu that says, podcasts were older than 14 days, you will erase them
automatically.
That also worked fine, that worked great, that was fantastic, really, really good.
So it was all kind of coming together.
Now when I took a look at the podcasting directory, I kind of saw one thing that I didn't
like, that there were of some episodes, there were several episodes, of some podcasts,
there were several episodes that were older than, that were not older than two weeks.
So if I set the auto-delete function to two weeks, I would have several episodes of a
certain podcast.
But that wasn't a problem either, because I thought if I can write a script that automatically
selects them and gives me the latest episode of every podcast I subscribe to, well, that
would be just darn awesome.
So those were the requirements that I had set out to use.
And those were the things I had planned for my little script to use, and I started looking
around.
Now if you guys have listened to KC0052 or you've read the script, you know that I've had
a lot of help from the Linux community, from the Ubuntu forums and the Ubuntu UK channel,
and putting this script together.
Basically without going into two technical terms, what the script does is it takes a look
at the directory of my podcasts and the subdirectory of every individual podcast and takes
the file that was added to the last and copies it over to another directory.
So what it basically does is it does a listing of all of the files and all of the subfolder
and takes the newest file in each subfolder and copies it over to a new directory, basically
taking the last episode that was downloaded.
Now I did this by using some variables, and I'm not going to get into the technical details,
but what I did tell the script was erase the destination directory, so it's empty.
Take the last episode of every podcast and copy it over.
So that was great.
Now I still need it, the only thing I still need to do is choose a destination directory,
so where I want that to go, and I thought, you know what, I'll be smart.
I'll hook up my Android phone, which has an 8GB SD card, and make sure it's mounted
as a removable drive into the same directory every time.
And that worked great.
So every time at night, I would plug in my Android phone, it would mount the SD card,
and the script would take the last episode and copy it over to the SD card.
So every morning, when I took my phone, ejected the charger, and I pulled out the charging
cable, I would have my fresh content on my SD card, which was great, and that worked for
me very, very well.
Very cool stuff, actually, if you think about it, so I really liked playing around with
that.
That was cool.
Now it's still a friggin cable.
I know it's still a friggin cable.
Now I said, you know, I'll let that one slide, because I have to plug in the phone anyway
for it to charge.
I might as well plug in the charging cable to a USB slot on my server and mount the SD
card and copy over the files like that.
So in essence, that worked.
The script had the GPU update and the GPU download commands in there.
So when it ran in the morning, I had added the script to my cron job to run at 5 o'clock
in the morning.
It would check for new episodes, download the episodes, and copy the latest episode
of every podcast to my Android phone.
And that worked just fine.
But then I thought, well, that's nice.
I mean, I've got this Android phone, and it has all of my latest podcasts, and that works
great, and that is nice.
But actually, I also have this really nice iPod, and I have this really nice iPad, with
lots of contents on it, with lots of content on it, and I wish I could use that as well.
How am I going to get those things on there without using stuff like iTunes?
Well, how I did that is something that we'll talk about in the next chapter.
So straight, good monkey, not feeling, so straight, good monkey, like Fritos, good monkey,
like Tab and Mountain, good monkey, very simple man, before a fuzzy, secret mark, good monkey,
like you, good monkey, like you, good monkey, like you, good monkey, like you, good monkey,
like you, good monkey, like you, good monkey, like you, good monkey, like you, good monkey,
like you, good monkey, like you, good monkey, like you, good monkey, like you, good monkey,
like you, good monkey, like you, good monkey, like you, good monkey, like you, good monkey,
this job will fill in and create a way, such a load of crap, good monkey thing,
someday he'll have everything, even a pretty girl like you, good monkey, just waiting for now, good monkey,
say someday, somehow good monkey, like Fritos, good monkey, like Tab and Mountain, good monkey,
very simple man, before a fuzzy, secret mark, good monkey, like you, good monkey, like you, good monkey,
like you, good monkey, it's a real life.
Now, in the previous part, I talked about how I managed to find and install a podcaster
or podcatching client that did what I wanted it to do and that I had somehow cobbled a
script together that would have selected all of my recent podcast episodes and put them
on my phone. Now, cool, nice. But the iPad and the iPod were the big challenge. Android
devices are open. I mean, you can just, you know, do just about anything with them if
you really want to. They have their storage devices accessible as mass storage devices.
You can just drag and drop files on there. You can do all kinds of fancy copy script
like the ones that I just talked about. That's great. But with the iPad and the iPad, not
so much. Now, there are solutions out there for getting podcasts on your iPod and on your
iPad. One of the applications that comes to mind on the iPad is, for example, the iTunes
client on the iPad, which allows you to browse the iTunes store and download individual
podcasts or stream them. That is a functionality that is available. Second of all, you have,
of course, the applications that are allowed by Apple to duplicate that functionality.
Like, for example, I watch if I'm not mistaken or I cast. Let me check. I'll put it in the
show notes. At least those are applications that kind of do the podcasting for you. They,
you have the ability to subscribe to podcasts via their RSS feeds and download individual
episodes. However, I haven't come across an application that does all of that automatically.
They generally give you the option to download individual episodes on an episode by episode
basis. So, yeah, nice, but not really. I mean, it didn't really fit the bill of the requirements
that I wanted because I still had to do it manually. It still had to be done on the device.
I still had to download the podcasts again to this device. And that's something I didn't
really want. Unfortunately, iOS devices don't offer up their storage area as if it were
a mass storage device. They don't come over here and say, Hey, Mr. Nightwise, here we
are. Just, you know, drag and drop your content onto us. That's not a problem. You can have
drag and drop functionality. There are players like, for example, VLC for the iPad or Buzz
player, which is, by the way, a very good replacement for VLC because it's not available in the iTunes
store anymore. I mean, there are apps out there that let you drag the files into the application
dialog box in iTunes. But, you know, then again, that's iTunes and we don't want that. We want
those devices to be completely independent. So, how do we, how are we going to solve that?
Well, the answer came and you're going to smile when I was listening to, you're going to smile
when I say this, when I was listening to the one of the latest episodes of Mac Power User
Podcasts with Katie Floyd. They were talking about Goodreader. Goodreader is an app. It's about
five euros or something or five dollars. That lets you read all kinds of documents. Now,
I had downloaded Goodreader in the beginning because there was all kinds of buzz around it. And
honestly, I didn't really see it. I never really, really, I thought the interface was clunky
and I thought, you know, yeah, I downloaded this and I've got some books in there and
well, whatever, I prefer using iBook, the iBook reader, which is standard on the iPad, which is
better. I don't mind reading a PDFs in the iBook reader either. So, why do I need another reader?
Well, one of the things was that Goodreader had the ability to talk to different services.
Yeah, right. While cool, spiffy, one of those services were, for example, FTP, SFTP, Dropbox,
Google Docs, only read, not right. And you had the ability to kind of build your own file structure
inside Goodreader. And I thought, like, yeah, right, this isn't really exciting. And in the podcast,
I was talking about, you know, Goodreader does this and it does that and it talks to Dropbox.
So, what she did is she basically put files into her Dropbox folder, connected with Goodreader to
Dropbox and downloaded them or stream them from her Dropbox folder. So, I thought, like, yeah,
okay, nice, cool. And it was, it was okay. I thought, like, yeah, right. So, if I ever want to
generate a PDF, I'll put it in Dropbox and I can just download it. So, I'll use Dropbox as
the middle man to get content to my iPod or iPad, but I still have to do the whole manual song and
dance. I don't like that. But what she then said was, you also have the ability to sync with a
Dropbox folder. And this spiked my interest. So, I thought, what if I can have my podcast selection
pushed to a Dropbox folder in the morning, locally on my machine, Dropbox uploads that folder
to the cloud. And before I leave, I synchronize that folder from the cloud to my iPad. This gives me
the ability to sync without wires. And it gives me the ability to sync to anywhere I want.
Now, there were some caveats. First of all, the script that I was using used a delete all the files
and copy them over again, principle. Basically, I had my daily podcast selection. It would delete those,
select the new latest podcast and replace them. Now, it would also replace the ones that were
already there. But because this was a local copy script, I didn't really mind. So, I thought, you
know what? I'll just point the destination folder to Dropbox. So, the script, you know, it starts
and G-Potter updates the feeds, downloads the episodes, puts them in the folders, then the script
selects the latest episode and copies that over to the Dropbox folder. But first, it empties the
Dropbox folders of yesterday's collection and puts today's collection there. Now, this was a
good idea, except for the fact that I was using a remove everything and copy everything over.
This basically meant that for Dropbox, from Dropbox's point of view, I was removing all the files
and putting whole fresh files instead of them, replacing them with fresh files. Even if, for
example, only one podcast changed, 15 podcasts got deleted and 15 podcasts got copied over again.
Instead of just seeing one podcast that was new, Dropbox would see 15 new files and push 15 new
files up to the cloud. So, when it came to bandwidth uploading, that meant I would be using quite a
lot of data. But also, when I would go to Goodreader and sync that folder back, it would sync all of the
episodes down again. So, it meant that it would be pulling down every single episode again, never
mind the fact if the episode was already on the iPad. Because Goodreader was able to play, I hope
I mentioned this because this was the kicker, Goodreader is able to play audio and video files.
So, with the synchronization and the ability to play audio and video files, I thought I would be just
perfect. But the Dropbox solution didn't really work because I used the copy and delete and copy
principle. So, whenever I tried to update or update the synchronization of that Dropbox folder to my
iPad, it would download every single podcast episode all over again and it would take a lot of time
and bandwidth. So, I thought, nice, but not nice enough. So, I kept on looking and looking and I
thought, you know what? Instead of copying them over, I'll do an R-Sync command. R-Sync is a utility
or a command line utility that basically said and you can basically tell the script to look what's
take a list of all the newest episodes, take a look at the destination and just copy over what's
new and delete what's old. So, in essence, R-Sync would leave the files that haven't changed
in the destination and just copy over the files that had changed and remove the files that had
been removed in the source directories. So, if G-Podder threw a podcast into the recycle bin because
it was older than two weeks, the R-Sync script would also remove that podcast from the destination
folder where I keep all my fresh podcasts. So, the synchronization script actually took care of the
problem that Dropbox wanted to sync everything over from scratch again. Tried that and that worked
R-Sync just replaced the files that changed and removed the files that were gone. So, I tried again
in G-Podder, I had linked the Dropbox folder, set up synchronization, I pressed sync and it would
just pull down the one single podcast, for example, that had changed. So, I thought, wow, I'm just,
like, I'm almost there. Then I got an email from Dropbox saying, nightwise, your Dropbox is full.
And I could have slapped myself. Of course, I have a free Dropbox account and putting the podcast
into the Dropbox folder gave me a limitation of two gigabytes and I have more than two gigabytes
of podcasts. If I have a few video podcasts in between there, now Dropbox was too small and I
went like, darn, I'm like so close. So, what can I do? And then, it dawned on me that, well,
good reader has the ability to connect to Google reader, to FTP, to Dropbox and Sync with those,
but it also had the ability to connect to an SFTP server or secure Shell server. Now, SSH,
as nightwise.com listeners, you know what I'm talking about. That's the command interface,
the command, we, sorry, I'm losing my thread here because I'm so enthusiastic about it.
SSH is the way that we connect to our Linux server to give it commands via the command line,
it's a secure connection, but what SSH also enables you to do is to send files over it and we
call this SFTP, secure file transfer protocol. It's not like standard FTP, which is unencrypted,
but SFTP. So, using an SSH connection, which we've set up on all of our machines from the first day,
we've set up servers, remember the KWTV series where I talk about setting up a Linux server,
remember the DokiCast series where I talk about setting up your own SSH server,
the SSH protocol doesn't only allow us to interact with our server via the command line,
it also allows us to copy over, over and from and to them back files, just like,
just like for example, Samba does that over our local network, SFTP does that over R.
Well, internet network. So, I thought, what if I set up a connection over SFTP
with the SSH credentials that I used to log into my server via the command line. So, I said,
okay, username, nightwise, password, not going to tell you, IP address, IP address of my server,
source folder to sync. Oh, well, yeah, right, home, shared, fresh podcasts,
and it connected to it. I could see the podcast in the folder on my server via a secure connection.
And then it said, would you like to sync this folder? It's yes, and then I had it.
My iPad using the good reader application now connected via SSH to my Linux server and
synchronized the fresh podcast folder. It threw out the stale podcast that were deleted in the source,
and it copied over all the new podcasts. So, what I did to complete the script is very simple.
I had the podcast script that said, copy over all the new podcasts into my Android phone.
So, I added a line that also said, copy them to the folder called fresh podcast and keep them there.
So, copy them over to my phone and copy them over to the fresh podcast folder.
Then, on my iPad and on my iPod touch, using good reader, I set up a connection via SSH to that
folder, and I said, sync. So, what this basically does is the following. Every morning, four o'clock.
Script starts to run. GPO update, check if there are any new podcasts. GPO download,
download all the new podcasts. Do the magic, the black magic that selects the latest podcasts and
copy them to my phone using rsync, thus copying only copying over the new ones and deleting the ones
that were deleted in the source, directories, and rsync those new podcasts to a directory called
fresh podcasts. It's six o'clock. I'm almost ready to go out the door and I think, oh darn, my
podcasts. So, I just grab up my iPod touch, open up good reader, and say, sync fresh podcasts.
Over my local network, using the SSH protocol, it then synchronizes the files in the fresh podcast
folder with the ones on my iPod touch. With the iPad, I do the same thing. Because this is local,
it's very, very fast. And there you have it. New podcasts on my iPod and iPad, using SSH,
using good reader, an app that is actually made for reading books for crying out loud,
wirelessly with a Linux server, completely automated, completely like I want to have it.
Or is it? Because one of the requirements I did talk about in the beginning was,
I want to be able to do this from anywhere. Well, that's okay. Because when I set up the synchronization
to the fresh podcast folder, I entered the internal IP of my server. But what I can also do is,
I can hook up my server to dindian s so that it creates a link between the dynamic,
a dynamic intern at IP of my server, the outside IP of my ISP, and a domain name that I chose.
So, what I've basically done is I've set up dindian s and made up some domain name,
knightwisehunkydory.dindian s.org. Now, whenever I want to access knightwisehunkydory.dindian s.org,
dindian s goes and check, which was the last external IP address of knightwise's server,
because this external IP address changes from time to time. I have a dynamic IP.
So whenever I enter knightwisehunkydory.dindian s.org, dindian s goes and checks what the last
known IP was, and sends me to that dynamic IP address, which is the outside IP of my home.
On my router, I've said, if you get a request on port 22, which is ssh,
forward that request to the internal IP of my server on port 22, and that way,
that ssh folder fresh podcast is available via ssh wherever I want to go. So I change the internal
IP addresses of my server in good reader to the external IP addresses, the dindian s address,
and now when I'm at home, I can sync, or when I'm on the road, I can sync over ssh and have all
of my fresh podcasts available to me whenever I want to go. Quite technical, perhaps. So if you
have questions, please don't hesitate to send them in. I'll try to recap once more to give you a
general overview and make sure that I haven't forgotten anything. Podcasting machine,
what podcasting machine, Linux system, podcasting client, G-Potter, podcast,
catching script, tells G-Potter to update, tells G-Potter to download, and tells G-Potter to store
the files. G-Potter has also been ordered to erase podcasts that are older than two weeks.
Script, selects latest episode of podcast, our sync synchronizes them with the folder on my phone,
thus putting only the new files there and deleting the ones that have been deleted in the source
directories, and it also art sings that selection over to a folder called fresh podcasts.
The folder fresh podcast is accessible via ssh. So on my iPad and iPod touch, I use good reader.
Using the connect to server option, I connect to that folder over ssh over sftp, which is the correct
protocol name, as it's mentioned in good reader, and I set up synchronizing.
Once I wake up in the morning and I want to synchronize my podcast, I press the sync button
on good reader on my iPod touch or on my iPad, and the new files get copied over and the old ones
get deleted. That's basically how I set it up and the setup because I also used in DNS and an
external IP port works from anywhere. So that's my trick on having podcasts pushed to your iPad
or iPod wirelessly without using a Mac. Now if you do on a Mac or you don't own a Linux system,
I'll give you some more tips and tricks in the final part of this episode and we'll also talk
about other mediums that you can get onto your iOS devices without having to use a stinking,
white cable or iTunes or whatever. We'll be right back. On the edge of real and cyberspace,
there's one place you can go. The nightcast, www.kniGHTWISE.com
Now I know that some of you are saying, hey nightwise, I don't have a Linux system. I have a Mac.
Well that's okay. In the sharing option of your Mac, you can also enable remote shell.
This is the fancy Mac way of saying open SSH. So if you open up that remote shell, you'll be able
with your username and your password that you use on your Mac to access your Mac via SSH.
So if you want to have a folder that you wirelessly sync to your iPad or iPod,
why not use Goodreader for that. Goodreader does audio, Goodreader does video and Goodreader does
books of course, all kinds of text files and it does pictures. So instead of using iTunes to
synchronize over my pictures, I've actually set up a SSH connection to my iMac where all of my
pictures are stored and whenever I want to update my pictures, I just press sync and they get
updated wirelessly from anywhere. That's really, really convenient. So there are a lot of ways that
you can be creative with these, with this little setup, with this little Goodreader application that
does all kinds of things it's not supposed to do, but it's just brilliant to use. So that's very,
very interesting stuff. So if you have a Mac, you can do it that way. I don't know how you can have
iTunes select the latest podcasts and put them in a separate folder. To be honest, I haven't looked
into that because I'm very happy with using G-Potter, but as I said, G-Potter is cross-platform
compatible and the little script that I wrote for Linux systems might be adaptable for Macs as well.
Again, I haven't checked that out. I haven't gone into that, but I'm sure there are ways around that.
On Windows, there are also applications that you can download that set up an SFTP server on
your Windows machine. One of them is FileZilla. You can download FileZilla, set it up as a server and
do the same thing that I just showed you basically connecting to your Windows machine over SSH and
using that to copy over files. Again, you can also use Goodreader. That's also okay. You can also use
Dropbox with Goodreader. That's also okay. Just drag and drop files into Dropbox and sync them
back over to Goodreader via the Dropbox connection. That's also something that you can go for.
That will enable you to have PDFs pulled into Dropbox and stuff like that. That's really,
really convenient. Now, the one thing Goodreader doesn't read is EPUB formats, so that's really
funny, but there are also ways to get around that. Now, for example, if you're out and about,
and you have an iPad of 32GB Wi-Fi, you don't have connection everywhere. You still want to get
your news, and you still want to get stuff, and you still want to see stuff. Well, one of the
things I'm going to challenge you to play with, and this will probably be a topic for a whole new
episode, is Calibre or Calibre. We talked about this in-depth when it came to the Sony EPUB
reader. We talked about that a few months ago. Calibre is a great tool for creating and managing
eBooks. It helps you download content converted to EPUB format and push it to your reader.
Now, what Calibre also does is it eats RSS feeds, and I really like that. So, what I've done,
I've given, when you download and install Calibre, and again, this is cross-platform,
you can do it on Windows, Linux, or Mac, download Calibre and go to the news section.
There you can pick and choose from all kinds of RSS feeds, like, for example, the LiveHacker website,
Dilbert, XKCD, the New York Times. These are basically major newspaper sources.
They're RSS feeds, and there are tons of them to choose from, or you can enter your own,
and what Calibre actually will do is read the feed, turn it into a format that is readable,
and with readable, I mean, easy to read through, it removes the ads, just takes the text of the article,
just takes a nice picture that comes with the article, but kind of gives it to you in a very
easy-to-consume way. It's a great option for reading websites on an offline device,
or on a device that has a black and white screen, like, for example, the Sony reader.
Now, there are a few functionalities that you can do. You can actually tell it to
download all those feeds at 5 o'clock in the morning, again, automated, convert them into ePubs,
and then put them on your Android phone, or on your reader. Now, I tried this, I plugged in my
Android phone, Calibre immediately said, like, oh, look, there's an Android device connected,
so whenever I read an RSS feed, turn it into an ePub, I'll push it to your phone and put it
there automatically. On my Android phone, I have the eBook reading application, got to check
what it's called again, I keep forgetting it, Aldiko, and so when I eject my phone in the morning,
all of those feeds are there. I've subscribed at the moment to the Dilbert feed and the XKCD feed.
So every morning, I have free Dilbert cartoons and free XKCD cartoons on my phone.
And then I said, like, yeah, that's nice, but I want it on my iPad.
Well, that's okay, good reader, says we also have a Calibre says, I'm messing up names,
sorry, that's okay, Calibre says. I also have the option to automatically email those
to whatever address that you want to do. And that's another way you can get stuff to your,
to your iPad, I'm starting to tire, I'm sorry, it's Friday, it's really hot outside and I'm trying
to tell you guys all kinds of things, sorry about that. So Calibre, there's also a great way of
getting content on your iPad by just mailing stuff to it and also works on your iPhone and your
iPod, by the way. And Calibre supports that. So basically, what I told Calibre to do is, hey,
get XKCD and get the Dilbert cartoons, make them into an EPUB and email them to
iPad of mine at gmail.com, which is an address I've created and set up on my iPad. So whenever Calibre
is done reading the RSS feeds and I've told it to do this every day. So every day it reads the
major newspaper feeds and Dilbert, next KCD, turns into readable EPUBs and automatically emails
it to me on my iPad. So in the morning, I wake up, I check my emails, there are all kinds of articles
there that have been mailed to me by Calibre. I do have to manually click download attachment and
open them into the eBooks reader, but it works great. In the coming week, I'm going to try
to get Calibre not to export the RSS feeds to EPUB, but to PDF format. And I'm not going to have
it email that stuff to me. I'm going to ask Calibre to drop it in a folder on my server so I can use
good reader and the SFTP synchronization via SSH to also pull those into good reader. And that
way I will have fresh video podcasts, fresh audio podcasts and fresh news available to me wherever
I am. So we're going to round up and see what we've talked about and I'm going to see if you
have any questions and we'll be right back.
Okay, I know what you're going to say. Whoa, nightwise, that was really, really a techy, techy,
episode. And it was a really, really, really, really techy, techy episode. And I will make sure
that I will have a docucast that will describe the process that we talked about in a short while.
Because this is actually an ongoing project I have told you guys about the script and about
setting up G-Podder and configuring everything in the last docucast. In the coming docucast, I will
kind of build on or continue building on this very subject by adding the SFTP sync over SSH
using good reader and I'll also do a docucast about using Calibre once I get that really working
the way I wanted to work. What I want to tell you today is that if you use existing technology
creatively, you can make things work and that's the challenge. That's the challenge of having
stuff work for you. I know that Steve Jobs really would like you to only use your iPad with iTunes
on your Mac and buy all your content there and I'll keep it inside the nice Apple Ecosphere but
we're not going to do that. You can jailbreak your devices, that's okay and that will give you a lot
more possibilities but if you break your device, I mean that's a lot of money to break and the
challenge is just to get that cross-platform edge using technology that is out there. Perhaps
you say, well not wise, that's like a massive workaround, I'm never going to do that but on the
other hand, this is basically a little bit of hacking that we're doing. We are making stuff do things
they weren't designed to do but are capable of doing by kind of pulling information from all
over the place together and pulling capabilities and software and services together to make that
technology work for us. Now, if you have any questions, you can ask them on Twitter using the hashtag
Dear Nightwise. You can send me email, feedback at Nightwise.com but what I would really like you
to do is go to the Nightwise.com page on Facebook and pose your question there because then I can give
you an answer and that answer can be read by other people as well. If you don't have a Facebook
account that's okay, you can just go to the website and use the comments section to do that because
I'll answer your question and other people might have the same question and that way we can all
learn something and perhaps I can still, I hope I can still learn stuff from you guys,
perhaps you guys are saying, Nightwise, you're doing it wrong and at least tell me, I really
really want to know. So that's about all we have time for this week. It is
Friday afternoon, I'm on my way home. The very noisy freeway that you might be hearing is the E-40
that barrels from Brussels to Liege so that means I'm not far from home anymore and I'm going to
leave it at this. Thank you so much for listening. I hope you've enjoyed this little technologically
infested round and I hope you learned something from it. We'll be back next week, perhaps with
the screencasts or with another podcast depends on the time that we have but until then,
let technology work for you instead the other way around. Stay subscribed. If you know a friend
that would like this kind of stuff, tell them about Nightwise.com, have him subscribe as well
and until then let that technology work for you, don't do it the other way around and we'll see you
in the next episode of the Nightcast. So until then, well, ta-da, bye-bye.
For more information visit the site on www.nightwise.com or look for us in iTunes by searching for
in the Nightcast. Please remember there's a real world beyond cyrus space but it's not all that
important.
Thank you for listening to Hack with Public Radio. HPR is sponsored by Carol.net so head on over to
C-A-R-O-D-E-T-R-L-A-T.
