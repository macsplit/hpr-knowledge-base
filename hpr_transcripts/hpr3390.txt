Episode: 3390
Title: HPR3390: Intro to DOS Series
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3390/hpr3390.mp3
Transcribed: 2025-10-24 22:31:41

---

This is Haka Public Radio Episode 3394 for Friday the 30th of July 2021.
Today's show is entitled Intro to the OS series.
It is hosted by a huker and is about 13 minutes long and carrying a clean flag.
The summer is, we begin some technological archeology to explore the old warhorse.
This episode of HBR is brought to you by An Anastos.com.
Get 15% discount on all shared hosting with the offer code HBR15.
That's HBR15.
Better web hosting that's honest and fair at An Anastos.com.
Hello, this is a huker for Hacker Public Radio and I'm kicking off a new series today.
It's kind of a little bit different from some of the other things because it's fairly ancient in the stuff that I'm going to be talking about.
I'm going to be talking about the old DOS, which stands for Disk Operating System, and I'm also going to basically tell it in the context, at least initially, of how I got into all of this stuff.
I did not start with personal computers.
I'm old enough that everything that I was introduced to in the beginning was mainframes.
Back in the late 60s, early 70s, this was done with punch cards and everything we did was punch cards and punch and verify was the way you did things.
There were little tricks you had to learn, like what happened if the punch cards get out of order and how you could sort them and stuff like that.
It was a complicated system.
When I got to college, which I was a late developing student in that sense, I was in my late 20s when I started in college, and we had an account in a computer science department with the Harvard University mainframe.
I was not going to Harvard University. I attended Suffolk University, but they arranged an account on the Harvard mainframe.
Everything was done with terminals, and that was where I got introduced to basic, learned how to write simple programs and basic is part of my college.
From there, I went to graduate school at the University of Michigan, and again, everything was mainframes.
In the 1980s, that's when a lot of things were starting to change.
I started in grad school in the fall of 1981.
When it got to time to working on my dissertation, and what you do with a dissertation, at least at American universities, is you put together a committee.
I was asking some faculty members, would you be on my dissertation committee, and one person has to be the chair.
The person I asked to be the chair said, I'll do it on one condition. You have to buy yourself a computer, because I won't live long enough for you to finish otherwise.
Very smart fellow. He understood that word processing was a big deal.
I bought an XT computer, a copy of word perfect, it came with two floppy drives, and that was about it.
It was an 80-88 processor, really ancient technology.
What you would do is you would use DOS as the operating system, and you would stick your floppy disk in and boot, and then stick in your word perfect disk.
You had two drives, so you could have one disk in each drive if you wanted, and boot up in the word perfect and start writing.
That was considered pretty advanced stuff at that point, although right around then was when Macintosh came out, and I remember people with Macintosh computers.
They were black and white, color was still something in the future, but they had graphics and fonts and things that word perfect on DOS didn't have.
So, I eventually left grad school and went to become a professor at Concordia University in Ann Arbor, and I still had my computer, of course, which I brought into my office.
And while I was there, things were slowly starting to happen. I remember the head librarian did a faculty seminar on something called the internet that was this new thing that was happening, and I remember that he had to run an Ethernet cable, like 40 yards from a connection point into the display computer in the auditorium.
In order to show this to the faculty, and we were looking at advanced stuff like Gover servers, everything was text based in those days.
And then they developed a, the university put together a computer lab with a bunch of PCs, and I was really starting to get into this stuff.
And I was finding ways to use it, like I taught a statistics course, and the way I did it is I take all my students up to the computer lab, because I could reserve the lab for something like that.
I take all my students up there, and I would teach them on the computers, because that was just a so much better way of doing things.
And I started developing websites for my classes and various things, and what happened was that the academic dean looked at all of this and said, hey, you know, you're doing more than any other faculty member I have, you seem to understand this stuff.
I want you to be the faculty development officer, and basically take what you know and teach all the other faculty, and I agreed to do that.
And then it didn't take very long for them to realize that well, you know, the staff here also needs to learn all of this stuff.
So I became the basic trainer for all of the staff at this. That's a small university, but I did that, and then I started developing courses.
I did a seminar on computer applications for our degree completion program.
Now, in this was all happening through the 90s, and towards the end of the 90s, there was an organization called Smart Planet.
And what they did is they offered training in computer skills, computer applications, you know, you could get training to prepare you to take certification exams like MCSE or Novel, what have you.
Novel was still a big thing at that point.
In fact, our college network, Novel, and I started going there initially to, you know, take a few classes and upgrade my skills.
And then what happened was I ended up being sort of an assistant to some of the regular instructors there.
Now, the regular instructors were people who had all of these certifications. And I didn't really have all of them, but I had a pretty good idea what was going on.
So I got asked to assist. And in the course of doing that, one of the things that started to become obvious was that people did not understand command line stuff.
Now, command line in those days mostly still meant either DOS or the Windows command line.
Yeah, there was this thing called Linux, and I was using Red Hat Linux on the university servers, because that was what we used as our operating system.
And I attempted to install Linux on my XT computer. It might have been an AT by then. I don't remember when I upgraded.
But you know, it didn't, there were too many problems for me to overcome at that point in my life.
So Linux was a server environment, but it wasn't what I used day to day, unlike now.
And to help the students, you know, I was working with people who were learning Windows.
But, you know, Windows at that point still had a DOS underpinning to it.
And I had actually learned a fair amount about DOS pretty much on my own, just trying to figure out how to do stuff.
You know, at one point I had, I had a computer, I remember taking it to a repairman once.
And he said it's the most complicated boot system he'd ever seen, because I had different, different partitions on the hard drive and a boot menu that would select which one to go into.
And, you know, on the DOS, back in those days you had extended memory and expanded memory, which were two different things.
And you had to configure each environment differently. And, you know, this program needs so much of this kind of memory.
And this other program needs so much of the other kind. And this is all controlled boot time.
So I decided it was time to, you know, put all of this stuff together and create a, what I hoped would be a reasonably good, basic introduction to how to do stuff in the DOS environment.
Now I was doing MS DOS.
I have used free DOS and so far my experience has been that the skills seem to transfer perfectly well.
I think free DOS was designed to be MS DOS compatible at least initially.
And so the stuff that I learned how to do, I found every time I needed to, I could do it.
But I don't use free DOS all lot anymore. In fact, the thing that comes to mind off hand is that it is the boot environment for Steve Gibson's spin right, which I do have a copy of and use.
But most of the time I have no compelling need to do this.
So why am I doing this series now? Well, that's Clat 2's fault really.
Clat 2 sent me an email not long ago saying, hey, is it all right if I take your stuff and put it on the open source.com website.
And my response was Clat 2, the licensing is very clear. I use CC attribution share like every page has that on the bottom.
So, you know, you didn't even have to ask. Although, you know, I appreciate the courtesy, but yeah, you know.
So he did that. And then, you know, a few people I know on mastodon found out about it and started to say, hey, this is good stuff.
And then I checked with Ken Fallon and said, well, Ken, you want me to do anything for hacker public radio with this stuff? And he said, yes. So, okay.
You know, I had thought at one point that this stuff was so old. No one would ever want to hear about it again. But I guess there is some interest. And I don't think it does any harm. So that's basically where I'm coming from with this.
And I hope, you know, maybe someone is going to find it useful or interesting.
And with that, this is Ahuka for hacker public radio signing off. And as always, encourage you to support FreeSoftware. Bye-bye.
You've been listening to Hacker Public Radio at HackerPublicRadio.org. We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by an HBR listener like yourself. If you ever thought of recording a podcast, then click on our contributing to find out how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the Infonomicon Computer Club. And it's part of the binary revolution at binwreff.com. If you have comments on today's show, please email the host directly, leave a comment on the website or record a follow-up episode yourself.
Unless otherwise status, today's show is released under Creative Commons, Attribution, ShareLife, 3.0 license.
Thank you.
