Episode: 841
Title: HPR0841: Jonathan Nadeau
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0841/hpr0841.mp3
Transcribed: 2025-10-08 03:22:03

---

Hi everyone, this is Platoon. I'm just for Daning here in Hyalinics Fest talking to Jonathan. I don't know how to say your last name still. NATO.
I don't know, I see your name. I don't know, so I've heard that you just got back more or less just, got back from an internship at the FSF.
Yeah, I just finished it in the summer a couple of weeks ago.
First of all, that's really, really cool. How did you find out about that? How do you apply? What's the backstory on it?
Well, I had Matt Lee come speak at the Northeast canoe Linux Fest and so I spoke with him a handful of times about coming down and talking.
And he invited me to come down and have lunch at the FSF one day. So I came down and we were talking and he said, hey, have you ever thought about interning here?
I know you guys offered an internship and he said, yeah, so you just have to kind of write a paragraph about what you've done in a free software or what you contribute to the community and why you think you should intern there.
And then they go through the applications and they choose who they want to come down.
So you got in and you were there for the summer. What were you working on exactly while you were there?
We've been working on a campaign that hasn't been launched yet. We got quite a bit of it done but Matt Lee and the other campaign manager Josh are going to finish it out.
But while I was there, like I had been talking them about accessibility and free software and I opened their eyes to a lot of things they were never aware of or didn't realize what was or was not out there.
And so working with one of the campaign managers, Josh, we want to launch quite a bit of projects along the side of the FSF for accessibility and free software.
And one of the first things I was able to do is I contacted the project leader Ruben Rodriguez from the Triskell distribution and if people don't know what that is, it's basically Ubuntu but it's a completely free kernel with no binary blobs and all of the software is 100% free software.
So you're not able to install non-free software and there's no non-free software in the repositories at all.
So it's a completely free distribution and I got a hold of him and I started talking to him seeing what we could do about making the installer accessible for blind people.
And since the Triskell is built off of Ubuntu, Ubuntu installer ubiquity does have an accessible option but it's very hard to use and almost impossible to use.
And for blind person use it, there's like no audible signal to let you know you need to start doing stuff.
You have to press F5, press the arrow down three times, hit enter, press this button, it's just very convoluted.
And so I spoke with Ruben and I said, what can we do to make this easier?
Yeah.
And so he was able to and one day after speaking with him, make this change, it was about 10 to 20 lines of code I believe.
Yeah.
And basically now what right now, even in the beta version of Triskell 5, is when you put the CDN or if you booting up the USB, when it comes to the first menu where you choose a language, you just let it sit for like 30 seconds.
Okay.
After that 30 seconds, it's got to automatically boot into a live session and when it does, the orchestra screen will be talking.
Yeah.
So if a person does not need accessibility, they'll click the menu right away.
Yeah.
They'll click the menu right away.
They'll never know it's there.
Yeah.
So it's brilliant.
Yeah.
And like I said, after talking to him one day, he emailed me back and said, here's the link, download this test site so let me know how it works.
And it worked.
Nice.
So this guy, you know, did in like 10 lines of code and like what, one day?
Yeah.
Yeah.
And hopefully, you know, other distros will take this change.
Yeah.
I mean, this is ubiquity, obviously, Ubuntu does.
But this is just the sort of attempting to try and build an accessible framework.
Okay.
We don't want to build one specific accessible distro.
We want all GNU Linux to be accessible.
Yeah.
So if we can build a framework for other people to follow, then everyone will benefit from this.
Okay.
And why do you think that you're qualified to talk about accessibility and stuff like that?
Well, I'm a blind GNU and it's easier myself.
I figured maybe some listeners might not know that.
Yeah.
Okay.
So you're qualified.
We'll continue.
Okay.
So the project, I mean, are you allowed or permitted to say yet?
I mean, I know the campaign hasn't launched, but like what is the campaign encompass?
Like what's the idea behind what you were doing?
Like the one that I worked on?
Yeah.
Multimedia stuff.
Oh, interesting.
Yeah.
Cool.
So we'll keep an eye out for that, I guess, and see what exactly that is.
So as a blind user yourself, what, like if I had a blind friend or something and I wanted to start getting them into GNU Linux,
what, what, what should I start by recommending?
Like what's the, in your opinion, just like what, what would be the easiest, I guess, way to start on that?
Well, once Triscoll 5's released, I would, I could recommend that, but since it's not released yet, there is a distribution built specifically for blind people called VINX.
And that's based off of Ubuntu also.
Okay.
And it takes the same ideas of what Triscoll does is you, you drop the CDN and automatically boots into a live session with Oracle running.
And then a blind person or a low vision person can install it completely on their own.
Nice.
And then when it reboots, Oracle comes back up talking and then they have full control over their desktop and they can start, you know, installing packages, uninstalling stuff and using the computer.
Okay.
So I've, I've talked to you a little bit about this actually like two seasons ago on my own podcast, but let's just kind of quickly reiterate it maybe.
What's the equivalent over on like the Windows side? Like what, what do people use or what are the blind people users not using?
What are they using if they're not using Linux?
The majority is JAWS right now.
Okay.
And there's also like a secondary one called Windows Eyes or Window Eyes.
Okay.
JAWS, if you get the professional version, it's $1,500.
Wow.
Are you kidding?
No.
No.
Okay.
That's actually a lot of money.
Yeah.
And 80% of blind people are unemployed.
Yeah.
Wow.
So how are they doing it?
I'm not sure if I'm understanding.
So depending on what state you live in, the state agency, if you make whatever qualifications they're looking for in a person, they will essentially pay for the software for you to use, for the blind person to use.
That feels like a really good product to be selling.
Yeah, exactly.
Especially, you know, you don't have to worry about the price or anything because they're going to just pay whatever the tax has.
Yeah.
So, you know, it's just a really awful situation and a lot of people don't even realize that that stuff goes on because, you know, so, okay.
So what if the person can't get this funding?
Right.
Oh, I'm sorry.
You can't use a computer now.
You can use a computer.
Yeah, because you only, you know.
It may be 10 years ago, although honestly, probably not even 10, more like 20.
You could have gotten away with that.
Like, okay, I can't be a computer user.
Right. Right.
Which isn't right.
But, I mean, like, you could get away with it, but I don't really know how you could get very far today.
Exactly.
That just makes you even that much more unemployable if you had a chance.
Yeah.
Like, if you can't use a computer, then, you know, I'm not saying you're no good, but I mean, there's a lot less you can't do.
Yeah.
You know, so it's a really awful situation to be in.
That's why I'm a huge advocate of free software in general and free software and accessibility.
It almost sounds like the free software, the progressive side of the free software in this instance is not necessarily,
oh, look, we have this thing that will read the screen to you.
It's like, look, we've got this thing and it's truly exciting.
It's free.
You can use it and you can teach yourself computers and stuff like that.
And it's there and it's available for everyone.
Yes.
So, yeah.
And, you know, one person can make a difference with the screen reader.
Yeah.
They can top on the mailing list and say, oh, I tried doing this and it didn't work and they can report a bug.
Oh, right.
You know, so the one person can make a difference.
Yeah.
You're not going to do that using jaws or window eyes.
If you say, oh, I don't have this functionality, they'll say, wait till the next release and you owe us $1500 again.
Yeah, right.
You know, so like, you know, like I said, I'm a huge advocate of free software.
Like, I have the opportunity to get these free copies and I choose not to use them.
Yeah.
You know, I don't run them because I'm not going to play that game.
Yeah.
And if there's something I can't do, I'll either not do it or figure out a way how to do it or maybe get help.
You know, someone might help coding up something that'll help the problem.
Very cool.
And, you know, that's where you can make a difference with free software.
What about, um, so this Orca thing?
I mean, I've, I've, I've used it before, although I admit I didn't close my eyes and actually try to use it.
Yeah.
I believe it's fairly gnomes specific.
Is that correct or my aim?
Yes, but it is.
I believe Orca became part of the software conservancy.
Okay.
So they're trying to get a little more independence.
Okay.
And with that, they, the XFC does have on their road plan to become a more accessible Orca.
Orca, like within the next year.
Well, and that, I guess that begs the question because obviously a lot of people I guess are, are trying XFC E now that gnom 2 has changed into gnom 3.
And a lot of people are kind of like, whoa, that's a lot different.
Yeah.
How is Orca and gnom 3?
Is it pretty much the same as always or?
It's that it took a little hit because it's obviously a different interface.
Yeah.
When 3.2 comes out in October, it's going to be considerably better.
Okay.
3.0 was okay, but it was on the border of usable and not usable.
Okay.
It really depended on what you wanted to do.
Okay.
So 3.2 is supposed to be a lot more improvements.
But XFC right now is fairly accessible, but like it won't read a lot of the menus and stuff.
So you kind of have to either just launch stuff from like the terminal or like just open up the run box and launch stuff from that.
Okay.
But I mean, so it works.
Yeah, it does work.
But they are like work around.
Exactly.
Yeah, exactly.
So what, I mean, it sounds like you, I mean, aside from being blind, you don't really seem to have any qualifications to like, quote unquote, contribute to this Orca project.
You know, you're not a coder.
You can't like say, hey, I just improve such and such.
I'm going to push the change.
You know, that's not who you are.
Right.
But in that sense, I kind of think of you as like sort of the way free software is supposed to work on a community level.
Because I mean, you're someone with knowledge and you are able to help the people who do know how to code something.
And like actually tell them, hey, this is really cool.
But honestly, that's not how, you know, I want to, or that's not how a user would want to use it or whatever.
And you can actually contribute to the project just by letting people know how it's working.
Yeah.
Yeah, well, that's a very good point.
You don't have to be a programmer to make the difference.
And really in the free software, like communities in free software world, people that develop things want feedback.
Yeah.
You know, they want, they want to know people are using it.
And if they want to know if there's a problem, like, why else would you create something?
Like, I mean, maybe some people do create stuff just for themselves.
Yeah.
But they do a lot of other people using it.
Yeah.
And I mean, you know, like Ruben Rodriguez is a perfect example.
I, I guess this email, you know, it's just Ruben actress Kelly, you know.
I email them, I said, hi, I'm an online user.
And, and this is, you know, what I'd like to do.
And, you know, within like an hour, he emailed back and he's just like totally intrigued by what I was emailing him.
Yeah.
Yeah.
And I got a hold of him on mumble.
We had like an hour long conversation.
Nice.
And I sent him a link to a video of me like installing Phoenix.
He was like, I'm really interested to see how you use a computer.
Oh, interesting.
So I sent him a video while I was talking to him and he said, this is amazing.
And he was like blown away by it.
And like I said, within, and you know, the next day, boom, he made the changes.
Yeah.
You know, and like, that's what a lot of people will do if you get a hold of him.
You know.
So what you're saying is that he didn't email you out of the blue and say, hi, I heard of you.
Right.
You actually put yourself out there and say, hey, I'm this person, let's talk.
Exactly.
Yeah.
Exactly.
Because I think sometimes people are a little bit maybe not sure that they're allowed to do that.
Yeah.
It's like you can actually do that.
We're all people.
We can just talk.
Exactly.
And like that's kind of part of like sort of the accessibility project I'm working on is to basically bring other people that do accessible programming or accessibility issues within free software.
Accessibility, accessibility is such a niche market to begin with.
Right.
And for that to be fragment is not good.
Yeah, yeah.
So I'm attempting to contact, you know, the project leader of Vinix and the Debbie and accessibility guy in various other people and have conversations with everyone in the same room.
Nice.
And say, how can we improve all of us together?
That's great.
Like, what is the benefit of one person succeeding and the other one not?
Like, that's, you know, silly.
Okay.
So here's a question.
And this might be beyond your technical knowledge.
I know it's beyond mine.
So I'm just going to kind of stumble through the question.
But like, do you know if on Linux is accessibility any easier to implement because of the way that like X works?
Like because of the, because X is basically just a shell for the, for the terminal.
Right.
Is it easier to tie into things and say when you're clicking this button, you're actually just running this command.
And so we can read you exactly what that command is going to be rather than actually reading you the text of the button.
You know what I mean?
Yeah. Well, I mean, obviously it sends its free software.
I would assume it's considerably easier to implement changes because you can look on a hood and see exactly what's being called, what's being rendered, what's being spoken to.
I know with the new Windows 8 that's coming out.
I've heard that like, Jaws, for instance, has to completely rewrite everything because Windows did something different to how Jaws communicates with Windows.
Wow.
I don't know what kind of cooperation they get from Microsoft, but I imagine it's quite difficult.
Yeah, I can.
So, you know, so I would assume no understanding free software that it's considerably easier.
But again, finding people that are concerned about stuff like this or that even do it is kind of tough.
Which is why I want to be able to round up as many people as I can and put together, you know, like again, a framework that can be followed for everyone else.
Yeah.
How does Jaws work with, I mean, obviously if all the codes coming from Microsoft, I'm sure there's a certain standard probably that's maintained within Microsoft code.
But what about like, you know, that random shareware that you download to burn a disk or something?
I mean, Jaws to handle that pretty much.
Oh, no, Jaws isn't guaranteed to work 100%.
Okay.
I mean, it doesn't even work 100% Windows.
Okay.
I mean, it's usable, but you're not going to access everything.
Yeah, okay.
So, for 50 software, yeah, well, we're $50 and you're getting something that may or may not work.
Exactly.
Yeah.
But free software being all free, we could look at the code and pretty much probably guarantee that work is going to work no matter what.
Yeah, so if it doesn't, like again, you can reach out.
If it doesn't work great on a program, I'm just, I mean, developers, I'm sure don't make their stuff inaccessible on purpose.
Right.
Like they just either aid or aid don't think about it.
Yep.
Or maybe they don't know how to do it.
Right.
And they don't understand what the needs are anyway.
Yeah, exactly.
I mean, that's the gap.
Yeah.
That's very cool.
So, it's more, again, it's build a framework and to bring awareness to accessibility.
Like, I spoke with Chris Hofstater, who works a lot with accessibility on GNU.
Okay.
And he said Jonathan, really, a lot of the accessibility could probably be fixed in 20 minutes.
Yeah.
If these guys went in, it just changed a few lines.
Yeah.
So, we need to educate programmers.
Look, all you need to change is this to that and it will become accessible.
It's fantastic.
Cool.
Well, I think, I think that's probably all the questions I have for you.
Cool.
Thanks for talking to me, Jonathan.
Thanks a lot, too.
It's great to meet you in real life.
Definitely.
Yeah.
Have a great time here.
Yeah.
Cool.
All right.
I'll see you next time.
All right.
You have been listening to Hacker Public Radio, where Hacker Public Radio does our.
We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by a HPR listener like yourself.
If you ever consider recording a podcast, then visit our website to find out how easy it really is.
Hacker Public Radio was founded by the digital.pound and the economical and computer cloud.
HPR is funded by the binary revolution at binref.com.
All binref projects are crowd-responsive by linear pages.
From shared hosting to custom private clouds, go to lunarpages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under a creative commons,
attribution, share a line, free those own license.
