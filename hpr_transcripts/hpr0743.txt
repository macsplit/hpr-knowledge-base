Episode: 743
Title: HPR0743: ILF 2011: Interview with Jason Kridner of BeagleBoard
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0743/hpr0743.mp3
Transcribed: 2025-10-08 01:48:47

---

Music
This is Russ K5, recording for Hacker Public Radio, and I'm sitting in with Jason from the Beagle Board Company or...
It's a project name.
Project name and whose project is it?
Well, it's everybody's project. It's an open source project.
But TTI is the one that Texas Instruments is the one that makes the chips that's used on the Beagle Board, not who I work for.
But lots of non-TI people involved in the project for sure.
Russ, nice to meet you.
Nice to meet you as well.
I'm not real familiar with the Beagle Board project, so I thought I'd come over here and maybe introduce myself and a bunch of others to it, hopefully.
So give us a little bit of a rundown on what the Beagle Board is, and you say it's an open source project, and a lot of people are more familiar with software when it comes to open source than hardware.
So give us a little bit of a rundown on the Beagle Board itself.
Well, there's quite a few open hardware projects emerging where people give away all the details for reproducing the hardware, you know, yourself.
So Beagle Board falls into that category.
But really it's focused on trying to take the processors that are initially coming out for like the high-end mobile phones that are starting to approach desktop performance and make it possible for hackers and hobbyists to do things on their own with those processors.
Similar in some ways to the Arduino project?
Yeah, I think it's similar in a lot of ways to Arduino.
The classic performance is quite different.
The ability to hand solder some of the parts is quite different, right?
The processor being used on the Beagle Board has over 500 pins, and it's a 0.4 millimeter ball pitch.
So it's pretty difficult stuff to just solder yourself, although you can find contract manufacturers, professionals, and stuff that can build it.
But you can do a lot, once it's down on the board for you from here, you can wire it up to a lot of things, and that's where it really gets opened up for you.
Okay, well, that sounds interesting. I'm not into a lot of hardware hacking myself.
I didn't even intend for it to actually be a real hardware project.
I certainly wanted all the schematics and all the hardware details to be shared, but I intended it to just be for software people to hack up and make some web platform stuff.
It just, you know, how these open things sort of find a life of their own, and the hardware hackers just started showing up really.
So you transformed it, or it transformed itself, I guess, from a software project into a hardware project.
So what do you see the Beagle Board being used as, primarily right now?
A lot of robotic stuff, so this hex pod from Catcan is one thing that we brought by today.
So a lot of people see doing robotics, some hacks with Connects, and the Xbox 360 Connect,
taking that up over USB to the Beagle Board, and stuff like that.
Automated drones, flying vehicles, home entertainment centers, you can run Xbox Media Center on it, and make up a home theater PC.
Web browser stuff, kiosks, type of things, where you put information displays, and then have maybe something interactive with a web camera or something on it.
Putting sensor stuff, sensor data collection stuff out in the world, because you can run off the batteries.
Wearables, people like to do wearable hacks, where they'll somehow hook up to eyeglasses or something.
So as far as the Beagle Board itself is concerned, I mean, how much does it have a particular like CPU chips, or anything like that?
What kind of IO devices, things like that?
Well, the Beagle Board itself is an ARM microprocessor, so it's a, but it's a lot higher performance in older arms.
I don't know if you, how much you know about ARM, or maybe your listeners wouldn't know about ARM, but it's a really, really common processor in mobile phones, and embedded systems.
But the Beagle Board is running at gigahertz, a processor, and it's super scaler.
So you can think about it as running, you know, just the main processor is running about two billion instructions per second.
It's a single, single core ARM processor.
Well, it is a single core ARM processor today, you know, we'll look at maybe in the future going to multi-core.
It does have a DSP in there as well, so 800 megahertz C6000 DSP, which is an eight functional unit DSP, so it runs essentially eight instructions per cycle.
It's a very long instruction word, so it's like one instruction is 256 bits.
And, you know, so there's eight, 32-bit instructions run every cycle on that core.
Okay.
And that's an 800 megahertz core, and there's some, so a couple of video acceleration functions associated with that DSP core.
And then there's a 3D graphics engine, an imagination, an SGX, a PowerVR, 3D graphics accelerator.
So if you want to run Quake, it's a great engine for running Quake.
Okay. I mean, how close is it to like a fully functional CIPC if you wanted to build a computer out of it?
Well, you can download a standard Ubuntu distribution if you want, right?
So Ubuntu for ARM runs on a great Fedora for ARM is out there, Gintu.
You know, a lot of stuff I do is with the angstrom based on open embedded, but it looks a lot like the Debian package.
So if you want to run Debian for ARM, yeah.
Sometimes the individual, in the ARM world, the board-specific stuff tends to be a bit more specific than the standard PC world.
So you need to be, it may take you a little bit of extra effort to figure out how to get to the startup.
But once you get going, it's going to run just like your regular Linux PC, right?
Because most of that's all open-source software, so it moves between architectures pretty easily.
Right, and I know this little device you have here that you got shipped from Taiwan is actually running Android on it.
So how well does it handle Android pretty well?
Yeah, there's a project called a robot. There's also zero-extroid.
And there's several different projects to try to put out on open platforms, you know, support for Android.
And yeah, so you can run Gingerbread on the Beagle board.
If you want, I think that Honeycomb's not out yet free yet.
I think that they're still holding that back and trying to prevent the hackers from doing too many crazy things with Honeycomb yet.
But yeah, if you want, you can even run like a cyanogen mod on the Beagle board.
Some folks have got that loaded up using robot project for the base Android and then pulling in the cyanogen mod hacks.
All right, so you guys sponsored the Indiana Linux Fest this time around.
And you obviously came here and wanted to show off your product.
So what would you like people to know?
What would you come here to tell people about the Beagle board and where can they get more information or even obtain one if they wanted?
Of course, if you visit Beagleboard.org, that's the place for all the information.
There's a buy page on there and get a list of distributors for the board itself.
The board, the previous revision, there was an OMAP 3530 that has a 720 megahertz processor.
Instead of the gighertz processor, it doesn't have the extra USB ports.
You can get that now for $125.
And then the XM version, the latest that's running a gighertz with the extra USB ports and the 512 megabytes of RAM is out there for $149 from distributors.
So as far as programming and like a barrier to entry to getting into playing around with this, you'd say that's pretty low.
Average person can deal with it pretty much.
Yeah, I think it's pretty low in that the average person.
If you can do with Linux, I think if you're already a Linux hacker that there's a couple of things in the bootload.
Now with the XM version, there's no NAND flash, there's no non-volatile memory on the board itself.
What you can do is use the Ubuntu image rider.
Like you would make a bootable image for your PC to boot off of a USB stick.
You can do the exact same thing for the Beagle board.
You just program the SD card with the Ubuntu image rider if you can get an image of the system that you want to run.
It'll just boot and run.
I think the barrier point, it went through a little bit of rough spot.
The really geeky hackers came in and geeked it up a little bit.
Now it's getting back to the point where lots of other people can get into it for sure.
Okay, I happen to notice when I looked over at it here that you had S video and HDMI connectors on it.
So it will handle a high definition video.
Absolutely, you can do 720p video decoding.
And this is actually a, we call that a DVID connector because there's no audio out on there.
So it hooks up to your standard HDTV and you can do HD 720.
You can do higher resolutions in that but it wouldn't support the full 60 frames per second if you go much higher than 720p.
Okay.
But if you wanted to lower the frame rate, you could do even higher resolutions in that.
It's limited to 2048 by 2048.
I don't think a lot of people can really tell a difference between 720p and 1080i or 1080p, really.
Don't try telling them that though.
Okay, I won't do that.
But, okay, well, anything, any parting words you want to say about the Beagle Board?
It sounds like an interesting project and I'd definitely like to check it out myself.
Not having known anything about it before now.
You know, I love it if TI got rid of me tomorrow.
I'd still be hacking with the project.
No, I think you covered it pretty well.
Okay, great.
Well, it's been a pleasure talking to you and nice to meet you, Jason.
And thank you very much.
Nice to meet you, Russ, thanks.
Thank you very much.
Thank you very much.
