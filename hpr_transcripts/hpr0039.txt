Episode: 39
Title: HPR0039: Debian Live CD
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0039/hpr0039.mp3
Transcribed: 2025-10-07 10:39:01

---

music
music
Hey, this is Oct 3 with another episode of Hacker Public Radio.
Today I'm going to talk about Debian Life and the Debian Life Project.
Debian Life is a framework that is used to build life systems for the Debian distribution.
It can include the classic installer.
It can build CD-ROM, USB, and at boot images, all life systems.
It's a live project, but it's also used for making pre-built images.
And it also includes desktop environments such as GNOME, KDE, XFICE.
And you can also install pretty much anything in the Debian repositories, including source code and drivers and kernels.
The features that I liked about this project was that you can include the Debian installer from the official release onto your live system.
And you can create a live CD with the installer for your specific setup.
Let's say you have a computer laptop that has bad Wi-Fi cards for Linux.
You can install that onto your live system.
You have the installer copied over when it creates your hard drive.
You can also include raid drivers.
Anything that you'd like and anything you can compile and run in Linux, you can put on your live system.
Also, the other thing you can include are encrypted hard drives disks into your live system installer.
Or you can encrypt the live system itself when it boots.
Whereas a password, and you can keep private files on it.
It supports DM-CRIPT, loop AES, and encrypted volumes.
And the encrypted volumes are for hard drive installation, obviously.
And the next thing that I liked about this project was that it boots by Net Boot or Web Boot.
Net Boot is booting your system from a remote location, whereas Web Boot is grabbing your boot system from a remote location and booting it locally.
The advantage of Net Boot is you don't have to have hard drive Web Boot is.
You don't need an internet connection after the initial boot.
The next thing that I liked was you can create a Zen system using Zen kernels from the Debian repositories.
Basically, anything that you would need supported by Debian that you can get to copy over to the disk and that will obviously be able to run from a live CD will work.
Now that I've described basically the advantage of every live CD project out there, I'm going to explain the advantage of using the Debian live project.
Dev is built around a framework for a standard set of options to build a default live system.
You can also use various customizations for your live system with an automated tool that hooks into the Debian live framework.
This tool is called Live Helper, and it comes with a GUI.
It doesn't come with a GUI, but you can get the GUI quite easily. It's called Live Magic.
The advantage of using this tool is that you can run through a set of options that you can find in the Man page.
Basically, what you would do is you would run the config script and the build command.
The config script basically sets a bunch of options in various config files and standardizes the build and then you run the build command.
If you wanted to get into really customizing your build process, what you would do is you would run the configuration script.
After that, you would bootstrap Che root through the accompanying Che root scripts and then Che root you were directory.
After that, you can do pretty much anything you would if you were building manually.
I think you would run your remove on all your Che root scripts and run your LH underscore binary script.
If you have a good CD, change the name, move it to another directory, and then clean it with the clean command and your set.
The thing about Debian Live is that it is highly configurable. You can specify as much as what mirrors you use during the bootstrap as well as the binary process.
You can specify the security mirrors or bootstrap and binary, meaning bootstrap as when it builds the system and binary as when it is using packages.
For the actual system, you are going to be booting up for the ISO is generated.
You can specify your own repository in this manner. You can also specify your own packages and packages list.
You can include any piece of software that you have been able to create into a binary or RPM if you have RPM installed onto your Debian system.
I just entirely suggested that you use all Debian packages as this is a Debian system.
The advantage is easy and you can also specify different build options as in the USB.
I have used it many times, the USB stick. You do it in the same way as building a live CD, except for you just have to specify the dash B, USB dash HDD command.
It is a little confusing, but once you see the help on the main page, it is very simple to specify.
It is a little bit harder to build a live USB stick because the process is complicated because of the fact that it is on a USB stick.
Aside from building with the live helper utility, you can include the GUI, which is very similar to what the Debian installer looks like.
It does all the same options. It is just a little bit buggy because it is behind the development process of live helper for reasons unknown to me.
It still works and you just have to make sure that you get the latest version from their Git Repositories and it works just fine.
What I have used the live helper utility for and the Debian has been very supportive is for building live rescue disk for work.
It works quite well to be able to rebuild a disk with a new tool on the fly or update the system and you can also build live USB sticks.
As I mentioned, you can put it from DVD CD so if you are using a rescue disk, you can bring it with you, your live USB, your CD ROM, your DVD ROM.
You can install to an SD card if you have to. It is a little bit more complicated but you can.
I had created a SD card installation for my ASUS triple EPC of a live CD that I had generated with all they create.
The necessary drivers and such patch kernel for the ASUS that comes with these Android OS.
At this point I am going to talk about what I have been doing with the Debian live utilities.
I am going to be trying to build a Debian from scratch live CD and so far I have a base system that boots from an ASUS on a CD ROM.
I am trying to add in a way to the system from scratch out of the live helper utility.
Simply add in another module of some sort that will hook into live helper and be able to be called from an option at command line.
Right now I have created a development environment that I can use to create same builds, destroy back up.
I have done this using the OpenVZ virtual private server software.
Also known as a VirtualOzo.
What I ended up doing was I created a VPS for a Debian mirror to download the official repositories.
Then I created a second one where I could pull the sources of certain packages that I would be bootstrapping my system with.
I compiled them all, destroyed my year from the official packages, pulled up a smear and created one out of the packages I had compiled.
After that I started building my live systems with Debian packages that I had compiled with all the items I needed.
Now I am in the process of putting a GUI with XORG and I am deciding on what window manager to use.
At that point I have a working system with a GUI and a few tools.
Then I will probably start working on the automated tool of helper and throw in my ID code and quite possibly submit it to their project.
If they don't like it either way I have pretty much done what I wanted to do.
The plan is to include the Enlightenment 17 window manager.
The problem is that it is the best way to build it as I was told by the e-developers was that I need to get the Nightly CVS build and compile it and then keep those packages that I create from that source.
Keep it handy for a month as I was told the CVS builds can be very unstable for e-17.
So I might in the meantime probably keep something like fluxbox or window manager 2 or something of that sort that is very lightweight window manager that I can repetitively recompile very simply.
And that is pretty much it for my podcast.
I am probably going to go to sleep now. I hope you enjoyed my recording and have a great day.
Thanks.
Thank you for listening to Half Republic Radio.
HPR is sponsored by Carol.net so head on over to C-A-R-O.N-E-T for all of us in need.
Thank you.
