Episode: 13
Title: HPR0013: LPI Certifications Part 1
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0013/hpr0013.mp3
Transcribed: 2025-10-07 10:17:47

---

.
Hello and welcome to hacker book of radio. This is episode 13 for Thursday, January the 17th.
I'm the host of today's show, my name is Ken Fallon.
This is the first and many series entitled Linux Professional Institute Certifications, LPI-C.
And in this mini series, I'm going to help provide you with some information that will help you in passing
some of the certifications provided by the LPI Institute.
According to Wikipedia, the Linux Professional Institute NC LPI is an unprofit organization
that provides vendor and dependent professional certification for Linux system administrators and programmers.
Now, the certifications themselves are available in many countries and in many languages.
And the community participates in the exam creation.
From my point of view, I think the LPI-C is well respected and recognised, at least as much as the red-add certifications
are provided by the LPI.
They have three levels of certification, the junior advanced and senior level.
And for the junior level, you need the junior level to continue on doing the rest, I believe.
I'm going to say I believe because I haven't actually done any of the certifications myself.
And the reason I'm doing this podcast series is so that it will be a way for the information in the documents to sink in.
And we will continue.
The task overview is to work at the Linux command line, provide easy maintenance tasks, to help users out,
to add users and large system backup or restore, shutdown or reboot.
Also, to install and configure a workstation, include an X and connect it to a LAN or a standard on PC,
via a modern and internet prerequisites for the junior level are passing exam 101 and 102.
I've seen some advice that you are better off preparing for exam 101 and 102 together as some of the questions switched between exams.
The documentation that we're going to be using are the IBM documentation provided on www.ibm.com,
forward slash developer works, forward slash Linux, forward slash LPI.
And while the LPI on the well LPI web pages themselves, they say while the can't recommend on the documents,
these documents seem to be well respected in the community.
Now you need to register with the with IBM in order to be able to access these PDF files.
The copyright does remain with IBM, but I believe we should be allowed to use them under the fair use provision, although I'm not a lawyer.
Software that we're going to be using is the VMware server, largely because of the VMware uses a BIOS while other VMware solutions don't.
We're going to be using CentOS and Debian net install, the CentOS 5.1 net installs at ISO,
and the Debian 40 or 1 i3.06 net installs at ISO can get them on their respective websites.
Install the VMware server and then install the VM for Debian with 256 megabramic,
like a disk, not pre-assign, not split. When you get to partitioning, select the entire disk,
create separate home user of our intent partition, so that'll be an option.
So that'll be interesting when we're doing analysis of what we're investigating the file disk structure.
When you get the software, which choose software to install, deselect everything.
So basically install a minimum system, more or less the same with CentOS, 256 megabram.
For me this cosy disk didn't work, so I switched it to an AKID disk, again, not pre-assigned or not split.
You'll need to, you'll be prompted for an FTP location, so go to the mirror, list site, and select a FTP site near you,
and the directory in that mirror, FTP mirror that's located next to you will be 5.1 for such ISO, for such i3.06.
And now, excuse me while I take some T, and then we'll be right back,
what's going into LPI exam 101 prep, hardware architecture, junior level administration,
topic 101, by Eardsheel senior programmer with IBM.
LPI exam objectives, configuring fundamentals by a setting, I'm reading.
You will learn to configure fundamental system hardware by making the correct settings in the system bias.
You will learn about configuration issues, such as the use of IBA, and the ID,
hard disks larger than one or two four centers, enabling or disabling integration peripherals,
and configuring system with or without external peripherals, such as keyboards.
We will also discuss correct settings for IRQ, DMA, iO addresses, for all BIOS administered ports,
and for settings for handling errors.
And that has a weight objective of all the exams.
All the sections in the exams have a weight objective.
This has a weight objective of 1.
Now moving on to page 5 system and bias overview.
Again, I'm quoting from the documentation.
A modern personal computer or PC consists of a central processing unit CPU for performing calculations,
along with some memory for storing data that the process is using.
To make such a device useful, we attach preferred devices such as a keyboard, mice, displays, hard drives,
CDs, DVD drives, printer, scanners, network cards, which will allow us to enter store print, display, and transmit data.
In the computer just described, the memory used by the processor is called Random Access Memory RAM.
In a typical PC, the memory is volatile, meaning that it requires power to keep its data.
Turn off the PC, and the memory is wiped clean.
Put another way, when we turn off a PC, we turn it into collection of hardware components that will do nothing until reprogrammed.
This reprogramming occurs when we turn on the machine.
This is called bootstrapping or booting the computer.
The bias stands for basic input output system.
And from Wikipedia, the principal duties of the main bias during the power on self-test are as follows.
Verify the integrity of the bias code itself.
To turn the reason the power on self-test is being executed, find size, verify, system, main memory,
discover initialized catalog all system buses and devices, pass control to other specialized biases.
If and when required, provide a user interface for system configuration.
Identify, organize, and select which devices are available for booting, construct whatever system environments that is required by the target OS.
I find that relatively difficult to understand, so I've gone out and found a document which explains the bootup process of a PC.
Now, when you turn off your computer, as the IBM document states, it's forgotten everything.
So when you turn on your computer, your processor has no instructions on what to do.
It has no idea whether it's a server, a PC, a laptop, or whatever.
So there's a break-com trail left for the processor so that it can learn more and more and more stuff.
So the term bootstrapping occurs, and it's a sort of joke that was introduced in the 50s,
again, according to Wikipedia, from a legend of Baron Wunchhausen, who was able to pull himself up by his bootstraps on Stuck in a Marsh.
So after you go through this boot sequence, I think you'll understand what sort of chain is involved.
Okay, so you turn on the power socket, and the power goes to the power supply.
The power comes out of the power supply, and it's on the motherboard.
The first thing that the motherboard does is sends a reset to the CPU.
This may seem strange, but the CPU, the motherboard is waiting, or chipset, or whatever, is waiting for what's called a power-good signal to come in.
And then, when it receives that power-good signal, it knows that the power supply is good and everything's working.
It knows what good means is plus five volts, and it can be anything between plus three and plus six volts.
So it gets that, it says, okay, the power supply is okay.
I'm now going to clear the reset flag, and I'm going to allow the CPU power into the CPU.
Now, once the CPU gets the power, in other words, the reset flag is cured, it knows only one thing,
and that's to go and start reading in memory, reading in code from address FFFF000, right at the end of the system memory.
There's only 16 bytes of code there, but all that usually contains a jump to where it's supposed to go to find the rest of the real bias program.
The bias program will start a power-on self-test, and if there are any errors, you'll hear beeps, just a side note there.
If you are troubleshooting a PC, it's not coming up, it's not boosting, you don't know what's wrong.
Usually, most motherboards, if you have a series of audible alerts, audible beeps that occur.
For example, on a MI system, five beeps might be a problem with your processor.
If you're troubleshooting it, find out what the motherboard type is, download PDF about the documentation, go to the Oracle section,
and you should be able to hear what's wrong with the motherboard and replace that component, and then move on your merry way.
Anyway, the bias continues on, and the first thing it will do is try and look for a video card, and this is typically at location C000000 in memory, and then it will call and execute the bias on the video card.
This is the first indication that you will see that something is going on, and it also explains why the video card is usually the first thing that you see coming up rather than all the other checks from the bias.
Excuse me. Then the bias will go and do the exact same thing for other devices that you find.
For instance, array controllers if you have them, other things, and then it will display a startup screen, it will do some more tests, and then it will start doing a system inventory of sorts.
Now, there's actually two types of booting. One is a warm boot, and one is a cold boot, so a cold boot is when the computer is physically turned off, no power going anywhere, and when you turn it back on, it's called a cold boot.
A warm boot is when you hit the reset switch, and when you hit the reset switch, it sends that reset signal that we were talking about before to the processor, and it also sets a little flag to say that yes, it's been a warm boot.
When this breadcomb trail is the CPU and the bias comes along to that point, it can go, okay, this is actually a warm boot that's occurring, or it's a cold boot that's occurring.
During the system inventory thing, it takes a look at the hard disks that are in there, while many cylinders, platters, that sort of thing will get into that later on.
Comports on the LBT ports that are available. This is also, after this, it'll go and do the plug-on-place stuff, which we'll also be talking about later, and you'll see a summary screen.
And then, depending on the settings on the bias, it'll start looking for a boot device to boot, so typically it might look for a floppy disk, and it might look for a CD-ROM, and it might look for a hard disk, and then if you can't find out, it might try to end that boot or something.
Typically, for an Linux operating system, it'll look for the master boot record starting at the first bootable disk at cylinder zero, head zero, sector one, which is the first sector.
It'll then start reading in code into the processor from there, and that'll be typically bootloader, well, for Linux it'll be typically a bootloader, like Lilo or Grub, which we will also be covering later on.
So that's the end of this little side note on the boot process.
And that's the end of this episode in the mini-series on LPI certification for Hacker Public Radio.
For feedback, corrections, or contributions on the series, please email me at ken.valon.asgmail.com.
For general feedback on Hacker Public Radio, you can email feedback at hackerpublicradio.org.
Remember, Hacker Public Radio is for the community and by the community.
So if you'd like to do a show, a series of show rules, or provide some other assistance, please email admin at hackerpublicradio.org.
With that, I'd like to thank you for listening, and wish you a very good day.
Thank you for listening to Hacker Public Radio.
HPR is sponsored by carro.net, so head on over to C-A-R-O dot N-E-T for all your hosting needs.
Thank you very much.
