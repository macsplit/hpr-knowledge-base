Episode: 395
Title: HPR0395: Foss Migration 
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0395/hpr0395.mp3
Transcribed: 2025-10-07 19:45:45

---

Music
Hi everybody and welcome to another podcast episode. In this episode we're going to talk
about Linux migration strategies for corporates, large corporates and for small SME companies.
I'm Mark Clark, I live in South Africa in the city of Johannesburg and I work for an
open source solutions company. I'm joined as always by my co-host, Darlene Parker.
Hi Darlene, how are you? Hey Mark, I'm fantastic. I'm glad to be with you this morning and yeah,
so my name is Darlene Parker and I'm in Calgary, Alberta, Canada and so I work for a Linux-based
development company and this is again another area of interest for me to be able to help people
make the decision and feel comfortable adopting open source solutions. Okay, great. Before we
move into a major main topic for today, I'm going to have a quick chat with Mohammed Ayad.
We spoke to Mohammed last episode and he's a Linux security expert in Libya and we thought
it would be a good idea maybe to come in every episode or whenever there's anything
or interest in the Linux security area to give us a bit of a chat about that and run down
what's happening there. Hi Mohammed, how are you today? I'm Mark, how are you? All right, thanks.
I'm good, thanks. So Mohammed, he got you on the show today to do a segment on Linux security
and you want to talk about Linux viruses. We'll have to just explain a little bit. I thought
there weren't any viruses for Linux. Actually, Mark, one of the vulnerabilities of the Linux system,
the user who have the misconception that if that cannot be infected by computer viruses and Linux,
well, many experts, security experts, talking about that growth in Linux machine, even if Linux
gets super popular, it's still going to be hard to make viruses for Linux. All in Windows
machine actually the same. If we send a file to someone for Windows machine, it will be executed
this, that file is executed the same on the almost Windows machine. On Linux, this is not
and never will be the case because of the all different Windows manager,
Windows we have in Linux and this is top thing is things on different like we have a GNOME
and KDE and XC. So now you will have to, if you are a virus writer, you have to write your viruses to
address all these different environments. So then the top of that, even if you have a
soos or you point to Futura, all of these distributions using the same
using the GNOME, but we still, well, they act different, for example, the permissions on each
and different. So some of these distributions using Sodo and other don't.
So it's kind of like biodiversity as well. The biodiversity, you have the mood
trying to go to surviving a disease. If it's no like diversity then single disease or
can come along in a one path entire population. It's sort of similar to genetically modified foods
and why everybody is scared about that because if something, if it turns to genetically modified
foods, in the next minute there's a virus and it warps off the entire world, you know,
I'm food supply. Well, similar type of thing. Well, what we keep hearing these days,
people keep saying wind is so popular, which is why wind is machine, get hit more,
that is the case of that desktop. But let's look at the server. They are a way more Linux
and Unix server on the internet, more than Windows server. So they still,
when the server gets attacked and hack it more than Windows Linux server. So to run Windows server
on the internet you have to be fire walled into a toilet zone and you have to be protected.
While millions of Linux server and they are directly connected and facing the internet and
they don't face any problems. So they keep seeing that population of Windows, that's why
it's targeted and we can't find a lot of viruses under Windows. But we can't see there's a
million of Linux server on the internet. So this is not the next huge I think. Yeah. Yeah,
no, look how cute you always hear that that argument, as you say, you know, while the reason
is no viruses for Linux is because it's actually for use it. But as you say, I mean, I think the
Netcraft server is always show that Apache Linux servers are about 67% of the world's internet
servers. 60%, 65% I think. Yeah. And then it's actually Linux these days, then it's had
over 60 million users. So if it had the security flows anywhere near Windows issues, so then they
have to be exploited by now. Yeah, 60 million users. Yeah, and I agree. Also, you know, I think it's
as always is marketing, you know, good, what you call it, fad from Microsoft about the whole
security thing inside of things. Back to the Linux virus history, it was initially detected in that
and I think 1996 with exploited vulnerabilities being discovered that virus is called
a virus called a stout. I think stout from Australia stout. Stout was able to
supply the next design, which calls for user and application to log in before any
questionable operation. So the virus is actually functioning by exploiting vulnerabilities in
the kernel. So they fix the kernel and they release a dash or kernel and that fix that.
So that the history of Linux, the virus is Linux starting from 1996 or 2007, that is
long story. And then history I think is about over 12 years. And is that that was the first virus
for Linux? Yeah, this is I think it was the first virus from the stout. Yeah, so let's just
go and show that people have been trying to talk about Linux for a long time, but they haven't been
really that successful at them. Yeah, there's no available virus. There's no available
until these days we don't see any viable virus or a bit demic or widespread viruses like Windows.
And if we will talk about statistics for viruses, we can't find about
over 80,000 viruses for Windows under Windows. And only 800 virus or Trojan for Linux,
only and none of the Linux viruses become wild widespread. Most of them only
proof of concepts or they confined to the testing or laboratory. Compared to Windows, they are
over as I say 80,000 viruses and we can't find 100 of these viruses because of the widespread
damage. Yeah, as we can see that. Yeah, I know for sure. And I think as well, I mean most of the
security breaches do happen, tend to be these brute force attacks. So once again, it's the human
factor that comes into contact. If any servers are sort of a hack, there's normally misconfiguration
and poor passwords. Yeah, they're actually using a technique of finding a vulnerability
on the some surface, above actually. And they take the privileged
from that surface. They call this technique a privileged escalation. The cross-platform viruses,
we can hear it about this technique this day. Yeah, cross-platform viruses,
it's driven by the popularity for cross-platform applications. For example,
yeah, for example, open office. We can see a version for Mac or version for Linux,
variant for Windows. So the hackers or virus writer, they targeted these kind of
applications by, for example, from Linux user and I used that open office to save file. And I pass
that file to a friend or colleague. And that file, it will be infected by the viruses. And that
virus doesn't work in under Linux. So the other side will trust on the center. So it will open
that attachment file to be infected with that virus. Yeah, we can see that. And I think that the
first cross-platform viruses come called bad bunny. Bad bunny. Bad bunny, yeah.
No, no, that's interesting. So basically, this is using Linux to disseminate the virus,
but it doesn't actually sort of infect the Linux machine itself. Yeah. So it's kind of like,
Linux is a host for the virus. Yeah. Okay. That's interesting. There's always a new way
as the people are finding to try and infect basically Windows machines.
Also, there's a Linux binary virus that infect the executable files. So actually,
the binary files is a little bit more dangerous because they must be writeable by the user,
activating that virus, is that not likely to be the case. Chances are the program are
owned by root. And the user is running from non-privileged account. Even if the virus is successfully
infected program owned by the user, it's a task of propagation is made much more difficult
by the limited privileges of the user account. And this is the, as I told you, there's another
technique used to avoid this using the privilege escalation. The privilege is, yeah,
the privilege escalation is just act of exploiting or above or design faults in the software
application to gain access to resources which normally would have been protected from the
firmware application or user. The result is that the application will form action with more
than attended by the application developer or the system administrator. That's the
technique used. Yeah, privilege escalation. Yeah, the privilege escalation. Typically,
it allows you things like buffer overruns and all kinds of things like that to be able to run.
So Mohammed, next episode you're going to be joining us again. Do you have any idea what
issue you will be covering for our next episode? Yeah, what's about talking about root
well, thanks so much to Mohammed for that contribution. It's always it's been very interesting
and I'm sure listeners can always take something away. And we look forward to hearing from you
on an ongoing basis. And like I said, we can all learn something all the time. But thanks again,
Mohammed. Okay, great. Now we can move on to our main topic, which is Linux or open source migration
strategies. Just to sort of say that most of my experience with migrating to open source software
for companies is related to SMEs. But a lot of the principles that are planned to SMEs,
obviously are planned to to large corporates as well. And to obviously the scale is just a bit
bit different. And I think there's two ways that open source typically gets into corporate
one is like a sort of conscious decision by management to introduce open source into the company.
And others, we're sort of just infiltrate the organization typically through the RT department
or business units where they have their own RT departments if it's a larger corporate
larger enterprise. And we're technicians and technical people start using open source solutions
in building their own, you know, solutions to the problems that they're trying to
try and find answers to in their business. So typically you go to any company in the world,
you're going to find there's some kind of Linux open source software already in use in those
companies, even if it's not an official policy or the corporate itself or the RT department that's
in there. But we're going to talk more about the conscious decision to move towards open source
software that a corporate might take. And that typically might be as a result of the RT department
and technical people using open source software and finding out that it does solve their problems
and, you know, getting experience with the benefits that it offers them and then deciding
on maybe it's better to take a more formal approach and roll us out across the serves and the
dish tops in the cooperates. And Mark, I think there are two deciding factors that have encouraged
people to look in an alternative and one is the current economic climates around the world right
now. And I, for my own experience, IT budgets have been particularly hard hit. Lots of IT people
being laid off these days. And so how do they make budgets that they've been allocated? How do
they stretch them? How do they make them work? And in the meantime, still meeting the demands of
their users in the business. So, and also, I think the other thing is that with the advent of
things like Vista and people having to learn a Vista in Microsoft 2007, people have had to
relearn again. So it opens a window of opportunity. If you're going to be learning something, you might
as a learn, maybe look in an alternative such as Linux. Yeah, I think that's true there. You know,
some of the other corporates recently with Office 2007 and Vista and all those sort of retrain
that would have to happen there anyway, sort of look at looked at it and say, well, they're miles
while it uses an opportunity to switch to open source solutions as an alternative to the
proprietary solution and save some more longer term costs as well. You know, when these corporates
start looking at moving towards open source, one of the key things is to have management buy-in
and to have, you know, the business side actually champion the whole process because really,
it should be a business decision to move towards open source, not a technical decision. And that's
true of any project, you know, as well documented how you run projects and corporates in terms of
having changed management in place and processes to roll out the changes and make sure that you take
the people who the change is affecting with you to prevent or to at least minimize user
resistance to change. So yeah, so I think it all starts off, you know, if you're doing a conscious
sort of move to open source software, it starts off with top management and having to put a plan
in place to do that. Great. And I think, you know, accident not just, like we talked about before,
it's not just budgetary concerns though. I think, you know, I mean, obviously we have total cost
ownership and all those kind of consideration software licensing. But I don't think it's only
to focus on the dollar amount as well, you know, especially if you have an organization that
has some in-house development teams and, you know, can work on some of their own proprietary
software that they need. I mean, they're used to being able to see the code work with the code and
you know, being flexible and being able to, you know, mod what I was going to say, you know,
to customize stuff to their own needs, I think it's important to some businesses. Do you agree, Mark?
Yeah, I would agree with you. I think there there's sort of two types of areas that
open source can be used in business. One is sort of open source applications and the other one is
sort of when you've got your own in-house development team and in-house software that you're
developing. But that definitely forms part of the whole migration strategy and benefits that
can accrue to a corporate when using open source. But I think the, you know, all of these sort of
things are identifying what, when you start any kind of major project, you must carry out an
analysis of what your needs are in the organization. And then sort of identify what are the benefits
that are going to arouse on this and what are the costs involved in the whole migration. And then
also making sure that you put key performance indicators in place that you can sort of monitor and
measure. You say, has this project been a success? Has it achieved the objectives? So in terms of
doing that for open source, really open source in your corporate, you need to identify what are
the benefits and obviously it will be things like, you know, not only as you say in Berlin, not only
things such as licensing fees and all of that, but also things such as intangibles, you know,
what you're talking about there, which are quite quantified in terms of reduced development time
for internal projects. If you're going to be sort of using a tech and open source project,
you can start using it as a basis for your own customer, software, and target organization.
All right. So the next thing I think is like you said, getting that key plan in place and
thinking about things like timelines, you know, what existing software do they have to do in
inventory? I guess that goes along with your needs analysis that you spoke of. But, you know,
inventory, what you're currently using, try to find a matching open source application that
will go along with it. All the pre-planning, I think, makes the, the role of that much more easier.
I just think as part of the plan, you must always include user training and you must
expect that there's going to be resistance from users to change. And that's not just because
it's open source. It's users, it's just any kind of change. I think anybody that's been
in any project in any corporate of any size will know that, you know, people don't like changing
there is this change. So you need to make sure that you manage that people aspect of the whole
the whole migration. And I think that's, you know, and once again, it's not something
which is peculiar to an open source migration. It's something that's in any project in any sort
of good project manager or change management person is big corporates. We're not hard to handle
and what needs to be done and put in place for that. And of course, what does, as we did say,
of course, when we reiterated, it's key to have business buy into it and have top management
championed the whole migration process. They're not convinced of the benefits of doing the move.
You know, you're going to find it a very hard to convince the end users of the benefits as well.
So typically, if you're going to have your top managers, they're going to use open office.
And, you know, the MD still and the CEO are still using Microsoft Office. You're going to find
a very hard to convince the other managers low down the line that there is a, you know,
that they should switch as well. So it's my, it's key to make sure that the whole people aspect of
it is handled properly. Right. And I have to concur with you because I, I've been involved when we,
we're old, when we went from NT Windows NT to XP or when we brought in Lotus Notes into an organization
and helping people get adapted to that because those are the intangible costs or those hidden costs
that we also talk about with how much time do the, does the support desk or the desk side
support people spend assisting the end user. So when you talk about, I agree, like put in the
training, you know, as part of the plan, you know, like I always suggest setting up a training lab
where people can go spend some time on the application before they come to work on a Monday morning
and it's already installed on their machines. And I think, you know, just in terms of the technical
technicalities around the role art and how it might be and how typically happens in corporates.
Yeah, normally starts on the service after part of your plan would be okay. Initially you're going
to start migration on the service after open source software. So there'll be things like replacing
your mail servers and your file service, open source alternatives and putting those in place.
And what's great about that, of course, it's transparent to the end user. So they're not really
disrupted that much. So you're not going to face a lot of resistance from end users, but something like
that is you know, you're migrating your server side over to open source software. And at the same
time, it allows you to get your central RT department bit more skilled up in open source hard works.
I'm then a philosophy behind it to how you go about finding assistance and help with open source.
And also obviously finding things like partners that the corporate can use in this open source
move to support the various applications that they're going to be putting in place there.
And I know that in our research for today or both of our research for today, we did talk about
the successful rollout they've had in France with their police force. And it was a look like it
was about a three year project that they engaged on starting in 2004. And still ongoing,
actually so that I should make that five years now. So they're still ongoing today with
their rollout to bring it to all of the all the precincts. Yeah, look, I think the, you know,
Europe tends to be much more larger migrations in Europe over to open source than in most other
countries in the world, especially amongst the governments in Europe and the sort of municipalities.
A lot of people move there. So the world documented one about the French police force. I mean,
they're moving over, I think it was something like 4,000 or 5,000 desktops over to the open source
solutions. And yeah, it's taken in a while to get there. That's the thing. Sometimes it can be a long
term plan to move people over. I just move them all over suddenly. And I think that's the,
you know, they're following a well documented process for doing that. In fact, in European Union,
there's at least quite a lot of research and recommendations on how to move towards open source.
And if you search on the internet, especially a site called, let me just get the address,
guard.connected.arti. They basically put the European Union's manual on the internet there. I'll
put that in the show notes of people who are interested. guard.connected.arti. And so, yeah, so
Europe seems to be learning a lot of lessons and actually, you know, following the open source,
what you call it, methodology or ethos and sharing its findings with people. I think the
biggest, you know, I think my people are comfortable with moving over server-side stuff to open source
software because it's, you know, it's really easy to do and your technicians are skilled up.
It's on the desktop where, you know, if you're going to margue people across to open source desktop
solutions, you find a lot of challenges around that. You know, I think there's some interesting
techniques people use to sort of get users to move over to open source solutions. And one of
the examples is to sort of start by implementing open source solutions on Windows operating systems
or whatever other project operating systems that might be running. You know, so something like
Thunderbird for the email clients or start using open office to replace Microsoft Office. So,
by the time the guys move over, they're really familiar with the applications because I mean,
obviously there's two levels. There's operating systems and the applications. Right. So, I think
that's what we would cut of what I would call like a warm migration where we start doing it in
steps. And I think we can outline those together today. And like I concur with you, Mark, just trying
to get them to, so instead of just a hard migration, when I can say they come in on Monday morning,
they got a whole different operating system and all their applications are different. This is a
better way to do it in a staged approach. And the most common, like you say, like switch them over
with the most commonly used applications such as, like you say, they open office, they're browser,
they're web clients, and so on. And then after that, I think the next important thing is to find
somebody in the, you know, in each group or office location that's probably a power user.
We would call them and you could train up that person so they could kind of be the go-to person.
They would be the familiar. They could be the change agent in the group, right, to help drive,
be part of your change implementing the change.
No, I agree with you. That comes down to that people with management issue that you were talking about
earlier. So as part of the plan, you should identify your sort of key individuals in any business
unit that will be needed to be trained up and, you know, there will be the guys that will champion
the open source solution within their business unit and sort of get adoption going within it.
So, yeah, so I think that's also a key part of the plan there. And to go out with that, you know,
there are certain sort of, you must have training sessions for these guys and also having
incentives to get people to switch over and learn new things. I think that's always encourages
people to adopt the new technology. So you've got to show them the benefits that it has over
the old technology. Okay, so I think it's important to identify users that will be easily migrated
or easily trained. People that use basic applications, like I wouldn't go in and start with some
things using AutoCAD or, you know, special high-end graphics programs right away, because those
are the ones who will resist it the most. I think it's to start with the groups that will benefit
from the change easily. I think it's important to identify those people and, like you say, train
them up. And again, just get them prepared for the change, you know, give them some realistic
expectations and get them hands-on working with it. And I mean, as you say, there might be some
applications that you absolutely can't migrate or some users you can't migrate, you know,
maybe they're doing something in the spreadsheet application, but she cannot be replicated in
open source alternative. You know, in those cases, part of your plan was to identify those guys
and identify what it is that they need and where they cannot be done and where there's just,
you know, people resisting change. But, you know, in that particular case, well, it doesn't
mean you get to abandon the whole project. You know, you can look for alternatives like running
them in virtual machines for these chips. We're running them in one or something like cross-over
office. So, shouldn't, you know, what you want to avoid doing is allowing one of the individuals
to sort of avoid the entire migration path, because then that always creates the scent.
And from other people, you claim that they can't do their job because they can't access all
of these different technologies that they used to. So, it's a case of also potentially
complete either all situation. You can sort of also put open source solutions and let them co-habit
as it will cooperate with existing proprietary solutions in the organization. But it must be done
in a controlled manner and not in sort of like the ad hoc, you know, depending what the person
who's using application feels. Just make sure that there's a clear reason why you're staying
on the proprietary solutions. Your objectives, you say cost cut costs and obviously get
other benefits open source software. Great. And I believe too, it has you work through your process.
Things will change and you need to stay on top of it. Like when I was reading about the French
migration there, when they first started, there was a lot of resistance because people were very
reliant on the shared calendar feature about look. But that's when they started in 2004.
There really wasn't an open source alternative to it. Thunderbird did not have it. But now,
as you know, here we are in 2009. Well, I know at my office we all use Google Calendar. It's a shared
calendar. It's on the net. It has nothing to do with our email clients. Or there's also a lightning
add-on for Thunderbird that gives you that calendar functionality. So things do come up. Things
are being developed all the time. And I think as part of your process, you need to stay abreast of
that and look for the stuff that may help you along the way. I was just also going to mention too,
if so many applications now being on the web like cloud computing and so on,
that people aren't really so reliance on their OS anymore. So that's another consideration
to think about too. That's true. A lot of the stuff is browser-based these days. And that's
one of the benefits that the internet and the web offered people was that freedom to easily
deploy new changes and to help access for many operating systems. So you were independent of
the way you were accessing that particular application. And just to reiterate, one of the key
things to do with this whole process is to continue to record the benefits that you're gaining
and to make sure you're measuring the benefits and how long it's taking, people to train people,
how costs are being reduced, all of those good things. Because at the end of the day,
to put your project in success, you need to make sure that you have the proof to make sure that
you're turned on investment for this change. But I mean, it's going to cost a bit to change.
No doubt about that. You say that it actually was worthwhile to carry this out. And it also
shows management as well. Look, this is the decision that was made and this is the outcome of that
decision. Who often what happens in these processes, no one measures the outcomes. So then everybody
remembers the pain but not the benefits of the whole moveover process. And typically you go with
a curve where you have to get people passed the dip as it were when they're changing over,
where there's a lot of resistance and start moving on upside of the curve. They start realizing
the benefits to the everyday life and just of working in the ability to get their job done.
And like when you talk about measuring costs and so on, things like, you know, you have an IT
budget for your new acquisition hardware. You can be buying your new hardware like your budget
for every year. You're going to replace 200 desktops. Those 200 desktops can come now,
can come preloaded and preconfigured with your new open source solutions. And then as well,
you can retrofit your existing systems, you know, on a staged basis. But the other thing I want
to talk about too is, you know, we talk about corporates, but you know, there's also, you know,
people that might be listening that are in the educational space. And I know that I've been working
on a project in education. And one of the things is that I found is that the teaching staff
may be resistance changed because we've talked about that. And that they all of a sudden they've
lost their position of knowledge. And because usually, you know, they can help the students with
something, just go to the control panel and adjust this. But when they have a new system in place,
all of a sudden, they're kind of on the same learning curve as the students. And it could be a
little scary for them. So I think it's important to use those professional development days ahead
of time and and bring the staff on board and train them before they're, it's actually in the classroom.
Yeah, I think that, you know, highlights, as we say, the people issue involved in the whole
in the whole migration. As it's always got this people process and technology. The
often projects felt not because of technology, but because of the people issues in the whole,
in the whole, you know, role art that you're doing. And this is to get some practicalities around
like, you know, what, what we do in smaller, in the ACV marker, we tend to be more active. And,
you know, on the desktop side of things, when you're running Linux, the, you know, basically,
you've got two choices. One is Ubuntu desktop. And the other one then is to go, if you're going to
do a whole integrated, you know, same sort of operating system on the server, as you've got on the
on the desktop, would be to go with Neville Suisse offering. Yeah, the advantage of going with
Neville Suisse offering is there's this, you can say, if you look, there's this corporate
effort support. So if the partner that's providing support goes under, you know, then you can
contact Neville and I'll have another partner take over that support for you. You know,
Chronicle does the same until the desktop support. And obviously, as we all know, Ubuntu seems to be
rather dominant on the desktop. And I think they made a compelling Linux desktop operating system
there. You know, and then if you're going to be running Ubuntu on your desktop,
in particular, on the server, you know, you'll be running something else, either a Red Hat server.
And I wouldn't recommend running Fedora as a desktop in a production environment because,
you know, as I've said before, Fedora is basically a beta software for Red Hat's
enterprise server offerings. So, you know, you have a lot of problems providing support for that.
So, you know, my recommendation is to sort of either go the whole, you know, Vail Route,
or to use Ubuntu on the desktop and then basically a bit more free to choose what you want to use
on the server side because, you know, engines don't see that. But typically, there's normally Red Hat
for stability and support. And just to follow up on your comment about the support that people
are looking for. So depending, of course, on the size of your organization, I think it's really
a good idea for someone to, like, to designate someone whose role is to be the interacting
with the open source community or with the vendor and also to try to find those online resources
so that not everybody, like, today I come to work and I needed to, you know, I got to, I inherited
a spreadsheet that had macros in it. Well, macros don't work in an open office. Or maybe they do
with open office three, I'm not sure, but before they didn't. So, who am I going to go and spend
time on the internet looking around? You know, maybe I don't have time for that. But if I had
somebody, a go-to person or somebody can build up our own internal wiki with usage tips and so on,
I think that's another, again, another management tool to kind of get through the process.
Yeah. Look, I think I also come down to me, depending on the size of the organization,
it's migrating in a bigger corporate want to know that somebody and willing to pay for it,
you know, they can provide ongoing support all around the world to their different offices,
you know, in different countries and all of those good things and that the worst case scenario,
you know, it's not that the company, the company goes under and then the support goes, disappears.
And that is where, obviously, corporate's luck or offering such as red hat or canonical for
Ubuntu or Neville really plan that kind of market. So, you know, I'd highly recommend, you know,
using a providing software like that that's supported with the corporate's behind it's two
enterprises. For your moment in pop shop, you know, typically there would be like guys who just
buy Microsoft, put it on their desktop and they probably never ever find Microsoft in their
life for support other than to activate their XP or something like that. Pretty much like,
I think most people in the world have never really seen a Microsoft, you know, spoken to Microsoft
directly for support. You know, those guys in the quite willing to sort of use their local
nerds on site kind of company to provide them with their support. So, yeah, so I think it's also,
you know, but that's all part of the planning process and when you always see initial phases before
you start the process, you will go through these phases, you know, identify who your key supplies,
what's distribution are you going to select and run with, you know, and all of those stuff,
luck support costs involved, you know, where these guys are geographically located, so there's no
point in sort of going with the operating system, if they don't have any support in the particular
country, you know, sometimes there's a bit of issue in Africa because most of the people don't
have presence in a lot of the African countries, so there's no real support, the identity sort of
finds somebody in North America. So, yeah, so that's all issues to sort of take into account when
you actually decide on your deployment and migration plan. And, you know, often when people think
about migrating to open source, we're just typically thinking about moving the desktops and, you know,
the spreadsheets and the mail class all that over to open source alternatives, but also where
company can benefit a lot from an open source is in the own internal application that they develop,
and most companies in the world have their own internal development departments, even though they're
not software houses themselves. So, if you have big mining house like the art of Africa and you
developing software, there's relevant to your mining operations and that kind of stuff, you know,
you've got your own developers maintaining that. And where a lot of benefits can also be,
you've got from using open source software, and as people sort of move through the stages of
open source adoption, first of all, I'll start using some of the software inside their own
organization to build their own software solutions. Then they start sort of contributing back
in terms of bugs and maybe code fixes, and then eventually I might reach the stage where if
you were the company, you're like, look, you've got this application development house,
you open source it, build a community around it, get everybody to contribute to it, you know,
and it sort of becomes a issue, even all other places, and then you also start contributing towards
a software, because that is expect not your competitive advantage if you're a mining house,
so necessarily your software is going to make you more competitive than your competitive basically,
you know, there'll be other issues like your efficiency of your mining operations and that kind
of stuff. Right, and I have to concur that again, because it expands your resources, because you
may have a, so you have a six or ten people development team, when you get involved in the open source
community, and like you say, put your, you've gotten to a point where you want to open source
your software, you end up with a, you know, the whole community that helps you and it just,
you know, exponentially increases your resources to look through those bugs, to have them found,
to enhance the software and so on. Yeah, definitely. So I think it's definitely something else,
which, you know, if you look at the sort of adoption, an equal adoption path of open source
and corporates, you know, there's definitely moving just beyond sort of a,
making use of the software yourself, but also contributing back to the community.
So maybe we can just recap some of the things that we talked about in stages here, Mark,
in that, you know, again, on how to be successful at implementing this or suggesting it.
So I think we started with, you know, with the management buy-in and how that can affect the long-term
success of the project. And we also talked about doing an inventory of existing hardware,
existing applications and software that are currently being utilized in the, in the organization.
And then we went on to talk about identifying those, those users that could be your key influencers,
also identifying the correct users to start with your roll-out, the ones that maybe aren't
using those high-end programs. Yeah, and to sort of identify your, you know, your expected costs,
your expected returns on the both tangible and intangible returns and putting in place,
process to measure those costs and the benefit that you're going to achieve are
migrating to the open source alternatives. And obviously sort of making sure that you have a plan
in place, a typical project plan, what you're going to do first, in terms of rolling up potentially
on the server first and then moving to the desktop from there. The invisible migration behind the
scenes and then moving forward where we put in the, maybe the open source programs on top of the
windows platform, get them used to that before we move to the next stage. Like I said, identifying
those key users, then doing the training, and then moving to the full-blown roll-out of the OS,
then. Okay, I think that's all the tips, experience and ideas I have around open source
migration solutions, migration plans. If I read, if I listen to this, have any other ideas, please
feel free to add comments to the site. Dollyne, do you have any lost comments or any other ideas
you'd like to add before we go? Well, I think we've given people a good oversight.
You know, what it would take to be successful at this. And I know there are a lot of resources
on the web, like when I was researching for this, there's a lot of documentation people put back
on their experiences. And so I mean, it's a good place to start. Anyway, it's listening to the
podcast, getting it in your mind. But I think that's all I have to share as well, Mark. Okay.
Okay, everybody. Well, thank you for listening, and we'll catch you next episode.
