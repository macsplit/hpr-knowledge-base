Episode: 2959
Title: HPR2959: Interview with Josh Clements about gpodder.net 
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2959/hpr2959.mp3
Transcribed: 2025-10-24 13:55:29

---

This is HPR Episode 2959 for Thursday the 5th of December 2019.
Today's show is entitled interview with Josh Clemens about gpodder.net.
It's part of the series' interviews and it's hosted by Ken Fallon.
It's about 39 minutes long and carries a clean flag.
The summary is what starts as an interview ends in a brainstorm.
This episode of HPR is brought to you by archive.org.
Support universal access to all knowledge by heading over to archive.org forward slash donate.
Hello everybody, my name is Ken Fallon and you're listening to another episode of Hacker Public Radio.
Now in the last few months you will have heard the Ogg camp episodes where we went to Ogg camp.
And during this we handed out a very popular list of free Creative Commons podcasts that are
currently running. And most of the information to get that was script from a website called gpodder.net.
And a lot of you will be familiar with the gpodder podcast application and then I remembered hearing
that their site was looking for help or whatever. So I pinned the founder and they were gracious enough
or one of the project leads and they were gracious enough to have this interview here today.
So joining me today is just introduce yourself.
Hey Ken, my name is Joshua Clements and I'm a recent volunteer on the gpodder.net website.
So can you tell us a little bit about what gpodder.net is for anybody who may not have come across us?
Yeah, absolutely. So gpodder.net was originally developed as the web back in basically a method
to sync all the data that was developed in the gpodder podcast client, which is obviously a client
side application. Yeah, that makes sense.
Yeah, so it was kind of it was started by Thomas Pearl, who was the original maintainer of gpodder.
Actually, I think he still works on it. He had a fledgling web-based sync capability and so
Stefan Kogel decided to kind of pick that up and develop it out as a go app and now it's grown
into what it is today. So gpodder, the application as a go app is it? I think gpodder is written in
Pearl, but I'm not sure. Okay, so what does the gpodder.net website do and the need to use gpodder
the client in order to use it? So over the years, Stefan's step spun out some different
capabilities. He's developed a full blown API, which I think is in its third iteration at this point.
The two series is the stable one, but now it has a lot of its own capabilities that can work with
a lot of other podcast clients. So you can it's basically serves as a website podcast directory
with search functionality. You can manage users subscriptions, sync their states, you know,
if they're new or played or if they've already downloaded them, that kind of thing. And also some
kind of social functions where users can provide their own list of podcasts to share with people.
So I suppose a lot of people might be familiar with the iTunes repository where you are the
Google podcast directories where you can browse lists of podcasts. That's kind of similar
what I'm seeing here. I see yeah, yeah, discover a section. Yeah, absolutely. Yeah, so it's
it's very similar to that. Of course, the big difference being that it's built with open source
technologies and uses it and is provided under an open source license. So what sort of licenses
the website available is? So right now we use the aferro gpl, which is a gpl variant that supports
basically web web services. Kind of gpl3 for the web yeah. Okay, so when I clicked on the podcast
directory there, I'm basically dropped into a section that's got trivia and about 10 different
trivia podcasts, sports and recreation, family and kids, talk, radio, gaming, that sort of thing.
So you could use this if you wanted to figure out what type of podcasts that you wanted to listen to.
Then along the side we have search and podcast links, suggestions, licenses, podcasts and episodes.
Can you give us a virtual tour around the website please? Yeah, so I'm kind of poking around
urine. Yeah, I have some technical difficulties myself. Okay, so yeah, I'm actually not too familiar
with this part. So we may need it. We may need it at this part out. Sorry about that, Ken.
No, I edited nothing. I will happily I will happily go through the website as well. So you can create
you can create accounts on the website, which I which I have for many years. And every time I
sync up my G-Podder up there, then I get a list of podcasts. So if you go into the search area,
for example, and you're given a search box. So if I put in hacker public radio and then I press
search and Bob Geonkel hacker public radio comes on and apparently we have 1,500 and one subscribers
on there, 52 and another fee 27 on other various from feeds. If I clicked on my podcast list,
I get a list of all the podcasts that I'm currently subscribed to. And if I click on suggestions,
I get suggestions. So that's a bit about the website itself. Thanks for picking up the slack on
that one. Thanks not a problem, not a problem. So what was the story? G-Podder.net I heard was a
was a one person project and then there was a call for help. Can you tell us a little bit about that?
Absolutely, which is exactly how I got involved. You know, I heard step on go on on a podcast.
I'm a big fan, a lot of the juper broadcasting podcast. So either heard about it on one of those
or maybe the Bluetooth podcast. But yeah, I mean, essentially this was a one-man show for a long time
about 10 years. And so step on basically said he's got, you know, he's got, he needs some help and
he's looking to eventually devest himself fully of the responsibility. But yeah, so now we've had
about 16 other people that have stepped up so far that have said they'll start contributing. So
we're still in the middle of learning the ropes, figuring out exactly what goes into it and how to
assume all of the things that step on has been doing over the years. So what's involved in all this?
So it's it's mostly mostly Python based. It's, you know, the website itself is based on Django,
the front end with a post-gress back end. And of course, Redis to kind of speed things up a little
bit. Of course, we're running Ubuntu LTS servers on the back end, which are graciously hosted by
PRGMR.com. I think you just call it say that programmer, but it's kind of abbreviated.
But so like I said, step on was a one-man show. He was, you know, reports, answering questions
with people having logged in and then also doing all of the development. So to this point,
we've started to break it down into those three areas where, you know, there's somebody that's
kind of doing the public stuff. I've kind of been been doing that stuff like one of the Twitter
account and everything. And then we've also got the support piece. We've branched out into a actual
like ticket platform. So instead of step on getting all the emails, they go to Zohodesk
for now to basically manage a ticket request. And then also, I think the spot where we need some
help actually is under the operations where, you know, checking to make sure the servers still run
in, you know, there are problems with the site or the back end functionality. So right now we're
that's kind of where we're at. We're self-organizing under that under step on guidance and assistance.
And where do you, where's the code hosted? So the code is hosted on GitHub and then we've also
got the documentation auto building to read the docs. Okay, very good. I'll put a link to the GitHub
repository in there in the show notes for this episode. So basically this is a, you're trying to
get this from a one person project to be a, you know, a real world open source project, I guess,
and all everything that goes with that. It's actually quite apropos because tattoo over at the
new world order podcast was describing something very similar to this that if you have a project
that is floundering and people rely on and love, then, you know, put out the call. And this is,
this seems to be a happy ever after story of somebody who did that very thing. So what
prompted you to to come forward? So, you know, I got involved with Linux, probably about five years ago.
Well, actually, when I was a kid, but then there was a long break. But I think that computing is,
I mean, anymore, it's turning into something just like math, you know, like nobody should really
be, nobody should really own some of these things that we figure out. That's kind of like
based truths. And I think that's where open source comes in, right? You know, like we're basically
sharing the things we figure out and letting other people refine them and build on them. So
along those lines, when I heard that he needed help, I was just like, well, I guess now it's
a good time I ever to jump in there and then participate. That is very, very good, actually. I
imagine it will be scary having all of a sudden 16 people turn up and your doorstep and just go,
okay, how are we going to do this? And how are we going to maintain the enthusiasm? Well, at the same
time, taking the project forward. So it's actually quite cool to see how this shapes up. And
you're very welcome back in a year or two to give us an update to how you're getting on the
amount you need. So specifically at this moment, you're looking for people, operational people.
And then tell us a bit about the requirements for that job. So, yeah, obviously, you know,
experience with Django and Redis would be most helpful. And then, you know, as I said, we're
running on a Ubuntu server. So Linux administration would also be very helpful as well. But for the
most part, we've got enough people that know, that are learning about the code to basically
keep the code running and basically talk back and forth between what's working in test and what's
failing. And put what we need to push to ops. But yeah, so many that can respond to those
just those emergencies that pop up as things go along. So like I imagine if virtual help desk
around the world, three people volunteering in three different tons on stuff. That would be
pretty cool. Yeah, yeah, that'd be great. Yeah. And obviously, you know, somebody who's, you know,
knowledgeable enough that they're not going to take the server down. Yeah, yeah, exactly.
Yeah, exactly. Yeah, yeah, exactly. You know, you know, stuff ones that are really good job
at building a quality product. I mean, we've got, you know, tens of thousands of people using this.
I think actually, yeah, the last count that he provided was 97,000 registered users
hosting 370,000 podcasts. So yeah, it's pretty important. A lot of people are counting on it.
And while we just, we need trustworthy and competent people. But, yeah, I mean, I think it's just,
it's really important all together, too, that we have these open source alternatives to things like
the iTunes, our iTunes directory. Absolutely. There is, are you familiar with how the
podcast gets added to G-Potter? Yeah, actually. So if somebody comes and does a search and
doesn't find it, you know, the person can actually add the feed. So if you can add the RSS or the
Adam link, usually that is all it takes to get a podcast as added to the directory. And I see
here, well, under HPR, and actually under quite a lot of the older podcasts that over time,
the older RSS feeds are still in there, but the new ones don't seem to be updated. So how would I
go about? If that's happening for HPR, I assume it's also happening for other podcasts.
For example, on the HPR feed, where the icon for the logo is from 14 years ago,
we've updated some our local sense, is not opening a bug report here. I'm actually
requesting, where do I go to find the code that I can fix that for everybody?
Yeah, so that's kind of thing. Step on as mentioned is that we could probably use some help
figuring out how to get rid of those, you know, because they're essentially duplicates, you know,
they're older versions of these things. So if somebody is familiar with how to do some stuff like
that, if they wanted to come over to the code base and submit some simple requests for that,
that'd be great. Excellent. There's a one thing I noticed as well, when doing this,
compiling that list, I've gathered a lot of information from people's RSS feeds, our
RSS feeds. And one, the RSS feeds are so flexibly defined that people use them in different ways.
And then you have the autumn feeds who are so strictly defined that people
import their own namespaces. So essentially you have two feed types that try to do the same thing,
but end up being chaotic. So I have no idea how they've managed to be able to pull in all these
feeds and still produce a working site. So my hat goes off to him for that, I must say.
Yeah, yeah, it's definitely a very awesome piece of software engineering. So basically,
I mean, he said that it hasn't been too big of a problem lately that a lot of people have been,
you know, I guess a lot of this stuff gets cleaned up automatically. But originally,
there's also like a sub-project called the feedstockgpotter.net. And so it's essentially a
parking service and it will clean it all up and clean JSON response. And also some like warning
and stuff if somebody wants to manually go on and I don't see what was going on. But
so there's that. And then he's also got a Python library for it's called podcast
parser that kind of does some similar stuff too. So yeah, so it's what's kind of neat about
gpotter.net is that it no more than just, you know, the website and the services behind it. It's
like he's got some other things to really make podcasts more friendly for open source community.
Wow, that is cool. I'm just on this website and I'm now drooling. Oh, very nice, very, very nice.
So this is actually something that we have been struggling with with RSS feeds,
particularly trying to promote other, the background to HPR is we're a community podcast network
where our goal is we're trying to share knowledge as much as possible and we're as encouraging as
possible of new podcasts that come along. And when they do, we try and submit them to the
Linux link.net, which is a feed of podcasts and we try and work with a host to see if there's
anything they can do to improve their website or feed or website or whatever. So this will be
excellent resource that we can also get them to add themselves to the gpotter.net directory
as we go. Fantastic. Yeah, it is. That's awesome. I'm the other hidden gems that I would
like to know about. So I mean, you could kind of, that's kind of the link to what I've done.
Well, actually, you know, one of the other things that's actually really neat is that
you could, in theory, you can clone the whole repo and in theory, run your own gpotter.net
at home if you really wanted to, which is, you know, kind of how we, you know, it's all fully
functional like most of us that are working on the project, you know, clone the, clone the code
and have a local instance set up with our own data just for testing purposes. And so that's
kind of neat too. If you wanted to make up your own server, you theoretically could play with it.
But how do you distribute the database, which is very partners to hate your question?
Yeah, absolutely. That's the, that's the hard part. So I think as the, as developers,
what we'll do is we'll, we'll take a subset of the production database to basically test against
live data. And it's obviously, it's instead of using the live database to test against.
But in theory, that that's what you would do is you would kind of like build your own
database if you wanted to, you know, play with it at home.
What's interesting to me, especially, would be to get a copy of the database. Is that possible?
I have to see how to, how to do that. I'm not really sure how we could. I mean, it's just a
Postgres database. So I imagine, you know, dumping it and providing it within the, to the license
and everything would be possible. Yeah, because we're, we're also considering, we're not considering,
we've already taken the decision to publish our database as well. But we're trying to see what
the best way of doing that, it will also be a Postgres database. The idea being for, for longevity of
the project, that if anything happens, any of us that somebody else can take it and go with it,
that people can use the data in any way that they see fit themselves. But also from our redundancy
point of view, that if we are de-dost and somebody takes out the website, we can just bring it up
somewhere else as something else. So if you are solving that problem, or if we're solving that
problem, it will be an interesting one because the gbutter.net without the database is, you know,
pretty much uses to be a list. Yeah, yeah, exactly. Yeah, I think that's the thing. It's like,
because I don't know about the intricacies of the database. And, you know, I know GDPR and
privacy is a big topic and issue nowadays. Well, to be told, we've also seen a podcast,
and you're putting a free on the internet, then your license, and there's an explicit license,
so GDPR would not apply. If you, particularly if you have a creative commons license and you've
released it, you're releasing everything in that under GDPR, including your email, and you can
take that back because you've licensed this job done, GDPR would apply. In my humble opinion, I'm not
a lawyer. Yeah. Yeah, same here, no, I think the thing is, it's like, I just don't know if they're
separate. I'm not sure how it's constructed if the user data is kept. And so what it would look
like, you know, obviously, we don't want everybody's podcast information, what they've subscribed to,
and what they've listened to. Oh, no, no, no, not that much. Yes, yes. Oh, absolutely. GDPR absolutely
would apply to that. Yes, no, I'm talking, oh, God, I'm a nutty. Yes, you're completely
correct, sir. Obviously, my, my, that would be very sensitive information. That's not what I'm
talking about. I am talking directly of the podcast only, not people's personal information.
Oh, my God. Thank you. Yeah. I don't go away with the idea that that sort of thing, my podcast
directly listening will be, is definitely covered by the GDPR. Yes. Okay.
Yeah. Absolutely. Yeah. Everybody of their tin hat just, just deleted their,
can't have that. No, no, no, I'm glad you're right. And this gives me a warm fuzzy feeling that you
are thinking along that line, because I have my history with, with gpotter.net is more from the
searching the podcast point of view, and not the logging in and managing all my podcasts.
And even then everybody on HPR already knows what I listen to, because I think I publish my
OPML files every time. So that's nice. Okay. Well, but good. Well, that's interesting that you
do need to take that sort of stuff into account. Great. Yeah, absolutely. Yeah, I think that's just
a whole mark of any, sorry, go on. Oh, and I was going to say, yeah, I mean, I think that's just
important in any kind of software project nowadays. It's just to make sure that you're taking
being in choice into consideration. Absolutely. It's actually not something that I've
particularly used on the website. As I said, I've used the website mostly as a
bare bones directory service, and I don't use the option to sync. So if you have a gpotter.net
client on your phone, a deep hunter client that uses the API, can you sync what you've watched
and stuff with your desktop using the website? Yeah, as long as, yeah, as long as you've got a
gpotter compliant desktop client, I do believe that that's that's all ideas that gpotter.net is
the backend that allows you to sync between the two. And then obviously what you're saying is that
you could download, if you didn't like this being hosted in the cloud, you could download
a copy of gpotter.net, build your own database, run us on your own Raspberry Pi in your front garden,
and yeah, yeah, absolutely. And you can sync your own devices. Okay, very nice.
Yeah, and obviously, you know, the caveat is that it really depends on how the client has
integrated, has implemented the API in which version and all that good stuff. So obviously,
nothing within, if it's without this, the scope of the project, like we wouldn't say,
like, oh, yeah, it all worked. Yeah, definitely, you know, your mileage may vary, but
and let us know. And, you know, part of the ecosystem is just, you know,
doing pull requests and feature requests to other projects, too, to be like, hey,
put them at this feature, you know, how come this one lets me sync, and yours doesn't,
and that kind of stuff. Yeah. Okay, but you could also, you know,
pull the API yourself to have a, to keep your own stats and stuff on what you're listening to,
and what your, what, what's where and how far you are on various different things.
Yeah, yeah, absolutely. Yeah. And actually, the API version 3 development is in full swing,
so if somebody wants to try to implement some of that, yeah, please come by and work on the API
a little bit. So you just go over to G-Potter MyGPO. Yep. Yep, that's correct.
And that's why it's called MyGPO is originally, it is under the URL of My.G-Potter.net or
.org, excuse me. So that was where the MyGPO came from, but then, yeah, of course, you can
download it and run your own IPO if you want to. Okay, just browsing the work,
the GitHub site now. And also, you know, we're trying to get all this stuff off of Stefan's.
We've requested that he kind of stay on as like the benevolent dictator until these are running smoothly,
but the idea is that we would have all of the pieces in place to him by the end of January, I think.
Okay, that's awesome. Awesome. Fantastic stuff. I'm actually running out of questions now,
because I'm more thinking about where the code is and are more excited to get into the project.
So let's have a look at some questions that I sent to you. So we've covered
features, we've talked about the tech, we've talked about the API and the libraries, we've talked
about the license, adding a show, we've also covered, and then the update. Cool. Yeah, yeah, I'm also
noticing here, kind of along the lines that you're talking about, like, of sharing the database and,
you know, DDoS-ing and, you know, how to, resiliency and stuff like that. I think we are looking
for more help with like hosting too. So if there's, if there's people who want to donate resources,
that'd be really helpful. So if that's, you know, just, you know, their servers in the cloud,
or if they've got, if they want to use something like Heroku to host an instance, and then we'd have
to figure out how to replicate the data, but those are definitely some things that we're looking at
to kind of increase the robustness and availability of the program. Yeah, the docs will be interesting
for us as well for my HPR point of view, because we're planning on switching to a Postgres
backend, albeit with a push static frontend, because of our use case, but making that
distributed would be a nice note to crack, to be honest. Yeah, you know what actually might
be kind of neat, is if you guys, I don't know if you wanted to, if you wanted to fork cheap
otter.net and just use all the same stuff on the backend, but maybe, you know, tailor the website,
so it looked all pretty, like with a hacker public radio flare, that'd be kind of cool. Yeah,
but the, I'm not sure that that work was a very weird and specific requirements for our
site, but that said, we are looking at it's pushing database schemas out. In our case, we don't have
to worry about GDPR, because people have already released everything to us in the public license,
so we're good to go. Yeah. So there currently can, there are 52 issues open. I presume
with somebody can go along, have a look at some of the issues that are open there and do some
triage work on this. Yeah, absolutely. You know, that's one of the things that we kind of picked up
early actually was trying to get our hands up around that and get, because yeah, Stefan's,
what's, you know, doing this all by himself for a while. And so there's a fella. I don't know if
he's actually, I don't know if he's in India. I haven't, I haven't got to talk to him too much.
He's in Sweden, and he's, he's been pretty active with, you know, receiving the requests and
triaging them and paying it to, paying people for, for help. Yeah. Yeah, that's one of the things
we're still trying to get smoothed out, so where everybody else is doing the code changes and
stuff. And Stefan's been really helpful about pointing people in the right direction,
helping us get our local test instances set up so that we can do proper testing.
How do, how are you organized as a team now? So that's actually one of the internal issues
that we're still, that we're, that we're doing right now. We're trying to figure out how we want
to do the governance within within. And some of that is just, you know, sure, we got a whole bunch
of volunteers, but who's going to stick around, who's not going to stick around. So I think,
you know, early ideas were just to kind of be on the lines of have somebody be the external
facing communications type person, have somebody kind of head up the development efforts and have
somebody head up the operations efforts. And under those three having backups and, and from there,
we're, I think we're going to roll with that and see how it goes. But I think Stefan's still
soliciting ideas about how we want to, how we want to manage this. Yeah, like a basic,
do you have a mail list where you, or you're doing these discussions, or is it just internal?
So a private GitHub repo that are tracking all these things. And also we have to, if anybody wants
to, if anybody wants to volunteer and they can, they can get ahold of us and we'll, we'll
provide them with a Slack link and they can start collaborating there. How did we get hold of you?
See, I think the, we just changed it. So I think it's support at gpotter.net. I think previously,
Stefan was just handing out his email address, which was Stefan at gpotter.net. Nobody
else says gpotter.net. So if you, if you poke around on GitHub, you can, you can just ping us
on there too. And we'll send you a link to the Slack. Okay, cool. But probably Stefan will be to,
to go to the GitHub page. And most people have a GitHub account, logs and issues there. And then
I imagine you'll spot people who are being supportive of the project and pull them in.
Yeah, absolutely. Yeah, this seems to be, there's a, I want to also put in another one there,
which would be the, the health and health of the, the database itself, looking for duplicate,
duplicate shows, looking for issues with the, improving the search and that sort of stuff.
That's, that's a lot. Yeah, absolutely. You know, that's something where you might not necessarily
be technically, technically too great for us. You could very well help out by, you know, just,
so I don't know, somebody contact an HPR and say, hey, you've got 15 different feeds on gpotter,
which one do you actually want to use? Yeah, that's a good thing. I think, yeah, I think when
somebody can, like, come up with a way to, you know, identify the possible duplicates and then
maybe to, you know, do a report. And I mean, they're like, all right, how are we going to,
which one of these is actually the new one, which one is, you know, which ones need to be removed
or, and then also, yeah. So actually, when somebody signs on as a publisher, that they also,
they're, their contact information is in there so that we can reach out to them and be like,
hey, which one of these, which one of these are correct? The issue is, well, now that I'm thinking
about that, and this is why they, this interview is like followed apart because I'm not thinking
about problems that you were, problems inside the database. So let's move from an interview
into a debugging session. The issue that I have with the HPR feed is that there are six valid
feeds because we've got a org MP3 and speaks feed for the 10 day. And then we've got the four
feed, which is, so we've got six different feeds that people could subscribe to and they're all
legitimate. How would one then consolidate those down into one publisher feed? I imagine like,
also, somebody like Juniver broadcasting, they have a podcast network and then underneath that,
they've got the different shows and underneath that, they got the different formats.
Yeah, I think, so I know when you search for super, super, when you search for Jupiter broadcasting,
I think it pops up as the show, they come up by show. And I think the way that it hangs on Jupiter
broadcasting is that it's like in the metadata or the descriptions and stuff. But actually,
that's actually a good thing. I'm not sure if we're actually already doing it that way or not,
but being able to have a publisher or a network be like a single point of entry to their various
feeds and being able to select which one you want to subscribe to under that would be fantastic.
Yeah, and then the thing about validating the feed as well, the verify feed and would be useful
from the point of view of updating. And also iTunes has a way of
automatically switching if somebody changes their feed location, that it will automatically switch.
So that would be something that I'm volunteering myself for here. I actually noticed that.
And I think the best way to write this down can said, can said, yes,
can always be a show. Yes, can always be mouth again. But to be honest with you,
if this is something that causes me pain because we do a lot of the hallway tracks and I want to
automate this, where I'll be able to go in and produce a two-sided little leafless
that you can hand out to people and go, you've turned up at this open source event because you
listen to one show on Juniper Broadcasting. Did you know that these other shows are available?
And you can see people's eyes really like, oh my god, look at all this podcast listing I have.
And both, that is super pain in the earth, but together because of all these issues
with the feeds and stuff. So cool. Yeah, cool, cool. Yeah. And I think a lot of the back-end
automation, the limitation we're having right now is, again, we're working with free-donated
resources on the server side. And I think that's what limits the update frequency and
the crime jobs and all the automated stuff in the background, the more you run, the more computing
time you need. And I think that's where we're in need of more of computing power.
We'll be back in. I have been, we as a project have been very lucky to have support from
an honest host.com where we do, they host the bin red project and they also host HPR. So we're
very happy for them. But over the course of my time, we've been approached by, you know,
people who walked up to us at Boots and offered hosting because we're a project. So I'll have
a route out and see if some of those contacts would be willing to donate some servers to you guys.
Perfect. Yeah, that'd be great. I'm not promising anything. It's just like somebody after a few
beers. Let me scratch that one out. Yeah, I can keep my ears open that if we get that type
of offers. And again, because this is this is very compatible with our sort of ethos here,
particularly the ability to search by the creative commons license. Yeah, yeah, absolutely.
So is he clicking away? Okay. Says he clicking away in the background.
So this American life is the most popular podcast at the moment. Friday night comedy from the BBC
has got, all right, actually, this American life's got 3,212 entries. So where's HPR on this list?
How come? So we've got podcasts, the most popular podcasts, and then we've got the most popular
episodes, which is kind of cool. Yeah, 1500 subscribers. HPR is 1500 subscribers,
so we would imagine we would be at the top then, but we're not being listed. Why are we nothing
listed? Not to worry, not to worry. This was, this would be issues that we can open and get
to about imagine. Pretty cool. Yeah, absolutely. And I think that's a thing is, you know,
we definitely want to keep growing this and adding more features and making it more robust,
and I think, you know, adding more people, like the way Stefan's doing it, you know,
releasing it from the wild and is how it's going to happen. Yeah, very, uh, 16 people. That's
quite a lot, actually, to, to come out of the woodwork for a project. I must say, hopefully it
builds well, and no reason why other people can't start logging issues and, uh, and requests as well,
because actually, G-Podred.net, given its license, is something that I wouldn't mind supporting,
because, you know, it's a pretty open source project, whereas I don't particularly want to,
you know, if you do a lot of refining and improving the recommendations on the proprietary platform,
it just goes away. Yeah, yeah, exactly. Cool. Did I miss anything in this interview?
No, I think we did good. We went a whole 40 minutes already. That's nothing. Two, three hours
would be fine. No, I'm definitely going to have to have you guys back, because now I lost the
plot halfway through this thing. It's turned more into a chat. That's kind of cool. Yeah, yeah,
it's all good. No, that's good. Um, I, yeah, I thoroughly enjoyed it. Maybe next time I'll do it
later in the evening, so I can have a beer while we're doing this. Yeah, good, good, cool.
By the way, we do a new year show every year. Um, so feel free to join in that. The whole idea behind
that one is to, uh, it's put on by, not actually by me, but Hunky, we're doing, um, Kevin.
And it's, uh, where we do a 26 hour show. So from when the first time zone comes in to the
last time zone goes out, and we, uh, you could just come on to mumble here and, you know, say hello
and then later on June, July, you're, uh, you're new years going to be released to the, to the world.
Very cool. But it's a way for a club pastors and their listeners to have a chat together. So
sometimes you, you know, it's one day we set aside to, to try and, uh, come on and say hello
and have a chat. Yeah, no, that's great. Um, yeah, and I think that's, yeah, that'd be a great
way for us to, yeah, connect with the person. Let them, you know, tell us what they want and what
they're thinking. Cool. Excellent. Um, I'll, yeah, there'll be, uh, I'll post the show and then
hopefully people will have feedback. People, uh, can, um, um, log issues and get help,
couldn't be simpler. And if anyone wants to survive more, uh, hosting, get in touch with us.
Yeah, absolutely. Um, and I guess the one, the one other way, um, uh, to get help, to get all
of us to, um, um, um, I, I monitor the Twitter account. So if you want to hit cheaper.net on,
and on Twitter, um, I'll see that within, you know, a few hours or so.
Just met the notes and stuff for the show notes. Cool. Well, thank you very much for, uh,
taking the time. And that's my pleasure. Thank you. Thank you very much for having us.
No worries. And let's, uh, let's do a follow up in a few months. Yeah. Sounds great, sir.
All right. Thanks. All right. Have a good one. Take care.
June and tomorrow for another exciting episode of Hackerer Public Radio.
You've been listening to Hacker Public Radio at HackerPublicRadio.org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing,
to find out how easy it really is. Hacker Public Radio was founded by the digital
dog pound and the infonomicon computer club. And it's part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on the website
or record a follow-up episode yourself. Unless otherwise status, today's show is released on the
creative comments, attribution, share a light, 3.0 license.
