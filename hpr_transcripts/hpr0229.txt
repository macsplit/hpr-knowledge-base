Episode: 229
Title: HPR0229: CopyFight Vol 4 - SFL Podcast
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0229/hpr0229.mp3
Transcribed: 2025-10-07 14:26:42

---


Hi, you're listening to Hacker Public Radio.
I'm 330, and this is Copy Fight.
Hi, everybody, I'm going to take this episode of Copy Fight to let you guys know about
a new podcast called the Software Freedom Law Center podcast.
It's from the Software Freedom Law Center.
And I'm going to play it at the end of this little intro here.
In this episode, they go through how they began at the Software Freedom Law Center and
a little bit of their background of just, you know, personal stuff.
It's really just a kind of, let you know about the hosts kind of thing.
If you guys really dig this, I'll be, I can put more of them into HPR's feed.
If you don't like them, let me know and I won't do it.
It is licensed under creative commons, attribution, no derivatives.
So I will be playing it in its full length.
I'll just add the file right on to the end of what I'm saying.
So here is episode zero of the Software Freedom Law Center podcast.
Hi, I'm Karen Sandler.
Hello, I'm Bradley Coon.
And welcome to the zero episode of the Software Freedom Law Show.
Zero with episode.
Yeah, that's my fault, isn't it?
It is. Bradley, why don't you tell us about it?
Well, you should start everything numbering at zero.
That's the standard, right?
I mean, that's what things start at.
Bradley numbers all of his numbered lists and emails starting with zero rather than one.
Well, it's the whole number.
It's the first whole number.
It's true.
It's like the zero's law.
I don't even know.
Oh, it's the dynamics.
OK, well, why don't we keep up by explaining why this is the zero with episode?
Well, it's not just because I like starting numbering at zero, though, that's the primary
reason I suppose.
The other reason is that this episode will probably be somewhat, well, first of all,
everybody's first episode of a podcast is horrible.
I've listened to every Linux and free software and open source podcast out there.
And all the first episodes are not very good.
Bradley is our podcast monitor at SFLC.
Not a monitor, because it's only my home monitor or something.
Bradley is the past.
No, Bradley does the favor of reporting back to us about the important information included
on podcasts.
So they said that we don't also listen to them.
And their first end or zero with episode is always the worst episode.
So for our zero with episode, what we thought we'd do is just explain what the software
freedom law center is, what the software freedom conservancy is, and introduce you to
your hosts, me and Karen.
And then we'll move on to a much more interesting thing for the first episode.
So if you already know all about us and our organizations that we're involved with,
you could probably just skip this whole podcast.
Or if you just don't like listening to the first episode of any podcast.
But yeah, I was listening to it.
It's fun to see you.
You can give most improved awards.
You know, because they improve so much by the second episode or first episode depending
on how you started numbering.
Actually, the zero with this, the first technically speaking.
That's true.
But I like when you use ordinal numbers, there is no zero ordinal number.
Well, okay.
So why don't we start out, Bradley, by talking about how the SFLC was founded?
So it was formed in March 2005.
And where it came from was a lot of work that I have been doing while it was executive
director of the Free Software Foundation, along with Evan Moglin and Dan Ravisher,
who were legal counsel to the FSF at the time.
We were doing all sorts of interesting legal work for the FSF and for its new project.
And we felt that it would be really good if that work could be expanded beyond just
the new project.
Because there's so much legal work that a free software or open source project needs
help with.
There's copyrights, trademarks, governance issues that we'll talk about in a minute.
Those sorts of things that Evan and Dan really helped the FSF do.
And we thought it would be good for everybody to get access to that.
Instead of just projects that are affiliated themselves with the new project and therefore
the FSF.
So what Evan did is went out and formed an organization and Dan and I came on as the
part of the founding team to give those kinds of legal services to all sorts of open source
and free software projects.
No matter what license they have.
That's correct.
Yeah, we didn't want to make against any particular license.
Obviously, I'm a big fan of the GPL and I've been associated with the Afero GPL in particular.
But there's lots of great open source and free software under every license from Afero
GPL to GPL to LGPL to Apache license to regular ISC and BSD licenses.
So we wanted to make available these legal services to any project of any kind under any
license as long as they were two things under an open source and free software license.
And we're operating in a not-for-profit way of some sort.
And that was the founding of S.V.L.C. that was in what month of 2005?
March of 2005.
Okay, because I joined in October.
Correct.
So that was, I guess, six months later.
Yep.
And now we are, I guess, we are six lawyers and two admin staff.
Two admin staff with a total of nine employees.
Yeah, yeah.
I'm somewhere halfway in between of a policy person and a lawyer.
I'm not a lawyer myself, but I'm involved in lots of the legal work that we do in a policy
sort of role.
That's right.
And you're surrounded by lawyers constantly.
Yeah, you know, it's not a bad thing.
I mean, I think that the type of issues that come up that we're trying to solve are sometimes
things that hackers need to be educated about.
And we're here for them to help them learn about issues of copyright and what license they
should put their project under.
And once they've decided on a license, how do they build their copyright structure?
Do they take assignments?
Do they each person hold their own copyright?
How does that interact with employment agreements, those sorts of things?
Then there's patent issues, of course, which occasionally a project will run into someone
with an unfriendly patent to free software.
And we help out and we've done that a number of times.
And there's trademark issues, which I know you've dealt with quite a bit for some of the
clients.
And then just anything else that comes up in the course of doing a free software project
with legal issues we help with.
And I'm always really impressed actually with our clients because they are, I think that
the free software community in particular is so tuned into the legal issues that affect
them.
And it's fascinating to me to see just how much they know already and then it's great
to be there to help them the rest of the way as legal experts.
Yeah, of course, there's a lot of misinformation and confusing information out there as well.
It's unfortunate that we have so many people in the community that apply it on legal issues
who don't really understand.
And one of the things we hope to do with this podcast is to make the level of legal knowledge
in open source and free software community at a higher level by giving more education
and more information.
That's one of our goals as an organization is to help people understand the legal issues
that surround open source and free software and make sure that they know what they need
to know.
Because there's only a subset that they actually need to be aware of on a day-to-day basis
to be able to operate.
And then when they need more detailed stuff, they can of course come to us and get advice.
And we're always in a situation where we're somewhat limited about what we can talk about
because most of the work that we do is client-specific work.
It's all governed by attorney-client privilege and therefore we can't really talk to the public
about it too much.
So we thought this would be a good forum to talk about some of the issues that affect
free and open source software where we won't have to talk about what our clients in particular
are doing.
But we can still talk about the issues and provide public education.
Yeah, it's a really tough challenge for us.
We like to talk about as much as we can, the work that we do, and most 501-C3 charities
like ourselves want to get information out there about what they're doing.
But our first goal and first duty is to the clients who have taken our advice and need
our confidential advice.
So we'll do our best to distill some knowledge that we have and to general ways as we also
have on our resource page if you want to read more about things that we've done.
You can do that.
And we'll try to distill some of that knowledge into a nice 30-minute podcast each week.
And to keep our podcast on track in our zero episode, we should now, I guess we should
segue and talk about the software freedom conservancy and what it does.
Yeah, in fact, I mentioned during my list of things we help with as governance issues.
And it's kind of interesting what happened when we first started getting our first five
or six clients, mostly you were doing a lot of work to help them do a non-profit to
get incorporated and started.
That's right.
Over and over again, I was dealing with free software projects that needed to incorporate.
And that was for a number of reasons.
My favorite reason is actually projects that received Google Summer of Code checks.
And the developers that received them didn't want to take them personally, mostly because
the money that they received for Summer of Code, they wanted to devote to the project, but
also because if they cast it, it would be personal income.
Yeah, that's a really tough problem.
You know, when you're a group of developers, most free software developers, they have sort
of the canonical free software developer, LoaKC, is an independent contractor.
It does lots of different work for different clients.
As part of their ability to serve those clients, they're developing this open source and
free software around what they do.
So their work on the open source and free software is actually separate from that consulting
work.
It's just sort of feeding their ability to do that.
So when they were working on the project, they want it to be available in sort of a
not-for-profit way, but most of them don't have an official organization.
There's just sort of a loosely organized band.
I think sometimes it's an unincorporated association.
An unincorporated association.
What does that mean?
You say that all the time.
It's a lot of different state-by-state, so I won't bore our listeners.
I've done too much detail, but suffice it to say that we were incorporating project after
project in the same way.
So we were filing the articles of incorporation.
We were helping them find the right board of directors.
Right.
So each organization needs a whole bunch of people to make a project.
Right.
No matter how it was structured originally, no matter how it naturally developed, whether
there was a lead maintainer or a committee or just a couple of people, no matter how it
had naturally organized, it would need a board of directors, just like any other organization
because it was governed by state and federal law.
Right.
So you can see by state minimums of how many directors you need on the board.
Exactly.
And usually you need, although it's not always required.
You usually need some sort of president who's going to follow the day-to-day equipment.
Right.
Mostly it requires certain officers, but it varies so they're all pretty dependent on require means.
Right.
And a lot of people, even some states require them some states, don't as I understand it,
but a lot of people need a treasure or so many people to track the funds coming in.
That's right.
It's required by the state.
They need that kind of staffing.
Right.
And that's actually what we've seen many times is where the officer situation breaks down
because especially a volunteer treasurer, that is a lot of work, you know, looking after
the finances of an organization and, you know, keeping all our seats and maintaining all
the books and making all the annual filings.
It's just, it's a lot of work.
And usually the people who are involved in a free software project are there because they
love to code.
They want to write the software, not worry about the organization.
Or write documentation.
Or write documentation.
Absolutely.
They're not there.
They're not there.
People have become a huge software projects because they're really excited to collect
receipts.
Right.
We do administrative work.
So what we basically discovered when we incorporate each of these non-profits finding
the people to do all those jobs made a real challenge for the projects because they had
to devote resources, basically individuals' time, that would normally go into coding and documentation
into this administrative work. So what we did was form a separate organization, which is designed
just to be that infrastructure for any free software project that needs it and applies to join.
So it's basically an umbrella organization. Exactly. It's called an umbrella organization.
And it means that projects can join the umbrella without having to change the way that they're
set up. So instead of having to take the project and find people who want to be directors for
that project, instead that project can keep whatever management structure that already had,
whether it was consensus or some other organization, and just join the conservancy.
And so you often analogize it, so they've become almost like a division of a company.
Yeah, sort of legally, sort of you can analogize it from like a corporate entity standpoint.
Yeah, you can say that they're divisions of a company. There's only one board and that's at the
very top. And we only have to file one tax return and only one annual report. And that takes
care of all the New York filings, it takes care of all the other stuff. And it also has one
infrastructure for admin activities, like reimbursing expenses. Of course, that's mostly you brother.
Actually service the president of this organization. And what we do is we handle the administrative work
of the financial aspects and all the types of administrative tasks for the projects. They join
and sign up and they continue on coding. They then have the ability to keep restricted donations
that come into the software freedom conservancy and they're earmarked as directed for a given
project. And each project then has a balance within the conservancy of funds that they can
spend on any activity that's forwarding the 501 c3 mission of conservancy, which is a very
general mission of advancing open source and free software development. So things like sending
developers to conferences and getting reimbursements for their expenses while they're at those conferences.
And also helping projects. Yeah, and then funding the end is setting up conferences. We've
done a little bit of that and even funding active development work. So in a couple of cases,
developers are getting funds from the conservancy. So these companies that benefit from the open
source and free software that has been developed donate back to the conservancy. And then the
conservancy can pay as a contractor a developer to continue doing some of the work. So that works out
I think really well for projects that need the infrastructure of a nonprofit organization.
But don't have all this extra administrative staff to do. And it was really innovative idea
rather than incorporating a nonprofit for each project that came along to us for help. We needed
help with these kinds of governance issues. We now can say, well, of course, we've helped a few
that have a different sort of desire to have their own nonprofit or they simply have enough people
that they can incorporate themselves or they can join the conservancy. Right. So it saves our time,
but mostly, most importantly, it saves the time of the projects that join. Yeah, I didn't
ongoing basis, too, because they don't have to keep up that board of directors and presidents,
so forth if they don't want to. And of course, they can always spin off out of the conservancy as well.
Absolutely. And just to be a geeky lawyer here, Bradley and I are both officers of the conservancy,
but we're also staff members of the SFLC. Yeah, it's a common confusion that people have,
you know, we form the conservancy basically within a year of forming SFLC. And so a lot of people
don't understand that they are separate organizations. They're separate boards that don't,
they're very similar laughing, but they're the majority is they're controlled by completely
different people. Yeah, the way I think of it is we have two organizations so that we can serve
the broad spectrum of needs that these projects have. So through the SFLC side, which is,
which is where the actual employees are, we can service the needs of legal issues and questions
and being lawyers for open source and free software projects. And then through the conservancy side,
we can handle the more administrative burden and organizational and governance burden. And by
having the staff's coordinated so well together, we're able to provide a large spectrum of services
that open source and free software projects need. And we'll talk a little bit more about all of that
in the next segment. Yep.
So hey, Karen, did you notice how noisy that, I guess, siren was during the last segment?
Oh, it's New York.
Yes, people should probably be told that we're recording here from our offices,
the software freedom law centers offices in New York City.
In Manhattan. Yeah, in the southwest side of Manhattan. So there's this constant,
you know, it's like it's like that joke in the Space Balls movie about the sirens in Paris,
how they're always sound, it's like that in New York City too, although they sound different.
Just constant noise of sirens going off all the time. And you moved here from Boston,
it's not as loud in Boston. Well, it's not really. I went on work to the Free Software Foundation
for about six years. I was actually employee in Boston of the Free Software Foundation.
It's not as loud there. There's an area there where it's not as close to the...
I've been there. I've been there for a long time, but I'm so done with it.
It's funny. You know, people think of, in fact, there's a reporter named Hywa Thabray,
who insists on, when he writes articles about the FSF, he always has the sort of,
your local org makes good, kind of way of writing about. He writes for the tech page in Boston.
And he always says Cambridge-based Free Software Foundation. I guess because that's where
Stalin, the founder of FSF's offices, and their offices actually were in Cambridge in the late
80s and early 90s, but they're in Boston now. But I think that the feel of Cambridge,
you know, where, you know, Richard Stalin and Noam Chomsky and MIT and all that stuff is,
it makes it more fitting with the FSF and the way people think of it.
So when you became an employee of the FSF, you were volunteering at the FSF first?
Yeah. Well, yeah, I started volunteering very early on right after college in 1995.
My story, actually, of how I got into Free Software was, I was working on an AT&T 3B2
UNIX system, and I didn't like VI. Primarily because there were no, no streams and
sockets on the system, and there was no job control, so you couldn't hit control Z and get back
to a shell. So you would have to shell out of VI. So I would-
And as an aside to our readers, we occasionally have this VI UNIX to be-
Yeah, you're a VI user. But anyway, I wasn't VI user first, right? And so,
although we called it VI, which was the thing, I don't know, people think I'm crazy.
Yeah, I've never heard it called VI until I came to FSF.
Well, my first job, we all called it VI. I mean, that was what we called it. I was surprised
when I heard people say VI. Anyway, so I was using VI and would have to shell out to get a
shell. So I would spend the whole day like working on a file and then shelling out to compile,
and then I'd open another file, and then I'd have to stack shell VI, shell VI, shell VI all the way
up because I couldn't suspend anything. And so I'd have to push on my way all the way back out.
So what I really wanted was an editor that could edit two files at once. And this is 1991,
so VIM didn't exist. There was no way to edit two files and VI at once in those days.
So I got EMAX. And the weird thing as some old GleeMAX users will know is that there was this
big argument about what control H should do. And Stalin believed very strongly control H should
always be help. Yes, it should always be help, right? But on a lot of terminals, control H is
backspace. Right. And Stalin thought there should be a delete keen out of backspace. I don't
really know the deep full details of the backspace versus delete argument, although I know it was
related to the EMAX fork in some ways. And I, of course, had a terminal with control H being backspace.
So every time I had backspace, I would get help until I finally figured I had to change it all.
But if you got help and then you hit certain characters, you'd get things like a copy of the
GNU manifesto displayed or a copy of the GPL. So in 1991, I first read the GNU manifesto because
I got it by accident. Could be okay. And I've read the GPL. And I was, I was very clever in a way.
Yeah. I've always, people I've essentially read that before.
Exactly. I wonder if the whole thing was about this issue of forcing people to read the documents.
Stalin intended that with the control H thing. Anyway, but worked on me because I read those things
and I was sure that free software was the only way to do software from then on, basically.
So as a big fan of free software and open source and I installed Linux at 0.9 patch level 12 was my
first kernel in 99 rather. It was in 90 beginning, very, very beginning of 92, 0.99 patch level 12.
That was my first kernel version. And I installed it using SLS, which was the one that basically
the first distribution, which eventually became slackware when the SLS guys stopped maintaining it.
So I've been a fan and user free software since around 1992. And I got involved as a volunteer
for the FSF in 1996, first doing various website things. And I helped to do the licensing page where
it has the list of licenses and so forth. I wrote to Stalin said, why isn't there a list of page?
Yeah, this is a very common thing with the FSF. I wrote to Stalin and said, you really should have
a list of licenses to explain all the licenses and what they mean. And whether or not they're GPL
compatible and all this thing. And he said, would you like to do that? And so I ended up doing it.
So that was the late 90s as I volunteered for the FSF. And I ended up going to graduate school in
Cincinnati at the University of Cincinnati. So that was like 97 to 2000. And Cincinnati must be
quieter than New York. Cincinnati is definitely quieter than New York. It's especially the area that I
was in although there's a lot more cars in Cincinnati than there is in New York and away because
everybody has a car. I wonder, I would like to know that actually whether there are more cars.
It feels like there's more cars. You can't go to the grocery store without a car. It's hard.
Right. Right. So yeah, so I spent a number of years there sort of hiding out. I mean,
basically I went to grad school because I didn't want to do proprietary software development
anymore. I hated it or or assistant administration work as I was doing. I just decided I was never
going to do it again. So I figured I'd go hide in academia and hope that I would never have to do
proprietary software again. And it ended up working out because I had it. Yeah, I have not. In fact,
I removed Windows from my computer in 1999 as I had a dual-bus system only to run quicken.
And then GNU cache got stable enough that I could use that. Good quicken was the last proprietary
program I used on a regular basis. And I was able to get rid of that and switch to GNU cache.
So since 2000, I've been fully free software user only. So that's been good.
And so I got hired by the FSF when I finished my master's degree as a full-time.
After volunteering. Yeah, after volunteering for a number of years. Actually, I was hired part
time and I worked for a year part time while I was in Cincinnati and that was hired full-time
in 2001. And I somehow got promoted from assistant to vice president to executive director,
which was really weird. Well, what happened was I went to Stalman in the beginning of 2001 and said,
you know, people aren't taking me seriously when I email them because my title is assistant
to Richard Stalman. So they don't take me seriously. Okay, so we'll call you the vice president then.
So then I was the vice president and then, you know, within six months I was the executive director.
So it's when you're in a small organization, these things happen.
I actually don't know the answer to this. How many years were you the executive director of the
five years basically? Oh, okay. So I was in play for about about seven to six and a half,
you know, maybe seven somewhere in there. Depending on, you know, where you put my employment
starting at versus volunteer time because I started getting paid very, you know, for a couple
of hours here and there, I eventually became part time and full-time. Sort of mapping my own timeline
against that. I guess I was in law school. No, I was I was an engineering school when you were
volunteer. Right. Your undergraduate degree is in it's in engineering. Yeah. Yeah. So, yeah,
that's I forget that sometimes because I think if you as a lawyer, if you're a park, if you're
using VI, you know, they can see program in Fortran, right? Fortran was really a Fortran and see.
That was, you know, most relevant for engineers. So that's what we learned. Well, it depends on
others. Well, in in 1995, I guess, you know, that that was the case. Yeah, it's sadly still the case
in so many segments. Well, I don't know if it's sadly. I mean, if so much useful, there's so
much there's so many useful programs out there in Fortran that, you know, it's going to stay
relevant for some time. I think it was in Pascal. But then I went to law school. Yeah. So,
what inspires an engineer to go to law school? What was the, you know, it's interesting. I think,
I think I just wanted to sort of go to the problem solving for people because before I was in
this sort of problem solving from first scientific principles. And I was very, very interested in
people. I ran that, you know, the student council in college. And I was just really curious. So,
so I went to law school from from that regard. And when I was in law schools, you know,
Evan Muglin was my professor. So that sort of was my first, my first taste of of of all this.
Yeah, back when he was, well, he still is obsessed with Pearl, but it was really obsessed with
Pearl. Oh, yeah. One of the first things that he said to me was, learn Pearl. I actually submitted
it as one of my essays to him, a choosing your own essay essay, where because we were, we had
a really strict word limit. So you can only give him a thousand words. So I just, you know, gave him a
a little thing where he would answer questions saying about what his view was on the issue. And he
would get the essay that was tailored to him that was exactly a thousand. It was really geeky,
but it was written in C. And he was like, why are you writing in C? You don't expect from a law
professor. Well, Evan's issue is he did APL programming for too long as a, as a young man. And now,
it's the parts of Pearl that are like APL are the only ones he likes. It's, it's often too bad.
What Larry has this problem as well, to some extent, that there is, there are things about Pearl
that are very APL focused. You know, I was on my thesis committee as a grad student.
Oh, I had my thesis was related to Pearl and trying to port it to the job of virtual machine,
which was a crazy thing to do. But there are reasons. And some other technical podcasts,
I'll explain what I was doing and why parrot is the future and such things. But that's probably off
topic for, for, to get on topic. But we're, where are we now? I guess we're talking about our
histories. Yeah. And so, and so you're, you know, you, you, you have this connection between
engineering and law that we're going to talk a, actually our next as a preview to our next
podcast, we're going to talk in detail about that. But, but it sort of brings you back to that
community of, of scientists and, and, and engineers coming back to, to, we're coming to work for the
SLC. Yeah, absolutely. Because after law school, I went and became a finance lawyer, where I did a
lot of securities law, which, which was really interesting. And in fact, did, did use a lot of my
technical skills because I was working mostly on financing of technical companies. But, um, but it,
it was much less directly involved. So I was really happy to get back to this. Basically, I,
I, I guess I just had enough with being a finance lawyer and I'd worked in London and, um,
New York and a little bit in Hong Kong. And, um, a lot of my clients from Brazil and that was
pretty fun. But I, at one point, I just realized that, you know, I was spending a lot of time
working on things I didn't really care very much about. You see, this is why I never ended up
being a lawyer because, because all of you have that, what, what, what, I think of it as a dark
period, where, where, I mean, it's the whole structure of the system is very strange because you
go into this too many, right? You have all this debt that you have to pay off. So you end up having
to work, uh, basically for, you know, people who I would never want to work for. Um, yeah, it was
rough at times, but, um, but it was overall, it was, it was pretty fun, especially at the beginning.
We said one of the, one of the things you told me before about the interesting aspect of what
you did in securities law is, is making sure that people met the, the regulations of doing
IPOs and other types of, yeah, I like to say that securities law is the, sort of, the, the best
place for an idealist to be in a law firm because securities lawyers are, are gatekeeper attorneys,
they're regulatory lawyers and you have to make your clients disclose to the public,
whatever is material that you discover. And you have to look at all their documents and you
have to ask tough questions of the CEOs of the company and, and, and really get that information
across. And if they won't publish it, then you can't give an opinion and the deal can't get,
get done. And I've never been in a situation where they wouldn't want the deal done. So they
disclosed the information and then the, the public was much better off. So it was, in that instance,
I really liked it a lot, but, um, but it, it certainly wasn't, um, something I could focus,
you know, much of my life on. Yeah, I mean, but it's impressive that, you know, you and the other
attorneys that we've, uh, been able to hire here, you know, you've, you've stepped out of that
law firm world and come to do non-profit work. I think you, you actually wanted to, you
actually made this decision to leave the law firm and come try to do something non-profit. Yeah,
that, that was exactly my stated reason for leaving and the partner that I worked with at the
law firm looked at me quite skeptically when I told him not what I was doing and he said, well,
I hope it works out for you. But, um, but then shortly after I quit, actually, I heard that Evan
had started SFLC. I mean, I think he had also heard that I had quit. And, um, and so we got together
and realized that there was a good place for me here. And it's, it was sort of the, the dream job,
I probably could never have jumped up at a try. Well, I mean, I think that's, that's part of what
our organization is trying to do is make, is make legal talent like yours available to
free software developers be able to get those kinds of, I mean, basically, let, you know,
going through the law firm structure, you learn so much about how the law works and how to apply
it to new situations and, and to be able to bring you guys in and, and, and be able to take that
talent and apply it to the free software world. I mean, that was sort of the dream that Evan had
for the organization was to be able to do that. And in, in my case, I had a lot of, you know,
corporate finance experience and that translates really, really well to nonprofit corporate
and tax. Right. So when I first came to SFLC, that was most of what I was doing was, um, and I,
you still tend to that. The question of what I do is, is, is advising our, our nonprofit clients about
how to, either how to organize or how to, how to maintain their operations, how to set up scholarship
programs and, uh, enter the contracts they need to. And so that's translated really well. And then
I've been able to do the copyright and trademark, um, you know, and, and, and other related areas of
law, which are so important to what we do. Yeah. Yeah. So, so it's really, I, it's really excellent
that we've been able to do this. And I hope that over the next, uh, as long as we keep this podcast
going, that we're able to help the community understand what we're doing. I mean, I've gotten this
basic introduction to who we are, who the organizations are. And we're going to hopefully cover a
topic, uh, every week that is of interest. And we're going to have a guest every week in this segment
where we've been talking, uh, to each other, sort of interviewing each other. That will be, uh,
interview every two weeks, uh, with somebody involved in open source and free software, uh, law.
We have an excellent guest whom I won't spoil by telling you. You're going to find out next,
next episode, uh, for our first, first guest. And, uh, we're really looking forward to helping the
community learn more about the legal issues of open source and free software on our software
freedom law show. And we look forward to seeing you next time. That's it for episode zero of the
software freedom law show.
The software freedom law show was produced by Dan Lynch of HalfBakeMedia.com.
Thank you for listening to HalfBakeMedia.com.
Thank you for listening to HalfBakeMedia.com.
