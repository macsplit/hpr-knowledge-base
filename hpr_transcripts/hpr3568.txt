Episode: 3568
Title: HPR3568: PopKorn Episode 2: Programming, Mathematics, and Asymmetric Literacy
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3568/hpr3568.mp3
Transcribed: 2025-10-25 01:29:53

---

This is Hacker Public Radio Episode 3568 for Wednesday the 6th of April 2022.
Today's show is entitled, Pockern Episode 2, Programming Mathematics and Asymmetric Literacy.
It is hosted by Black Colonel, and is about 15 minutes long.
It carries a clean flag.
The summary is in this episode, Black Colonel tries to help you understand enough about math and programming.
Hello, Hacker Public Radio.
My name is Black Colonel, or is he Lee Boots?
And before we get started today, I just want to point out that I'm not making this episode
of my own volition.
I'm making this under coercion by our illustrious Ken Fallon due to a discussion that we had
on Macedon that I thought was rather clear, but then again, I feel like the confusion doesn't
have anything to do with programming.
It has to do with linguistics more than anything else, which keep my feel a little bit strange
to hear me say possibly, but nothing that I said on Macedon, I'm not going to read
a verbatim because I am driving at the moment, but the thing I said on Macedon was that learning
to do math, maybe I will read it off of the thing, and I'm coming up with a stop sign,
so give me who knows second, while I pull this out.
All right, verbatim, what I poked said was saying you don't need to know math to do
programming.
It's like saying you don't need to know how to read in order to write, technically true,
but it makes it way easier.
That is verbatim what I said.
And Ken's response to that was essentially that, well, a lot, he said that it was the ability
to think logically that was important, and that learning to do math with programming just
meant that you have to learn two things now rather than just learning programming.
This shows a misunderstanding of what math is, possibly what a misunderstanding about programming
is, but I will never disparage somebody's programming ability or knowledge without evidence
of that exact skill, but it kind of does show definitely a misunderstanding of what math
is, because it says the ability to think logically, which is what math is, I'm going to start
out with explaining the definition of what math is, mathematics, modern mathematics, is
based on what are called the ZFC axioms, which is just this amelopharyngeal of choice axioms.
Those are a set of, I mean, technically it's countably infinite because there's two axioms
schema, which I hate, but I think that there's nine axioms, I think, something like that.
And two of those axioms are actually axioms, schemas, which means that they contain within
them infinitely many axioms, because it's just like a recipe of how to create new axioms.
So I don't like it, but there's a couple of different mathematical frameworks.
The other one, I believe it's the good old, something framework.
Kurt Grudel worked on one of them, that's the one that I like, because it basically encompasses
a lot of the same things of ZFC, but it uses explicit categories rather than using a sort
of free choice type of nonsense, there's also piano axioms, which are a set of, I always
want to think that it's nine, but my favorite number is nine, so I'm probably wrong.
It's some number of axioms, which are defined the, the ring of natural numbers, I want to
say, well, I mean, it's not even a ring at that point, what is that?
The group, whatever, the group of natural numbers, I believe under addition, maybe none
of the operations are explicitly defined within the piano axiom, but anyway, so you have
this group of axioms, so I'm going to use the piano axioms as an example, because I
can't remember, at least some of them, so piano axioms are like the zero axiom, so you
have a thing we're going to call it zero, and that's going to be a thing that we're calling
a natural number, so zero is a natural number is a piano axiom, the next piano axiom you
could say is, and the successor of any number is, the successor of any natural number is
also a natural number, so if we had a thing that was the successor of zero, then that would
also be a natural number, then the successor of the successor of zero, that's also going
to be an actual number, etc. Zero is not the successor of any actual number, that is another
of the piano axioms, then we have the, what is it, I'm running out of brain power
of remembering all of these axioms while driving. Anyway, so you have all of these axioms
that are basically of this form and they build up the natural numbers in this case.
And then you take logical deductions from those axioms. That's what math is.
Math is a series of logical deductions and proofs utilizing previous proofs or axioms.
That is all math is. Math can be done in a lot of different forms.
You can have things like geometry that I do know if there's only five.
I think there's only five. I think I know all five of the geometric axioms.
There is, you can join old two points with a line.
And I'm really, all right angles are the same. All right angles are equal.
I feel like I'm disappointing my entire family right now because I have a bunch of math people in my family.
I know that there's two more that I can't even remember than the fifth axiom.
I do know the fifth axiom because the fifth axiom of Euclid is the one that gets all of the hub up,
which is that if you have a point, if you have a, there's many different formulations of it.
Do you want that most people know or rather that most people have heard is that if you have a line and a point not on it,
then there's precisely one line parallel to the given line that goes through the given point.
I believe that the way that's formulated in Euclid is that if you have two lines and a third line,
which intersects both of those lines, then if the interior angle is less than, what is it?
Yeah, so if the sum of the two angles is less than two right angles, then the two lines will intersect in the direction
that the sum of the two angles is less than two right angles.
I believe that's what it is or something along those lines. It's called the Euclid parallel posture later,
and my favorite formulation is the symbol of the fact that squares exist,
and that can be the entire axiom essentially because the existence of squares,
i.e. something with a quadrilateral with all sides being equal and all four corners being right angles,
requires Euclid's fifth posture to be treated in order for that to be able to be constructed.
Anyway, what the hell was I talking about?
I went on this big long tangent about what math is.
So, now that you get into what programming is, so programming is when you're writing a program.
The computer will, I'm so tired.
I shouldn't be doing this right now, but I'm doing this because I need to explain programming.
All programming is, at the end of the day, you have the computer, the CPU,
has a bunch of instruction sets in it, or it has an instruction set, which is a bunch of programs,
not really programs, a bunch of instructions that tell the computer what transistor operation to perform.
And all a program is every single program that you have ever written,
is simply a logical extension of the instruction set,
exactly the same way that mathematics is a logical extension of the axiom.
There is no thing that you can write in programming that is not dependent on that instruction set,
there is no theorem that you can devise that isn't dependent on those axiom.
They are the same thing, they're the exact same process.
So, I need to get into asymmetric literacy for a second to explain what I was meaning by my thing,
because I'm not saying that you need to know math in order to do this programming.
What I'm saying is that they're sympathetic, but possibly sympathetic operations,
because they're the same thing under the hood.
If you understand how to do math, then you'll understand how to make your programs better,
because you can write the programs in such a way that reflect the underlying structure of the computer,
which will make your programs run more efficiently, as well as give you a lot more insight into how errors may be occurring,
especially if you're going to like, I'm getting off strike.
I need to talk about asymmetric literacy, or I will never talk about asymmetric literacy.
A asymmetric literacy is an example where you can read or write in a specific language,
but it's not necessarily doing well.
I'm going to use the example of Cantonese, Chinese, and Mandarin.
When I say Chinese, I mean the written language.
Cantonese and Mandarin have the same written language.
So, you can write something in Cantonese, and someone who speaks Mandarin will get the gist of what it is,
but they're different languages.
So, even though you can communicate through writing across languages from Cantonese into Mandarin,
you can do that perfectly well, and it's completely fine.
But, if you are a Cantonese speaker writing for another Cantonese speaker,
then you will have much easier time, and it will be much more...
You'll be able to be more exact in how you word things, and the understanding will come across a lot better,
than if you're a Mandarin speaker trying to write to a Cantonese speaker.
That's what I'm saying, because the math and the computer are the same thing under the hood,
if you understand it, then you can understand the programming a lot better,
but if you use some other analogy, then it will be...
You'll write programs that are perfectly fine and perfectly work,
but it won't be as exact or as nuanced as it could be if you also knew math.
That's what I was saying.
I hope that this made some kind of sense, and I know that Ken is going to tell me that I need to now make a video on...
I'm sorry, an episode on every single one of the piano axioms,
every single one of the Zemele Frankl with choice axioms, one on Guadal and et cetera, et cetera at infinitum,
and I do want to do all of these things.
I'm not even lying, I'm planning on doing an episode on each one,
or at least aggregately on the Zemele Frankl with choice set or axioms and mathematics,
for the emergency log emergency two, but I don't have time.
Anyway, I'm going to hopefully get this actually onto my computer from my phone,
and I'm going to see how well that goes.
But...
Alright, that's it for now.
If you have anything you want to talk to me about, you can contact me over email at...
...easywoodwoods at pm.me, or via mastodon at blackcurnellatniksnet.social.
Most of those will be in the show notes, and those will be the only things that are in the show notes.
Please, Ken, if you want to tell me to do more episodes,
like you did with my last episode of Bob Born,
I would appreciate it if you give specific examples of what you want episodes on,
because I talked about a lot of stuff, and none of that isn't my brain anymore,
so I would like to know which topics you actually were interested in.
I know you'd just say all of them, and I could do one on literally every single word that I said,
if I had time, which I don't, so I want to try to make ones that are more interesting,
even if you would be interested in, like, the etymology of every single word,
ever spoken in English.
Anyway...
I'm sorry if I sounded angry, I'm not actually upset.
I'm just very tired, and I've had a very long week,
by which I mean that I have not stopped doing things for the past three weeks,
and I'm very tired, so I'm going to go to bed now.
Bye!
You have been listening to Hacker Public Radio,
at HackerPublicRadio.org.
Today's show was contributed by a HBR listener like yourself,
if you ever thought of recording podcasts,
and click on our contribute link to find out how easy it really is.
Hosting for HBR has been kindly provided by
an honesthost.com, the internet archive, and our syncs.net.
On the Sadois status, today's show is released on our Creative Commons
Attribution 4.0 International License.
