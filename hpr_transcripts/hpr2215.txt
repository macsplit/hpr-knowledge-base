Episode: 2215
Title: HPR2215: Kickstarter Omega2 Plus first time setup walkthrough
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2215/hpr2215.mp3
Transcribed: 2025-10-18 15:48:42

---

This in HBR episode 2,250 entitled Kickstart Omega 2 Plus first time setup walkthrough.
And in part of the series are doing no unrelated devices.
It is hosted by Garelo and in about 9 minutes long and carrying a clean flag.
The summary is, I talk about my experience setting up the Omega 2 Plus for the first time.
This episode of HBR is brought to you by an honest host.com.
It 15% discount on all shared hosting with the offer code HBR15, that's HBR15.
Better web hosting that's honest and fair at An Honesthost.com.
Forgive the voice, but I'm feeling a little emcee hawking today.
Ah yeah.
Yeah.
Give it up for the hawk man.
Okay, that's enough of that.
If you're not listening to system IU, then that's your clue that you should.
If I remember correctly, I think I saw crispy 150 and maybe TGOSOS has no heckt mentioned
Omega on Google Plus at that time and figured I should check this out.
It was so cheap and interesting that I couldn't pass it up.
Well, I just received my Omega 2 Plus package today.
This stuff is packaged well inside the set up.
Inside the undiscript red cardboard box, each module in my kit is packed in an electrostatic
bag inside a other little hand folded box.
It's like Christmas all over again, I even got a onion logo sticker.
Time to get into this thing.
On each little box flap is the website address at onion.io to get you started.
This is an almost real time walk through of my first experience with Omega 2 plus out
of the box.
The instructions are straight forward.
The docs tell you that LEDs should blink a certain way when first starting up.
They also state that things may not work that way.
Mine was the second case, the unstandard blinking LEDs.
As told in the directions, just wait a minute and try connecting to the Wi-Fi hotspot
little mega creates.
So, after a minute or less, I saw little mega's Wi-Fi access point in my Wi-Fi list of
networks.
After trying and failing to connect to the URL given, I ultimately needed to use the
IP address from the instructions to connect.
I logged in with the root password given, the next step was to connect little mega to my
own Wi-Fi network.
This seemed to be going well, but and it took way longer than expected to look like progress.
The Wi-Fi connect screen was just waiting forever.
Luckily, I was able to just refresh the screen and start the setup again.
It only took a minute or so to actually complete fully the second time.
Once your local connection is set up, you're presented with the option of connecting to the
Runion Cloud service.
I skipped this step.
As stated in the docs, you can skip this step to setup later.
I'm going to setup my router with port forwarding on my own.
This is not in the docs, but I don't want to put my IoT thing on anyone's cloud, no matter
how pretty and fluffy it looks.
The next step was to upgrade little mega over the network.
I have no idea what this does, presumably update firmware, etc.
Little mega finished the web update and went dark.
According to the docs, it's supposed to reboot and start blinking, but that didn't happen.
The docs warned on this also so I just power-cycled little mega with the handy switch on the edge
of the expansion board and little mega-started blinking as it should.
After power-cycling little mega, I thought that it would connect to my local network, since
the last message in the logo setup showed all was updated and ready.
The docs were finished.
I found a thing obvious to suggest that I should look for the beans on my network.
Actually, you're on your own to discover what the new IP address little mega is on.
There are discovery notes at the end of the documentation on the website, but they all seem
to assume you're already connected to the device over the network.
Initially this was confusing.
I'm not new to Linux, but I'm not the smartest network person.
Since part of the setup process was to connect to my local Wi-Fi, I figured that I would
be able to connect through SSH somehow.
Unfortunately there was no indication little mega was on my Wi-Fi network.
I did see little mega in my Wi-Fi network list and something to connect to just as
before the setup, but did not see a way to connect to it through my existing Wi-Fi network.
I could not connect with little mega's post name from the docs which was the last network
name mentioned in the docs.
The former IP address was not in my normal Wi-Fi subnet, so I knew that wouldn't work.
Yes, I did try that anyway, but of course that was not the solution.
Using a map on my own, that mentioned in the docs, I found one new IP number on the network
with an open port 22, which is the default SSH port.
The resulting list of IP numbers that responded to something active on port 22 gave me the
IP number of little mega.
No, as in case and it, no, that at Android tablet, no, that at Android phone, no, that at
Chromecast IP, no, that time 64, yes, there's the one that looks new and exciting.
Having found the one that's not like the others, I tried logging in with the root user
as they only use own from the docs.
Log in success, only an omega message of the day was the result.
Okay, onto my web browser using the same IP number for more fun.
Yay, that worked too.
Now for the rest of the story.
Once I connected to the little mega's own live website, I was shown a very nice looking list
of icons corresponding to several of the possible tools to use with the omega.
I already found the LED module mounted on the GPX pension board and decided to see what
it does.
This tool shows a very nice graphic representation of the Omega LED daughter board.
You can type a message directly on the screen in the browser.
Just click the disclaimer and to show your text on the screen.
There are predefined options on a drop down list to dim or reverse video on the screen.
There's even predefined animations.
You can scroll text left, right, diagonal, left or right, and top scrolling.
If you have an image handy, not in a hundred or so pixels across and 64 or less tall,
you can do the same with an image.
There are a number of other tools to control a realy, a servo, and a webcam.
I don't have those, but there are probably similar useful web-based tools for using the
Magon boards too.
There is only 32 mega user usable memory so you need to install additional software to use some
of the different functions.
I don't know how many different tools you can have on the board at one time.
There is a handy status screen on the onboard website showing how much RAM and how much
on the 32-meg memory is left to use.
The GPO tool is one automatically enabled.
Similarly to the little end page, you see a graphical representation of the little mega
mounted on the expansion board.
This time, you get a blunt dot sub-color next to the GPO bin rows numbered according to
the GPO bin.
If you've ever chosen a seat on a plane it's the same.
You click a dot for the bin you want to do something with.
Set it to input or output and set it high or low.
Click sync and the changes happens on the board.
Imagine you put this setup at home with a couple relays for lights or whatever you want
to turn on and off over the net.
Connected to the onion cloud service would give you control of the board from outside your network.
Or, if you're more security aware like myself, you'll set up port forwarding to the board using
any home router worth a flip.
One thing I didn't mention is, this thing is small.
I mean really small.
The normal size expansion board doubles the size of the onion omega itself making it the
not quite the length and width of a credit card.
The smaller expansion board is the same length and width of the omega itself.
Two large postage temp overlapping a little.
In other words, even smaller than a pie mirror, height is about one and a half the height
of the mirror if the mirror has the header pins installed.
Similar to Arduino and Raspberry Pi, you can write your own code in C or Python.
Unlike ESD8266, which can use MicroPython, Omega uses regular Python.
Omega does recommend a smaller version they call Python Lite.
The folks at Onion have created their own GPU library for Python called Onion Bill.
I don't have any experience with it myself, but if it's like the rest of the product,
I imagine it's pretty good.
The most impressive thing I find about this little gem is the way it's ready to go right out of the box.
I did nothing more than run through the setup docs and log into the web server.
The tools to start playing and seeing something really happen are setup by default.
This does not happen with Raspberry Pi, Arduino or ESD8266 boards.
With a couple pieces of add-on hardware from the onion store,
you can have immediate learning fun with your most inquisitive young person
or the one to be electronic served adult.
I pledged dollar for these several months ago for 1 Omega 2 Plus,
the expansion doc and 1 additional doc of my choice.
I couldn't help but add another 1 Plus another expansion board and GPS doc for a bit more when I cut the chance later.
You know how these kicks harder things go? This is a very good setup.
This is all pretty slick so far.
Now I have something else to 3D print a case for.
I'm definitely putting my fish tank temp sensor and light on my personal private cloud tonight.
Now what to do with my second Omega?
You've been listening to Hacker Public Radio at Hacker Public Radio dot org.
We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by an HPR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out how easy it really is.
Hacker Public Radio was founded by the digital doc pound and the Infonomicon Computer Club
and is part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly,
leave a comment on the website or record a follow-up episode yourself,
unless otherwise stated.
Today's show is released under Creative Commons,
Attribution, ShareLive, 3.0 license.
