Episode: 4058
Title: HPR4058: Radio Thermometer
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr4058/hpr4058.mp3
Transcribed: 2025-10-25 19:05:42

---

This is Hacker Public Radio, episode 4,058 for Wednesday, 21 February, 2024.
Today's show is entitled Radio for Momator.
It is part of the series Hobby Electronics.
It is hosted by Stash AF.
It carries a clean flag.
The summary is.
Stach talks about building a thing to solve an issue at work.
Hello, Hacker Public Radio. I am your host, Stash AF.
And today I want to talk about an issue that I have been having at work that some of you may also be having.
And how I have worked to solve this particular problem.
So to set the environment, I work in an instructional facility.
It's not quite a school where instruction happens in rooms with computers that are doing quite a bit of processing.
As most of us know, computers when they do a lot of processing generate heat.
So these rooms are kept at a cooler temperature.
Now the people who are instructing in these rooms don't like these cooler temperatures.
So they have a tendency to turn up the thermostat so that they are comfortable, but which the computers themselves are not.
My office being down the hall does not get these readings from these rooms.
So unless I were to go and intrude upon the instruction that's going on, I would have no way of knowing if the thermometer has been turned up.
Sorry, the thermostat has been turned up in these rooms.
And also nobody will ever own up to the fact that they were the ones that turned up the temperature.
The temperatures get too high, the computers have to be turned off, and instruction time gets lost.
So what I have done is I've taken my personal favorite microcontroller, the Raspberry Pico, put circuit python on it,
and attached a thermal resistor.
I don't know if it's actually a thermistor, I don't, that part I don't know.
But I've got a thermal resistor, and then an RFM 6.9 radio module.
It's similar in operation to a Laura module.
However, it does not quite have the output power of a Laura, but it's also significantly less expensive.
Last I checked, I think a Laura module was US $30.
These RFMs were US like five.
So significant savings there.
Now, why circuit python instead of compiling and see?
It's because I don't plan on working at this job forever.
And so whoever follows after me, I would want them to be able to just open the device, see my code, make any modifications they might have,
and be able to just redeploy without having to host a Git instance just for this.
I don't want to put this in my personal Git, since this is a work thing.
Now, all of these little radio transmitting thermometers would send a signal, send their signal back to my office,
where I would have another Raspberry Pico that would receive these signals,
and then I would have a board of LEDs that would either light red, yellow, or green, depending on whether or not the temperatures are too high, almost too high, or in the green.
The reason I want to do something like this instead of getting individual radio broadcasting thermometers is number one.
Those are very expensive per each and I need, I would need at least 10.
And each one of those would have their own receiver, and it would end up cluttering up just one desk of all of these little thermometers versus having the little boards that can transmit.
And then I just have one little board for receiving, just get a quick indication of where things stand.
I am going to include my schematics for these.
Those of you who are in fact electrical engineers, or anything like that, please remember I am an amateur at this.
This is not my day job. This is just something I do as a hobby, but if you do have any criticisms or suggestions,
please shoot me an email or make a response episode.
Hacker Public Radio is in desperate need of episodes.
My email is stash 010 go alpha charlie hotel echo at duck.com. If you have any suggestions, please drop me an email.
It would be much appreciated. Maybe I can get some help to make these things better. Thank you. Bye.
You have been listening to Hacker Public Radio at hackerpublicradio.org. Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording podcasts, then click on our contribute link to find out how easy it leads.
Hosting for HBR has been kindly provided by an honesthost.com, the internet archive and our sings.net.
On this advice status, today's show is released on our Creative Commons Attribution 4.0 International License.
