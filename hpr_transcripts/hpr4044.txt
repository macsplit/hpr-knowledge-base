Episode: 4044
Title: HPR4044: Advent of code day 11-21 catchup
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr4044/hpr4044.mp3
Transcribed: 2025-10-25 18:58:12

---

This is Hacker Public Radio Episode 444 for Thursday the 1st of February 2024.
Today's show is entitled, Advent of Code Day 1121 Catch Up.
It is hosted by Daniel Person, and is about 13 minutes long.
It carries a clean flag.
The summary is I talk through the last challenges of this year's event of code that I actually
did.
Hello Hacker's and welcome to another podcast, and today I'm going to continue the catch
up of Advent of Code, and I'm done, it's the next year, we have gone through all Advent
of Code, I did until day 21, and then I could not be forced to do the rest of it, because
I was really, really sad that there was so much math this year, and not really that much
computer science, and other topics that I find more interesting.
I remember one year where you had to create a small computer, and you added that computer
more and more and more, and in the end you had a game that you had to play on the 25th,
and I thought that that was so much fun, and this year it was just solve this math problem,
and then you need to solve that math problem a billion times harder, which is not really
that interesting to me.
Googling for a solution is not really the problem solving for me.
So day 11, there were some hot springs, you had this kind of image with galaxies, and
then you had to figure out which row and column, how many things were in it if you added
extra rows and column to it, and I figured that one out, I could do it, and the second
one was just, instead of adding one column, you add a million columns in extra, which
is just extra work.
And then we had day 12, that I only finished the first one, this is one of those where
you had a bunch of rows of information, and then you had to figure out how many times
a number series could fit into those rows.
I run it through, I created something that could do this on multiple CPUs and everything,
and I solved almost all of it, but I could not be forced to do it to completion and actually
get a result, and I frankly didn't want to.
Then we had a 13, and here we had this map, and again we had needed to figure out a solution
containing this map, where is this map actually splitting to, so where it does it mirror itself,
and if you figured out where it mirrored, you could calculate how many rows and columns
there were, another mafia problem in my mind, and then we had the day 14, which I solved,
it took a long time, but I just had to run it for a long, long, long, long time, and this
were pretty much a board where you could tilt it in one direction, and then you just needed
to tilt it in all the different directions and see how different stones were rolling
in the map, and you needed to do that a billion times, so just do things a lot.
Next up we had the lens library where we needed to figure out how things, in a sequence
of things that you needed to parse, figure out how light were actually going through the
lenses, and how much energy they pretty much added up, so this was a little bit more fun,
you had actually boxes where you were needed to put in different values, and then depending
on how you pushed information through these different boxes, you got to different information,
so a little bit more fun, but still, day 16, we had Flora's lava, and here is pretty much
figuring out how flows goes through and maze, so we needed to figure out where everything
flowed, and then figure out how many tiles had been energized with information, so also a map
problem, day 17, and this was also a map problem again, where we pretty much needed to figure out
the shortest path through and maze, and the second part where pretty much the longest path
for something like that, again a map or map puzzle, not data science, day 18, and this is one
that I didn't solve either, so here we needed to figure out how large a particular size
were, a particular space were, so you first you got this map where you needed to figure out
how much space there were inside of a map, if you went X meters up and then X meters down
and so on, so you draw the border of a map, an edge, and then you need to figure out how large
the area was, and then they just said okay we have this, but we just make the values super large
instead, so the map becomes super large, and what would the size of that area be, not really
on solving that either, day 19, here we had some calculations that needed to be done,
and this was more computer science, I like this one, I solved it, it was pretty much parsing through
a bunch of data, and then figuring out how to create different classes that could handle this data,
so it said pretty much here we have an expression, and if it's truthful do this, otherwise do this,
and it needed to jump to the next expression and so on, so you needed to create some kind of calculator,
you needed to figure out states and so on in classes, so this was a little bit more fun, and I solved both of them,
so day 19 was fine, then day 20 again, we were back to something that were needed to be done a bunch of times,
here it was a signal that needed to go through a bunch of steps, you push the button, and then you send a low signal,
and in some cases that was flipped to a high signal and then low signal, and you needed to do that X amount of time,
so first it said yeah you push the button these many times, and the next one was how many times do you need to
push the button in order to get this state at the end of the maze, I didn't solve the part 2,
because it was just do this a lot of times, and then we had, so that was day 20,
and the last one that I looked into was day 21, where you needed to figure out a step counter, again a map puzzle,
where you stood on one place, and then you took X amount of steps, and you needed to figure out how many positions you could be in when you had to take an X amount of steps,
and then you said okay well we do that for 64 steps, and then you are still inside of the map and you get the answers,
and the second part of this is that okay no you should not take 64 steps, you should take 26,501,365 steps,
okay you will never fit that into a map, well the map is actually expanding into infinity, so you will just copy the map,
so then I said okay if you do this 6 steps you get this value, if you do it 50 steps you get this value, if you do it 5,000 steps you get this value,
so I solved it in the way that I actually got the information for the small map, so I figured out a way to run this,
but doing it with a large map would have taken forever, and by this point I was pretty much done with the advent of code,
I could not be bothered to do 22 or even read 22, I needed to do something else, so I went over to Sans Hacking Challenge,
did a couple of hacking challenges there instead, which was so much more joyful and fun,
because you actually had to solve a puzzle, not just calculate some algorithm with really large numbers,
so that was a really big breath of fresh air when you had been stuck with advent of code for 21 days,
so this was today, this was this year's advent of code, and I'm really sad to end it up in a downer,
I would have loved to solve all of them or at least have a joyous occasion to come back next year,
I'm not really sure if I'm going to do advent of code again, I was really put off by this year, I didn't like it at all,
and I think a lot of it has been destroyed by AI and those kind of things, I think they were really scared this year that the puzzles wouldn't be challenging enough or be fun enough,
and people would just solve them by using some kind of chat GPT instead, so they made these obtuse puzzles that are not really fun to solve,
and it couldn't really go out of that box, or perhaps they had some people or some person that haven't been working on this,
just copy-pasted hard puzzle from years before, because many of these kind of puzzles I remember that have solved before in previous years,
so maybe they just ran out of time this year and couldn't really create something creative, just adding these kind of algorithm puzzles,
but if you should solve them the right way, you would have Googled for an algorithm and then used that algorithm,
and somebody might say computer science is pretty much remembering a bunch of algorithms or Googling for the right algorithm for the job,
but I think that it's more fun to solve a problem and figuring out your own solution and just deriving at an answer that is more in tune on how I would like to work on problems.
So this was this year of Advent of Code, have you done Advent of Code? Please leave a comment about that,
so I would love to read if anyone else have tried these challenges this year, this year, and what they thought about them,
you can also send me an email if you want, hello at DanielPashion.dev, or my personal email that is on Hack and Public Radio, if you want,
and I hope that we will continue with this project, I would really love to hear more interesting stories and if interesting problems solving from this great community.
See you in the next podcast.
You have been listening to Hack and Public Radio at Hack and Public Radio does work.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording podcasts, then click on our contribute link to find out how easy it really is.
Hosting for HBR has been kindly provided by an honesthost.com, the internet archive and our sings.net.
On this advice status, today's show is released under Creative Commons Attribution 4.0 International License.
