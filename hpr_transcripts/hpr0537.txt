Episode: 537
Title: HPR0537: Episode 6.Bit-of-Python
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0537/hpr0537.mp3
Transcribed: 2025-10-07 22:42:13

---

.
You'll listen to episode 6 of a little bit of Python, an occasional podcast with Michael Ford, Jesse Noller, Brett Cannon, Andrew Kutschling and Steve Holden.
This is a special episode recorded at Picon Atlanta 2010. If you have any feedback, suggestions or just flames, you can email them to allatbitapython.com.
.
You'll listen to a little bit of Python, this is Michael Ford, and I'm sitting in what was the green room, the speakers room at Picon 2010 in Atlanta.
The sprints are still on, but there's not so many folk here.
I'm sitting here with Van Linberg, who is one of the members of the Python Software Foundation. He was the chairman of Picon organizing us, and we'll find out if he's up for the challenge again.
Van's a very clever guy, he's an author, very tech savvy, but he's a lawyer, and we don't hate him. Hello Van, it's great to be speaking with you.
It's good to be speaking with you as well, glad to be doing it.
How have you found Picon this year?
I've loved it. I think in a lot of ways, it's, it may sound self-serving, but I think this has been one of the best Python's ever.
We've been able to over the course of a couple years, iron out some of the, some of the little wrinkles that inevitably come up.
And so, I think that we're getting to the point where we're pretty good at this, and it's a lot of fun.
How many years have you been involved in organizing Python?
In organizing, this is my third year. I did attend one year before that, so I've been at Python at least four years, and then organizing for three.
That's the same. This is my fourth Python, and even in just the space of sort of, well, three years, I guess, end to end.
Python has changed quite a lot in that time, and one of the ways it's changed has been the number of attendees.
Oh, yes. We are, if you look at four years ago versus today, we, it looks like we're going to be almost double, exactly double the size.
Our best estimate right now is that we had over 1100 attendees.
Really 1100.
Yes. So that's the best, that's the best, that's the, yes, it's the largest ever.
This is also the largest in terms of the amount and variety of material that we, we've ever had.
We, we had an extra tract of this is that that's right.
That's right. We had five tracks, which was 95 talks.
We had a total 28 tutorials, and we also had the poster sessions this year.
That was another new thing for, for Python. How do you think that went?
I think it went incredibly well. I heard a lot of people say that they were planning on submitting posters for next year.
The only complaint was that we didn't have enough.
So this year we had a tremendous trouble selecting the talks. We had about twice as many talks as we did slots to put in them.
So that was a very difficult job, but I think we were able to accommodate almost all of the people who, who wanted to do poster sessions.
So you're saying next year, selecting posters is going to be just as hard as selecting talks. What's this year?
I think that's right. And we're already getting ideas for talks and posters for next year.
People are just really excited. One of the things in particular that we're going to be doing next year is extreme Python.
Ah, right. I thought this sounds great.
We're borrowing a page from the late 1990s or early 2000 marketing materials, computer marketing materials, everything had to be extreme.
But this is going to be a series of sessions talks one in each time slot where we're going to be finding domain experts and people who are really good communicators and telling them talk to talk like you're talking to your peers.
Talk about the problems that you're facing and how you're addressing them.
And it gives them permission to skip some of the introductory material because we'll have four other tracks of talks, a lot of which we'll have introductory material.
But for those who really want to have a mega advanced stuff.
Yes.
I mean, we've got some enormously clever people in the Python community.
We've got people like Ian Bicking and we've got the PyPy guys. We've got the young lady and swallowed guys.
These are enormously clever people. Yet people have still seemed reluctant to submit the sort of really advanced talks.
It was interesting that the most popular talk, or certainly it seemed that way to me, was David Beasley's talk on the internals of the Python global interpreter lock.
You know, something not for the faint artists.
Yes, I think what it is is that people are afraid sometimes that if they talk about something that is somewhat hard or somewhat obscure, they just won't be as much call for it.
It won't be as popular.
But I mean, Alex Martelli, Raymond Hattinger, these guys do advanced talks on Python patterns, the Python internals, and they're always very well attended.
I think people are also nervous of pushing themselves forward and sort of saying, hey, I'm advanced. I can do advanced stuff.
It's a bit easier to do a middle-range talk, perhaps.
I think that's true.
And that's one reason why we're trying to line these up early. We'll give people a whole year to come up with something that they...
Is that preparing your extreme Python talk now?
Exactly.
I'm really looking forward to that. That sounds like it's going to be great.
So, did you actually get to go to much of the talk? I imagine you would get fairly busy during the conference.
I got to attend three sessions.
Three sessions?
Yes.
Out of how many talks did we have? 95?
Yes, man.
Most of the time, you know, you sort of feel like a B, you know, flitting from one little spot to another back and forth, because you need to keep your finger on the pulse of what's going on.
Still, I was very excited.
The one that I liked best was natural language processing with NLTK and Hadoop.
Wow.
And Hadoop is a distributed platform, right?
Yes.
So, is that the Yahoo guys?
Yes, it's the Java implementation of the MapReduce framework.
Right. Right.
And what they talked about is being able to apply natural language processing techniques across a cluster using Hadoop.
Well, I think that sounds really interesting.
I think libraries like the Natural Language Toolkism, and there's frameworks like SciPy, and you find whole sort of domain areas where the Python libraries are the thing to use and that they bring people into Python to scientists and the engineers.
I think so.
I mean, there are a lot of little islands of Python users.
Animation, particularly animation pipelines, is completely owned by Python.
It's this, it's the de facto integrated scripting language in just about every major animation product.
Yep. I did an interview earlier on with Paul Hildebrandt of Disney, and they're using enormous amounts of Python in their animations.
Yes.
And not just Disney. Pixar, DreamWorks.
What's a...
What's a...
Yes. Every one of them.
The entire industry is more or less standardized around Python as the scripting language interface.
So, how did you get into Python then?
Well, I was... Before I was a lawyer, I was a programmer.
And I programmed in, you know, a dozen different languages of different types.
Was this a college or before college?
Ah, this was a college.
I'd done some stuff before college, but not real serious.
And when I came to Python, I just fell in love with it.
We talked about how Python fits your brain.
I just felt that at last I was not fighting with the language to try and express myself.
And so, you know, I can still do stuff in Java or C, but when I can, I do it in Python.
But Python's not your day job.
You're a lawyer, but you have a very interesting job.
Interesting job title.
Would you like to tell us a little bit about what you do?
Yes. I am an intellectual property and open source lawyer.
That sounds terrifying.
It's... I try not to be evil.
You're the lawyer amongst other things for the Python software foundation, right?
That's correct.
So definitely not evil.
Yeah, I spent about half my time working on patent related issues and about half the time working on open source related issues.
And one of the things that I think is interesting and I think is quite fun is that for patents, I focus on this area of patent law.
It's a patent practice called re-examination.
And that is where you find prior art and you go through this process to submit it to the patent office and convince them that a patent was granted an error.
And if you do it right, the patent will ultimately end up getting revoked.
So the free software foundation have had a very successful and well publicized campaign of trying to get several particularly bad patents re-examined.
Have you been involved in that?
I don't know. It's the EFF.
It's the EFF fund, yes.
That is the same process that I do.
I've not been involved in that one, although I think I plot what they're doing.
Most of the time when I'm doing things, one of my clients has been sued by a stupid patent and we help that patent go away.
So you fight the patent trolls?
I fight patent trolls. It makes me glad to be on the winning side, on the non-evil side.
And in this whole area of intellectual property and how it relates to open source, you wrote a book on the subject?
Yes.
I read the book. It's incredible because it's a book about law that's actually fun to read.
So I really enjoyed it.
I think it's something that's every open source developer ought to read.
Do you want to tell us a little bit about the book?
Yeah. This was...
What's the title?
The title is intellectual property and open source.
What the idea was that there were a lot of programmers and developers.
You know, these are the people on the front lines creating and using intellectual property.
But if you look at slash dot or reddit or news.yc or wherever you go, there's just a tremendous amount of noise and argument about the principles of intellectual property.
And most of that is just simply not right.
And so perhaps it's quicksotic, but I'm sort of...
Somebody wrong on the internet.
Yes.
There's somebody wrong on the internet.
So you set out to put them right.
I set out to put them right.
It's a one-man quest to try and raise the level of debate around intellectual property.
Touches everything from the term intellectual property, what does it mean?
You know, why is there such a thing? Why did...
Richard Stormman had a few things to say on that subject.
He did.
Yours is a very... your book is a very pragmatic approach.
It's not an ideological book. It's about this is the law and this is the way it applies.
Mm-hmm.
And yes, I tried very hard to...
As closely as possible describe the way that I thought that things would apply and the way that a court would see different situations.
And not really trying to change the world, just trying to explain it because we all...
Again, this is the world we live in.
We need to... we consume and we create intellectual property.
And we need to... and people need to understand how that works.
Even if they don't support it in all the ways in which it is currently being used.
I surely don't... I still agree with the concept of a lot of types of intellectual property.
But I think... but I also recognize that there are a lot of excesses that I don't agree with.
One of the interesting things I took away from the book was that the free software licenses that we rely on as open source developers and distributing projects.
The way that those licenses get their validity from the existing copyright law and from the intellectual property law.
So that if you release something under an open source license, you're actually using copyright law and having some understanding that it is very helpful.
Yes, absolutely.
So then we've talked about Python this year, how it was a great success.
We had more people than we've ever had before.
We also had a high percentage of women that we've had in previous years, right?
Yes, that was... I have to congratulate Gloria Jacobs and Steve Holden.
Together, those two really put together and spearheaded an effort to recruit women and bring them to Python.
And so it may not seem like a tremendously high percentage, but we think that we had about 11 percent women.
It was definitely noticeable that there were many more women.
Other open source conferences generally have around 1 to 2 percent women.
And so, although it's nowhere near parity for technology-focused conference, in particular an open source conference, we were pulling far ahead of our weight.
One of the things that I thought was interesting is that during Guido's Van Rossum's keynote, he was wearing a t-shirt that said Python is for girls.
And someone asked him about the t-shirt and said, what about Python makes it particularly suited for girls?
And he said, well, there's nothing particularly suited for boys either, so it must be equally suited for girls.
And so what about next year? We talked about extreme Python.
Are you already starting to plan Python 2011?
A little bit, yes. We're starting to put together the team.
There will be a couple of weeks of work just to make sure that we tie a bow around Python 2010, making sure doing all the final accounting and making sure all that is handled.
But there's a lot of exciting things around Python 2011.
One thing that I hadn't thought of earlier is we are going to be having vendor tutorials in 2011.
Now this is something that we've never done before, and these will be in addition to the regular tutorials.
The thing that made me think of this was our discussion of how there are these islands of Python users that use Python because it's embedded into frequently a proprietary product, you know, SRIs ArcGIS.
Or mayor in the animation world.
Exactly. There's always been a reluctance on the part of the organizers and the program committee
to have tutorials that were based around a proprietary product.
But for those who are using the proprietary product and their job, they'd like to know how to use Python to make it better, to be more productive to use their tools that they've already got in a more efficient way.
And this is perhaps a way of reaching out. There are a lot of companies and organizations who use Python.
We haven't really been a very effective reaching, I don't think.
I think there are tens of thousands of Python programmers out there who get an enormous amount out of Python.
And by reaching into the particular islands that they're working, this is one way we can bring them into the community a bit more.
Exactly. PyCon is such a fantastic experience.
And it allows us to address the entire community.
We have a growing ecosystem of people who are embedding Python and using it in all sorts of places.
And of course, there's Iron Python and Jython, both of which in recent years have really grown in popularity and bringing Python into other programming communities as well.
Yes. And so having sessions dedicated to integration with those other platforms and those other products, I think will be a tremendously interesting and valuable part of Python 2011.
Well, it sounds like it's going to be great. So I'll see you in 2011 at the next part of that.
Sounds good. Thanks very much. Take care.
Thank you for listening to H.P.R. sponsored by Pharaoh.net.
So head on over to C-A-R-O.N-C for all of her community.
.
.
.
