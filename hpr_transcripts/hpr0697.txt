Episode: 697
Title: HPR0697: Aaron Seigo on accessibility in KDE. An outtake from Frostcast Episode 36.
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0697/hpr0697.mp3
Transcribed: 2025-10-08 01:05:37

---

Today on Hacker Public Radio, Jonathan Nadu interviews Aaron Saigo and their talk about accessibility in KDE.
After his outspoken criticism of accessibility in Ubuntu, Jonathan Nadu has become a standard bearer for accessibility on the floss desktop.
In his interview with Kitty Spokesman, Aaron Saigo, Jonathan didn't ask any questions about accessibility.
I was expecting to hear about accessibility improvements and what was in the pipeline for KDE.
When I contacted him about this, he immediately replied saying that they did talk about accessibility and he didn't add it to the show as it was already running long.
He said he might release it as a separate podcast.
I floated the idea of him releasing it on HPR and he was kind enough to email me the segment.
This is what you're going to hear today.
The rest of the interview can be found at frostbitemedia.libsinn.com forward slash frostcast-epsod-36-all-in-all-case links will be in the show notes.
On a separate note, HPR has no more shows in the queue.
We do have syndicated shows but we have no HPR generated content.
HPR is a community feed and without shows it will cease to exist.
Many people have stepped up to the play from recorded shows but I know there are many more out there who have it in them to contribute.
With that in mind, I ask you to record a show today and send it in.
All you need to do is email admin at hackapublicradio.org and attach your audio file to that.
Thank you very much. Enjoy the rest of the day's show.
Hey Aaron. Hey, how are you doing? Hey, how's it going, man?
Not bad, not bad, yourself.
Oh, good. Thanks for your time.
Another problem. Sorry about the last mix up the other day.
Still getting used to life here and how long it takes to get everywhere and yeah.
What brought the move on?
I'm actually getting married in May.
Okay. Congratulations.
Thanks. My fiance is a researcher at ETH here in Zurich.
Okay. So since I can work from pretty much anywhere and she's tied to her research position, we decided it was probably easiest for me to move here.
Yeah, that works.
Nope.
You're in Canada right before?
Yeah. That's right. I didn't Vancouver.
Yeah. That must be the different landscape then, huh?
Yeah, quite a bit.
Fortunately, I've been here before to Switzerland in Zurich.
So I have, you know, had some idea what I was getting into.
But it's definitely different living in a place than visiting.
Yeah, I believe it.
I talked to Jim, my foster from Debian.
And he was living in Zurich, but he lives in Switzerland.
And he was saying it's, it's tough to get used to like the weather.
He's like, it's, it's, I don't remember this, the, the timing.
He said, but it's dark for such a long period of time there.
And people need to like, I don't know, get under these lights and stuff so they get used to having sun and all this crazy stuff.
Yeah, it's not that far north is not like, you know, Finland or, or, you know, up in Norway.
So you get really, you know, dark winters, but you do get a fair amount of rain and cloudiness.
But having come from the Pacific Northwest.
Yeah, that's it.
Here next to that.
I have an Olympic champion at dealing with gray skies.
So that's cool.
Yeah, it's definitely convenient that you can just get up and go and, you know, work from anywhere and doesn't really change.
Well, I guess it must throw off your timing though.
You must be like eight hours ahead of what you're normally used to or whatever.
It's 12 hours ahead or something.
Yeah, nine hours and, but I mean, that was, I've been here for a few weeks now and that's not a problem.
Oh, okay.
Yeah.
Yeah, that's cool.
Yeah, so basically I'd like to talk to you about KDE 4.6.
And, you know, maybe you can let our listeners know all the fantastic stuff that came out on that.
Um, I don't know if, uh, because I'm a, I'm a blind Linux user.
So I don't know if you know much about the accessibility of KDE.
I'd like to maybe touch base on that.
I've been, I'm on the mailing list for the KDE accessibility list.
And it seems like there's a little more action going on there.
I don't know if you know much on that in front or not.
Because I know you deal with like plasmoids and stuff.
But I don't know how deep into the development of like all of KDE you cover.
So.
I try and stay abreast with what's going on, um, just because I end up doing these kind of interviews.
So while I'm certainly not involved in every bit of development and design and, and, you know, all the projects, uh, directly.
I do try and keep, you know, pace accessibility is a really interesting topic.
We had gone to a certain point with the three point back series.
Uh, where we had, you know, a nice screen magnifier.
We had high high contrast icon themes.
We had a widget style that was optimized for people with various vision problems.
And what we didn't get to, we also had some speech to text support.
We did, but we didn't really, really get to though was the things that, well, people who, for instance, are blind and use computers really rely on.
Um, things such as interfaces with, you know, Braille keyboard and being able to connect our, our dialogues up with screen readers.
Yeah.
As you, for you, this is obvious. I don't know if your listeners are aware, but, you know, you're supposed to be able to go through my window and it should read all of the bits of text to you.
And let you know, you know, this is a, you know, a part of a menu and, and whatnot.
And we never really got that going in the three point X series.
And the reasons were were largely technical. There's only one stack in the open source free software world that is.
Um, that really exposes that level of power for accessibility, which is, of course, the ATK SPI.
Right.
And stuff.
So this was work that was originally funded by Sun Microsystems, which kind of dates it. They don't exist anymore.
Right.
But they, they threw a lot of time, money and energy into it, much to their, I think, credit. Now they did this, of course, because one of their big source of income was, uh, government contracts and deployments.
And of course, most governments these days have, you know, basic requirements for accessibility.
So you're going to sell into a government and you have accessible software and your competitors do not, you win and vice versa.
If your software is not accessible and there's is, you lose.
So it was important. So they funded the development of this.
Um, it was tied to Corba and GTK.
Yeah.
Which, I mean, in one sense was, was understandable in the sense that, you know, they were already putting a lot of effort and time into things.
Um, they were a, a very GTK, GTK, centric shop.
Um, and yeah, they just, that was their focus.
So we started working with them on how can we make this more generic general purpose.
Um, you know, and they'd also worked on bridges for like open offices, Uno and stuff.
So I mean, they did put a lot of effort into things.
But we talked to them, but how can we make this little more generic and whatnot?
And we did this through, um, with cooperation with a lot of the early groups.
And there was some free desktop.org stuff we worked with some people from the American foundation for the blind.
Um, the earlier versions of the Linux foundation, uh, really pitched in.
And we, we decided that probably what the future was was going towards something that was, um, you know, at the time, this new thing that was coming D bus.
And instead of tying it to Corba, which at the time Red had it already signaled, they kind of wanted to move away from as much as possible.
Uh, we'd see if we could use this D bus thing.
And this was nice because we were already using D bus in cute and KDE software.
Um, and this actually was one of the reasons why the D bus bindings for cute, um, were funded and written, uh, funded by, by troll tech at the time.
Of course, which now went by Nokia.
Yeah.
So we're at the point now where there's, um, a SPI to, I believe it's called.
Yeah, um, which has been, I had a lot of involvement from IBM.
And it is D bus driven. And that's kind of where our focus is.
It still isn't all 100% there.
Um, but it looks like we finally have, you know, the right direction, um, of the right pieces in place, um, on the cute level.
Uh, which is, of course, what KDE uses to write our software on top of.
It has accessibility baked right into it, um, through, uh, this class called Q accessible.
Okay.
And the challenge for, for KDE is that while Q accessibility works just great on Windows and Mac, it does so less on free software stacks.
Yeah.
So, yeah.
That's the, that's the kind of the last mile that we're pulling together.
Um, but that's something that we will be, you know, achieving in the four point X, uh, time frame, which is really exciting.
Because I was actually involved in the very first discussions, um, and was the one to propose that we step away from Corbin, go to D bus.
And this was, oh god, I don't know how many years ago now seven.
Yeah.
Um, I flew to, uh, conferences, you know, thousands of kilometers away to attend and meet with these people with people involved in it.
Um, you know, and I, I never really put a lot, I wrote a few lines of code here and there, but never really a whole lot into the accessibility is kind of tried to mount it help with the community side of it and get the right people talking.
Yeah.
Um, and so it's really cool to see something's coming together.
Um, outside of that, there are some really cool things happening though, uh, just yesterday, I think it was now the developer who was working on the KDE, uh, chess playing application.
Um, he posted a blog where he talked about, uh, making, putting into what are really accessibility features, uh, into nights, which is the name of the, the application.
Okay.
Um, cause night has a K, you see?
Yeah.
Exactly.
You may not always hear them now, but they're still there.
Yeah.
So, uh, the two accessibility features were, uh, text to speech output, which we still have, and it works very well.
Um, but was the other side of it was, uh, speech command.
And what was really exciting about it wasn't like, oh look, our chess program is accessible now.
It's more of the ease of which this was possible because of all the work that's been going on in accessibility.
So what he used for, uh, voice command was a very, very powerful us platform, uh, application called Simon.
Yeah.
Have you played with it at all?
No, I haven't.
I've seen it though recently in a few mail.
Um, I'm pretty, I'm pretty much assigned to any accessible mail is possible.
And I've seen that name for phone around the past couple of weeks.
And I've been wanting to check it out, but I haven't actually like, you know, checked it out yet.
Well, cool. I really recommend it. It's, it's really neat. Even for people that don't need the accessibility benefits of it.
It's really nice.
Basically, it allows you to navigate your entire computer, um, including setting up custom, you know, interactions and commands with voice.
And it's a multi layer system. So you don't have to set up sets of, um, you know, long commands that do, you know, each specific thing.
You can actually tell it, okay, you know, go into this menu. Now go into that menu.
Okay.
So you can drill down.
And it's a really quick date.
Uh, one of the developers came to Academy last year. Did a presentation on it and showed us it running.
And yeah, it's, it's remarkable for not just for people who have, you know, need or want to interact with their computer, uh,
audio, or audio, uh, with audio, um, for site reasons or whatever, but also motor control issues. Yeah. Yeah. Definitely.
Which is even the bigger, a bigger audience for that.
Absolutely.
And so yeah, you can actually set up these pallets very easily. And you can also get pre-configured ones, which is what Knights is doing, where it has Simon integration.
And of course, for those who may not be in North America, there's a game we play called Simon Says.
Yeah. Yeah. Right.
Where, you know, you have one person in the front who tells you to, you know, lift your left leg and wiggle your ears.
And only if he says Simon says you're supposed to do it. So it's kind of a play on that. Yeah.
Um, anyway, so Simon, uh, it's a Knights has Simon integration now. It has this, you know, profile. So you can start up Knights.
And if Simon's running, you can use Simon to move all your pieces around. That's really cool.
And then on the other side, you can tell Simon, hey, read me out all the moves so that you can sit there and the computer will read out.
Oh, okay. And that's what I was wondering. It's like how you're going to know how to, uh, like what commands it understands or whatever. So that's cool.
So you can have it run through the list.
Yeah. And the computer will, as it plays, we'll also tell you what it's doing.
Oh, that's cool too.
So you can sit there. And if you're, you've got a really good visual memory inside your head or a spatial memory more than visual, you can sit there, close your eyes and play an entire game.
Just with audio.
And so that kind of thing I think is really exciting. These are the things that if you go back, you know, a few years just weren't within our reach.
Yeah.
And now they are. So, you know, while the transition from from the Katie three to the new four point X series, we did have some early bumps with accessibility.
We're starting to get these back again. And with a compositing window manager, we're able to provide a lot of features that we just couldn't be for as well, such as being able to in real time with good performance, alter the colors of the screen.
So we can, you know, make everything high contrast. We can invert colors. We can do these kinds of things that before we had to add on software that did kind of an okay job of it.
Full screen magnification with, you know, high fidelity and these kinds of things that are only really possible when you have a composited window manager and Quinn's doing a good job of that.
So, you know, long story short, we still have, you know, road ahead of us, but we've also come a long way and where we are is pretty cool.
And for anyone who's listening, you know, the payoff for listening to all this rambling about accessibility, even if you don't use it, definitely check out Simon, because even if you don't use accessibility features, it is very, very cool.
Now, the Simon, is it only work under KDE or can you implement into, you know, any of the other desktops, like we'll work under Gnome or like XFCE or whatever, like is it an open stack for accessibility or is it kind of tied in the cute system?
It's written in cute, but it's not tied to cute or KDE.
In fact, if I'm not wildly mistaken, I'm pretty sure I'd have to double check by 99% positive without checking.
I didn't do my homework on this because I didn't know we're going to get into it.
So, well, I didn't like technically start the interview yet.
So, I just wanted to, you know, but yeah, I think Simon, I'm 99% sure Simon's also available, even for Windows, Microsoft Windows.
So, it's very flexible and you can assign random commands, so you can drive things by Debus, you can launch commands, launch applications.
It has a bunch of presets as well that are kind of template things that you can do with it, so you can have it, you can basically turn it into an application launcher and various other things.
When it gets to really tight integration, like with what Knights has done as one example, which I'll keep harping on because it just happened yesterday.
Then, of course, you get even deeper interaction with the application, but it's flexible and generic enough to be used not just with, say, plasma desktop, but whatever operating system and desktop you prefer.
That's awesome.
I just have one last quick thing I want to run through with you is I spoke with Rex, who works on KDE for Fedora, and he mentioned why it was interviewing him about, I'm not going to remember the name of it now, he said that there was sort of like a screen reader-ish type of thing implemented in 4.6.
It starts with a J, it's like someone's name or something, I don't want to say Joshua, but something like that.
Yeah, the new screen reader.
Let's see if I can find that one too.
I can't remember the name.
Yeah, that's it, that's it.
Yeah. Now, like, do you know, I haven't installed, I just installed, downloaded OpenSus 11.4 because I know that implements 4.6.
Do you know, do you have a rough idea of how well it works or how much of it does work, or do you have any idea of where the state of that is at yet?
Yeah, it works quite well, it's interesting because this is, as I mentioned before, we had a screen or text-to-speech system in KDE3, and this is really the next generation of it, per se.
Okay, so there's still the K-speech API, and what it really does is it sits in front of and kind of hides a, once again, a D bus system.
Yeah, so applications, and again, not just KDE applications, but any application that wishes to use it, can access the D bus service.
It's org.kde.ktdsd, which is a whole jumbo letters, but it stands for KDE-text-to-speech-demon.
Okay, yeah.
And basically, the application sends it requests over D bus. Basically, here's text, here's the context for it. Can you please talk it, speak it.
And there's different features it has, plain texture.
Yeah, so HTML.
Is Jovey then a screen reader like Orca in GNOME, or is it more just kind of like a terminal, I'll repeat whatever text I see come across in terminal?
Right, so Orca and this stuff that sits in front of ATK SPI goes through the hierarchy of objects in a window and interacts with them.
So it sees a button and it goes, okay, here's the text on the button, here's the accessibility label for it.
And it can go in and basically determine what is the interface and lets you, then the full round trip as well as it allows you to interact with it.
What text-to-speech does is similar, but not so much with the interactive elements, it's more about actually reading blocks of text.
So you could use it to read out here, what's on this button, when it gets focused or what not.
But the kinds of things that it's usually used for are when you put something on your clipboard.
Yeah, like if you wanted to read a PDF file to you or something.
You're being able to read or being able to read a web page in a way that actually makes sense, right?
Or when notifications happen, so there's new updates for your OpenSUSA 114, it's brand new, I'm sure there'll be updates every day for a while now.
When that notification pops up, it can automatically be read out to you and that uses the text-to-speech clock when it changes time.
Every 10-15 minutes hour, whatever you set it to, you can have it read out the time to you audibly.
That uses the back end as well.
So it's really more for applications to say, oh, here's some text that the user needs to be able to be aware of.
And it instructs it to read it.
So it's not even necessarily let me navigate the desktop, but if a notification pops up, it'll say, hey, there's text here, I'm going to read it.
Right, which is something that the other tools that are really more about navigating the desktop may not be as well suited for.
Okay, because the application, such as a notification manager or the clock, for instance, will know when it needs to have something said.
Right.
And then I can just send this background process that just sits there and tell it, hey, we need to talk about this now.
Okay.
Yeah, because from what I've seen on the accessibility list, it seems like they're trying to get the ads by like bridge working.
It just seems like they're from what I've been reading, and they're just trying to be able to figure out a way for, you know, to kind of get Orca moved over to KDE and figure out how to let Orca maneuver the KDE desktop.
Yeah, exactly. I mean, the accessibility, the amount of resources for accessibility is low.
Yeah, I mean, it's like that everywhere in open source. It's amazing what we managed to do with a few people as we do, which I think really speaks to the lean processes that we have in place.
And we have, I mean, we have orders of many two more people now than say when I first got involved with KDE, but it's still limited and accessibility is extremely limited.
It's just not a huge, it's not perceived as being a huge audience.
Yeah.
And it's often not easy work and often the people doing the work may not directly benefit from it themselves.
Yeah.
So there are some people that definitely are working on it that benefit from it.
And so we're scratching their own itch.
Right.
But not, but you know, not everyone is.
And so it's the amount of resources fairly is fairly small.
And so pragmatically, we look at it from the KDE community and go, you know, we're not exactly religious about our toolkit and whatnot.
What's important to us is there's a good user experience.
Right.
And if, you know, when we look at things pragmatically and go, here's the amount of resources available.
Do we really need to rewrite Orca just because it's not written in our toolkit of choice?
The answer is, well, given the resources we have, the quality of Orca, you know, et cetera, not really.
Yeah.
So, I mean, it's the reason why, you know, we use inkscape for, you know, most of our icon creation in, you know, for oxygen.
Even though it's not, you know, acute hurricane application, who cares, right? It's free software and it does the job well.
So we don't start this huge, you know, program to rewrite inkscape, but acute.
So it's the same thing with Orca.
And the nice thing about ATSPI is it is in theory. And especially once, you know, we really get the debuster and stuff, you know, fully on the, on the rails.
It is, you know, a neutral and independent of toolkit and whatnot. It doesn't care.
Yeah. Yeah.
So we look at it and go, yeah, we want to get, you know, Orca and all these other tools, because if we can give, and this was really the vision we had with, even in three point X days, we can take our tools and, you know, other people's tools, we put them all together, we'll pull all our resources and everyone will benefit.
Which is interesting because in the three point X times, we specifically chose to work on tools that weren't available at the level we wanted them to be.
We started there. So for instance, we had a screen magnifier that did things that just weren't available elsewhere in free software.
And that was, you know, instead of rewriting Orca or whatever.
Yeah.
We obviously had, at the time, kicker applets and we have now, you know, plasma widgets, plasmoids that do things like show the keyboard status.
And we have that because that's specific to the desktop shoulders, no way around that.
However, we do, they do for backend, use the exact same existing systems.
Okay.
That everyone else's does.
And again, that's also purposeful because we want it all to work together.
And we don't want to, you know, duplicate work.
The ultimate goal is to produce, you know, a kickass system.
Yeah.
And that has a lot less to do with religion and a lot more to do with pragmatism.
Yes.
Oh, I know I'm excited about where, where things are, are, are headed.
And you're right, there's, there's been a, a research of, you know, excitement and interest recently with accessibility and KDE, which is good.
It kind of comes in waves and fits and starts as people become available, have more time and random happenstance occurs.
And yeah.
Yeah.
Even, even XFCE, they, they just updated their roadmap and they're saying they're hoping by the beginning or middle or something of 2012.
They're hoping to, to be able to tie and orca more with their desktop, because that's all GTK and everything.
And I've emailed them a few times saying, hey, it'd be great if you could get orca working on here.
You're, you know, you must be halfway or three quarters of the way there.
And, you know, it'd be great to have the option as a blind user and a few people answer me back.
And so, you know, it's just great to see more, you know, a blind user being able to have more choices than, you know, being tied into GNOME and, you know, absolutely.
And I mean, this is one of the, excuse the puns.
It's a horrible pun, but it was for me an eye opener.
Yeah.
When I went to some of the conferences that I, that I've been in, you know, the last almost decade now.
For accessibility. And, you know, you, I met people that had all kinds of, you know, disabilities.
And who are active and participate, participating in the development of free and open source software.
People that I actually had no idea, some of them I had talked to before online.
I just never comes up, right?
Right. Yeah.
You don't ask so, you notice anything, you know, you, you know, do you have a broken leg or anything?
So, which is one of the beauties of the internet, really, as long as it's accessible.
Yeah.
And so, some people that I had no idea were, you know, in a wheelchair or, you know, had, you know, various vision challenges.
You show up at a conference and, you know, there they are. And it's like, wow, you know, it was, it was so very cool to see these people, you know, involved.
And it really, there was, I mean, no prejudice whatsoever because a lot of us didn't even know there's no opportunity for it.
And I think that's something that's really important to pass on to, you know, others who have, you know, various disabilities, whether it's, you know, things that are, you know, more serious.
You know, the loss of, you know, limb use or blindness or deafness or, you know, even just, you know, think people that struggle with things such as, you know, aspirin or syndrome.
Right. Right.
Various things.
Free software tends to be in my experience, anyways, extremely open.
And not just accepting, but to the point where you just participate at the level you can't.
And people are very cool with that.
Yeah, definitely.
And I really, really encourage anyone who's listening that, you know, if you have an interest in accessibility for personal reasons because it's directly applicable to you, don't hesitate to get involved.
Your participation will be extremely welcome.
And we need people who are putting time and effort into it because they're scratching their own net.
It's one of the best motivators when it comes to creating something you're sharing with others.
Yeah.
Yeah, absolutely.
All right, Aaron.
Well, I guess we're going to jump.
Well, I'll start the interview, but I might patch some of this into the interview already.
And I'll split some of that in.
If we don't get a chance to getting back around to it, so definitely good conversation.
All right, so I'll just pause a couple of seconds and I'll introduce you in there.
Are you like the project lead of Katie?
Like what would you say your title is like main developer?
Well, people use that, but it's not quite accurate.
Well, I'm the team lead on plasma.
Okay.
And I sat on the board of directors and was president of our global nonprofit.
Okay.
And I'm a, I played a spokesperson on TV for the project.
So yeah, I'm a spokesperson with KDE and just help with the public.
It's really hard to provide a, you know, a traditional title when you're in a completely horizontal flat decentralized community.
Yeah, yeah, exactly.
And one of the things that's always awkward is when someone, you know, you're dealing with a journalist and they ask the same question.
You know, I give the same answer.
It's like, well, I'm, you know, team lead on this team and you know, spokesperson with the project and, you know, was, you know, past president sat on the board.
And then they write the articles like, yes, lead developer.
That's much easier.
And then I get back to, you know, my teammates and they all kind of it's like, dude, really?
Yeah.
What is that?
Up in the air.
See you when they're like, oh, hello, team lead of everything.
Thanks for the recognition, dude.
The best was another one of our PR people, Stuart Jarvis, he gave an interview and it was translated from English
into, I forget what language.
And then someone from some Asian country, I think it was retranslated it into English for their website.
So they have it in both the local language. I think it was Chinese or something.
So both the local language, but also English for people who read their site and speak English, but they translate it from the translation.
And he went from being a PR spokesperson to in the English version king of KDE.
Oh, there you go.
And it was, and this, someone found this.
Oh, we had a great time with that one.
Just for the kids, do we know?
Exactly.
I could have lived that one now.
All right.
Well, like I said, Aaron, I'll just pause it and I'll, I'll, I'll start everything.
Thank you for listening to Half the Public Radio.
HPR is sponsored by Carol.net.
So head on over to C-A-R-O dot N-E-T for all of those meetings.
