Episode: 1454
Title: HPR1454: HPR Coverage at FOSDEM 2014 Part 5
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1454/hpr1454.mp3
Transcribed: 2025-10-18 03:26:54

---

So I'm talking to Wendy here of the
table. So how are you doing? I'm fine, thank you, a bit tired. Yes, it's very, very tiring, there's lots of people around.
You just to describe the table, there will be pictures in the show notes, you've got the camels, you've got all the
books, you've got loads of stuff to give away, you've got the two-its, which are round, so that you can get round to it by the
bunch. So what is the purpose for you? What's the benefit for you coming over here? You're just telling me that you're selling these
books and you're selling them across. That's a bad business model. I made money using Pearl and my partner, my partner and
me, we made so much money using Pearl that we don't have to work anymore, we are wealthy and we can support the
Pearl community and the rest of the open source community for the rest of our lives and that's what we're doing.
We think we're going to give something back. So we buy books and the publisher charges this, the cost price,
plus transport costs and that's the price that we sell them for. That's fantastic and you've got a wide, wide range of Pearl.
So just in case there's anybody on the show that doesn't know what Pearl is, can you tell us what Pearl is?
Pearl is a dynamic open source, free software programming language, it's 26 years old now, you can use it for everything
and it has been used for everything, ranging from making a booking reservation system like booking.com
to things for Amazon, eBay, marketplace, big scripts, large scripts, very small scripts.
I've got a book here about one liners, you can use it for everything and it has been used for everything.
I even know people that make games with it, interactive games, text games, I know people who make graphical programs with it.
So yeah, you can use it for everything.
It's not the most easy programming language to learn in the world, what would you say to that?
I think you're wrong, it's one of the easier programming languages to learn.
Certainly if you compare it to Yafa or C.
I've got a book in front of me that teaches you at the beginning of Pearl, the teaches you, Pearl,
in search of a way that you don't have to be a programmer when you start reading it and at the end you will be able to make an automated response to DMCA take-down notices.
Very impressive, what book would that be?
Beginning Pearl by Curtis Ovid Pooh.
I have teachers of Pearl in 24 hours, an excellent book.
Indeed, before Curtis Pooh wrote his beginning Pearl, I always recommended teachers of programming Pearl in 24 hours.
I always advise that because it's so easy, easily written.
It reads like a novel and at the end you know a lot of Pearl.
But beginning Pearl, it goes wider and it goes deeper, wider in subjects and deeper in material that you learn.
Thank you.
I'll buy that in a minute.
So is there anything you're involved in living the life that many of us would like?
And you're still involved in the Pearl community.
How you wrote on your thing that you're a Pearl developer.
Where do you think that?
I'm losing stuff, I'm losing this here now folks.
It doesn't matter, we'll do it.
Oh, get in a minute.
So you're still a Pearl developer?
No.
I've never been a Pearl developer.
I was a Pearl scripter.
From 1994 to 2001, I was the boss of a website building company, XXLink in the Netherlands.
We were the first company building websites there.
In 1994.
And I made little scripts.
And well, medium-sized scripts.
But I was never a good programmer.
My partner, she's the real real super nerd.
She makes modelled modules for CPAN.
She has been one of the core developers of booking.com, changing the system.
She speaks at conferences and stuff.
I am doing the marketing, I'm doing the personnel stuff, I'm doing the bookkeeping
and everything else.
I'm the more creative of the two.
So I'm searching for little camels because of the camel is the logo of Bill.
I'm looking for companies that can make stickers and buttons for me.
And I buy books and I negotiate deals with publishers.
Like, what reduction do you give me?
Because I'm selling to the Pearl community, so, etc.
So that's what I'm doing.
And I'm bringing people together.
That's what I'm doing.
So have you read all these books?
Because one thing that I've noticed about trying to pick a good Pearl book is
I never know where to start.
And everybody recommends all get the O'Reilly books.
But to be honest, it's like jumping into a swim pool, not knowing how to swim.
Well, you see behind me two cupboards filled with Pearl books.
And that's the largest library of Pearl books in the world.
I've collected that collection.
It's over a thousand books.
And they're all different.
And I've got all the Dutch language Pearl books.
I've got 95 of all the English language Pearl books.
And I'm now starting to get the original French and German Pearl books,
which are not translations of English books.
And I'm getting them.
And if I recommend you a book, I would recommend,
if you start learning Pearl, start reading beginning Pearl.
And if you already know Pearl, start reading a modern Pearl.
Because don't choose Pearl the old way with confiscated pearl.
Yes.
Pearl is not line noise anymore.
Pearl can be gentle and elegant and short and readable.
And I've seen many, many examples of that of people that left the old ways
and make it better nowadays.
So, modern Pearl.
Is there anything else that you want to talk to us about
that's coming up in the Pearl community, especially here locally?
Well, one of the buttons that we have says Pearl is very much alive.
Yes.
And one of the things of having a booth at Fosden is that every now and then
somebody who thinks he's funny and original comes by and says Pearl is dead.
And then I look at him and I look at the table and I look at all the volunteers around me.
And I think Pearl is not that perry.
Pearl is so very much alive.
We've got over a hundred Jewish groups in Europe alone.
And all those Jewish groups come together at least once a month for dinner and technical talks.
And many of those people cooperate in improving modules,
in improving the core of Pearl in organizing hackathons.
For instance, a hackathon is a hack-as-meragam.
And we sit together for two, three, four days and fix problems that people have reported.
Well, that's alive.
As far as I know.
That sounds good to me.
Listen, I'm going to let you get back to it.
Actually, I'm not.
I'm going to hang up this and then I'm going to pick up a nice Pearl booth for myself.
And I'll talk to you later.
Thanks very much for the interview.
You're welcome.
And thank you for asking.
Hi, everybody. This is Ken again.
I'm up here in K2.
Foster M2014.
And I'm talking to Fredrick.
How are you doing Fredrick?
Fine. Thanks.
What project are you here talking about today?
Well, Jibba's community.
We've regrouped a lot of projects more than 40, I think.
So mainly we are talking about the container, the GE6 container,
which is APIC AS7.
But, well, we can talk about Erich Q, QPIT, GBPM, whatever kind of project.
Okay.
So what is JPAS application server 7 then?
It's a GE6 container.
So what it is, I would say a group of different kind of modules based on the GBM.
And then instead of reinventing the wheel, there's different modules of you,
the opportunity to use a communication between application,
improve the security and so on and so forth.
So you will not have to develop this kind of stuff in your application.
You have to focus on what the application should do.
So this is for deploying Java applications in a web server environment.
Yeah.
Okay, cool.
And what other projects do you have under your...
So your solution architect for RedHaz.
So businesses will come to you and say, okay, help me out here.
Yeah, for example, one really known, I would say,
a problem that customer has is related to the business management process management.
And GBPM, for example, community side is responding to that needs.
That means that you can, I would say, create some processes and assign application
to each step of that processes.
So that's one of...
What is QPed then?
QPed is working on a standard protocol, which is...
It's a kind of messaging, I would say, solution.
It's working on a IMQP protocol.
So if you are working on a GMS, you've got two applications and they have to communicate together.
So you are going to use a module named GMS.
But GMS is a norm on the application side, but not on, I would say, the protocol side,
the communication between the two applications.
And so QPed permits you to use the IMQP protocol, which is a standard.
And then you can choose whatever kind of agent coming from whatever kind of provider.
Do you have any other projects that you support?
Well...
No, we can talk about other kind of project, but...
Well, it's...
For example, Infinispan, it's a way to externalize the cache in your application.
Then you will not have to...
I would say pay attention of the cache propagation between different applications.
It's already done by, I would say, Infinispan, so you have to take care of this.
Well, there is other, but I do not have it in my mind.
Is this something that the hacker community gets involved in, the development community gets involved in quite a lot?
I mean, there is different...
For example, the project Appititions have a set.
Sevens, right?
I would say a bundle, which contains a lot of different kind of projects.
For example, I burn it.
For example, I would say picket link or picket box.
And all of these modules...
Yes, all of these modules are managed by different community, which are not...
It's not an arbitrary that they will be linked together.
So, the goal of the applications of a seven community is to gather all together and to respond to the specification of GE6.
So, what new stuff is coming out next year in the short term?
Well, I think that the next one is wildflight, which will be probably GE7 compliant.
So, that's the next major one.
Otherwise, maybe GBPM is also a new thing, because it's going to bring BAM to the GBPM world.
Anything else that I missed on the interview?
No, that's fine.
Okay, thank you very much.
Thanks a lot.
Hi, everybody.
This is Ken, I'm on K2 at FOSTEM 2014.
I'm at the Open Office booth, and I'm talking to...
I'm from Hamburg, Germany.
I'm working for IBM at the Apache Open Office project.
And I'm here at FOSTEM to meet all the open source people enthusiastic about making all these stuff and software well-built for free,
for everybody so they can use it.
And yes, don't have to stick on a certain window on something like this.
And it's incredible to see how...
Which kind of patience the people are here working together.
Also, how friendly it is even between different Linux dristrels,
or even with Apache Open Office and Libre Office,
so the booth is right beside us.
Yesterday, we had a dev room together on Office productivity,
also on the Open Document file format, which is our both native file format.
And yes, it's an amazing event to be here and to be part of these open source development stuff.
Just so that people know Open Office is coming from Star Office,
which was a Sun project.
Yes.
And it's an alternative office suite to something like Microsoft Office.
Yeah.
I know there was a lot of questions about the split-off of Open Office and Libre Office,
but I see here that you're mentioning that you're co-developing, doing development talks.
So how is the community going to continue?
Do you think there will be more cooperation?
Or will the projects move apart?
Due to...
So Open Office now added Apache.
So we added Apache license, and at Apache we have a certain rules regarding the software
from third-party stuff that we can use regarding the license things.
Libre Office is started on GPL.
Or LGPL, what the main Open Office was before it was donated to Apache.
Now they are on MPL.
They had rebased on the Apache license to do the real licensing on MPL.
So we have currently a little bit problems of getting back the stuff that is doing on the Libre Office
into the Apache Open Office.
But the other way around, it's quietly happening,
that the Libre Office has their mirror of the Apache Open Office repository,
and they are repository, they are cherry picking the stuff.
And that's what Apache software projects are about,
so making Open Source software for the public good for ever use.
So it's great to see that not only my stuff that I'm doing at Apache Open Office is now used or downloaded by.
I think today we have 90 million downloads since we are at Apache,
since our first release in May 2012,
and also used by the Libre Office users.
So I have no problem there.
I'm not as a developer, as an Open Source developer,
being paid for it is a good thing.
And so I don't have to care about protecting what I'm programming.
So I'm just Open Source, and everybody can use it, so I have no problem.
Currently, just taking what Libre Office is doing is not possible for the Apache project,
because of the licensing stuff.
So in this way, we need more corporations,
and is a deafroom show that we can work together on project and on ideas.
But on the coding, it needs to be evolved,
and let's see what the future will bring here.
I don't know, and I quite often these things tend to work themselves out in time.
So what's the new stuff that's happening in the Open Office?
What new stuff is happening?
It's quite hard.
We are evolving.
We are new at Apache, and it's settled out down.
We are getting things right now.
A lot of languages are coming up.
Every release we have 506 more.
We are doing some stuff regarding the build system to get it easier.
The format data is not easy, and Libre Office has a quite well job.
In their build system, we are trying to do the same here.
Projects are going on.
Integration, especially for Windows,
developers into integrated development environments,
like Eclipse and Visual Studio are ongoing.
And then, yes, just backfixing little features.
We are currently on feature-freeze for our next release, 4.1.
We were planning to bring out a beta.
I think hopefully in three or four weeks,
to have some kind more people looking at it,
and to have the final version ready at the end of the quarter, beginning of April, something like this.
How long have you been working on the Open Office code?
I joined Sun Microsystems in summer of 2002,
mostly involved in the word processing component.
And in December of 2006, I joined the OASIS Open Document to see
for the standardization of the file format.
So I am also on the standardization here.
Thanks for that.
Yeah.
I hope so.
And yes, and then there was the change regarding Oracle,
Actriaring, and they are no longer interesting in supporting the Open Office.
And so I have got the good possibility to be employed by IBM to continue my work,
because it's a great project.
When I started there, I was formally working on a small team just doing project work
where 10 people are using my software.
And then I came to Open Office and millions of people are using your software.
They are giving feedback.
And they are giving you all feedback.
Some people are pissed whether you have put it back in it,
and they blame you for it.
But then again, when you fix it, they come back.
And it's incredible that so many people are using Open Office,
and Glipper Office, and all the other variants that we have on this code base.
There's also ActriGen and all these stuff.
There are also the people that are making the mech pod and the beginning and so on.
So it's really great that Office productivity is not stick to them one on the major software that is out there.
Okay.
We have quite a lot of people who use accessibility tools in order to use Libro Office.
And they say that the Orca screen reader project has sometimes difficulty reading some of the Open Office applications.
What would be the best way that we could try and convince developers like yourself
to spend more time on accessibility issues?
Yeah.
We had recently for the Windows platform integrated the iAccessible2 work
that IBM is formally doing on their own fork, that's what's called symphony,
and that is now integrated and will be a part of the next release.
I forgot to mention it.
So this is only for the Windows platform.
All the ATK stuff that was started at the Open Office project.
I think former days, and I think Michael Beeks, Michael,
the first stuff here, and Kwellen and so on.
And I don't know.
Currently I see no focus on our development community
to focus on the Linux side of accessibility and ATK supporting APIs.
But I think it depends on how much demand is coming in.
And also, yes, we are driven by volunteers what they want to do.
And also companies that invest and if they have demand to support these kind of accessibility stuff here.
It's unfortunate because the guys are unable to use the software
because it's inaccessible so they can't want to be able to get them to a point
where they can start contributing code to the project,
but they can't get involved in the project because of the accessibility.
So now that I have your business card, I know exactly who to contact about bugs.
A colleague integrated the staff regarding Windows.
I was in the former days little involved in the accessibility part
for the Linux platforms, but it's long ago.
And as I said, currently there's, I see no effort in the Apache Open Office community regarding this.
But there are some people that are coming up.
I think there's one of them from the Netherlands.
It's a crystal of a stool that is sometimes around also in the Libra Office project.
And we recently start some kind of call to, as we see that the Libra Office of picking up the accessibility to integration,
we let more or less open letter to at least cooperate on these stuff, accessibility for these project.
Just to get, if they made fixes in the IXC2 stuff that has been integrated in Open Office,
contribute it back.
Yeah, it's contributed back.
And that would be a nice thing.
So Libra Office is doing good things and taking what we are doing is a good stuff
because our stuff is more used.
And it would be great if just the back fixes in the parts that they, I have,
Sherry picked, contributed back.
It would be really great first step for, for those are both way cooperation.
Perfect. Thank you very much.
Is there anything else that you want to talk to me about or have we covered most of the things?
How can, if there are anyone out there who wants to contribute to the Open Office project,
how, what's the best way to get involved in the community?
Yeah, the best is to get involved is to come to the deaf list.
We have some kind of websites set up where you have some kind of orientation modules.
So for different interests, for QA people, for development.
And it's, it's depending on your, you need some patience currently.
So it's, the Libra Office people are doing a lot of work on mentoring new people.
They are more, we are, we are, had to found our new home at Apache,
not so much people to, to be as responsive as we would be.
But when you come to the deaf list and never give up, we will help you with building your
first Open Office on the platform you are wanting to work on.
And we are currently working on, on better integration into EDA.
So just come there, speak up there, it's open and transparent.
Or our deaf list, this is the first page ago.
Always when somebody steps up, covers of ours later,
he's pointed to the right direction where he gets the orientation.
And there's no reason why somebody can't contribute to both projects.
Yeah, no, no problem. We have people that are contributing to both projects.
So just an example, Regina Henshell, the German teacher,
is contributing to Libra Office, although already source code,
and to Apache Open Office, keeping this stuff together in this area where
she is interested in, so no problem.
Okay, listen, I'm going to stop there.
I'm going to go down and interview your competitors.
No problem.
Hi, this is Ken again, Fostem 2014, K Building,
Level 2, Extreme End, Elasticsearch.
And you are?
Hi, I'm Holze Kral, I'm the Python guy for Elasticsearch,
the company behind Elasticsearch, Kibana, and Lockstash.
I have never seen these projects before in my life.
What did they do, distributed restful search and analysis?
Yeah, so that's Elasticsearch, that's basically our flagship product,
that's also why the company is named the same.
And it's a distributed data store based on Apache Loose scene
that does search and analytics with your data.
It's, as it says, restful, restful, so everything we do,
we do over HTTP, and we do it with JSON.
So if you index documents, it's JSON.
If you run queries, the queries are also JSON.
It's distributed, so it scales quite well over horizontally across many machines.
That ties well into the use case with Lockstash,
because Lockstash is a centralized logging solution.
So imagine you have a bunch of servers,
and you just want to aggregate all the logs from all the services
running on all those servers.
How is that different from Cisluck and G yourself?
So Cisluck and G also only does part of it.
It will absolutely aggregate the logs into one place,
but it's sometimes difficult to set up,
and it's still very platform specific.
Lockstash is more open, more configurable.
It's basically an open pipeline.
You can think of it also as an ETL tool,
to extract data from somewhere,
transform it on the way and rich it, parse it,
put it into a unified format,
and load it into a data store of your choice.
Be it flat files,
elastic search, MongoDB, whatever.
Okay.
So, and the benefit you get if you decide to load it into
a elastic search is you get Kibana,
which is a JavaScript front end for a elastic search
that was demo specifically to be used with data from Lockstash,
although it can be used for other data as well.
And that will give you easy search and discovery over your logs,
including pretty pictures and graphs for those who want it.
That will enable you to easily discover what's actually going on,
see on one glance all the anomalies
that's happening in your environment.
So, imagine, for instance, in a world where there are lots of API calls
going around to different machines,
and the all report various different things.
ProductX goes in here, and it becomes productX,
it's recognized, and it goes back as productY.
Would it be possible to trace all that sort of stuff using this system?
Absolutely.
That's one of our biggest use cases,
when people want to aggregate data from different systems.
What you describe is a little extreme use case.
We can keep it much simpler.
You have a logs from your database, from your rep application,
from your web server, and your load balancer.
And you want to see what's going on.
You see a spike on your database.
Does it correspond with a spike on your load balancer,
and is everything okay?
Or is there a spike on your load balancer
and nothing gets through to your application?
Like, this is something that you can see on one glance.
No need to discover anything.
No need to look into four different machines, do a grip,
and then try to parse the different time formats
that different log formats use.
Yes.
That is actually horrible, because the only true log time format
is ISO 8601, as everybody is listening
to hack a public radio and knows,
because I've said it many, many times.
Okay.
What is this then more for system administration,
as opposed to using it to manage a complex API-driven environment?
So, what I started from the operations point of view,
I lost research itself, it's just a generic data store.
So, that's used all over the spectrum.
With Lockstash and Kibana, it's always discovered
what's going on in your environment and anything.
And people have started using it for other things,
which we didn't foresee in the beginning.
People realize that log is nothing,
but just a document that has a date time.
That is a timestamp.
So, people started using actually Lockstash
to index Twitter stream, or stuff like that,
where the same logic applies.
You're just consuming some stream of data
that have a timestamp, you're analyzing it,
or parsing it, and reaching the data
and loading it into your target data store.
How difficult is it, what sort of underlying knowledge
would you need to have to configure this?
It's not that hard.
If you just want to get started, you download Lockstash.
It's just one jar file that you can run.
It even started its own embedded L6 search with Kibana installed.
So, you can get up and running very quickly.
If you want to just start consuming data,
let's say, from standard input,
the simplest possible example,
you can definitely get there within half an hour
from absolute zero knowledge to looking up Lockstash,
downloading it, and getting through this example.
Okay, and the third component is Hadoop.
So, the third component mentioned there is Hadoop,
which basically just advertises that we do integration with Hadoop.
We have a package called L6 Search Hadoop
that lets you load data from Hadoop into L6 Search.
And also, let's use L6 Search as a backend
for some of the Hadoop integrated solutions, like Hive and Pig.
What's Hadoop?
Okay.
Hadoop is...
That's a hard question.
That's why I'm here.
I'm not a Hadoop person per se,
but Hadoop is an environment for doing distributed batch processing.
So, it comes from the very beginning,
where you have HDFS as a distributed file system.
On top of you have the map-produced system,
which is the original Hadoop,
which is a framework to doing map-reduced jobs
in a distributed environment.
Okay. Good answer.
And a very cool logo, if I might say so myself.
Yes. So, it's the elephant that's...
They have a whole theme going around it,
with Hive being the elephant disguised as a bee,
or something like that.
Okay. Cool.
Anything else that I need to know about?
Everything is, of course, open-source,
BSD-2, Apache-2 licensed.
We do offer as a company training and support
for those who want it.
Otherwise, everything is...
All the information is available on the website,
elasticsearch.org, and elasticsearch.com for the company.
Anything new coming up in the coming time?
So, glad you asked.
We are actually releasing currently
the 1.0 version of Elasticsearch,
that should come out in the next few weeks,
which is January 2014.
And that will...
As the number would suggest,
our stable version,
we are breaking some backwards compatibility
in order to be able to move,
boldly towards future.
The new future.
We dedicated ourselves
to not break backwards compatibility again.
At least until the next major version,
which is not planned currently,
so we should be fine there.
We're introducing a lot of new cool features,
including reworked of the aggregation framework
to do cool aggregations inside of Elasticsearch,
Snepshort Restore,
which is a very nice and clean API
to do backing up of your entire cluster,
to other arbitrary storage,
for example, S3, local file system,
or aforementioned HDFS,
and some other generic improvements,
like the KET API and everything.
Along with that,
we also released last week,
actually our first commercial product,
which is Marvel.
Marvel is a plug-in for Elasticsearch.
It just lets you monitor
what's going on inside of your cluster.
And even historically,
the typical question,
what happened yesterday at 3 a.m.?
And is that open source?
That's not open source.
That's commercial product.
It's free for development,
but it's closed source.
And on production,
it costs $500 for five notes per year.
So it's nothing too crazy,
but it's definitely, definitely no open source.
But to be also fair,
we don't have any special hooks
in Elasticsearch itself for this to work.
We're just using the publicly available APIs.
There is nothing stopping you
from taking the exact same APIs,
feed the data into graphite,
or any other solution,
and do everything yourself.
This is just basically a prepackage solution
for people who don't want to,
who don't want that,
or are not familiar with Elasticsearch,
enough to know what to monitor for.
Okay, well, I think I know enough.
There'll be links to everything in the show notes,
along with a picture of the board here.
And thank you very much for taking the time.
Thank you for having me.
Hi, this is Ken at Boston,
from the 13K building,
Level 2,
and after talking to the open office.org folks,
I wanted to come down here
and talk to the Libro office guys
to see if what they said was true or not.
So I'm talking to Kor, how are you doing?
Fine, thanks.
It's an interesting booth and fair,
and lots of people that come around
and talk about software,
and we have nice hoodies,
so it's really complete.
So you're here on the booth,
you basically pinpin Libro office for everybody?
Yes, yes.
So yesterday there was also a development session
where you and open office
and several other people were involved
in progressing the desktop.
Were you involved in that?
No, I was not involved in the session
that was the ODF room.
I was not involved at that.
I was at the booth the whole day.
So just in case there's anyone out there
that does know what Libro office is,
I wonder could you give them the speed limit?
Yes, Libro office is a fully functional office suite
with spreadsheet, word processor presentation,
drawing tools, maths,
and a lot of extension,
and it's a great community around Libro office
that makes it really fast and speed development,
things like that.
Of course, it's available on all Linux distributions
by default, and it's on Windows and Macintosh.
Since they split from open office to Libro office,
I think we were talking about that earlier on
that there was an Oracle for one reason
and another decided to let it go.
So it's best not to focus on that so much.
But do you see that you're picking up users
on the Windows side as much as you have done on the Linux side?
It's obvious that most of the users of Libro office
are Windows users.
Well, because most people outside there use Windows,
so it's obviously that there are more Windows users
than Linux users with Libro office.
Okay, yes, I'm sure.
Okay, fair enough.
So what are the plans for Libro office developments
in the coming year you previewed to that?
Sorry.
What's new in Libro office in the coming year?
What can we expect to be released?
Yeah, you're clipped, right?
Yeah, it's pinned on the back.
Here, do you want to join us?
Yes, of course.
We are very few small members of Libro office.
Yes, we are very few small members of Libro office.
You just want to know what's coming.
What's coming.
Okay.
Yes.
Do you want to know what's coming.
Yes, okay.
So what stuff is coming up in Libro office in the coming year?
Yes.
There's some heavy work going on on the user dialogues
and there's a new way to handle them
so that it can be easy, resizable,
and that's close to finish.
So users will see that it's a better interface.
There's a work going on on many speed improvements
in cult with different processors,
and we always focus on better interoperability
with DocX, XLSX, the Microsoft XML formats.
So stuff like that is definitely focused.
And we have two new releases a year,
main releases, and every month there are smaller bug fixes releases.
So there's a high speed of all kind of larger
and smaller stuff that's coming in the project.
Do you feel things are settling down a little bit more now
that you've been going for a little while
and all the backlog of changes have come in?
No, no, there's nothing settling down.
It's a really speedy development.
And you see more people are involved in QA,
and more people are helping with localization.
And more people are doing development,
larger chunks, smaller chunks.
So it's really rushed ahead.
And there's so many things that are just good
to add new functions,
but also so many things that we already improved
over the past year.
So we're still running ahead.
But it's fun, just because it's a huge team,
and people join, and it makes work just fun,
because you share it.
Okay, cool. There's one thing that I have to ask
is there are quite a lot of accessibility issues
with running Libra Office.
Some of our listeners have tried to run it,
and they have problems with speed readers.
Is there a way that we can kind of push the development
so that we can make it a lot more accessible
than the currently is?
I don't know to what specific version
the people you talk about refer,
but the latest release, just three days old,
there is an experimental feature
that is the accessibility code that comes from IBM
that had developed it some seven years ago.
And in that time, they promised to give it to the OpenOffice.org project
so finally it landed on the code base.
But it is marked as experimental in our code,
in our user interface, on purpose,
because we know there are some issues with it.
So I'm not if people run it that issues,
I'm not surprised. We know that there are issues.
And it's also when you look to Buxela,
where books are reported, you see that developers work on it.
So though I'm not a developer,
and I'm not able to tell people what they should do,
I just expected in the next main release,
the real problems will be ironed out,
and maybe also in the coming Berkfix releases,
that lots of problems will be solved.
That's my honest expectation.
That is fantastic news and we're all glad to hear this.
You wear many hats.
This business card that you give me.
What hats is that?
That is that I'm a member of the membership committee.
Honestly, at the moment, I'm chairman of the membership committee
but one of the members.
And LibreOffice, it is developed owned by the Document Foundation.
And if you want to be a member,
it's not that you say,
oh, I pay 20 or 10 euros a year.
You can only become a member if you truly contribute in QA,
in development, in marketing, or whatever stuff.
If you are a member of the community,
you can become a member of the Document Foundation.
And the membership committee that handles the applications
and that every year reviews people who are a member,
are they still active?
Do they have the right to be a member?
That's our job, one of our jobs.
And for the rest, that's an official title
and for the rest, I contribute to QA
and a bit of localization and marketing stuff.
How did you start doing this?
What led you to be a...
Oh, that?
Did you just get annoyed one day?
And decided to contribute?
No, it was back in 2004, I started a company dedicated to support,
to deliver, to give support with OpenOffice.org in that time
that was back in 2004, based in the Netherlands.
And I still do that.
My company grows a bit.
And so it exists for 10 years now.
But when I started to do that, I found it natural to look at the project
and to contribute.
So I've been doing that long in OpenOffice.org,
and with a split when we decided in 2010 that it was good to have something new.
I joined, I was one of the people who set up the Document Foundation.
And I just, well, all those years, all those 10 years,
I've been active in the community.
Okay, very good.
Have you been involved in the push to get the ODF behind the ODF formats as well?
Or did that...
Were you involved in the ODF formats as well?
No, an Oasis.
Maybe you want to give a short haul of all the furniture or clothes?
No, no, no, no.
No, no, no.
It's going out.
This is going out on it.
No, no, no, no, no, no.
I've not been involved in the ODF development Oasis.
No, no, no.
No, no, no.
I'm just because of my scales and my daily work.
I'm involved in end-user support, problems to make all those things work.
And the ODF, while it's considerably important,
and I do explain it to the people, yes, but the work behind it,
it's not something I contribute to.
Okay.
So you're out there on the front line.
Do you support businesses mostly?
Yes.
It's business, business, administration, nonprofit organization.
So you're making money on supporting free software?
Yes, obviously, yes.
So there is a business model out there.
Yes, there's business model.
Yes, yes.
But you have to...
The fun is, if you know the software,
if you know how a community work, how the product works,
that gives you extra strength,
but you have to be able to translate it,
to transform that into a language that people in business understand.
And you have to be able to look what people need and to offer that.
But if you can do that with any software, of course, there's business.
So what do you do?
You go into a business and say,
hey, I can run the office instead of Microsoft Office,
and ask for training and what.
No, usually people find our company fear the web.
And because they look for alternatives for running Microsoft Office.
And then, well, depending on their knowledge,
or their needs, the number of seats in the company,
well, we just talk and we see what we can do.
Sometimes it's a short help, sometimes it's a large project
with lots of different phases in it.
And is it mostly given user training,
or would it be an end goal to the project?
It's user training that's provided.
It is automation of documents,
or handy stuff to help people.
It is templates.
It's also helping the system administrators
with all configuration of the product.
And it's also helping to run the product smoothly
from the initial phase where you do some pilots.
Yeah.
Yes.
Where do you do some?
Well, looking for the way.
Well, when you're in pilots or in some analysis before
that communicating with users,
getting the right information from your users
that you need in all those projects.
So it's quite a broad offering.
So have you experienced any hostility
that people are forced to use a liberal first product
as opposed to Microsoft Office,
or has the decision already been taken?
Are you coming in now?
No, obviously not all people are happy with it.
And there's always the hurdle that using free software
is about freedom.
And because of the freedom you can reduce costs.
That's one of the things.
But obviously most people in business step into it.
Oh, I have to pay you again to Microsoft.
Let me get something free.
Yeah.
And when users have the idea that a boss chooses something for them
that's free because he don't want to pay them for their tools.
Yeah.
That's not a good start.
No.
So that's why I said communication in a project to migrate to
something as liberal of his is very important
because people have to understand,
okay, it is, you have to pay less,
but we do spend money to and we can have quality
and it's a good project as business support,
etc.
Okay, cool.
Is there anything else I missed or anything else
that you want to talk to me about?
Well, how do you like our boots?
It's fantastic.
It looks like a claw shop to be brutally honest with you.
It's like a claw shop.
Yeah.
A boot.
A boot.
We have some difficulty in preparing the boots.
We have some difficulties to choose.
And so the fun is when you are at the boot with T-shirts
and the developers pass,
oh, I already have a pile of T-shirts,
but well, give me another one.
So this year we choose for lovely V-neck T-shirts,
different and some hoodies and also sweat shirts
without hoodies and some polo shirts.
So that was the problem to choose and that's what you see.
Cool.
But we have also lovely checkers, stickers and mugs
and a great banner.
I'll include a picture, go stand over there and I'll take a photo.
Listen, thank you very much for the interview
and I look forward to talking to you later.
Thank you very much.
I'm talking to the confine table.
So, sorry, what's your name?
And Roger, how are you?
Fine, thanks.
Can you tell me about this?
I'm just looking at your table and I see
community-labs.net, there seems to be cell phones
or something going on.
No, not at all, it's about community networks
and research on community networks.
Community networks are IP infrastructure
built by the people, for the people.
Mostly wireless, this is how it started
because it was the more affordable and available technology
back in the early 2000s.
Now we are moving into fiber as well.
So extending the concept to fiber,
it works as it did in Wi-Fi.
And basically it's about people doing...
Yeah, I'm connecting it to the internet.
So, where is this, where did this start?
Who had this idea?
I think it starts in parallel in many places.
It started as questioning the privatization of internet
that occurred back in the 1990s.
So many people raised questions,
which were left and unanswered.
But the come-up of Wi-Fi technologies was a good help there.
People started hugging the Lynx's routers.
The other mode also helped.
And then, yeah, all these movements started.
It's more...
Maybe people know it as wireless communities.
So like a mesh network or something like that?
Yeah, a mesh is one way of doing this.
But it's a conceptual thing.
It's about going back to the internet
because people disagreed with what happened in the 90s.
And why not keeping the peering concept open and all this stuff?
So the idea would be here that a group of neighbors
are going together, run a network cable around
and then share an internet connection
or share their own internet connections.
They set up a network.
That's all.
I meant to share contents.
Internet access comes afterwards.
It's one of the services that you can have on top of this network.
But you could think about all the services.
So give me some examples of what's going on here.
Well, I come from Giffinat.
So maybe first I can talk about this project.
It's a project based...
Well, started in Catalonia.
Catalonia, Northeast Spain.
Back in 2003.
And it started because some local farmers had the problem of internet access.
Yeah.
We are in the EU, so we had some rules to follow.
And these guys had to report about how they fit the cattle every day.
And they did not have internet access to do so.
So they started doing some research.
They were used to solve their own problems in other fields like water
and roads and stuff like this.
So why not going for the telecommunication infrastructure as well?
So at that time, the Wi-Fi technology was starting to be accessible
for the standard people.
And after a travel one guy did to the States,
they brought some wireless stuff to the country.
And they said, why not using this?
And they started using this.
They solved their own problem, their specific problem.
But the day after, they realized that their neighbors had the same problem.
So they taught them how to fix that problem.
In parallel, they start talking to other people abroad that were thinking
about this stuff and having the same kind of problems.
So, and this is how it all started.
At the moment, Giffinette has about 20,000 notes, working notes.
Most of them connected in the same cloud.
And as I said, or maybe I didn't, because I have already said this too many times these days,
we are doing the same with fiber.
I mean, it's, we are technology agnostics.
We don't care about technology too much.
It's just a mean to achieve our purposes.
People who listen to Hector Public Radio will be familiar with a burn project
in the UK where we followed a group of farmers, again,
who put down their own fiber net or jewel homes using dynamite and lots of stuff.
So we are familiar with the project.
So what are the other two projects that you have here, the more or less the same thing?
There are three projects. They are all EU funded projects.
The Commission funds give some money for these projects.
These projects are about to understand this new movement or this way of doing,
alternative way of doing infrastructure.
We have, on the one hand, confined, it's a four years long project.
It's a fire project, an IP project.
This means that it's for the future research infrastructure of the European Commission.
Maybe some of your listeners are familiar with the...
The Planet Lab infrastructure.
This is meant for researchers.
This is an extension of the Planet Lab.
We were inspired by this, but to extend this to the community networks.
So basically, what we are doing, we have developed a full operating system
to deploy tests on these devices.
We spread these boxes among the community networks.
This is an atom-based device.
Just an atom PC with a Wi-Fi network.
And then researchers can run experiments on these devices
to do some performance tests and to try to understand this community networks movement.
Why is this connected over here to a Wi-Fi router?
Well, because as I said, we started with Wi-Fi.
So now here we have Ethernet-Link wire connecting this router device,
which connects to the community network.
And we have the black box or this research device,
what the so-called research device,
which is where the researchers run their experiments.
So this is a pretty powerful device connected to a low performance device,
which is not even an 80-year-old's router.
Okay, cool.
And then we have another two projects.
Comments for Europe project is more about explaining the concept of openness
to the local authorities.
We have one part of the project is called for Europe.
It's about trying to promote open source among councils mostly.
Always a good thing.
And the other part, which is the one we are more involved,
is trying to promote open infrastructures,
and more challenging.
Yeah, that could be a...
Have you run into any issues with incumbent operators?
Yes, well, but fortunately,
we are under the coverage of the European regulations.
Into the into, yes.
So, somehow it can be beneficial.
I think the general evaluation is that it's beneficial
to be under this framework.
The incumbents, according to this framework,
the incumbents ask the obligation to share infrastructures,
then there are some rules to do so,
but we are using this facilities.
Is this mostly for rural projects,
or could also be within a city?
It's like what you said that you are sharing this in comments.
So it's not about the audience enough, the people.
This can be done in the cities.
This can be done in rural areas everywhere.
I mean, it's a concept.
Okay, so it's like bringing the network back to the people.
Okay, cool.
There will be obviously links to all of this,
and the show notes are throwing things else that we've missed.
Yes, I would encourage people to start doing telcos in their hometowns,
and this is possible.
I mean, it's a proof of concept what we have done,
but not only given that there are many other communities.
Probably, if people check,
they will find a community network nearby their homes that they can join.
Yeah.
Is there a central place where a global central place
that they can go to check?
We are still just coordinating each other.
For instance, this event.
First of all, yesterday we had a meeting
of doing yourself ISPs.
That's one point.
People trying to do alternative ways of ISPs.
That's cool.
We have other specific gathering events,
like in next May,
that will be the battle match in Leipzig.
Most of the community networks in at least Europe,
and I would say all over the world will be there.
Okay, good.
And then we have a special summit in Autumn.
It's called the International Summit
for Community Wireless Networks,
which is, yeah, it's...
I would strongly recommend this meeting
for people to start with all this.
Okay, perfect.
This is something very close to my heart,
so I'm glad that you're here,
and look forward to some progress on this.
Thank you very much.
Thank you for your time and attention.
Hi, this is Ken at Boston 2014,
and I'm on the K2 building,
and I'm talking to Barrios.
Is that correct?
Pan?
Barrios, yes.
Barre OS.
Barrios.
Barrios.
Barrios.
I read Barrios.
But then again, I...
Yeah, but you're not the only one that...
So I'm wrong and you're right.
Barca...
Back-up archiving, recovery open-sourced.
And your name is?
York Schiffens.
And what's your relationship with this project?
I'm...
I have worked with this baccalaureate for many years,
and...
Yeah, in the beginning of 2013,
we have decided to create an own fork,
and call it Barrios,
and I have been initially also on this project.
Okay, and what is...
What is the project?
What's the point?
It's about backup systems in a heterogeneous network.
So we...
The service normally running on Linux,
but we have also client for Windows, MacOS,
and of course the Solaris,
HBOX, IX, and so on and so on.
But kind of backups,
nobody really does them, do they?
Nobody really does backups, do they?
But everybody wants to have a recovery option.
You only don't do backups once.
So tell me,
how difficult is it to install what sort of...
What do I need in order to do this?
And how expensive is it?
Okay, it's not expensive,
because it's an open-sourced project project.
What price is it under?
HPL3.
Okay, very good.
And...
Does it run on any operation system,
or is this a complete...
put in a CD and ROM?
We have an appliance,
built this opens a studio in a nightly build.
But of course it's more for Linux distributions,
and we have a package,
pre-package for DVN,
Ubuntu, Centro-L,
Sousa, Rel, and so on and so on.
So in principle,
it's also easy to install it.
You just include the repository from various.org,
and install it for the meta-package barriers,
and you get a running backup system
for the initial for its system itself.
So it's not an operation system?
No, it's not an operation system.
Okay.
Accepted this run on one operating system.
Now my experience of backup solutions across the board
from network to VMware,
or to HBOS,
across board windows,
back, they've all been very, very, very difficult operation.
Have you fixed that problem?
I hope so.
As it has been our intention,
that we can easily start by installing
just as the server software,
having the first client already included,
and then we have the option to include more clients.
And it should be more or less identical
for the different platforms to add a network lines,
as long as you concentrate on file backup.
But we also have plugins for example,
Microsoft SQL,
because it's a quite complicated part,
and it's helping backup for other database systems.
Okay.
Are you able to schedule various different snapshots,
and do you do all that sort of jazz?
Not incremental backups, full backups.
Okay.
This kind, yes, this is a typical stuff we do at backups.
We have full backups, we have differential,
we have incremental,
we have also something like virtual full backups,
so incremental forever.
You create your full backup bonds,
and then after this,
only the incremental backup.
But of course,
if then the full backup,
some day poke,
you get into a problem.
So you can re-create a full backup
on the server side
from your initial full backup and your incremental.
Okay.
So what's your underlying technology?
Where's the data saved?
Tape or?
You can both,
you can save it on this.
But if you have a lot of data,
it's normally cheaper to store it on tape,
especially if you want to keep the data for 10 years
or something like this,
because you don't need the electricity
to power up to the heart at the time.
And how easy is it to run?
Can maybe you can run me
through the dashboard.
I can show it on this web interface,
but you have the configuration
and it's file-based,
and if you edit line,
you add any section there,
including some other files.
So most of the things,
the core functionality
is done on the command line,
on the configuration files,
but there's different web front ends.
At the moment,
we're developing also,
it's called Barbossa,
it's a special front,
and it's hopefully
it's better than the existing ones.
Okay, very good.
What made you choose the AGPL?
Oh, that's,
I have to not be really an option
because the project where we forked
from Bacula has all been AGPL,
and so it keeps us licensed.
Okay, what was,
any particular reason
for forking from Bacula?
Yes, because
there haven't happened much
in the development of Bacula
for the last years,
and in the last year,
there haven't been a single commits
to the Bacula project,
and so, yeah,
this is a reason to fork.
Okay, Bacula has been,
my experience with it has been,
it's a very good backup utility,
but it's complicated to run.
Yeah, so we are also quite happy
with the further Bacula,
because we are already used
for several years,
and as it doesn't continue
the development,
we decided to fork,
and by doing the fork,
we're also trying to make it
simpler to use.
So we have a default configuration
that really works,
and you can build on,
and also added some commands
that help you to show specific stuff,
and of course with the front-ends,
we integrate,
it's also to get easier for other people
to get used to it.
So, since the fork has been
a lot of activity on your project?
Yes, there are two people
who work full-time on it,
so on who pays them?
This is Marco van Buring,
here to my right,
and Philip,
to your pick.
And who funds their project?
Who pays them?
At the moment,
not much,
but okay,
there's also a company behind
the barriers,
so it's a barriers company,
and we hope to sell support
and maintenance in the future.
But at the moment,
it's the development,
and so, yeah,
it gets a good product.
Yeah, I think you're on to
something very important.
I can see a business model there.
Okay, is there anything else?
Are there new releases coming up?
Or how can people help the community?
There are plenty of things to do,
and we cannot prove it.
Especially for myself,
I've worked on the documentation
to get it in a usable state,
and somebody wants a contribute,
I find errors in it,
and just test it,
and if you find it better,
I also just create back reports
and we will fix it up fully.
Cool stuff,
thank you very much for taking the time,
enjoy the rest of the show.
And I'm here talking to you.
You work in Limborn?
Rolf Meich.
And it's been months.
And pretty much anybody else we can rope in.
This is the XMPP and SIP,
free as in speech.
The real-time lounge,
Jabber, XMPP.
So, who's going to tell me what XMPP and Jabber is?
I will do that.
So, Jabber was the original project
that was started in 1999
for making sure that people didn't have to use...
What does it do?
It's going to...
Yeah, so that they didn't have to use multiple different
and some messaging clients,
and just to see if they could centralize it.
But the protocol evolved,
and basically was a way to connect endpoints
and exchange structure to information.
So, eventually people thought,
okay, we can connect other things like machines
and little devices,
and that maps quite well on it.
XMPP is the name of the protocols
that were standardized with the IEDF.
And Jabber is the client.
Well, Jabber was the original project name,
and it's still basically...
Well, you could compare it to the web versus HTTP.
So, Jabber is more...
You know, all the technologies and the network
and the clients,
and whereas XMPP is just about the protocols.
They're on the wire protocol.
Okay, very good.
Did Google Talk support this
and drop support recently?
Yeah, Google Talk was one of the XMPP server implementations.
Last May, Google decided that they wanted
to redo their hangouts.
So, they are now in the process
of wiggling down their XMPP support there.
And the current implementation
doesn't really use XMPP anymore.
So, they have a like a seed server
that's still accessible for those domains
that have an account with Google for their own domain.
And you can opt to not upgrade
to hangouts to a new version.
So, is that hangouts an open protocol that you could use?
No.
Okay.
And what licenses XMPP under does not need a license
because it's open?
No, XMPP is a set of open protocols.
The base protocols are standardized with the IETF.
And the XMPP standards foundation is also a standards organization
that is for doing extension protocols
on top of the base protocols with the IETF.
So, we have a slightly different way of dealing
with adding new protocol.
It's slightly more agile than the IETF.
Quite as probably a question for Google.
Why didn't they just extend the XMPP protocol?
Actually, they did.
And at first, and also the previous versions of Hangouts,
were built on a thing that's called Jingle.
Jingle is a set of protocols to do session initiation
between endpoints for media streams.
They helped standardize it with us.
And then...
Well, we are actually still quite in the dark
why Google decided to move on.
Well, we can't talk about their projects.
Yes.
What else do I see here then?
Well, yeah.
As a basis for when you have people talking to each other,
they commute over a language.
So they are chatting English, for example.
Then they can talk to each other.
So we now lever it down to the devices.
So devices could start to chat to each other if they are friends.
So your refrigerator could start to chat to you,
telling it to your door is open.
Okay, yeah.
Yeah.
Then you need them, if you talk to machine to machine,
you need a language that actually talks data.
Okay.
So that's what we've done with the extensions.
They're now a defined way of sending a temperature
as a temperature which is interoperable in the other end.
Okay.
So the other machine can read it as a temperature.
Okay.
How was...
I have some devices at home.
And they, you know, they're off the shelf devices.
And they're talking to loads of different things
that I don't want them talking to.
How do I make sure that the stuff that my solution was just put behind a firewall
and that was that?
But how do I own this myself?
How do I own what's going on in my house?
Yeah, that's a problem today that the providers of devices
instantly get every data up to their cloud service.
And that's where you possibly could access them.
On a web page or on an open API if they are kind.
And what we'd like to do then is to open up the data as chat clients
which could be on any domain in any kind of construction.
Either all the way down so you set your ID on your domain on your device,
which would be the exact focus on the for end.
But for now we sort of go to the cloud API, reopen the data for you to use.
And then you would be the one to set who's able to be friend to who.
But I would need to go through a cloud.
You would need to be up on the internet.
Yeah.
A lot of these devices are basically their own world garden.
Just like what you have with their social networking sites.
I like the Google's and the Facebook's and the Twitter's.
They like to control their own environment.
And there is apparently no incentive yet to have common protocols
for doing all kinds of home automation.
There are some efforts in that direction, but it's still far away.
So we now have to take the middle ground and see if we can bridge those protocols.
I would like to see a world where like my phone,
I use SIP provider.
I've got a device from the ISP and the only thing special they have done
is put my SIP account with their service.
I could equally remove that in the morning and use my own SIP provider.
Is that like the goal for I go to my toaster or I go to my fridge
and I replace the cloud service of my fridge,
provides with my own cloud device?
How easy is that going to be?
Well, depending on the providers, of course.
And the kind of services they are selling.
So as soon as there's a protocol that's easily accessible,
people would build hardware without services,
because it's cheap, it's nice, it's easy to do.
If you can buy them on the Conrad web page without any service,
that would be the way.
But as far as the providers are selling you the thing with the service,
they will never open it up for you.
Absolutely.
Well, it's not in their interest to do it.
So what have I got here and how does that bear to,
how does that link in with the conversation we've just had?
One product I'm selling quite a lot is Philips U-Lamps,
which is a CIDB connected network with lamps.
So you can set their temperature, light temperature,
the color of them.
And they have a web API on the local gateway.
Okay, just outside.
And they have a, yeah.
So for the listeners, what we're looking at here is four lamps
that are in the roof.
And they're from Philips and they turn different colors.
Yes.
Cool.
And that's a ZIGB connection down to a receiving device.
Yes.
So the receiving device is sitting on a network hub.
And I see a Raspberry Pi.
I see loads of other cool stuff.
Yeah.
So the Raspberry Pi is connected to a local network together
with the gateway.
Yeah.
And then it has a connection up to the internet as well.
Okay, yeah.
So we have the gateway,
which have a restful API.
And it also have a cloud service as Philips.
Yeah, okay.
So I can still control the Philips a little bit.
Yeah, so you still have it in your phone or whatever.
But what we now down is that on the HTTP interface,
we glue the XMPP on it.
So therefore each lamp has a GID,
which is called the jabber identity on the chat network.
Yeah.
So we have John Ringo, the whole of Beatles,
are up in the roof.
And if you're friend with them,
you can send the messages.
You can't be no friend,
as your friend doesn't chat front.
It's in chat front.
Okay, yeah, that makes sense.
Yeah, okay, cool.
So if you are a person,
you can send a text message to it,
for example, saying alert.
We could blink the lamp,
which is what the Ralph is doing.
Oh, yes.
And I'm looking at a IRC client on a neat task.
What IRC?
It's a jabber client.
Yeah.
This is MC ever.
It's a very IRC like a jabber client.
Yeah.
And what you see here is five contacts.
One of them is called Beatles.
And then we have John,
Paul, Ringo, and George,
as individual ones.
So if you send a message to the individual,
Beatles, you can set the U.
You can set the saturation,
and you can set the brightness of each of the lamps.
And if you send a message to Beatles,
then you do it for all of them at the same time.
Well, that's very good.
So there's a grouping mechanism in the U.
APIs.
And the default is,
well, the basic group is all lamps.
And you just communicate with them like you would.
Yeah, I'm not sure if you can see this.
But there is, you just send the text messages.
U equals sign,
and then a number from 0 to 64k.
And that gives you the range of colors.
And you can also say saturation from 0 to 254.
And that's, you know,
if it's 0, then it's all white.
And then another, you get deeper colors.
So the integration here,
this could be anything really.
I mean, you're using Philips lights,
but that could be, you know, feed the dog.
Yeah.
So this is the protocol that you could use as a human.
Yeah.
And the beauty is you're just leveraging Jabber.
And anything that supports Jabber,
you can be homework,
talking to your boss,
and then feed the dog at home or...
Exactly.
Yeah.
And the next level will be,
now we are human to machine.
Yes.
But the machine to machine,
we will talk bare XML,
which is an extensible part of the XMPP protocol.
Yeah.
And you would have interoperable data XML transport
of understandable data between machines.
So that's the language for them.
Okay, hold on.
So that's what we have over here.
Yeah.
This machine here also has a connection called Yoko.
Yeah.
And Yoko is able to control part of the Beatles.
For instance, she is...
Sorry, you're cracking me up too.
Yes.
She had quite a bit of fun coming up with these names.
So Yoko is able to flip off and on Paul.
Now he's flipped off.
Yeah.
And now he's flipped on again.
And Paul, you were able to do that via just a regular switch.
Just a regular switch into a breadboard,
into a raspberry pie.
And what's on the pie then?
What's in the magic there?
There's a small program running that was partially written
by Okim.
I extended it a bit.
That will look for signals on the GPIO bus
to see if a switch was flipped or a light sensor,
reading light sensors or distance sensors,
then translates that into events
for these devices using x and pp.
It sends machine-to-machine messages
telling the light to turn off and on again
or change brightness.
For instance, this one will slowly change
the brightness of John over there.
It's a bit slow because I didn't set the thresholds correctly.
There's an audio podcast so we can all go,
oh, look, it's just in town.
So, yes, indeed.
So this is really showing off the machine-to-machine
interrupt probability and human interaction
that can trigger machine-to-machine interrupt probability.
Okay, so we have two other sensors here.
What's this one?
That's moisture.
So it could be under your dishwasher
to see if it's leaking.
And then you have distance.
Autosonic distance measurement.
So that could be perhaps the color
if you would like to have a color control of the thing as well.
Yes.
Actually, I lived beside a graveyard,
so I have had a plan for a long time
to have a motion sensor.
And when somebody goes past that a coffin will creak and go,
I'm not dead!
Well, you could use this technology to do that.
To do exactly that.
Okay.
Could also talk to you on your chat window.
So if you are at the work,
if somebody passes the graveyard,
you can see a message.
Could talk about it.
And get a jingle, perhaps, with a video signal,
getting back.
Since it's also chatting,
video messaging, conferencing.
You can take part, for example, in a multi-user room.
Yeah.
Where we can be talking to each other anonymously.
And if you say that that room is a smart city,
every device could join in this multi-user room
to discuss the power on the grid, for example.
So if we are 10,000 electricity meters,
anonymously, we can talk in a multi-user room,
talking about our power.
Yes.
So if there is a increased power in the room,
you know that there's a lot of load on the electricity network
in real time.
Okay.
Without revealing who you are,
because in a multi-user room, you can be anonymous.
Okay.
What's the authentication for this comes with the stuff
that you get with XMPB, I guess.
An XMPP, each server could decide on what kind of security
it would like.
You could use OAuth or just password names or certificates.
It's up to you, the server.
And the whole XMPP network is during the spring today,
hardening the whole network to not allow any unencrypted
sessions.
So we will enforce to use TLS all the way down to the client.
Thank you, NSA.
Yeah.
And then the service in between, when one domain
talks to another domain, they have certificate into change
in a pair-to-peer manner.
Yeah.
Okay.
So.
Okay.
This is fantastic.
So here we have the hardware talking to Raspberry Pi
and the Raspberry Pi talks to a Jabberisk client.
And then the other part talking to the Philips
is that something that you're going to extend to other devices
or say, I've got my fridge.
How do I get my fridge on today again?
We have a very big project in Sweden, where I come from.
And we do an energy efficiency project, where we get the alarm
systems connected to the same way to heating systems.
Okay.
Because it's very tricky to get an alarm company interoperable
communicate to a heating systems or the silo.
I can of course have two apps, one for the alarm and one for the
heat pump, but to get a temperature from a smoke detector
to a heating system.
It's a very long way and a lot of integration projects,
especially if your 10 heat pump company is having 10 apps
with 10 different APIs.
This is a way for them to federate data
over to any of those domains.
So that's installed now in 20 villas in the Stockholm area.
Where they share data over the XMPP network
as appear to appear transport of data.
And the privacy issues are fixed by the fact that it's...
It's controlled.
Yeah, and it's only between friends.
The next level would be that you actually have authorization
on a special value.
So if your friend to my alarm reading smoke detectors
temperature, I wouldn't let you read the status of the alarm.
Okay, yes.
And the note...
And that's in development, is it?
Yeah.
The idea there is that each client would have a best friend
to ask for the level of authority.
So if you are a friend of mine,
and you're asking me for the status,
I would offer my best friend, my parent.
Am I allowed to give this man the status of the alarm?
Okay.
And that would, of course, say no.
That's a lot of development that you need to do still.
A lot of integration.
Yeah, but the thing is with the XMPP is that it's one place
where the standardization is done.
And that is the XMPP foundation.
So these standards now are thrown out as experimental,
so people use it, but it's only one pipe
or where you could go to get them to draft.
So everybody needs to do the same thing.
So regardless of anybody's doing it,
it will be interoperable if you concise to those standards.
So even if small provider of smoke alarms does us
and a small provider of heat pumps does us,
it's in their interest to do it
because the more people will do it.
But then together, I'm more inclined to buy the small providers,
heat pump and small providers thing
because I can create them with MS.
Okay, that makes perfect sense to me.
So it's a little snowball that hopefully rolled on the mountain
to get a bit.
Yeah, I should do.
Okay, is there anything else that I need to know?
Well, you can find more on it on xmpb.org.
Yeah, good.
The project of energy efficiency is on ia.sust.se.
I'll get you to write that down in the notebook now,
in a second, and links will be in the show notes.
Do you have this source code for the Raspberry Pi stuff?
Yes, they are on the GitHub.
And do you have the schematics and stuff
so that somebody could do it?
We will arrange that.
It will probably be every day try out,
do it this to control your home lamps.
Did I miss anything?
Or are we good?
I think we're good.
How has the beer been?
Very nice.
I'm very dry thought.
Yes.
Okay, guys, thank you very much,
and keep doing what you do.
Thank you.
Thank you.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
hey, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi, guys.
Hi.
Hi, guys.
Hi, guys.
Hi, guys.
Hi.
Hi.
Hi.
Hi.
Hi.
as soon as you support other,
or wherever you see compatible browsers,
such as Firefox, just go with, yeah.
So just, I need to describe to people,
what we're looking at, so we're looking at a TV screen.
And if I wave in there, the center screen comes up,
very much like pictures I've seen of Hangouts,
I've never used Hangouts, but I'm on the bottom,
there are various other cameras,
where they're different clients from, you know?
Yes, there's all of these coins here,
participants in the conference,
so they're just sharing one single conference.
And you could imagine those all over the world,
sharing the same conference and talking.
But WebRTC is a relatively new protocol,
and you're already supporting that, so.
Yes, how did you manage to do that so quick?
Actually, WebRTC, it is a relatively new technology,
but it reuses a lot of existence standards
for real-time communication, such as RTP, for example,
eyes for natural visual, DTLS is RTP.
So the Jitsi's role here is really not that much
into the client side, although the Jitmeat application
is currently handled by the Jitsi community,
but what's really interesting here is the server side,
the bridge that relays all the video streams,
because every participant is just sending one video stream
to the bridge, and then the bridge sends back
all the video streams for all the other participants,
and that bridge is actually the heart of Jitsi
moved to the server.
That's why I call it the Jitsi video bridge.
And it's very lightweight, because it just relays video,
it doesn't mix anything.
It's so lightweight, actually, this entire conference here
is taken about 30% of this box here.
That's where the bridge runs currently.
It's sort of a device.
That's an Intel knock with an I3 processor,
and we're hosting the conference on top,
and we even have further optimizations,
so it's going to be even more powerful.
So if I had a shared VPS, is that something
that I could run on that?
A shared wittery?
I have a VPS virtual private server,
one of those nine euros a month.
Of course, yes.
We actually have the Meet Jitsi service meet.jit.si,
where you can try it out.
It runs on a VM somewhere in the network,
and it's exactly what it's meant for.
It's really lightweight.
And obviously, there's the service that we use
just as an example, but you can download this whole thing
with from jitme.org, jitmeat.org.
You can install everything.
We use the Prozody XMPP server, which
is a very cool one, the engine X web server, and yeah.
OK, very good.
And how complicated is it to?
No, that's OK.
I think the, OK, do I need to know?
So I want to install Jitsi.
Do I need an account or anything strange?
Like how do I get my friends?
How do you get my mom and dad on?
So if you want to get your mom and dad,
I think jitmeat is going to be very easy for you,
because just point them to a URL.
They don't need an account.
You just point them there.
It creates a conference for them.
So you just need to take the link that you are
sending over email to everyone else.
They click on it, and you are in a conference.
That's it.
You don't need accounts.
You don't need anything.
Jitsi is what is commonly known as Rich Client.
So by you need to install, we need to connect to servers.
You need to find an account somewhere.
That is a more complicated process.
Normally, either you have to know a little bit
about these things in order to use it,
or you have to have someone who deploys it for you.
This is generally how people have been using it,
which is indeed some sort of a limitation.
And that's why we are really, very enthusiastic about
P Jitsi, because it's really very easy to use.
It's the simplest video conferencing experience
that you're going to get ever.
It's easier than hangouts to.
It's easier than go-to meeting or WebEx or whatever.
OK, fantastic.
And it's entirely open source.
Excellent.
Is there a company behind us?
Or are you just doing this for love?
There is a company behind this, but not in any exclusive way.
It's just that a bunch of the developers
happen to be working for BlueJim, which
is a company that provides development services around Jitsi.
So if some customers of ours are basically saying,
oh, yeah, this Jitsi is doing 95% of what we need.
Could you please add the thing that we are missing
and that we really need for our use case?
That's where we come in.
And most of the things that we develop
are open source as well.
And that's how the project grows and et cetera.
And we have voluntary contributors as well,
like some of us here.
So it's not, the company doesn't really
play some sort of limiting role in the project.
OK, fantastic.
Anything else I missed on this whole thing?
I know you need to disassemble everything, so.
Well, it would probably be good to point your listeners
to your audience to the Lightning
tool that we had yesterday.
The Jitsi Video Bridge Lightning
Talk on First Them.
That would probably be of interest.
Then there's a recorded video, so they
would be able to see more clearly what this is about.
Absolutely.
I'll put the link into the show notes for this episode.
OK, thank you very much.
And thank you very much for stopping by.
OK, bye-bye.
Bye.
Bye.
Hi, everybody.
This is Ken, almost the end of First Them 2014.
This is the first time I've been here.
And I'm talking to Jan Frederick Martens.
Yes, that's correct. Hi, everyone.
So what's your involvement with First Them
reviewing a lovely yellow t-shirt?
Well, I'm one of the approximately 25 people
organizing First Them.
We start each year around July, August,
contacting people who might be interesting to present
their findings, their projects during the main tracks.
We also have a need for keynote speakers.
And then once the months move on, we go into details.
We go and look for developer rooms.
As you might know, we have about 2022 developer rooms
focused on a certain project, such as Fedora.
And every developer room has their responsible,
making sure that the quality of the talks in that dev room
is well, as it should be.
So the developer room people pick the talks for that track?
That is correct.
We have in total more than 400 presentations.
So doing that ourselves would be not really feasible.
We focus on the keynotes, the main tracks,
and the lightning talks.
But we leave the review of the developer rooms talk
to the developer room responsible.
So how many talks do you have to make sure are organized?
Well, we ourselves do about 20 main track talks
and about 20 lightning talks in total as well.
This has to be the biggest event that I've ever been at.
And the organization is military in its efficiency.
How have you managed to do that?
Did that happen overnight or is it just incremental improvements?
It's trial and error.
The first false dam, which back in the day
was called Osdam, was in 2000.
And I can assure you, we didn't do things as professionally
back then as we do now.
It's a matter of learning, listening to the remarks of visitors,
getting great input from all kinds of sources,
having a larger team to help out,
having more financial possibilities
as well with sponsorship, with donations,
which of course, much appreciate from our visitors.
And well, this is the 14th edition right now.
And a lot of them, a lot of the organizers
have been active in the organization since 2003.
So we have a lot of know-how and super efficient
and motivated team of staff.
And let's not forget the volunteers,
because the volunteer group is even larger
than the core staff group.
How many volunteers are there?
I would say about 100.
It is, we can't.
And they're everywhere.
I interviewed some of the guys down-taken cloaks
and they're like developers of main projects.
And they're putting up with grief from people like me,
looking for my coat.
Absolutely fantastic.
One of the things, though, you're very, very lucky
in getting the building.
Oh, yes, we're very thankful to the university,
Libre de Belgique.
So the university that we are right here,
we have started in 2000 in another campus of theirs.
And in 2001, if I'm not mistaken, there goes some lots.
Don't worry, folks.
Those are empty beer bottles.
No need to panic.
So in 2001, I believe, we moved to the Solbosch campus, which
was at the time quite a small event.
Just one single building, a couple of rooms.
And we grew.
And we grew.
And the first years, we got the assistance
from the Seclan Pharmatic, which
is a local student organization.
And we were able to book the rooms through them.
But as we grew, we got them to contact with you
will be directly.
And you will be noticed that there
were quite a lot of people during the first weekend
or the second weekend of February each year.
And so they were wondering, who are you?
What are you doing here?
And we have a very good relationship with them.
It's just mind blowing when I arrived off the train.
I've told the story.
There's this woman on the tram.
And she had no idea.
She just looked out and suddenly the tram was empty of all
these people.
Most of all, it was a flash mob or something.
So what happens next?
What's the cleanup?
Are you finished when are you going to be finished tonight?
Hopefully, we'll be finished by approximately 9 or 9.30 p.m.
At 4, which is half an hour ago, we
start removing the signalization.
We start closing the first developer rooms.
Then we need to move on to the individual buildings,
close them one by one, clean them,
making sure that all the equipment that we have there
ranging from cleaning gear to video equipment, audio equipment,
tables, chairs, everything, which is not located normally
at university, has been put in a central location.
So the renting companies can come and pick it up on Mondays.
We'll be a stressful couple of hours.
I don't think people appreciate the logistic nightmare
that this is.
So I'm not going to take too much more of your time.
I just want to say, from everybody who
has participated in FOSTEM, thank you very much.
Absolutely brilliant thing that you're doing for the community.
Yeah, it's not just us, lots and lots
forget about the volunteers.
You'll be the cyclist from Atik.
And in fact, all people involved in the organization
of FOSTEM.
MUSIC
Join us now, we'll share the software.
You'll be free, because you'll be free.
Join us now, we'll share the software.
You'll be free, I guess.
You'll be free.
If you want to be free, from the dirt in the middle of the night,
come to our side, you won't believe what you see.
We've got everything you need for your new station.
Take it from me with no manipulation.
Time to know, boy, download, enjoy, this is your sample.
Come on over, we'll play.
You'll be free, because you'll be free.
You'll be free, you'll be free.
Come on, join us now, we'll share the software.
You'll be free, I guess.
You'll be free, join us now, we'll share the software.
You'll be free, I guess.
You'll be free.
If you want to be free, from the dirt in the middle of the night,
come to our side, you won't believe what you see.
We've got everything you need for your new station.
Take it from me with no manipulation.
Time to know, boy, download, enjoy, this is your sample.
Come on over, we'll play.
You'll be free, because you'll be free.
You'll be free, because you'll be free.
Join us now, we'll share the software.
You'll be free, I guess.
You'll be free, join us now, we'll share the software.
You'll be free, I guess.
You'll be free.
Join us now, we'll share the software.
You'll be free, I guess.
You'll be free.
Join us now, we'll share the software.
You'll be free, I guess.
You'll be free.
Join us now, we'll share the software.
You'll be free, I guess.
You'll be free.
Join us now, we'll share the software.
You'll be free, I guess.
You'll be free.
You have been listening to Hacker Public Radio at Hacker Public Radio.
We are a community podcast network that releases shows every weekday on the free Friday.
Today's show, like all our shows, was contributed by a HPR listener like yourself.
If you ever consider recording a podcast, then visit our website to find out how easy
it really is.
Hacker Public Radio was founded by the Digital.Pound and the Infonomicum Computer Club.
HPR is funded by the Binary Revolution at binref.com.
All binref projects are proudly sponsored by Linner Pages.
From shared hosting to custom private clouds, go to LinnerPages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under a creative commons,
attribution, share a like, free those own license.
