Episode: 901
Title: HPR0901: Ahuka: Intro and How I Got Into Linux
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0901/hpr0901.mp3
Transcribed: 2025-10-08 04:38:55

---

So
Hello, my name online is Ahuka, which is a kind of a odd one, perhaps, but let me explain
a little bit about where that comes from, and then I want to get into what brings me here
to Hacker Public Radio.
Now, as for the name Ahuka, that's just a nickname, and it's spelled A-H-U-K-A, and what it comes
from is a Japanese record album, where they picked up the Jefferson Airplane record.
The album name was surrealistic pillow, and there's a song on there that you've probably
heard called White Rabbit, and they decided they were going to put the lyrics, print them
on the cover of the LP, but they got it slightly off, so there's a line in the song that
says, tell them a Ahuka smoking caterpillar has given you the call, and on this Japanese
LP, it somehow got turned to tell them Ahuka with a capital A, proper name.
The swooping caterpillar has given you the call, and I happen to be a big Jefferson Airplane
fan, and at the time there was this mailing list that Jefferson Airplane fans hung out
on, and we all thought this was absolutely hilarious, and so that became kind of a running
joke, and I kind of adopted it as an online numb de plume, so to speak, and been using it
for a number of years ever since.
So what I want to do here, I said on Google Plus, where I spend a lot of time these days,
and I'm connected with Ken Fallon, and Henry Patrick Riley, and all of that, and for those
of you who don't know, there was a time when Google was absolutely forbidding anyone to
use a business name on Google Plus, and Ken wanted to get this going, and he had set
up Hacker Public Radio, and then they started cracking down, so he created a profile
called Henry Patrick Riley, and that was kind of a way to get around that, as obviously
the same HPR initials.
And so I posted there the other day, and sent this to Ken, saying, all right, Ken, you've
been saying you want more people to contribute, and by golly, I ought to be able to do some
of that, so this is what I think should be the beginning of a number of these recordings
that I'm going to do, and send to Hacker Public Radio, and I find I'm already brimming
with ideas for various things, but I've noticed that most people, at least the first time they
do it, try and do a little bit of an introduction, what got them to where they are now, and particularly
if you're a Linux user, which I am, how did you get into it, so I think this is going
to be my introductory recording podcast here.
I'm probably a little older than some of the people who you hear on Hacker Public Radio,
because my earliest experiences with computers really go back to the late 60s, and yep,
I'm that old.
And in those days, when you talked about computers, you were mostly talking, at least the ones
I interacted with, with mainframes, and it was a very different sort of thing.
Mainframes existed in a separate temple where there was a priesthood that maintained and
operated to them, and the rest of us who wanted to somehow make use of it, we would
have to do things like prepare boxes of punched cards, and oh boy, with those days fun.
So if you had data that you wanted to enter, a program you wanted to run, you know,
you would punch it all onto these IBM punched cards.
And these punched cards had 80 characters across, 80 columns, which is why the earliest
monitors that came with computers, the monochrome monitors were also 80 characters across.
Just happened to be that, you know, they were matching the initial punched card capacity.
Now in those days, you know, with punched cards, there were certain things that could cause
you a great deal of trouble.
One of them was, if the cards get out of order, if you can just imagine having a whole
box full, you know, hundreds of these cards, and you know, God forbid you bumped into someone
in the hallway and dropped this box of cards, you'd have to be able to get them back in order,
which was a bit of a problem.
One of the tricks we had back then was to draw a diagonal line across the top with something
like a magic marker, and that made it very easy to, you know, if there were too many
cards, too too many, you know, it made it a lot easier to get them back into order, because
you had some sort of visual thing, and if a card was out of order, it tended to stand
out a little bit more.
So those were my earliest experiences with computers.
And later on when I was in college, you know, I went to work first, I didn't go to college
until I was in my late 20s, and the college I went to, we had computer accounts that
went to a mainframe, but using a teletype terminal.
Well, you know, if you take a look at the terminal that you have in a Linux machine now,
which just opens up as a window, why do they call it a terminal?
Well, I mean, it used to actually be a terminal, and so when you see the TTY for teletype,
what they were talking about was something that had a keyboard and a roll of paper, and
you could type in stuff, and it would go to the computer, which was located somewhere
else, and whatever the computer spit back at you would come back and be printed on those
rolls of paper.
So I remember being in college and wrote my first program using Dartmouth Basic.
So, you know, that was, that even preceded so-called visual basic, which is something Microsoft
came up with years later, but, you know, this was the original basic.
And, you know, every line had a number, you know, so line 10, line 20, line 30, and so on.
And so it ran things in that order.
You know, that wasn't a bad way to learn something about computers.
I've got some very basic good grounding there in college writing programs and basic
that really helped me to understand how computers work.
Now, none of those would be what you would call personal computers, so when did I first
get a personal computer?
Actually, the first one I ever got was called a Sinclair Z80, although my memory is, it
had a different brand.
Maybe it was the time next version of this.
But the Sinclair Z80, which I think probably paid about $100 for back in 1980, came with
one kilobyte of RAM.
That's right, one kilobyte.
So we're not talking megabytes or gigabytes or any of the things you're used to now.
One kilobyte of RAM.
And that was the standard.
But I remember looking at this and thinking, okay, one kilobyte is enough, but, you know,
over the years, we're probably going to need more.
So they offered a 16 kilobyte expansion pack and being a really forward thinking kind
of person, I said, ah, that is for me, I must get the 16 kilobyte.
So I ordered that and, you know, that came, you know, the basic unit was just a keyboard
with some processing stuff built into it.
You bolted this RAM expansion pack on the back.
For a monitor, you would use a television.
So I had this old black and white TV, but they were more common back then.
And that was really all you needed because it was a monochrome, anyway, with one kilobyte
of RAM, you were not going to be doing color processing, trust me on that one.
Then if you created a program or something like that, you used a cassette tape drive.
And so you would record stuff onto the cassette tape drive and bring it back.
So you had to supply your own tape drive, your own monitor, well, you know, any cassette
player would work and say any old television would work.
So I had that and then in 81, I went into graduate school.
And at that point, you know, I'm back to mainframes, teletype terminals and, you know, dropping
off jobs to be run.
And you had to pay for your time.
That was another interesting little thing.
So if you were in college university, would have you, they might give you an account and
the account would give you an allocation of a certain number of dollars.
And that's what you had available.
God forbid you ran out.
So one of the things that we had to do is we had to economize as much as possible.
So one of the tricks that us old-timers remember was, you know, taking our box of punch cards
down to the computing center at around 3 a.m.
Because at 3 a.m., the computing time was so cheap, you could really stretch your allocation
a lot further.
So you would, you would take it down and you'd give them your, your punch cards or whatever
and tell them to run it.
And then you would come back the next day.
And with any luck, you'd pick up a printout that had all of the results you needed.
Well, what happened if you had made a mistake if you needed to change something?
Well, you had to change the punch cards and come back the next day and drop them off.
You know, again, come down at 3 a.m. to make it as cheap as possible and then pick it
up.
So it was several days later before you got anything.
But you know, that was what we had and, you know, it was not bad because I actually remember
in the early 1970s, doing by hand linear regressions, doing the matrix mathematics.
And so what that basically meant was you'd have columns of numbers and you'd take this
column and you'd square every number that was in the column and then you'd take column
A minus column B. You'd do a subtraction and you'd square that result and stuff like
that.
And it was just pages and pages and pages and calculations.
Well, at the time where I got to working on my dissertation, I talked to a faculty member
about that and he said, well, I'll be the advisor for your doctoral dissertation.
On one condition, you must purchase a personal computer.
And his reasoning was that if you got a word processor, you could actually get it done.
And I think the way he put it was, I'll be dead before you finish unless you buy a personal
computer.
So okay, so I speak, I spent $2,000 to purchase an XT, a PC XT as it was called.
And this was an, you know, Intel processor in 8088, two floppy drives, no hard drive.
It was running DOS.
The word processing program was word perfect.
And so what you had to do was you would have to boot from the floppy because you had two
floppy drives.
You would generally have your software in one and your data disk in the other in case you
wanted to save any of your files.
And so the, this used the five and five and a quarter inch floppy drives and they held,
oh, good lord.
I think it was like 360K, which seems like incredible now.
And so you'd, first you'd boot DOS and then you'd start up the word perfect program and
then, you know, you'd start typing and save your stuff.
Well, you know, that got me going.
But right away started to get curious about what's going on with this computer and started
digging into it.
And, you know, tried various things, there were even in those monochrome days, there was
even online stuff.
I know that's hard to imagine.
But you know, there were places you could go online and connect to people.
Not so much the internet at that point because we were talking like the mid 80s, but there
were, you know, private net, things like Compuserve, the Sierra Network, Prodigy, things
like that.
So I was trying those things out and also trying to figure out what's going on with my computer.
At a certain point, I started to get interested in games and you immediately ran into a problem
because those old computers, they came with essentially 640K of RAM.
And that's not entirely true, actually what they came with was a megabyte of RAM.
But it wasn't all available to you.
So the upper part, we say a megabyte, we mean, you know, 1024 kilobytes.
So it's the binary version, not the metric version.
And what we would do is the upper 384K was devoted to handling the video processing and
stuff like that.
So 640K was what was left after all of that.
Well, it was really hard to get everything in there.
If you wanted to get the game itself, the drivers, you know, did it run off of a CD drive.
You had to load a CD driver if that was the case.
And so if people came up with all of these tricks to somehow steal a little bit of memory
from that upper 384, and, you know, sometimes it was expanded memory, sometimes it was extended.
You know, and they were two different ways of basically stealing a few extra K out of
that upper 384.
And to do that, you'd have to go in, you'd have to tweak your auto-exec bat and your
config system to do that.
And at one point, I got very good at it.
I had it actually set up with a boot menu in DOS that, you know, you would boot into
something that would say, well, you know, choose which configuration you want to be in.
And so for a particular game, it's like, all right, I can read this off of a floppy
drive.
You know, a CD driver, I'll drop that, that'll give me a few more K, and then I can take
something from the upper and then so on.
The old days, somewhere in there is where I actually got my first hard drive, which I think
was a whopping 20 megabytes.
I thought we'd never be able to fill a 20 megabyte drive, those were the days.
Now, then I got into DOS, DOS had its limitations.
It's a single tasking operating system, fairly primitive.
The initial attempt to get something a little bit better was something called Windows.
You may have heard of it, I understand it's become rather popular in some circles.
So the initial one that I tried was Windows 3.1, which is widely regarded as the first
more or less useful version of Windows.
And that was really just a, I think we would call it a shell, you know, it wasn't the
kernel of the operating system, it was just this thing that sat on top and allowed you
to do some fairly simple graphic manipulations.
And I like that, I thought, okay, that's better than DOS.
And then Windows 95 was a real big change.
And you know, that was the one that I think really put Windows on the map to some degree.
And I got that and then, you know, Windows NT, I got into NT 4.0, then Windows 2000,
and Windows XP, well, at a certain point, I started to think, you know, I'm not really
happy with Windows, well, what are we going to do about that?
At this point, I was an assistant professor at a college and I got interested in all of
the online stuff, I mean, the internet had come along.
And you know, these days, it seems like everyone has just grown up with the internet
all around them.
I have to tell you, it wasn't always the case.
And I can remember back, and this probably would have been sometime in the 90s, maybe
the mid 90s, having the college librarian do a demonstration of this internet thing and
involve running a cable all the way into the auditorium so that we could set up something
to show the faculty.
It was a very long ethernet cable that would allow them to get some kind of an online
connection.
And one of the things that I remember then is that there were so many internet technologies
that have gone by the wayside.
Like Gofer servers were really big in those days, I think the web has really wiped out
the whole network of Gofer servers.
But we got into that and because I was somewhat more tech savvy than some of the faculty,
I was approached to be the faculty development officer with the tasks specifically of getting
my fellow faculty members to use more of this computer technology.
So I sort of dove in and started figuring out how I could use websites for my college
classes and that led to a certain point me being put in charge of the college website.
And I started getting involved with that and that's really what got me into my first
real connection with Linux because our server that all of this rested on was a red hat
server.
So I was given a login on this server, it's all command line.
So we didn't have any of the graphical interfaces which is probably a good thing because I've
never felt awkward about having to use the command line, and command line is not a problem.
As I say, I started with DOS which is command line anyway and editing auto-exec that and
config sis files and all of that.
So getting into a command line environment with Linux, and it wasn't all that frightening.
I use whichever is most convenient for me now whether it's the GUI or the command line
I'm not wedded to either, it's whatever is most convenient.
So anyway, we had this red hat server, all command line.
It wasn't anything that attracted me as a desktop operating system because by this point
I really had been using Windows for a long time and I thought I like the graphical interface.
I think it makes sense.
I kind of took a look around and discovered that there was this project just getting off
the ground called KDE and it looked really interesting.
It wasn't ready for primetime by any sense of the imagination but it was something I was
going to keep an eye on.
This could turn into something very useful someday.
And then at some point I tried Mandrake and it's been a few years later because by this
point KDE had matured obviously and so I installed Mandrake on a computer and I think I did
that two or three times.
The first time was like this is all different.
I don't know where anything is so it didn't last.
I tried a few times dual booting and would end up wiping out the Linux one because I just
never quite used it.
And at some point I did another Mandrake install and all of a sudden stuff started to click.
I was like, oh, wait a minute, I can do this.
I just figured out how to get all my email using Evolution.
I just figured out how I can do whatever it is I need to do and so I was going with Mandrake
for a while.
And then at a certain point, they started to have their problems sadly and I think they
probably still do this on the great.
And there was this new thing Ubuntu that came along and because I had come from Mandrake
and the KDE desktop environment, yes, that is redundant.
I know that, but anyway, I went with the KDE version which is Kubuntu, which I'm still
using.
And that's been my desktop operating system of choice for, I'm going to say about five
years now.
I still have, yeah, I still use Windows at work, Windows XP is our standard desktop where
I work now and my wife still uses it and I'm her tech support and that's okay.
And frankly, I've got a Windows 7 machine here that I keep for gaming when things like
that.
But most of the time, I'm sticking with Linux and one of the reasons for that is that
I'm a real believer in freedom and using free software and supporting free software.
And that's one of the things that, when I record more of these, I'm going to be talking
about a lot more.
But that has really guided me and sticking with Linux and trying to support all of that.
Now, lately I've been thinking I need to start investigating some other distros and get
into that.
So, you know, I'm not sure, I think pretty soon now I'm going to do an open Sousa and
check that out.
So we'll see if the combination of KDE with a RPM package management is okay.
And so, you know, who knows where that's going to go.
I think there's a lot of interesting possibilities out there and, you know, I want to try a pure
Debbie in at some point and I want to investigate some of the others.
I know a lot of the people that are involved with, like, the Linux link tech show, for instance,
there's a number of them that are big on arch and some kind of curious about that.
And I got a good friend who runs Gen 2 and has been saying, oh, you really ought to do
Gen 2.
So, those probably take a little more work, but it should be an interesting, interesting
adventure.
So anyway, that is, that's the story of what got me to this point.
One of the things that I'm a big believer in is, you know, as I say, supporting free
software, supporting the community in various ways.
And so, I actually found myself as president of my local Linux users group.
Not because I know more about Linux than anyone else.
We've got some really smart people in that group and I learn from them every time.
You know, I just kept going to the Linux users group and I'd learn a little bit more
each time.
And then, at a certain point, it's like, well, you know, we need someone to keep this
thing going.
I am now, in terms of my day job, I'm a project manager, so it was actually pretty easy
for me to pick up their reins as president of the Linux users group.
What I mostly do is just make sure that we have a room to meet in and a speaker to speak
each month.
And so, that's a nice little organizational task that I'm easily up to.
And then, as a result of that, I came to the attention of a lady named Beth Lynn Eiker,
some of you may know her as the leading organizer of Ohio Linux Fest who roped me into that
one.
And so, now I do publicity work for Ohio Linux Fest and that's probably something I'm
going to talk about as well as we do some more of these recordings.
And to me, those are examples of just, you know, fighting an opportunity to give something
back and help support the community.
I'm not a programmer, I never claim to be a programmer, and so, you know, I'm not going
to be developing kernel hacks for anybody.
You know, if you are a kernel hacker, God bless you, you know, it's a great work that
you're doing, but I know that that's not me.
And that's fine.
It doesn't need to be because I can make these contributions in other ways.
And so, those are just some things that I wanted to kind of throw out there.
And if you want to check out my website, let me spell it out because it's a word you
probably aren't used to, www.ZWILNIK.com is Wilmick.
And that name, by the way, comes from a science fiction series of novels and, you know,
you want a relatively short name that hasn't been taken.
You have to look for something unusual, don't you?
So that's my domain.
And so, I post things there.
You're welcome to go buy it any time, take a look.
And so, I think I'm going to sign off for now.
This is Ahuka, and it's been a pleasure talking to you, bye.
You have been listening to Hacker Public Radio, at Hacker Public Radio, does our.
We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by a HBR listener by yourself.
If you ever consider recording a podcast, then visit our website to find out how easy
it really is.
Hacker Public Radio was founded by the digital dog pound and the economical and the
culture club.
HBR is funded by the binary revolution at binref.com, all binref projects are crowd-responsive
by linear pages.
From shared hosting to custom private clouds, go to lunar pages.com for all your hosting
needs.
Unless otherwise stasis, today's show is released under a creative commons, attribution,
