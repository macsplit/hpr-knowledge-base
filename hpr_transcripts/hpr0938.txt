Episode: 938
Title: HPR0938: Cloning Windows WiFi Profiles and Installing Skype Under 64-bit Fedora
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0938/hpr0938.mp3
Transcribed: 2025-10-08 05:12:14

---

Howdy folks, this is 5150 for hackerpublicradio.org, and here at HPR, sometimes I think we lose
sight of the fact, this podcast network is not necessarily restricted to stories about
open source software, so this evening I wanted to start with the tip for one of those other
operating systems, and that's how to clone Windows Wi-Fi profiles to a new laptop.
My second topic may not make some of you any more pleased, because I'm going to talk about
how to install a proprietary software package, Skype under 64-bit Fedora.
Topic 1.
Cloning your Windows Wi-Fi profiles to a new laptop.
The other day I was copying a customer's files and settings from an old laptop to a new
one.
Much of this tedious task was handled automatically by FABs Auto Backup.
FABs is of course an omnibus user profile copying software for Windows, it's paid and
proprietary and mainly used by text.
This is in no way intended to be an advertisement or an endorsement, but as a service to any
text who may be listening if you weren't already aware, FABs is 25% off from now until
Valentine's Day.
One of the things, however, that FABs Backup omitted was the customer's literally
dozen Wi-Fi access profiles and passwords in Windows.
For family laptop, you usually just have to read into the password for the just-to-home
router and maybe once again for the work wireless.
If you're a tech for an enterprise and the new mobile workstation needs to connect to
multiple access points, you always wind up schlepping it around the business or campus,
connecting it each SSID in turn and entering a different key.
This time, the laptop would be used in multiple remote offices.
The user would have been able to recreate these connections as he traveled to each office
in turn, but he asked me if it wouldn't be possible instead to transfer the profiles
along with the rest of his data.
I had no doubt I would be able to find a free tool to back up and restore wireless connections,
but I've become wary of Windows utilities that can be found at the end of a Google search,
but have not been recommended by other texts or by a website I trust.
I was surprised to find my answer in some functions added to the .NETSH, which is a
brief issue for NetShell command, that we're put in starting with Windows Vista.
If we open a Windows command prompt on the laptop, it already has the Wi-Fi key setup
air-go, the old laptop, and type NetShell in ETSH, space, WLAN, space show, space profiles,
and press enter.
This will give you a listing of your existing wireless profiles by name, i.e. by the SSID.
Now you can pick a Wi-Fi profile name and enter on the command line, NetShell, space,
WLAN, space, export, space, profile, space, name, and no space here, equals, and again,
no space, and inside quotes, one of those profile names, so name equals, open quote, profile
name, close quote, space, folder equals, open quote, and then the path, c, back, back slash,
sorry, c, colon, back, back slash, tamper, whatever, close quotes.
Quotes are required for the Wi-Fi profile name, but not for the destination folder, unless
you're one of those people who use spaces in your Windows directory names.
If you want to create export files for all your wireless connections, you may omit the
name equals park, in other words, NetShell, space, WLAN, space, export,
space, profile, space, folder, equals, destination path.
And if you want to omit the file equals, then of course, the export files are generated
in the current directory.
The NetShell, WLAN, export, profile, command, generates a .xml export file for each selected
profile.
The export file contains an SSID, the channel, the encryption type, and a hash of the encryption
key to be transferred to the new laptop, except that it doesn't work, at least not for
me and for several others who posted articles to the web.
On my first try, I was able to import everything, but the encryption key, all the access points
showed up in managed wireless networks, but I was prompted for a key whenever I tried
to connect.
I thought maybe this was Microsoft's attempted security, but I could see the field for
the hash in the .xml, and when I went back to article on NetShell, it was clear that
I was supposed to get the encryption keys too.
A little more Google search, revealed a second article on NetShell, that gave me the argument
that the first one omitted.
You see, adding at the end, key equals clear with no spaces, at the end of the NetShell
command, causes the keys to be exported.
And clear text.
Our command now looks like NetShell, space, WLAN, space, export, space, profile, space,
folder equals destination path, space, key equals clear.
Next, copy your .xml profile files to the new laptop.
I'm assuming VAUSB key, because we've got no network at this point, and the file names
of those XML files will be in the format.
Capital W, starting wireless, space, network of capital N, space, connection with a lower
KC, dash, and then the profile names from before that were listed .xml.
Yeah, you understood me correctly.
This DOS command generates file names with spaces in.
Once you've copied the XML profile files to the new system, you can import the profiles
with NetShell, space, add, space, profile, space, file name equals, open quotes, and the
file name, all in quotes, to count for the spaces, .xml, closed quotes.
It's not quite as oddious as it looks, because DOS Nail Supports tab completion, so you
just have to type, NetShell, space, add, space, profile, space, file name equals, open quotes,
capital W, i, press tab, and the rest of the name of the first profile will be filled
in, complete with the terminating quote, press enter, and you should get a message that
a wireless profile has been imported, to import the remaining profiles, you can just use
a free or the up arrow to add it to last command.
I found I could even cursor key to the left of the .xml, close quotes, and then backspace
up to connection dash, and then fill in the first part of the next profile name and sequence,
and hit tab, and it would tab complete between text.
Since the original profile for the closest access point was set to Auto Connect, I found
that the laptop connected to the network, the instant the corresponding Wi-Fi profile
was imported.
Learning of these new NetShell functions may make configuring Wi-Fi more convenient,
for instance, I can maintain a library of wireless profiles for the organization's
I service, or I could implement an encryption key update via batch file.
I can also see ominous security implications for networks where users aren't supposed
to be privy to the connection keys, and they have access to pre-configured laptops such
as schools or libraries.
One could just whitelist to macadresses of only the organization's equipment, but there's
always that visting dignitary to whom you're expected provide unfettered network access.
Besides, anyone with access to the command line could just use ipconfig to display the
laptops trusted macadress, which could be then cloned for computer out in the parking
lawn or across the street.
Only way I can see to secure the connection from anyone with physical access to a connected
laptop is to install key software that disables access command line for everyone.
And yes, I tested the NetSH command from both administrator accounts and standard account.
In other words, you don't have to be an administrator on that laptop to run the NetSH command
and generate a clear text export of the wireless encryption keys.
On to my second topic, installing Skype on 64-bit Fedora.
Last week I had some problems with the landline at the house, and my cell phones run down
and on the charger.
So I decided to see how quickly I could install Skype on my fedora laptop as an alternative
to running over to a neighbor's house called Phone Company.
I hadn't played with Skype at all since I had it on my windows workstation, so I downloaded
and installed the .RPM for fedora 13 plus.
All Skype has is a 32-bit package for fedora, though they do have 64-bit packages for other
distributions.
And sure enough, when I tried to launch Skype after installing it successfully, the icon bounced
around and comp is fashioned, then the application item on the taskbar closed without doing
anything.
I looked for information on reading these Skype output logs and troubleshooting from
there, only to find that the folders in my home director were wrote, you would expect
logs to be didn't exist.
The Archwicky told me I might have to create wholeslash.Skype with capital S slash logs with
a capital L, which I did.
The application still continued to crash without generating a log, and I'd heard someone
mentioned once in a column podcast that formerly connected, that had the forms of additional
steps to get the 32-bit Skype client working under 64-bit fedora 15.
Google search took me to the katam.log, I don't know, I have no idea if for pronouncing
that right, k-h-a-t-t-a-m, there's a link below, I experienced some trepidation because
the steps described involved installing additional 32-bit libraries.
And if you heard me on the hacker public radio New Year's Eve show, you might have heard
me say that I've experienced a bit of dependency help over conflicts between 32 and 64-bit libraries,
but I have to say the instructions in the article went absolutely flawlessly, and I don't
know if katam.info represents one person or more than one, but in any case, you rock.
First of all, again, this is in the show notes, but I'll read out the full link www.k-h-a-t-a-m.info.
Dash, how to, dash, install, dash, skype, dash, i-n, dash, fedora, dash, 15, you know, 1-5,
numerals, dash, 64, dash, b-i-t, dash, again, numerals, 2011, dash, 0-6, dash, 0-1, dot
h-t-m-l. So first, after using r-r-p-m-i-v-h space and then r-p-m-name to install the r-p-m
file, as root, run, yum, update. Next, add the following lines to etsy-slash-r-p-m-slash
macros, which if it doesn't exist, you'll have to create. Again, this is in the show notes.
Similar underscore query, underscore all, underscore f-m-t, space, percent sign, percent sign,
open curly bracket, name, close curly bracket, dash, percent sign, percent sign, open curly
bracket, version, close curly bracket, dash, percent sign, percent sign, open curly bracket,
close curly bracket, dot, percent sign, percent sign, open curly bracket, arch, close curly
bracket, and then save the file. And finally, the last step, install the following 32-bit libraries.
And here's where I thought I would probably have to have some trouble and thrashing around
and try to figure out, because recently, every time I've gone to install a library, it will be
a sudden years of podcast and will just install. I have to do a yum search on the first part of
the name and type it in with the version number and dot x86 underscore 64. But this went,
the strongest libraries went just like it showed in the article, no additional hassle. It's yum,
again, of course, is root, yum, space, install, space, qt, dot, i66, space, qt, dash, x11,
dot, i66, space, lib, capital x, v, dot, i66, space, lib, capital x, capital s, crn, capital s,
a, v, e, r, dot, i66. And after the completed install the new libraries, I was able to
launch the application and log in to the skype account. I created online with minutes so
I can talk to people for playing an old regular telephone service. I'm only problem I'm having
so far. It comes up, it works. I don't like the fact that it wants to auto launch every time,
and I guess there's no way the program to kill that. I'm going to have to find what launches
isn't to kill it, because really the only reason I would would use it would be the emergencies
when the phone were down, or if I wanted to connect one of the group discussions that still
uses skype. I certainly have no reason to have it running 24-7 in my taskbar. And it does,
I don't about you folks, but all this new laptop is certainly faster than any computer I've had,
it's a dual core, but still it seems to hang for a minute while it's waiting for skype to load
every time I turn the computer on, and yeah that's not acceptable. So I find a way to hunt it down
and kill it. I want to end by saying I hope this will be a start of more frequent contributions by
myself to HPR. What I would like to do is something I'm going to call how I did it. By that I mean
probably a dozen times a week. I find a new piece of software I just have to try out, or I learn
something new from the command line, or I find a new way to make the systems on my network interact.
I'm simply never completely satisfied with my system configuration, and if you're listening to this,
I doubt if you are either. And I figured some small percentage of those experiences will be
worth sharing. I'm certainly not a Linux guru, and a lot of my topics may make the more experienced
listeners scratch their head, and wonder why I'm talking about what everybody already knows.
But I figure if I have to go out to Google or open up a man page or post a question on a forum,
or even haunt my friends on IRC to get an answer, then I've learned something, and some of it may
be of interest to some of you. It may even save you some time someday. I'm going to be talking about
what worked with my particular combination of systems and distros and applications and hardware.
What I'm not going to try to do is take a subject from the top down and kick it to death and
tell you how to make it work with every distro and every desktop. And I'm thinking just maybe
there's someone out there for some work and configuration to mine who will be able to glean
that one little detail that would be missed in a broader strokes discussion. For instance,
I only knew not to give up on the 32-bit Skype client under 64-bit Fedora because I heard someone
join a podcast late, and their excuse was they didn't realize their extra hoops they would have
to jump through to get Skype working. I also hope others may consider whether their daily
experiences enhancing their systems and just keeping them running may be worth sharing as well.
Until next time, I've been 5150 for hackerpublicradio.org. Please feel free to leave your comments
on the HPR page or you can fill out the contact form on my blog at thebigredswitch.druplegardons.com.
Actually, seriously do, I'm the only one that goes there and it's lonely.
You have been listening to Hackerpublicradio at Hackerpublicradio.org. We are a community
podcast network that releases shows every weekday Monday through Friday. Today's show,
like all our shows, was contributed by an HPR listener like yourself. If you ever consider
recording a podcast, then visit our website to find out how easy it really is. Hackerpublicradio
was founded by the digital dot-pound and new Phonomicom computer cloud. HPR is funded by the
binary revolution at binref.com or binref projects are crowd-sponsored by linear pages.
From shared hosting to custom private clouds, go to lunarpages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under a creative comments,
attribution, share a like, details or license.
