Episode: 422
Title: HPR0422: Comfortably Numblock'd 
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0422/hpr0422.mp3
Transcribed: 2025-10-07 20:14:30

---

Thank you very much.
Thank you very much.
Hi, my name is Gordon Sinclair, my handle on the IRC is Thistleweb. This HPR episode
is on the wonders of the keypad and the numlock function. Many people have no need for a numlock,
they don't use the keypad. For them, I mean this, this HPR is probably just not much use
to them really, but that's fine. There's other people who use, at any time they go to
enter a number, an account number, a phone number or something like that, their hand automatically
goes to the keypad. I am one of them. I don't know when I started doing it, I just remember
I've always seemed to have done that. So I expect that the only need to press a numlock
key once after I install an additional or after I install an operating system, regardless
of what it is. And then every time I reboot, I remember Windows does that, NOM does that,
KDE does that, I've not used Apple, I presume Apple does that as well. But some distributions,
some environments don't do that. Now, before I found out about numlock X, that was a deal
breaker for me. I do remember in the past trying installing a couple of distributions. I would
go to type in a number and look at this screen, there's nothing that's all right, okay, numlock,
I forgot to put that on, switch it on, the lights on and that's everything's fine. And then I would
go to enter a number again and nothing. And then it would occur to me, that's right, I rebooted,
didn't I? With updates and the new kernel or other rebooted. And the numlock didn't remember.
And that's really frustrating. If you don't know how it affects that, that really is a deal breaker.
And you just think that it's a great distribution other than that one little flaw. It's not really
a flaw, but I mean, that's the way it comes across, it's a fault, it's a flaw.
And that has been a deal breaker for me in the past, I've decided that I cannot live with this
distribution and need that function and I've wiped it and put something else on. Now, that was
before I found out a bit in numlock X, numlock X is already installed and configured
in a normal KDE and several other distributions and environments. If you're using one that
doesn't have it, well, you can add it and it adds that function in. So numlock X, it's usually,
I would expect you would find it in an everyday repo. It's an old MIT app. It's done, it's one of
these classics that are unique things that do one thing and do one thing well. numlock X,
all it does is it remembers the status of the numlock across reboots. That's all, there's nothing,
nothing else to it. That's nothing fancy. So it should be in the reflux. If it's not, you can
find it at freshmeat.net slash project slash numlock X. But installing it is not in itself enough.
You need to have it run when it boots in as well, when it boots up. Now, different environments
have their own ways of doing that. I happen to be in CrunchBang, which is an open box.
It's using an open box and the way to configure that is just add it to the autostart.sh file.
The open box reads when you log in, which is a hidden file inside your home folder and
slash doc and fig slash open box slash autostart.sh. The syntax should be pretty obvious by reading
the rest of the file. So it's just adding a couple of lines. I've got mine right at the bottom.
One is just that comment. The harsh space numlock X. And then below that is actually the
commander that runs as numlock X, space and push land. Or if you want to put it like that. I've
put all this in the show notes anyway. But once that's there and it's saved, it should
or you've done whatever steps you need to do to get it to autostart and whatever environment
you're using, I SWM or whatever. That way when you have your numlock on and your reboot,
it will remember next time to switch on when it logs in. So that's how it affects that little
air quotes fault. It's not a fault. It's just something that wasn't included in that environment.
So that's numlock X. The next part of this is actually it came from a blog post I found only
there's a couple of days ago. And I'll put the link in as well. The blog is penguinpeats.com slash
b2evo slash index dot php. So b2 evolution blog. Now I have found myself not often, but occasionally
in someone's house and they identify me as the IT guy. The guy that knows a bit computer,
really. So I suppose it's sort of fair enough. I don't know anywhere near as much stuff I'd like,
but I'm not too bad. And I'm certainly having my eyes above the people that are asking me.
So I found myself on the odd occasion, sitting at a computer trying to diagnose something.
It's invariably it's windows. And the mouse is so badly worn that it's you can't really use it.
It's not really controlling the pointer very well. You're going to pick it up and scroll,
pick it up, scroll, pick it up, scroll just to get the pointer to move a few centimeters at a time.
And no matter how much you try to clean it or whatever the mouse just refuses to do where it should.
And it's just really, really frustrating. And I kept thinking if only I could do something to
control the pointer with the keyboard. Well, this penguin piece blog gave me a command that
lets me do that. And that's not about to share with you. I've not actually tried them. Windows
presumably does work in Windows as the same, but in Linux it definitely works. The command is this,
it's control-out-nomlock. And that brings you in or out. You need to control-out-nomlock to switch
your keypad into this mode. And then control-out-nomlock to switch it back out of this mode again.
Now, when you do your control-out-nomlock, there will be a beep. When you're leaving it or
running it, there will be a beep telling you whether it's worked. Once you're in that mode,
the way to control it, as you'll notice, on the keyboard you've also got Arrows,
on 2, 4, 6 and 8. And that's your up-down left right. 1, 3, 7 and 9 are diagonal. They work as well.
0, or, yeah, 0, appears to be the right-click. Enter on the keyboard, enter some menu and backspace,
which is not on the keyboard, brings you back to the previous menu. Now, that seems to be,
doesn't seem to be that perfect. I think it depends on what application you're trying to control.
But at least being able to move the pointer over to hover over something, you should be able to find
a way to work with it. It's not, you shouldn't really need this function very often. And it's
different from keyboard shortcuts. It's keyboard shortcuts take you straight to a function of a
program, you know, control V or control C. They give you a specific function. This doesn't, this
will actually move the pointer with the keypad. That's really about it. Which is, as handy,
if you're working with a GUI and you don't know the screen, the any shortcuts to work with it,
but you somehow have to try and fix it. And all you've got is a GUI.
So, with these two tips, hopefully, people who have not, I've not even noticed that side of their keyboard,
may want to switch them non-lock key, non-lock on, start expanding their, their,
their use of the keyboard. And for people who need that, these functions, well, there you have it.
So, anyway, before I start, Ramline, I'll call, I'll call a day of that. And thanks for
for listening. My name is Gordon Sinclair, my handle on the IRC Thistle Web. If you want to contact
me via email, it's Thistle.webcast at googlemail.com. And until next time, goodbye.
