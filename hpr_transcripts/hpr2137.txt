Episode: 2137
Title: HPR2137: Pause All The Things, Sega Genesis
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2137/hpr2137.mp3
Transcribed: 2025-10-18 14:47:17

---

This is HPR episode 2,137 entitled, for all the things, Sega Genesis, it is hosted by
SIGFLOPS and in about 6 minutes long, the summary is, learn how to create a hard
weapon which for the Sega Genesis.
This episode of HPR is brought to you by an Honesthost.com.
Get 15% discount on all shared hosting with the offer code HPR15, that's HPR15.
Better web hosting that's Honest and Fair, at An Honesthost.com.
Hello everybody, this is SIGFLOPS and I will also notice the summary assembly and you're
listening to Hacker Public Radio.
This is going to be a real short one.
It's going to be about making a hardware pause switch for your Sega Genesis or a Mega Drive.
So what that is is the thing that we're going to do here is we're going to make a switch
that pauses the clock of the processors, both the Z80 and the 68000.
So I'll tell you just pretty much directly how that works.
This is going to be like a 50 minute, 50 second HPR piece.
So what I did was I've done a number of things, all of them didn't work.
I actually ended up blowing out one Sega.
I tried grounding certain things on the cartridge slot, like the data knowledge, the clock
itself, grounding the clock itself kind of works, but it corrupts.
And I suspect it corrupts because both you're passing the clock made instruction a lot
of the time.
And the registers, the internal registers of the 68000 processor are DRAM and get refreshed.
And so there's no clock there, they don't get refreshed and things become corrupted.
And so I looked at the pin out of the 68k and talked about it on Poit, this demo-seeing
group and someone was like, yeah, assert the bus request, then wait for a bus grant.
And then you have the bus to alter yourself.
So I misunderstood exactly what they said.
So I end up sending a bivolt to the bus grant, but that works beautifully.
It's not a bus request, wait for a bus grant or anything like that.
So yeah, just asserting bivolt to the bus grant pin on the 68000 processor, it's pretty
good.
I'm giving you some show notes here, let's see here, the top right is the big chip.
If you have a Sega Genesis model one, the earlier versions, the 68k processor comes
in this package.
And what you want to do is be mindful of pin 11, which is bus grant inverse.
That is, it's active low.
If you have a newer Sega Genesis like an M2, it's the 11th pin as well with the same
meaning.
What you do is you assert five volts to it.
And this is the tricky part.
I end up destroying one Sega, because current goes the other way, because the bus grant
is being asserted when we do DMA transfers and stuff like that, I assume.
It gets grounded out by the switch.
My switch has a little ground to it, which is an unusual switch to have.
But feeling a better switch, what I did was I put a diode between the switches output
and the bus grant pin.
And that way, current goes from the switch to the bus grant and does not go the opposite
way.
And that works beautifully.
So let me demonstrate it for you.
I have a Sonic the Hedgehog, I'll pause here.
So I pause it again, you can I'm pause it and pause it.
And why don't we wait until the beginning care and I'll just keep on doing that.
So it's, it passes the Z80 as well as the 68000.
It does not pause the clock to the BDP, the graphics chip, which is good.
So what I want to do in the future is make a button that advances a frame.
And to do that, I need a microcontroller, a microcontroller to watch the horizontal sink
and perform an on pause for the duration of that vertical trace.
And so yeah, I'm I'm looking at some I'm looking at some at Mel mega, I'm sorry, at Mel
tiny microcontrollers to use that.
So next episode, I'm going to that's going to be about the pause button or the pause switch
for the Sega Genesis.
Hopefully I will have worked out a frame advance button as well.
Thank you for listening everyone.
This one is kind of off the cop so no editing, I don't like editing, it's pretty boring.
So take care and enjoy the show notes and hack your Sega Genesis like there's no tomorrow.
Bye bye.
You've been listening to Hacker Public Radio at Hacker Public Radio dot org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out
how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the infonomicum computer club.
And it's part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on
the website or record a follow-up episode yourself.
Unless otherwise stated, today's show is released on the creative comments, attribution,
share a light 3.0 license.
