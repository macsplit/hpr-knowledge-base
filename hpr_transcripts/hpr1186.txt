Episode: 1186
Title: HPR1186: A plea and a Follow up
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1186/hpr1186.mp3
Transcribed: 2025-10-17 21:14:51

---

Hi everybody, Ken here with an update on how we're doing with the sonar project.
There are now 61 hours left.
The project has reached 33% of its funding, 6,674 dollars have been raised so far, which
is excellent.
So we're well capable of hitting the milestone if everybody listen to this show, press
his balls, goals and donate $5.
There's only been 173 funders so far.
I know this has been pimped on HPR, it's been pimped on the Linux link tech show, it's
been pimped on Linux basement, Linux outlaws and God knows how many other different podcasts
out there.
So it's not fair to say that you haven't heard about this, you have heard about this, you've
been putting that off, please go now and press donate.
Thank you very much.
Hi folks, David Whitman from St. Helens, Oregon, while I'm on the air here, if you're from
St. Helens or the surrounding area, you're a Linux user, open source user, you heard
this broadcast, good touch me on Google plus, love to get together, shoot the breeze,
have some coffees in that.
Hey I am looking here at the sonar project in the Google web page and it says the sonar
project is to build a Linux operating system focused on accessibility.
There are 1,000,000 people in the world with some type of disability.
You know why I think this project is worthy is because Jonathan is working to make a system
that people that are blind and have other disabilities can use to have a computer.
People are disadvantaged that have disabilities.
Their earning potential is almost always less than someone without.
If we can give them an operating system to use, perhaps they can get into the tech world
or at least just even have a better life.
So I've made a donation, in fact two donations to this project.
One thing I like about this project is Jonathan already knows what accessibility features
are needed.
He's an expert, he's a developer in his own right and he just needs some help to get this,
some other people who might know how to code up a little better than he does or can work
beyond the level that he is.
This takes a little bit of money and so giving $5 or whatever you can give to this project
will really make this happen.
And one thing about this is this project is giving its code upstream and it's going
to be able to be built into any computer operating system.
This is something that is really needed and I'm supporting it wholeheartedly.
Now about the thing of getting only $5,169 with five days left of a $20,000 goal, maybe
that's something the open source community is to talk about, about how to fund these projects
and that there are a lot of people that have extra cash that could fund this project.
Maybe we're not getting the word out correctly, so that's something we can talk about in
the future.
But right now this is our project, we're going to establish a beachhead with this, get
Jonathan some money, get things started and then we'll pick up from there.
Let me tell you that I'm looking forward to seeing this project develop and seeing some
happy faces when people are able to use this operating system where they wouldn't have
had the opportunity in the past.
They have been good talking to you and I love HPR and thank you to everyone who contributes
to this in every way and clear up to that lunar pages.
Thank you for participating, painting Jonathan and all you other people.
I got this to say in the end, go sonar, thank you.
So I wanted to do a little follow up from the show last week with Jonathan and just go
through some things that I've learned since then.
I figured out the bits of the installer that I kind of got lost in last week but I did
need to use my eyes to do it, I did need to look at the screen.
So if anybody is going to be using that installer through sonar and they want to be able to
configure their partitions, the part that I was getting wrong is that on that partition
there's a table up top and then the action buttons are down below and your arrow keys control
which cell of the table is highlighted and for a sighted person you'd never know that
was a table, it simply looks like a list and even if you arrow around it, it only ever
highlights an entire row, it never highlights just a cell.
So that never occurred to me that that was a table and not a list even though Orkan clearly
said it was a table.
So if you have to do that while you're in that table, you want to arrow all the way back
to the left to identify which row of the table you're in, which would tell you which piece
of the partition that you're on, whether it's the free space or something you've already
partitioned or something that was already partitioned when you got there.
And then depending on which row of that table you have highlighted, which cell you have
highlighted if you're using just the Orka version, you know, you can't see a screen or
you're not looking at a screen, depending on what row is highlighted, then the action
buttons become enabled or disabled, they'll be grayed out and you'll tap through and you'll
never get to the grayed out ones, you'll never know that there's an add or a change or
what not.
So that little bit of discovery is probably pretty helpful to get through there.
Once I realized that, then I was able to pretty much whip right through it.
And the other thing that was a little bit confusing was that when I was actually inside
the partition and was setting up a new partition, when it asks for the mount point, there's
a field there that you can type in, but it is also pre-populated with like a pull-down
menu and the option to just type what you want on there comes first.
So if you hit tab into the field, then it'll tell you it's just a field and I'll let
you type in and even after you've typed something, if you hit tab again, then it brings you
into the pull-down menu.
And for instance, I had just typed a slash for the root partition.
So when I hit tab again and it opened the pull-down menu, slash just happened to be coincidentally
enough.
A Linux installer knows that slash is the name of a root partition so it was there already.
So there's two ways to do it.
You can choose it from that pull-down menu or you could type something in there.
For instance, if I were to do a dual boot system with like a Windows computer and I might
resize the Windows partition because you can change a partition, it does let you do that.
I may want to not form at the Windows partition during the Linux install.
I may want to mount that partition in say slash home slash username slash Windows folder.
You know, every time you boot up that Linux partition, you'd have that Windows folder
would be sitting there and it would just, it would be inside your home partition, but
it would be that Windows drive.
So you can do that even though that's not in that pre-populated menu.
I'm sure there's a bunch of other things you can do, but that's just one thing that
I've done on occasion.
Another thing that I learned while I was going through a second time, and I tried to
play with it quite a bit, Orca, if you go into the settings for Orca, and this is weird.
This was very, very weird that it operates this way because you would think that you wouldn't
have to look at it to figure this stuff, but unless somebody told you or unless you looked
at it or unless you stumbled upon the right kind of combination, you'd never know.
Orca, when you open the preferences menu, it opens a dialog window, a secondary window,
and it has lots of tabs in there, and you get your Jonathan was walking me through that
a bit.
When you're in those tabs, you have the option to, okay, what you've done, which will
close the window, or cancel out of it, which will close the window, or apply it, which
will not close the window.
Now, I don't remember whether it was just when I hit apply, or if it was, when I cycled
through my open windows, one way or the other.
If you cycled through those open windows, when you get back to Orca, you will not be
in that dialog window, and when you try to open preferences, it will give you a message
saying that you already have a dialog window open, and you can't open a new one, and it
doesn't give you any choices.
It doesn't tell you how to get back to that dialog window, so you're kind of stuck with
a dialog window open that you can't access and an Orca window without any functionality
to it, because the functionality is that dialog window.
So for me, I figured out that the way to get through that was to use alt tab, but you
hold down alt, you just hold down alt and hit tab, and that opens, let you cycle through
your open windows with your arrow keys, as long as you keep holding alt, and if you cycle
to the Orca window, using the left and right arrow keys, then you hit down, it opens
a menu, kind of in that direction, it's a menu that's turned like 90 degrees to the
way you would expect to find a menu.
So you hit down from that main Orca window, and now you can cycle left and right between
your open Orca windows, let's probably already know that, I didn't know that, I'm not a
real big keyboard shortcut guy, but I'm going to probably try to be from now on because
I could see where it's real handy and real quick to cycle through that stuff.
So if you ever get stuck in that situation where you can't get back to your Orca window,
your Orca preferences window, at least on sonar, at least on Ubuntu and their Unity desktop,
it's hold down alt, tap the tab key, and then arrow left and right to your Orca window,
and then down arrow once will let you cycle left and right between your open Orca windows.
So that was how I was able to get through that.
The only other thing that I learned about it was that in the version of sonar that was
based on Ubuntu 1204, Orca was set up in such a way that it was a lot easier for me to
use as a guy who is not used to shortcut, keyboard shortcuts, and as a guy who's not used
to working without a screen, a lot of the settings were turned on that would probably annoy
the heck out of someone who knows what they're doing with Orca or knows what they're doing
around a keyboard.
But for me it was really helpful and I was actually able to get through some stuff.
The biggest thing was that it would give me audible feedback when I hit a key, whatever
key I hit it would tell me what key that was.
So when I, for instance, would go into the installer or open a program that took a while
to open, I would at least have the audible feedback that I had hit the Enter key and it
recognized it and now I was just waiting for it to do something.
And also, it might have been set up to speak a little bit slower if not than I did that
myself.
And I made it speak even slower than it was speaking on the podcast that Jonathan I recorded,
which was kind of funny because when we recorded that podcast that was about as slow as
I dared make it because I knew it was just crawling for him, but even I still had a hard
time understanding it.
But after recording that podcast and listening to it that way and then editing the podcast
and having heard it a second time, by the time the podcast published, it was even a little
slow for me.
So there's a pretty steep learning curve, I think, on that message speed.
For me, for a new, it was real helpful to have it slowed way down to begin with.
I think I had it at 50%, which I don't really know what that equates to in regards to normal
human speech speed.
But yeah, I could handle the Orca reader at about that speed.
Now I also have been playing around with some other screen readers over the weekend, not
even intentionally, but having come across a couple that sound better than Orca.
And it's real obvious why you would want something better than Orca and why Jonathan is
trying to fund this.
For instance, my, I got a Tom Tom GPS device and that thing has a text-to-speech engine
built into it and that thing sounds incredibly good compared to Orca.
You know, that's just something I was playing with over the weekend.
My wife's got a Windows computer and Windows has a screen reader built into it and that
sounds even better than the Tom Tom one.
You know, so there's definitely room for improvement there and it's definitely possible
we just need to get a person or some people who know what they're doing, you know, and
get them funded and that's, you know, I know that that's what a lot of this is being
meant to do.
And it's, you know, this is not funding a screen reader for the Sonar project.
This is funding a free software solution and improved screen reader to what's available
right now.
So it's something that will be upstreamed and will be downstreamed if it's successful.
That was all those of my follow-up impressions.
Please, if you haven't donated to the Sonar project, head on over to indiegogo.com slash
Sonar and, you know, throwing, throwing your five bucks or 20 bucks or whatever, you
feel like throwing in there.
A lot of people have donated quite a bit more than that.
Some people have donated so much that I was embarrassed at how little I donated, you
know, and I didn't think at the time that I donated a small amount.
So I was really happy to see that that some people are in it in a position to be more
generous than I am and they actually did that.
So, you know, if you're one of those people who's donated no matter what the amount, I
really want to thank you.
Personally, it's a good thing that you've done and it's a good thing that Jonathan's working
towards here.
It made me real happy to see the jump in donations after that first HBR show aired that was
really exciting to see and really heartwarming and touching.
So thanks to everybody.
That's it for me.
That's it for my follow-up.
Thank you very much for listening.
Thank you very much for helping out the Sonar project.
Please don't forget to contribute a show to Hacker Public Radio.
Hacker is getting short, and even if it wasn't, it's always short, so I help us out
too in that regard.
All right, thanks a lot and have a great day.
You have been listening to Hacker Public Radio or Hacker Public Radio.
We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by a HBR listener like yourself.
If you ever consider recording a podcast, then visit our website to find out how easy
it really is.
Hacker Public Radio was founded by the digital dog pound and the economical and computer
club.
HBR is funded by the binary revolution at binref.com, all binref projects are crowd-responsive
by linear pages.
From shared hosting to custom private clouds, go to lunarpages.com for all your hosting
needs.
On list otherwise stasis, today's show is released under a creative commons, attribution,
share a life, free dose of license.
