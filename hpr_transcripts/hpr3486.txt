Episode: 3486
Title: HPR3486: Unleash the true potential of GNU nano text editor
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3486/hpr3486.mp3
Transcribed: 2025-10-25 00:17:50

---

This is Haka Public Radio Episode 3486 for Monday the 13th of December 2021.
Today's show is entitled, Unleash the True Potential of GNU Unotext Editor and is part of
the series Lightway Taps. It is posted by Haker DeFoe and is about 1 minute long and
carries an explicit flag. The summary is turned into a new Unotext Editor into a fancy,
good-looking and powerful editor.
The show is called Unleash the True Potential of GNU Unotext Editor and it's submitted by Haker
DeFoe and it's read for you by Ken Fallon. Text editors are highly subjective and highly
opinionated commodities. Everyone is aware of the infamous rivalries between Emacs and the I
and Vim. Every single text editor has its own strengths and weaknesses. At the end of the day,
it's a question of your personal preferences and most on memory when it comes to default key
bindings. Both Emacs and Vim have a learning curve. Steepness of that curve depends on the
person's backgrounds and interests. Hey, but today I'm not here to talk about Emacs or Vim.
I'm here to talk about a simple, easy-to-use and almost ever-present text editor
called Gunnu Nano. So what exactly is this GNU Nano Text Editor? Well, according to the
documentation available on Gunnu Nano's website, link in the show notes, Gunnu Nano was designed
to be a free replacement for the Pico Text Editor, part of the pine email suite from the University
of Washington. It was aimed to quote, eliminate, emulate Pico as closely as reasonable and then
include extra functionality and quote, end quote. Pico and pine email suites are still around. So
what was the need to create Nano on the first place? The answer is license. Pico and pine email
suites nowadays are available on Berlin Apache 2.0 license, but that wasn't always wasn't the case
and the ambiguity in the original license terms of Pico Editor led to the creation of Nano.
It was first created in 1999 with the name TIP, an acronym for tip, isn't Pico.
By Chris Allerretta, the name has changed to Nano on the 10th of January 2000 to avoid conflicts
with the existing Unix utility tip. The name comes from the system of SI prefixes in which Nano is
1000 times greater than Pico. In February 2001, Nano became part of the GNU project.
By the way, if you want to know more about SI prefixes, I highly recommend you listen to
HPR episode 3453 engineering notation by Ken Thalam. Nano is really small footprint and is
relatively easy to use compared to EMEX, VIM and perhaps. This is the reason why you didn't
have to believe find it already installed on almost all GNU distributions. If you have every
used Nano before you might have noticed that it looks kind of boring. There are no line numbers
nor are nor there is any syntax highlighting and spell checking seems absent. But this is not true.
Nano has all these features and even some like reject searches, indentation, multiple buffers,
available as its disposal. Then why doesn't it come across as plain Jane?
The short answer is I don't honestly know. For some unknown obscure reason,
many of Nano coosfeet coo features are disabled by default. This results in Nano coming across
as plain Jane text editor that is uncool. And as I mentioned earlier, that's not true,
but worry not. It is so darn easy to unleash the true potential of Nano and make it shine.
Are you ready? Great. Let's do it together then.
First thing we need to do is create a file with the name does Nano RC in your dollar home directly
of all over case. Open your turnable emulator and run touch dollar capital H capital O capital M capital E
for such does Nano RC in ANORC. We'd also need to create a directory called Nano underscore backups
in our document direction capital N capital B. To do so run the following command
make their space dash P space dollar home for such documents for recession Nano underscore backups.
All of this will be in the show notes by the way. Next open that does Nano RC file and simply
paste the following content into it. And what follows is a load of set commands followed by an
include and a bind. So it will give you a flavor of what's happening. Set a blank set auto
and then set back up back up their bold text constants show cut from cursor indicator line numbers
magic minibar mouse show cursor software spanner as well trim blanks white spaces zap
multi buffer. And then that's basically it's set commands then underneath that the set
title color space balls lightweight and blue and then it goes through those. The include is
user share nano asterisk nano dot RC and then all the bind keys for example bind
carous like a roof of a house capital Q space exist space all and then the menu continues
you don't bind some and binds more. So anyway you'll have paste this from the show notes
back to the script you'll have to replace username in line for with your own username
and set the backup directory to slash home your username documents nano backups with your actual
username and then save this file wouldn't it be nice if colors in nano were different from
the normal user and root user yes for sure to do so create an empty nano RC file in the root
directory then soon we touch slash root slash dot nano RC next create the backup directory in
the roots document directory make there and command for that open a slash root slash nano RC file
and paste the contents save the changes I'm not going to go through all that it's in the show notes
and what we have just done is we have enabled some useful features of nano and changed the default
key bindings to more familiar ones like control c for copying control x for cutting control v for
pasting add a bunch of other key combinations we've also enabled automatic backing up
of documents backup say it will be saved to the user's document nano directory spell checker
is enabled in nano v is configuration but to utilize it you have to install a spell and
an a spell directory from your package manager kudos we've turned the timet glue nano into a powerful
wilderness try this configuration in the possible leave your feedback a word of warning package
maintainers often ship stripped down versions of nano so one of these features might not be present
in your installation and in that case nano will throw some errors and refuse to start you have two
choices in that scenario first disable a feature by deleting the corresponding line from the dot
nano RC file your second option is to download the nano source call and compile it yourself with
all the features intact if I were you I'd go with the second option as compiling nano is really
simple and straightforward only extra packages that you need are lib curses dash dev and
lib magic dash dev I leave you guys with a quote from some wise man good things come in small packages
you've been listening to hecker public radio at heckerpublicradio.org today's show was
contributed by an hbr listener like yourself if you ever thought of recording a podcast then click
on our contributing to find out how easy it really is hosting for hbr this kindly provided by
an honest host dot com the internet archive and our sync dot net unless otherwise stated today's
show is released under a creative comments attribution share like lead us all lessons
