Episode: 293
Title: HPR0293: Illustrious Programmer Ep 0
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0293/hpr0293.mp3
Transcribed: 2025-10-07 15:42:40

---

Ummm...
Hello and welcome to the illustrious programmer, a learning how to program podcast brought to you by hacker public radio.
This is the Alchemantist and I will be your host for the illustrious programmer.
In today's episode of the illustrious programmer, we're going to talk a little bit about the purpose of this and what the illustrious programmer is all about.
We're titling this episode 0 and 0 in programming speak is the same as number 1 and regular human speak, 0 is where the numbers start.
So the intended audience for this, if you haven't determined yet, is for the complete neo-fight programmer, the person who has little or no programming experience.
And the intended purpose is to take that person from complete and utter non-understanding of programming to a good understanding of programming through Python.
The resources needed for this podcast to follow along, you're going to need the book Python for software design, subtitle how to think like a computer scientist by Alan B.
This book is licensed under the GNU free document license.
Now for those of you who may be free, familiar with the GNU general public license, the GPL, this is not necessarily a copyright license, so much as a copy left license.
Alan B. Downey has released the book on his website greentpress.com and you'll be able to find a link to this in the show notes.
And if you scroll down to the bottom of the page, you'll see that earlier versions of this book are available in electronic formats under the GNU free document license.
You can also purchase a copy of the book, which if you enjoy this podcast and you enjoy all of the information that we cover, I would strongly suggest that you purchase the book for your own reference and to support the author because it is tremendously valuable book.
It's not going to be released according to the website until March of 2009, but once that book becomes available, you'll be able to purchase that and it's a very, very valuable text to have around.
The next thing that you're going to need is a text editor of some kind.
Now, I really enjoy using the text editor, quasi text editor, Skype.
That's SC, I, T, E, and L, leave a link to that in the show notes as well.
But if you want to, you can just use any kind of plain old text editor, you don't buy in Linux or any of those kinds of things would work fine in the Linux environment.
If you're stuck in Windows, you can run notepad or wordpad.
Now, if you're saving this in Windows, if you're doing this in Windows, you're going to need to be very, very careful because if you're saving a .py file, such as a Python file, you need to encapsulate the file name and quotation marks.
So, for example, you're going to save my document.pypy, so it looked like this, quote, my.py end quote.
And what that tells Microsoft Windows is it don't append any kind of .txt or .doc to the end of this, it's just .py, that's what it's supposed to be.
You also need a copy of Python. If you're downloading it for Windows, you're probably going to download 2.6.1 or if you're in a Linux distribution, you might have 2.5.2 or something similar to that.
Finally, this is going to sound obvious, but this podcast is designed to be overly obvious. You're going to need access to a computer where you can modify some of the files and save things to that computer and install things.
So, this is probably not the ideal thing for you to be doing on the library computer or the computers at the school computer lab. You want to have access to a computer that you can modify.
Skills required for following along with this podcast are pretty minimal. According to the author of the text for this course, the single most important skill for a computer scientist is problem solving.
Problem solving means the ability to formulate problems think creatively about solutions and express a solution clearly and accurately. As it turns out, the process of learning to program is an excellent opportunity to practice problem solving skills.
Knowing that and knowing what's coming up in the text, it's going to be very helpful to you to have some understanding of mathematics principles such as algebra, geometry, and trigonometry.
I will try and help you through those areas if you're not totally in full comprehension of them, but I make no guarantees if you've not taken those courses or you've totally forgotten those courses, you might want to spend some time refreshing as well as you're going along.
Now, that's not to say that if you don't understand math, you're going to be totally out of luck on this podcast, but you might find some of the assignments a little bit difficult.
Now, what should you expect in these podcasts? You're going to have the opportunity to complete various assignments with each podcast to do is to learn.
There's no sense in listening to these podcasts and just, you know, thinking, oh, while I listen to the podcast, I know how to program now.
It's kind of like that classic line from the Matrix where Keanu Reeves goes, I know kung fu. It's kind of a classic line because it's absurd. You know, he had a probe stuck in the back of his head and all of a sudden he knows kung fu.
You will be invited to give me feedback. I'm looking very much forward to getting feedback, especially on how I can make my podcast better or what mistakes I might have made or if I made something sound vague or didn't explain something fully.
My email address is yelchimantis at yelchimantis.com. So that is J-E-L-K-I-M-A-N-T-I-S at yelchimantis.com. So there you go.
We're going to be going through Alan Downey's excellent book and once we're done with that, we'll move on to other topics.
Probably look at some of the WX widgets, kinds of things and do some tutorials from beginning to end with that.
And then depending on feedback, we might do some other things depending on what everybody wants to do.
Now onto today's assignment.
If you're running a Linux machine, great. You probably already have Python. And you can check by typing Python in a terminal.
So you open up a terminal and you type Py-T-H-O-N space, hyphen hyphen version. And if it pops up and says something like 2.5 or 2.6 or something like that, then you're good to go.
If it says program not found, then you need to check your repositories and install Python.
If you're running Windows, you're probably going to know if you've installed Python because it does not come standard on any Windows system that I've come across.
And if you're listening to this podcast, you've not installed Python yet.
So go to Python.org and download the latest copy for your system. Install it and drop to the command prompt and type Python.
If something interesting comes up and says, oh, now you're in Python, then there you go.
I think there's a version command for XP as well, but I don't know if it's like Python slash version or maybe slash V or hyphen hyphen version.
I don't know what the implementation is on XP.
And finally, your math assignment. This is just a little kind of get you thinking about algebra again if you haven't done that for a while.
But here's an equation. X squared equals 2x. Now, this is one of those things. If you've come across it already and you already know it, you're going to say, oh, that's so easy.
And if you've never come across it, it's kind of a gotcha kind of a thing. It's a little interesting.
So good luck. And we look forward to seeing you on the next illustrious program.
Thank you for listening to H.P.R. sponsored by Carol.net. So head on over to C.A.R.O.N.C. for all of us in need.
Thanks for watching.
You
