Episode: 3899
Title: HPR3899: Repair corrupt video files for free with untruc
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3899/hpr3899.mp3
Transcribed: 2025-10-25 07:40:58

---

This is Hacker Public Radio Episode 3899 for Thursday the 13th of July 2023.
Today's show is entitled Repair Corrupt Video Files for Free with Untrack.
It is hosted by Paul Quirk and is about five minutes long.
It carries a clean flag.
The summary is, this is how I fixed corrupt video files from my dash cam after an accident.
Today's show is licensed under a Creative Commons Attribution, non-commercial share
a like-three unpertied license.
Hello good listener of Hacker Public Radio.
My name is Paul Quirk and today I will be your host.
The topic I have chosen for this episode is on how I was able to repair a corrupt video
file for free using open source software.
So the unexpected happened.
I was involved in an automobile accident.
Fortunately nobody was hurt.
I was driving in the left lane on a four lane road following another vehicle.
When another driver decided to move from the right lane into my lane but apparently misjudged
as the rear wheel of their car clipped my front bumper,
sending them into what I can only describe as a self-inflicted pit maneuver.
In shock I called 911 and checked to see if the other driver was okay.
The police arrived, made the accident scene safe, did their investigation,
and EMS made sure everybody was unentered.
When I got home I wanted to see my dash cam footage to see if there is anything I could have
done differently as it is my goal to avoid accidents wherever possible.
It also occurred to me that I could have been involved in some sort of accident scam
that didn't go as planned so having a copy of the dash cam footage could be useful later on.
There is also the possibility that the other driver could lie about what had happened.
In which case the video file would be able to prove who was that fault.
I put the dash cam in my truck in 2018 and never touched it over the past five years.
I soon came to realize that half of the video files stored on the micro SD card
did not work and the time and date was wrong on the ones that did.
As luck would have it, the video file that contained the footage of the accident
was one of the files that was corrupt.
Each file had a file size, but something about the video file was corrupt or missing
so I could not watch it.
I did some research using the regular search engines and came across both downloadable software
and online services that promised to repair damaged video files.
The ones that appeared to work asked for a good video file from the same camera,
but they only showed me a preview of the results.
If I wanted to save a copy of the repaired video file,
I would have to either pay for a premium version of the software
or pay to download it from the web service.
What I had noticed during my investigation was that all of this software
from different companies appeared to work in exactly the same way
and none of them were from any of the mainstream data recovery companies.
Each one seemed like a different interface to the same core.
So I changed my search parameters.
I focused on open source and search specifically for Linux solutions.
This is how I came to discover the core program that was likely doing the actual work
was an open source program named Untruck, which is licensed under the Genoube General Public
License Version 2.0. What this program seems to do is it compares the broken video file with the
good one and then copies what it needs from the good video file to fix the broken one.
Now if you're running Windows, using this software is very easy.
Simply select either the 32-bit or 64-bit version under Assets to download.
And then when installing it, Windows will complain about installing software from unknown sources.
But if you followed the links that I provided here in the show notes,
you will see the source code for yourself and you could compile it.
I didn't bother to do this, as this is a project that's been on GitHub for a few years now,
so I trust it, and so I told Windows to go ahead and install it anyway.
Then when you run the program, it will ask for a broken video file and a working video file.
It will then spit out some air codes, but it should save your fixed video in the same directory as
the other video files with underscore fixed-dyn appended to the file name. At least it did that for me.
I can't guarantee you this will work for you, but I think it's certainly worth a shot.
And if you're running Arch Linux, like I do on my primary computer, I've also included a link
to that in the show notes. This really demonstrates the value of open source software,
which is why instead of paying a company that wrote a program or created a web service that may
be using open source software without giving any credit, I will be sending my money to the people
who actually developed the open source code that makes all of our computers much more useful.
In this case, it's Alexander Steinkop and Fred Rico Ponceo. I hope I didn't murder that.
I encourage everyone to support open source software developers if you can. Also, be sure to check
your dashcam every once in a while. Once every five years, probably isn't a good idea. Thank you for
listening. You have been listening to Hacker Public Radio at Hacker Public Radio does work.
Today's show was contributed by a HBR listener like yourself. If you ever thought of recording
broadcast, you click on our contribute link to find out how easy it really is.
Hosting for HBR has been kindly provided by an honesthost.com, the internet archive and our
things.net. On this otherwise status, today's show is released on their creative commons,
Attribution 4.0 International License.
