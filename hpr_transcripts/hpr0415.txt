Episode: 415
Title: HPR0415: Demo or Bust 2010 Part 2
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0415/hpr0415.mp3
Transcribed: 2025-10-07 20:08:32

---

Music
The time is 8.30 or listening to WALRT word radio the time is once again for Demo or
Bust 2010.
The time is 8.30 or listening to WALRT word radio the time is once again for Demo or
Bust 2010.
The time is 8.30 or listening to WALRT word radio the time is once again for
Demo or Bust 2010.
The time is 8.30 or listening to WALRT word radio the time is once again for
Demo or Bust 2010.
The time is 8.30 or listening to WALRT word radio the time is once again for
Demo or Bust 2010.
The time is 8.30 or listening to WALRT word radio the time is once again for
Demo or Bust 2010.
The time is 8.30 or listening to WALRT word radio the time is 8.30 or listening to WALRT word radio the time is once again for
Demo or Bust 2010.
Hi everyone my name is Six Flop this is episode two of Demo or Bust 2010, a program
narrating the construction of a demo and this episode we're not going to have too much
content regarding that specifically because it turns out I'm a complete
get right and I did something that you're really not supposed to do.
I was going to talk about this track I've been working on for a while but I
typed RM-RF space asterisk in my root directory as root so yeah that's gone.
I mean I had a backup from four months ago so I haven't lost that much of that
much much work right but I was working on a couple of projects in the past four
months but they're getting kind of crafty right so I'm kind of seeing it as an
opportunity to start over again and so I'm going to start over again with my
tracker it was text old the one I had this one is going to be graphical so I'm going to probably
touch up my GUI a little bit and the theme music that you heard we actually
have theme music this episode and I'm thinking we should keep this theme music
because I really like this song maybe if you change it but this is actually from a
demo from 1998 I believe it was from Abduction Party I was released the
the pout address on that is www.pout.net-pro.php
question mark which equals 11550 the pout idea is 11550 and it's a really
cute demo you should watch it by all means excuse me it's a
doth demo so you can watch it in doth box if you're using Linux and whatnot
this particular episode we are going to be talking a lot about soft synths
because the the project that I kind of was working on I'm sort of complete with
it is software synthesizer for a friend's demo and this is a 4k and the
synthesizer is about about 1k so let me play a clip of that it's not released yet
this is for 2010 so I can only play like a few seconds because otherwise it
would kind of be releasing it right so let me let me play that for you
software synthesizers what is a software synthesizer well well
software synthesizers is the bloody art well not the literal bloody art at
least I would hope not the literal bloody art of writing programs that
generate the music by not calling a whole bunch of API calls or anything
like that by pushing bytes out to the speaker and it's kind of pure
and they're kind of fun to write to be honest with you if you're at all
interested in this I recommend that you read the source code to one
particular synthesizer that kind of stands out for me just in its simplicity
and it's how easy it is to read the P out ID on this is 18347 the URL is
www.pout.net slashprod.php question mark which equals 18347
and the synthesizer is by Juby this is a 64k for a bunch of different
platforms you can compile it on the BSD's or Linux or macOS or anything
anything you really want to that has OpenGL and see pretty much
and fortunately the package that they're releasing has the synthesizer
separated in a separate directory and there's a separate program
there's a make file if you just want to run it really quick and that will
dump to foo and foo being the raw sound of it there is a play dodge which
you can look at which would give you directions on how to convert that to a
file should that be what you want to do and let me play the output that of
that for you real quick so this is a Juby soft synth from a demo called
Origami
now how is that how what what is the song made of and well the song is made out
of very basic things if you look at the source code for instance you have files
like oscillator dot h there a lot of h files this one c file you have
silencer dot h filter dot h envelope dot h the lay dot h it's it's really simple
you have a synchronous or some sort that will send notes in proper time to
oscillators and these oscillators output assign wave or buzz wave or noise
for drums or something like that and then most of the time this output is
then multiplied by an envelope which is also triggered by the
sequencer so you have a so you have a tone that comes from your oscillator
and this tone has a melody to it and the sequencer has a trigger for every note
and the trigger starts the the proper phase for an envelope filter so you have
from zero to one say what and then you multiply that by the output of the oscillator
so you have I don't know if I don't know if my singing works too well for that
and so like that's the basic idea and say you wanted to put that
through a cutoff filter that is modulating from a low cutoff to a high cutoff
for instance so you have and that's it it's the construction of these
these these simple ideas and as long as you call an oscillator repeatedly for
every sample and you have some sort of time information that is being
incremented or something like that that you can produce a wave from and maybe
this sequencer is using that time information to send different events to
oscillators and envelope generators and and why not that's it and it's the combination
of these things which is which is really cool I'm going to play let me play a
software synthesizer that I wrote and this one is actually using a sample it's using
a 64k drum loop it's kind of a drum and bassy sort of thing and it's with the
any sort of drum and bassy sort of thing you have to have the almond break it's
just like a law and so I got this I got the the sample down to about 40k by
using Delta modulation instead of PCM and then compressing that I got
down to like 30 bytes or something like that so the synthesizer is written
within the compression ratio of the sample and there's totally enough room for a
demo too off of that as well so this is one of mine and we'll be right back
and then we'll be right back and we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back
and then we'll be right back and then we'll be right back and then we'll be right back
Okay, now how this one was constructed or how this one plays, rather, is you have a drum loop
that's my imitation of the drum loop and you have a sequencer and this
sequencer controls on the drum loop particular bits of where the sample is in
the drum loop and it zores these bits together it says zore bits 5 and zore
bits 12 and that way you get sort of a binary sort of rhythm from it and that's
for a lot of the cutty off sort of sort of effects come from and if you have
a repeating portion of the sample that's small enough you get kind of a flange
noise and that's that's really present the other technique that is in there is
we have the sample gets played a portion of it a variable sized portion of it
this variable sized again controlled by a sequencer within the software
and code that gets played over and over again and its position in time gets
incremented at a variable speed again controlled by the sequencer creating kind
of a sort of time stretch sort of sound if maybe you're more familiar with
hearing voices that go like this that sort of time stretch and that's for the
beginning for instance comes from and in addition to that there is a sine wave
oscillator that is multiplied by an envelope and then that is passed through
residence filter and that's pretty much all there is to that that synthesizer now
let me play another synthesizer this is by my friend Gargai this one is from a
demo called Neuron and this is a very small synthesizer the source code for
this one let me tell you the where you can actually find the source code for
this one I don't know quite off hand but once we get back I will have that
information for you so we'll be right back and I hope you enjoyed this one it's
a real short but it's pretty cool
okay welcome back kids I do have a slight correction I had mentioned before this
synth I had mentioned that it's when I said sine wave I meant to say buzz wave
so corrections and no blasphemies or anything like that right the synth that
you just heard you can find the source code to the address for this is HTTP
colon slash slash g-a-r-g-a-j dot um l-a-u-t dot h-u slash t-e-m-p slash s-y-n-t-h
underscore dot c-p-p that is gargai dot omelotes dot h-u slash temp slash synth dot
c-p-p and this I don't know the type of song that we're going to get to next
we're after the song that we're going to play next we're going to get into our
main feature of the program which I'll describe in a second here this next
song is off of a 64k but I don't know the details of its construction but if
you want to watch this demo it's by a group called trash I'm sorry the name of
the the demo is called trash by a group called I'm not design the p-out ID for
this one is 3 1 0 0 4 and gargai did the music for this one to the music is
called Grimschfier and we'll be right back after this with a pretty lead
interview with the polaris of northern dragons and I hope you enjoy
c-c-c-c-c-c-c
all right with me is polaris of the northern dragons how are you doing
polaris? he's a stopping my Minneapolis kind of my hometown for personal
reasons and we were just talking about before we started recording here we're
just talking about how the northern dragons well you first of all what is the
northern dragons just for you? well the northern dragons is a demo sing group
yeah it was founded officially with name on the 12th of January of 2001 okay and it
was founded in my hometown Olympic in Manitoba in Canada and with two other
people a hawk or Jay who traveled to assembly in August of 2001 for our
first competition was he the only member going to the assembly for your first
competition? he was the only member so what happened was Jay and I went overseas
to assembly and that's how the northern dragons got its first official
production at a competition there was one other member who wrote the music
for our production did a very very nice job unfortunately the graphics and the
rest were far too ambitious as anyone's first sort of demo project is you
have great dreams and at the time DirectX 8 was just coming out now we on top of
writing our first demo engine ported it to DirectX 8 in the midst of our
development stream it was it was pretty crazy to put it together so it was
overly ambitious that was fine it got us a taste of a party we didn't
technically I think what ended up happening with our production was I mean it
was unfinished for one thing yeah so we ended up just blasting it right I
think we had some lame thing in there at the tail end which said hey we love all
the demo seniors we didn't finish this but we came a gazillion miles and we
wanted to you know put our hat in the bucket so to speak and they're
raging applause when the big screen right you know so you know at the
larger European parties I wasn't aware that jury hasn't jury hasn't I wasn't
aware that particular ones don't make it to the big screen I figured most
North American parties like especially block party with Radman Jason Scott
yeah are you know the North American scene the sort of smaller you know
fledgling still growing activity right you know one that has had the
fits and starts right has been in a situation where you know they're sitting
hey you know we're trying there's a lot of people that are developing groups
for the first time so they want people to get that thing they want to get
people to get that excitement about having a production on the screen so
they'll turn to include more and there's less productions right I mean there
were 80 demos or 100 demos in 2001 that went into the assembly so to have of
viewing of 80 to 100 demos is completely impossible yeah that takes a long
a long time yeah to do the screening absolutely so if you are you were I'm
out of curiosity for assembly are you aware that your demos gonna be shown are
you not aware or have to wait and tell what happened during that time and I can't
speak about how it has been since because I haven't attended any assembly
since but what happened during assembly 2001 was actually published a list of
the demos that made it for the big screen and they had this post you know are
you angry that your demo didn't make it you know talk to us you know we'll tell
you why type of thing right so we weren't angry we knew it was unfinished it
was you know not screen worthy at the time but it gave us our start and the
following year we we sort of went through this identity crisis of scale like
well we obviously can't travel we have great friends now in Finland and people
that can join us and participate with us in this network do we create another
production or not and what will we make yeah and we ended up we seen a somewhat
less but more ambitious because we decided to do a 4k yeah which which
naively you go well hey it's 4k right exactly how can you know how how hard can
it possibly be right you know I mean you've only got 4k yeah and so we really
something that was and it was sort of the dawn of 4k is becoming like the new
interesting like the new demo right yeah because 4k's now are far more sophisticated
and ambitious it's 4k's now it seems to me have reached the quality of 60
4k's yeah exactly exactly pretty freaky and 64k's are the new demo right yeah so
so at the time you know some 4k's were butterflies flying across the screen that
was it you know the music was was uncommon or if present was probably
mini music right yeah so synthesized music was not something that was really
happening in 4k seems to be less currently that seems to be the what's
involved is to have some sort of software synthesizer that the demo group has
written for it or something like that it seems that's the most popular I don't
know like maybe it's not you have more experience of demos than I do but it
seems like any given 4k by typically now because
while you may have great output dependent upon having a fantastic sound card
yeah right isn't standard enough and you have no guarantee of where your
standard doesn't sound so nice yeah like what you what you're guaranteed among
if you're using the soft synths present within the OS you're pretty much got
you know unless you're going for that specific feel for some reason then
there's other things like stealing sounds out of direct decks there's GM
DLS which is has all your mini sounds within wave format you know local to
the OS yeah and then you can do the old trick which would happen back in the
Dost days when you used to dump your well in back in the Dost days with like
graphics ultrasound or what have you if you wanted to have you know your your
wave fonts for lack of better term you would dump the data out of the
wave tables of the sound card so you would access the sound of of the trumpet
or this without or the other thing and you would then alter the buffer of
data to whatever you wanted to be and use that as a basis right sort of like a
starting point and do your own sound synthesis that way and get your sound
fonts basically yeah so it's no different but now it's part of direct decks and
the direct dot you know direct audio package right oh I see so this is mind I
mind you I mostly write stuff from Linux right yeah so it's a part of direct
decks a lot of these sound glist if you will a lot more portable among combo
machines right well you know you you with the 4k stuff and I've talked about it
before having found it you know in 4k at underground that right yeah which you
know we'll get back on track because it's been you know there's some cobwebs
that need dusting and some some some ladies and gentlemen that was HTTP colon
flash slash uh in 4k dot underground dot net yeah you and the he are g-r-o-u-n-d
g-r-u-n-d you and you and you underground if you type in 4k and Google just I
am 4k you will find a link to it just like that so and and simple as that and
it's like the only portal dedicated to 4k infrared
element yeah and we have had community participation and we'll we'll make it
into some forms and stuff there as well I think we'll probably make it in the
invitation only or you know ask us it's not that we want to be exclusive but
we're getting spammed to death so probably shut the doors on it just to have it
as a you know for the people that is meant for right you know and anyone else you
know we may give a few access or something like that so something so this is a
non-line community of people that um like to develop 4k demos now have you as in
this community like have you released anything for in 4k is there a in 4k is
more general than that well I've written several 4k's or been involved with
the creation of several 4k's yeah and in 4k first came out from a talk I gave a
pilgrimage and one of the things I wanted to give people that was a persistent
resource that they could go to so I created a 50-meg ISO image and I you know
burned it to these business cards I CD-ROMs that were you know for people that
wanted to include you know media presentation stuff on the business card
yeah literally was like a disco smaller than usual that had been cut yeah
they're pretty neat yeah but I think it had a capacity of 100 you know
mag or something and 50 was perfect right so yeah created an image and I say
it burned it gave him out and I don't know how it happened with tonic from top
which is a demo group that I'm also somewhat involved with very
unactively but I'm on the members list and wait T.A. T.A. T.A. T.A. T.A. T.A. T.A. T.A.
yeah yeah I know I know so that's pretty cool tonic I can yeah okay so yeah I
suppose I'm an earth American in a in a finished group technically yeah I'll
the internet right exactly well the northern dragons will exist without the
internet's realized um after having traveled to Finland how do you continue on
right well we're an earth American group at the time pilgrimage didn't exist
right as a North American demo of party uh was named before
name was before pilgrimage yeah and the pilgrimage didn't exist yeah so what
happened was Nate occurred three times I believe albeit that was not I wouldn't
say before my time I was a fan of the demolishing at the time yeah but
being a kid growing up in the paraphraries I didn't have the resources at the time
to travel to Nate which would have been lovely but it just wasn't possible
and and I certainly could have convinced my if I had any capacity of explaining
what it meant to my parents I might have had a chance
of going but you know trying to explain these things to my parents my parents
can't even explain what I do for my job much will say I do for my hobbies
right so yeah it's difficult to explain to the public you know three
years ago it was easier um and and even now like trying to explain to a
non-technical person right when I I've got family here I'm just being a family
um you know doing some driving you know and you know chatting and talking
about things like okay so what do you have going on tomorrow night well I'm
gonna be talking about the demo scene well what's that and and and you know
two and a half hours later doing a long drive afterwards you can say okay so
you got it no I say admitted that they think it
yeah well your family right you can you can say those things so
but you know the so the internet was an active
part of the the birth of the northern dragons because
we consciously decided okay we need to to go further right we got another
member syntax uh who's participated with us earlier on then the birth of his
daughter sort of took him away for a while and he hasn't sort of come back will he
hope he will soon um and he's fantastic he's sort of a bit of a transplant
because he's actually from the UK and immigrated to to Canada and he's now a
Canadian citizen um and and with him he knows of assembly he knows of these
events right having the the sort of a European upbringing right the
demo scenes on form to him the fact that he found the
demo scene active in his backyard in Winnipeg, Manitoba was
you know astonishing right so he was very happy to join us
and and become you know one of our members and he's we've co-authored articles
for for web scenes together like who we which we were involved in in the past
yeah and and so on and so he pulled him in and then
ojuice was still around at the time and we did a marketing campaign for
Occupy better term and we went to every single
senior that had the word Canada in his uh in his profile and we
spam them yeah and that's how we got
barzul for sure barzul came in because he had a profile on ojuice and he
joined us we adopted uh his buddy Patrick Blacklight
as well so Blacklight was a friend of barzul's i'm not
and he came on aboard as well and Guybrush I believe came in through that uh
we also had Patrick Groove that had joined us for a while there but then
left the scene entirely for a while um and we also had
Estec and Estec was actually involved with us uh then decided to
we had a bit of a breakup and then uh then uh coming to terms with it uh he
decided to found his own group uh which which we were
cool with but he started was trying to keep a foot in both of our worlds
and at the time the northern dragons was still
very ferocious in his upbringing right you know we were trying to become a
force to be reckoned with right and everything was uphill
you know our developing demo engines were very protective of our technology
trying to get four k's and trying out to in some ways
really compete with the european scene right on their on their own terms
yeah um and then afterwards you know so we sort of
we got kind of ticked off because you know a question of
intellectual property right and and and use of our code his code
these things had come up and we sort of had this this sense of
you know we're cool with whatever as long as you don't try to like take
this task with our own tech right um and and then we just sort of like
i don't know we just came to age when developing the scene became more
important than anything else right and so you know we thought about
and and we're happy to collaborate with them right we're happy to collaborate
with other groups and we do collaborate with other groups very
openly um so you see in a lot of things with um
explosive and the northern dragons for example uh in part because of
a guy Russian and a black pond mean in the same
location as Seattle right a lot of things with explosives yeah xplc
okay what is what is that uh that is a i believe originally a spanish
group that has uh some americans uh in that group
oh so i see yeah so uh as far as the conflict with
with ashtag it seems to me that ashtag has had written some tools
he split sort of well we had other tools no actually
anything that he wrote he owns okay we would never ever pretend to have any claim
to it yeah right um i think our concern was him using
things that that weren't his that we had other
members that had written things you know uh especially
a gargantuan amount of code that i wrote right just ridiculous
dreams of code right yeah and so we were we were concerned
about that and and he re-implemented a lot of the same ideas that we had
right he just wrote it all himself so he just debates zone
right um same idea as the same you know reproducing the same effects
yeah so that's it's just uh for for audience here that seems to be a little
a lot of uh seems to be common among demo uh groups is there's a strong
motivation to have your own stuff if you like if someone releases a demo
tool for instance if you use that tool it seems to me that that would be
something that is frown frown down upon to a certain extent i mean if the
tool is you is so easy to create a demo and it's so
obvious that this piece this group is used this tool
well i think there's a couple reasons for it right like
the demo scene is motivated by an intense need to
get satisfaction about hacking for aqua literature pushing the machine
past its supposed limits right now it has evolved over time right there was
a time doing any kind of demo effect was pushing the
machine past its limits right you know uh fake color modes
were we're we're important in commonplace right uh how do you get more
color showing on the screen than you expected uh higher resolution tricks
right um you know the the supposed x mode right pushing
your number of pages you have smooth scrolling
all of these things were were technologies that people were you know if they
figured out how to how to do it they're kind of protective about how they
did it and the whole game was having that wow factor like
wow how the hell did you ever do that that's the reason why you see
demos and and productions that say i have x number of
faces on this polygon you know on this on this object pardon me
uh people are shitting themselves going holy shit
yeah or the numbers right yeah exactly that many sprays
so like a lot of limitations for like for like the Nintendo for instance you
can't have eight sprites per uh scan line so that's a limitation but the
hacks around this their hacks are on like the the Commodore 64 not having a
border and in other various things or even just causing your VGA
a line to move as you want to move the screen down
yeah to create a wobbling effect right yeah the wobbly sort of
sort of effect yeah so there was a lot of of you know kind of
protection you know being protective about it at first right
and then what i think happened there is the people that really wanted to push
the limits the machine to a degree started focusing
to it you know to a portion on the on the four case
and the and the 64 case yeah because things started to to shift where
productions started also have an aesthetic and artistic you know quality to them
right and and also started to matter not only
what you were you know saying right no not only how you were saying it but what
you were saying right so there was a real drive to have content
whereas before you know hey you know you had a roto
zoomer with some naked tits on it or something you know that was that was the
you know the type of artwork uh that was common in the scene
yeah uh now you know it's still kind of funny like on
piano the the responses to anything with boobs
the boobs oh yeah all three of them party moisture the voting system is named
boobs right and that's what's the reason why i mentioned it you know it's
uh because and i think the dragon sort of got frustrated with that at a
certain point because we sort of thought okay well our
production didn't rank well why didn't it well
it should have well next time we should have
somebody holding you know finlandia vodka you
know naked you know and then we definitely get it right and
and i think that was part of the joke that we had with with evo
which was a four-cal kill by production uh as a tip to the hat to the Linux
community uh which was a penguin that went down uh so that was that was a tip
to the hat of the Linux community of course and in fact we have a we do have
a Linux version of that production i don't think it was ever released because
there was some flaw that we had that we just didn't want to
didn't spend time fixing up but we do have the graphics
running for that production in Linux and later on i believe you released a
wild sort of uh the same thing
yeah it was funny about that was uh barzoo had this great
claymation system going on in cinema 40 that he had designed this claymation
module or something yeah but the problem was he only had a p3 450 at the time
right so he did not have the capacity to render it so the northern dragons basically
became this distributed render farm where we kept all of our machines up
you know running this this client in order to you know do all the
computation that we had and and what was funny about it was
the time we were running our own server for hosting our files
yeah and for hosting in our uh concurrent version system because we were
running the CVS at the time we're now using subversion
yeah CVS not so much i don't like CVS much i mean it's that's a whole
at the time CVS was excellent for us yeah right and because we had nothing before
that i think we were an e-group which was bought by Yahoo and so you know we had
a Yahoo e-group which had like 20 mega files or something ridiculous it's
small yeah we bought professional hosting which had a hundred mega
the time you know which was some amount of coin because he doesn't just
going back away so the northern dragons network if you will
seems to me to be a repository and maybe a little store how do
guys communicate with each other what uh we have is you know we have tried a
couple things over time right the most core things we do is we have
two sons repositories we have a source repository like subversion which we
have now and we have something we call the file repo uh which
now northern dragons members have ftss ftp to a secure location
where we can use that in order to store our files
and all that is stored into a single repository we also have like a
protected encrypted hdps interface which we had running uh when we ran our
own server right now we have gone with a hosting provider to have that
you know available without hassle and i haven't brought over the file repo
the advantage of the file repo is that a lot of the artist community uh isn't like
you know musicians or orchestras may not necessarily have the operating
system background to use sftp clients right so like what the heck is this
you know what's what's this s on my ftp right uh and and having like a web
interface where they can just log in with their user ID and password uh go to the
directory you know select browse and then upload was fantastic
php was definitely finicky because we're using php for that
uh so that was a pain in the butt because it would have a timeout potentially
depending on the size of the file but it's sure beats somebody trying to use
mailman to send a binary and then having that in our
archives forever uh as uh because we do keep all of our our history and what's
amazing about the dragons are very lucky with it is that we have used the
mailing list for our internal communications since day one
um and we have kept all of those messages and we've managed to migrate from
provider to provider to hosting uh and we've kept a history of those
wow so we have the very first you know January of 2001 we have the very first
few messages that we had uh we also used to use team speak in order to do
voice communications as one of our members in Toronto
uh that was involved with us was a ranna gaming company and he used to sell
the service uh as a hosting games right for people with multiplayer
and he used to sell team speak and he donated
you know part of his business to the northern dragons for us to be able to use
team speak to sort of use it as you would use Skype or something like now
today uh but we found to be honest uh that to be kind of a pain because
there was enough lag with it we were and we were always trying to you know over
writing each other because there was enough lag with the team speak and maybe
Skype isn't so bad might be kind of fun too sort of a conference line to be
honest with you know the the only thing with that was the
conventional conference lines cost mega bucks
so yeah and team speak gave us the same thing the only problem is there's a
little bit of a lag and so you didn't know how long to wait for somebody to
respond to and you had no other physical cues right so you literally had
this game of past the moose hat right it's like okay
driver what do you think then driver to say pet what do you think you know like
or whatever right we sort of have this rotating like a token ring network
right you know we suddenly you know we're using this these these protocols in order
so finally i think the first time i met Guybrush because he'd been involved with this
almost a year before we had a party where we met uh you know it's like wow
i can talk to you and i don't have to wait for
it was just it was brilliant for us to be able to actually sit down and have a
normal conversation and chat and share a drink
we're going to take a break we're going to listen to uh binary alchemy and
partially i don't think the microphone is close enough to the screen for you guys to
see it so we'll be back in one moment while i check to see if this is actually
recorded
I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say
I don't know what to say, I don't know what to say
I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what to say, I don't know what
To walk to, I brush my teeth, and, I wash my teeth, and, I wash my teeth, and, I wash my teeth, and, I wash my limb, And they wash, and they washing
I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't
I don't know what I'm gonna do, I don't know
I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I
don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do, I don't know what I'm gonna do.. But it's just like, the moron and the Portal, and the
the security officer, and the
the diyorum could just take over our
You should sure to search for it and watch it because it's pretty leaked but a binary alchemy
That was what party was that at least that binary alchemy was released that
Envision which was a part of NBC
Which was held in San Jose in the summer of 2008
Yeah, and it was
An absolutely amazing event sounds like everyone from everyone I spoke about it sounds like a pretty cool
We had a fantastic time. I think a lot of people came from all over the place. Yeah, that was the thing like
There was some
You know question about you know can North America support two big parties, right? Yeah, can the American Democene support?
And and what you know will this be the biggest American party and things like that, right? So but
And I think I tried to put this out because I promised
An ad hoc that I would write you know two articles
One for each of them right and and when I was going through and I was actually finishing both at the same time because I
Ways you like that and was writing to a deadline like most writers do
And and just madly trying to finish a magic magic. Please wait. Don't worry. I'll get there. I'll get there
I promise and having him like you know, I don't know
I think at some point it's gonna call the power company say you know unplug him if he doesn't finish
He was driving hard towards the deadline is amazing taskmaster and
So with that, you know really I think the thing was was that
Envision and NBC
was
International
You know it had a North American presence
But it was not strongly North American as a lot of European groups a lot of European Democeneers
A lot of people that had traveled and so we had this fantastic
Mingling and and it was really sort of a chance for for these scenes to
Share drink talk to each other reminisce about our old times their old times where the scene was going
and it was really amazing in that sense it wasn't
Good to sell it as the best North American you know, but best American party because it didn't really feel like an American party per se
Uh, it was really an international party the quality of the entries was amazing
Uh, the quality of the people that were there were amazing
Uh, and the Northern dragons
Had a fantastic production that we were very very happy with and we were happy
To have been at the event. Yeah, cool. Do you have any um do you have any uh
How do you feel about it? Um, I mean, I don't know. I'm
Wondering why it was so popular. It seems like
Was it do you think the fact that's Nvidia acknowledge
The Democene with this this party or do you think that kind of nothing to do with it or why do I think people went
Like in terms of popularity in terms of the other people that went or uh, it's the number of countries that went
The everything why was this particular one? I think
Don't mind me asking. No asking you don't have the answers or anything like that
I think that the organizing community uh, Temis and uh, Gargate uh, did an amazing job
pulling people
Uh, at the last minute and and even with the dragons, I think that
You know, we've been promised some demo machines that didn't arrive or kind of should we shouldn't we
Um, I think a number of us were and then at some point, you know, to be honest, Gargate just
He he he rang me up like he he found me on on MSN and he
Uh, put out and appealed to me and the next thing I knew I was going with with you know people within the scene community
I hadn't seen for ages. Yeah, and said hey, NBC is going to be something special yet get your plan on a plane and go down
And be seen and he'd really elicit at that with us
Uh, Gargate what an act of motherfuckers
Yeah, yeah, uh, I didn't know I'm kind of new to the MSN right as of 2007
Like I knew very little to be honest with you about the demo scene and so uh
This last block party. I'm a guard guy for the first time. I called him Gargoyle a couple of times
Uh, yeah, just because I didn't know this person. I didn't do know anything about him and I started to learn about him
After the party and I'm impressed by the so he helped out organized and
The NBC and as well as Tim and you say
Yeah, Tim is he's telling you and this is going to be something special. You gotta come down. Yep, and
Gargoyle and I had gone back a while in terms of our seating correspondence, right? Yeah, uh, and
Him and and Guybrush also right so Guybrush was like very much pro NBC to go and to be honest
We just figured what do we have to lose? You know, I mean
The northern dragons was present during the first pilgrimage as well, right?
And it was funny because I remember some people
Because we had an amazing 4k called the theorem that I'm very very proud of
Theory and that was written strictly in assembly
Uh, yeah, yeah, no
No higher level language was injured in the making of our source code
Yeah, we call that one off hand. I'll have to go home and watch it
The one thing with the aetherium is that he uses direct audio to implement a reverb effect
Yeah, if you hear it without the reverb effect like
Bersule was always like oh the music sounds so good, you know type of thing, right?
Reverb always helps and oh yeah, absolutely and and we got cheap reverb using the OS, right?
But little did we realize at the time and it took us ages to realize the reason why I wasn't happy with it was because
His computer didn't have it or he had very old sound card that did implement right?
So what he was getting out of this time and what we were experiencing is
What are you talking about? This is awful. Yeah, exactly, you know, and so
Uh, and it felt very flat, you know with that definitely coders colors, you know, but a real
Uh, attempt at the time to to get into the 4k and and it was a lovely production
And
Didn't do as well as trees, which is a previous 4k
But then the stature of the productions had increased the following year that much, right?
So everyone had that time was like, oh we're gonna make a killer 4k
So all of this went off and made our killer 4k and then the the
The compo was that much better, right?
And we were showing this because assembly and pilgrimage were timed around the same time
And we were showing this to people at pilgrimage doing like exclusive hearings like this is gonna be shown in Finland in
You know two hours, you know, by the thing right and and the people were saying well, why didn't you submit it here, right?
Because we were least forest, which was just a ridiculous ridden in the airport
You know as tech was teasing me saying I killed you know, I I mugged some kids source code out of his lunch bag or something
You know to pull this thing because then I was madly cracking away
Um buggy as hell probably will not work on your box because I had tuned it so tightly it only worked on a
IBM t-40 laptop or something like that, which is what I had at the time
Because unbeknownst to me, I had had left something which
You know wasn't generic anymore and it tuned it too close to the to the box. I was running on it
It hilarious how that happens with the with projects
You think you're writing something that's really portable among hardware and then you just you realize that this only works on your computer
the
Active worth that you do right with
Four cases that you're always sort of doing this little devilish deal right
How far do I go in terms of the compatibility scale and still feel comfortable with myself, right?
You know you can link by name then you know for sure that you get the
You know function out of the dynamic link library that you expect right names take up a lot of space exactly right
So what do you do? Well do you do
Ordinals and say I want the fifth function in this library
Well, what if they update the library right then you're in trouble
Where do you do this sort of like a mix in between and you had use a hash table
And you run like an algorithm to say okay
I'm going to to create like a key for all of these and
Base it on the name
But reduce the name by a percentage. I like that
And sort of yeah, you know hashed by ordinal type of thing
And that's a common scene technique to do that. What do you end up doing right?
So at first you sort of sit there and you say well
I'll never do that right and and there have been times with the productions of the dragons
That we've gone on like wow that's you know having a you know at the time file dropping and cab file dropping
Which major production run as a batch file and had all these really nasty things underneath it's like no
I'll never do that you know, but then you like
I have I only had 400 more bytes. I could put music in we don't have enough room for music and that next thing
You know you're signing the deal you know with a devil even further in order to push the limit
But you know good design good budget, you know
Deciding upfront what you'll do and how you'll do it is a good way to to do that and really working algorithmically
Right, that's the number one thing in terms of crunching four k's down and and to be honest, you know
After a theorem the northern dragons started working much more algorithmically with our four k's
And we did not write any more of them purely in assembler. I see so we we have some things that have in line assembly
Especially around floating point routines
Lot of the stuff if we were doing heavy duty floating point arithmetic. We would do with
assembler and I'd write the float
Based on that but other than that, you know, we we didn't bother with and just use the built-in
Code it comes out of a compiler
Well, yeah, I hear that the the benefit that a lot of people
Feel the benefit from from using
compiler-generated code to compresses a lot better. Well tools like crinkler right which
Come into the winking staff. Yeah, right. We'll replace the really yeah for audience here
Really taken to account some of your
And it's sort of ridiculous too because you sit there and you think of a better way that should be smaller
This not the other thing then then you implement it and you realize that suddenly your code is less
repetitive
It's a little smarter a little sort of smaller, but your entropy has gone up and subsequently
Your capacity to compress has gone down and the end of your work is that you either didn't save any space at all
Or you took more space, right?
So sometimes like especially doing the same routine three times. Well, you do a loop, right?
You know, why would you execute the same thing? Well, if you have the code repeated three times
It's quite possible that that actually compresses better and is smaller than having a loop
You know
In order to have it there
And controlling the loop and very often times we end up unrolling our loops, which seems like madness
But that was working better in terms of compression probably would work faster day to be honest with you
Yeah, well, you enroll typically to
You know, not have a bubble. Yeah, coming back on a conditional this loop is done
But with four k's speed of execution is rarely your your primary concern. Yeah
And I remember having this
Chat with trickster and I felt like a kid that robbed the candy store from them or something because we were sitting down and
He was talking to me and then and we're having the drinks is okay. So how exactly do you music for four kids?
What do you mean
Well, how do you like render it? I say well
You take the amount of time that you're playing music for yeah, okay a buffer
Three meg big or whatever you need depending upon mono stereo 16 8-bit, you know, or your hurts, right?
So if you're doing 44, you know killer it's with stereo 16-bit
And a needle larger buffer
You render all of your music at the initialization step to your buffer
And then you just call a wave out function like you put in the wave header saying this is my music
This is where it's at, you know, it says and you know, even worse is you don't even call a malloc function or an in like it
You simply, you know, use your your data definitions
And you have it allocated static so it's in the stack
The way the operating system is sort of the stack pointer or exactly, you know, so when it was the exe header
It just
Gives you that amount of space right there
So you just you don't even call malloc you just have this great big buffer and you I got something to tell you
In block party 2027 you were doing a seminar
Um, I forgot what it was exactly
It could very well channel 4k workshop possible. Oh me being sort of kind of naive with demos
I said something like all the the uh
The loading bars that's so stupid. I there should be no loading bars
Yeah, whatsoever. So here I here. I am. I'm doing a
Sofferson for 4k and that's that technique is just what I'm doing
It doesn't take that long, but it's enough to have a loading bar to render the you want to give
You know people the feedback and yeah, our 4k is data loading bars, which seems a bit ridiculous, yeah
But we have done it and you can do that the bad if it sure it. Well, I see some that has a nice little design that goes
Yeah, exactly some of the fun can be in the loading bar itself right?
You know, if you want to have it it doesn't take much because
Even before you initialize your graphic library, right? If you're doing windows
You know or something different
you can use like, you know, you can use straight GDI, like you're, you're basic,
draw me a square repeatedly and fill it, right? So draw a black square, you know,
clear the screen, and then draw me a white rectangle, you know, and increase it as it goes
across the screen, right? A white filled rectangle, and it doesn't take much
in order to give the user that feedback. Probably the hardest thing, and that's
something that happens with binary alchemy, is if you're doing, if you've got,
okay, what's the loader object? I remember, they had the, that was the, yeah, the scan,
sort of, whatever. What happened was, okay, well, I'm sorry, okay, what were you gonna,
what were you gonna do? With binary alchemy, right? It's not like you're getting at
something, right? You have these routines that say like, you might
load music objects, you might load texture objects, you might load things off
disk, things are doing some calculations, right near the tail end of binary
alchemy, it's doing the heaviest calculations that it's got. And, what is it doing?
Radiosity. Are you doing radiosity? Yeah. I think that's the, it was that for the stair,
sort of, asher, sort of, yeah, I thought that looked pretty cool. And, and so, and part of the,
the other thing was that when you look at it, you'll see it in the middle, we have sort of,
the dragon's logo done with rice paper, if the guy brush had done an amazing wood cut off.
And, it was a new logo design that we had that was more spherical in its nature, so very,
very perfect for the, for the production. And, because it was centered in the middle,
and there wasn't really any difference between the left and the right signs,
we had these areas on it, which the idea was that the dragon's logo would appear as you
went across, but the left and right signs of the rice paper were the same. So, you lost this
feedback, this visual feedback, because the progress bar wasn't showing anything new,
because of which, you know, the very first few frames, it was drawing just the parchment that was
already there, right, like the, the background paper, and then the dragon's logo would start appearing,
it finished the dragon's logo, and then it would continue and draw some more bars of the paper,
but the paper was already there, so it was just showing the logo appearing, right? Yeah.
So, the problem there was that we didn't have consistent feedback. So, we had this sort of,
you know, suspension of disbelief where everyone's like, is it hung? Is it right? He's like,
no, no, no, it's all good, right? And I remember that I were saying, okay, pop your acid
tablet now. It's just sort of to break the tension, and then, you know, the production starts,
and it has that, you know, just, are lethal, these are just hitting, right? That, that T90
roads, and it just sort of sucks you into that world. No, I want to get back to you, you were
explaining, I forgot the name of the person, someone asked you a funny rendering trickster.
Yes, yes, absolutely. It has a wonderful DVD, which you should watch, Mine Candy.
Mine Candy, one and two. Absolutely.
Moby games, I believe, he's the founder of. That's right. Yeah.
But, um, man, three, three is coming out, Mine Candy, three. So, trickster, how do you render
you're asking you? So, you know, I think the thing with, with trickster was that,
the reason why he felt that I sort of robbed him of this sense of, you know, technology was,
he thought that we were sort of rendering as we went through the production. Yeah.
So that, you know, as the production was going, that it was filling an audio buffer, and then
streaming that, and then filling it some more, and then streaming, right? That's what I thought.
Right. And, and certainly, you know, in the past, that's exactly what was done, and I was,
you know, was it one of the big reasons why 4Ks have changed so much, is because now we can
allocate a buffer, you know, X number of megabytes in size, and just call away of L function,
and, and, you know, we've got this, you know, capacity within our hardware to ubiquitousness,
and the hardware to do that now. Back in the time of like, you know, in 8086, you might have,
you know, might be limited to 512k of memory, right? Yeah. Not meg, just killabytes, right?
So, you would have to do that sort of render, and then go, and render, and then go, and render,
and then go, and so he had this sort of this idea that that's what it would require.
When I told him, oh no, man, you know, we just render this, you know, great big honken thing.
That's trickster's mindset. No offense to trickster, but kind of the old school sort of,
a packer. He's brilliant. He's brilliant. The old PCs. That's, it's interesting.
And trickster and I are, hopefully, with some, like, collaborating on some old-style demos together.
Speed? So, we're hoping to do some stuff on other platforms together on, on 8086.
As far as hardware is concerned now, does anyone out of curiosity, does anyone
pop another thread to render the sound, and then the demo thread just reaves off the
tail of the buffer? In terms of multi-threading? Oh, I see what you mean. That way you don't have to
wait so long to have it render. That would be... Sounds complex for a floor can.
Something that you would not typically do in a floor K, because you wouldn't want to have the overhead
of managing the threads. Yeah. Oh, yeah, the thread, user space, thread management,
right? Totally kill a floor K. Yeah, so the whole... You hear that kid's 4K, no thread.
Well, the other thing that happens with 4K, typically, is you remove all airlocking of any time,
right? So, typically, we would have conditional compilation that would have a debug mode,
a windowed mode or full-screen mode, right? And a debug mode, which would give us feedback as to,
oh, I had a problem here, right? Or that type of thing. Whereas, when we actually file for real,
all this is gone, right? And if you think we're deallocating memory, forget it, right?
You know, for allocating memory, we're not deallocating that OS, you're going to have to pick that
up, right? You know, things like that. All those good programming, you know, things just
get tossed, right? So that's the reason for compatibility versions, right? And people sometimes laugh
at some of the size of our compatibility versions. Because you have a 4K, what do you mean it's got
a hundred and twelve dual byte compatibility version, right? Yeah, we release a 20 meg compatibility
version, what? Well, the... And legitimately so, like, there were some dragons productions that
took advantage of the voice synth present and did some very tricky stuff. Man, do you win those
people? No fans or anything, as far as size limited demos you're considering. It seems like you
have a lot of more standard sound stuff at your disposal. I would reckon to say you've got some
more... Standardization for Unix is not much of it. Yeah. Unix, you've got some things that people
would be a little envious of. The Alformat has some things that can give you some tricks. The
built-in GZip, you know, pretty beat, pretty ubiquitous, is not a bad thing. I don't know how that
compares to cab size or anything like that. Yeah, it's probably a little bit slicker than that.
And that's when he's been done. I'll be it. Now, there are improvements on that, you know,
really crinkler reviews. Just crinkler reviews, it's own algorithm, it's own commercial algorithm,
crinkler has, it's, you know, certainly there are some wonderful lectures that have been done by
Louise Blubert of Louise and Lumuk, I believe there's also involved with it. And those
gentlemen that wrote clink or crinkler have talked about it. It has its own compression algorithm
that is a real memory hog. But the nice thing is that when you're talking about compressing 4K
productions, it's a very different scenario than compressing something larger. So, you know,
it is really well suited for being in the 4K arena. Yeah. And it's a beautiful algorithm for
that purpose. But what I'm doing for, this is going to be, Nazby and I, and this is going to be
Windows demo, right? And I don't really run Windows, so what I'm doing is I'm, I don't have a
data segment, um, everything that I have is in, so I strip out the text segment and I gzip it
and I use that as a guide, so I'm really curious to see how small it'll be with crinkler.
Yep. To see how it would compare. Yeah. I hope it's a lot smaller to be honest with you.
But I think with one of the things there is you can use the similar technique because you're
writing the music, right? For Ethereum, and this is a funny, funny story, we had a musician
out in Vancouver that was writing our music for us and I did the conversion to floating point.
Yeah. And pure assembler, so I wrote, he wrote it in C and C++, particularly just C, right?
And we had this little framework and open GL that I had that, that just threw up the screen
of some kind, initialized open GL, so we gave it to him and said, hey, this, this, it doesn't
matter what it does, you know, we've attached, you know, the code to render it, right?
We don't care what it does, we've attached the code to render it, right? Yeah. And so,
yeah, I had this god awful screeching sound, I remember when I was writing this framework
formula, I was like, why? You know, it was like some ridiculous thing that you would have like
back in the Q-basic or basic days, or GW-basic, where you would just go, for I equals one to,
you know, 10,000 sound, you know, I come, you know, 0.5 or something ridiculous, right? It's ramping
up of tones. It's not very nice though. Oh, I'm not knocking it, you know, there was some fun
things that we, you know, all of us that were involved with micro computers back at that time did,
but I had this little thing for him, this framework. Yeah. And it, initialized open GL and we had
random number generation that we had going on, and these various effects and things, and I remember
very clearly because it was like August along, and I spent all August along we can get in the code
for the sound done. Yeah. And Chris was at the lake, or something, the Odin Vancouver camp, and
and for some reason, I think there was something where I had messed up something in the conversion,
and I had, you know, my portable phone, and then he's in Vancouver listening on his cell phone,
and he's like, what's going on? No, no, no, this routine already screwed that up. No, no, man,
I swear, you know, and what actually happened was, was my 40 point code was correct. Yeah.
What was really a learning experience for it was that at that point we had taken his stuff,
and we've moved our graphical piece into DirectX, and we were initializing DirectX for the first
time. Yeah. DirectX, find default. If you don't tell it otherwise, pushes your floating point
in the single point mode. All of a sudden our random number generation was getting a cycle within
10 generations, and a cycle shows up as a tone. Yeah. Basically. So we had this scenario where we're
all of a sudden we're getting this harmonic that's occurring within the audio stream that we don't
expect, and he's like, you're in a number generation speed up, like, no way, man, that was the only
thing that was written in assembly in the first place. There's no ways. But then, you know, I started
tracing it, right? And I started to look at the numbers that were coming back, and the first 10
numbers were all the same, like, not way, man. Then, on the 11th number was the first number,
and then the 12th number was the second number, right? And we went through this experience, and I was
like, oh, what the hell? That cool. That felt like a really cool sort of finding. Oh, yeah, absolutely,
right? So, you know, and I'm sure that, you know, I think I've mentioned this a couple of
other things that we're starting to write in our sense, and all right, if you're using DirectX,
use the FPU preserve flag. It's your friend. You'll find out in six months.
If your random number generation starts going out to lunch, well, it depends what they're doing
for it, right? But if they're using floats, chances are you're going to have some error showing
up that would cause those cycles. I see. I'm a big fan of things that require large numbers,
having a random number generator and just seeding it with one number to configure a bunch of
large numbers. And the same approach that we had was we had the seed on the stack, you know,
just right out of the box, it would initialize upon invoking the executable image. And that way,
you know, you went up with the same result. Yeah, it takes a while to shift through the chaos
of it and tell you find something that sounds nice, but when there looks nice for that case,
but when you do, it's kind of a pull technique. Yeah. But, uh, who, uh, ethereal, that was the name of it?
Ethereum. Ethereum. Okay, let's take a break and go to Ethereum. And again, you can't watch it
on your speaker, unfortunately, but you should watch it. So we'll be right back.
Yeah, I don't even know Jay to be honest with you. Well, Jay was involved in founding of the Northern
Dragons and about a year into, oh, okay, hey, we're back here. Okay, sorry. We're talking about Jay.
Who is Jay? I don't know. Jay was the, you know, friend of mine that I founded the Northern Dragons
with. Yeah. And so he traveled to Finland. And I think for him, to be honest, it was a chance to
travel, right? And a chance to see things and to experience something different. So Jay was
involved in sort of the birth, but once we were born and so on, you know, it wasn't really his thing,
right? So he went on and kept, sort of, has kept tantrum with us, but having been involved in the
birth of the dragons and the reason, in part, why the Northern Dragons is called the Northern Dragons,
because of Jay. I see some of the, what was some of the out of curiosity or some of what
possible other names that were running through your head? Well, I don't think we really had
any definite other possible that went, oh, well, we should car sales this or we should car sales
that. What happened was, was Jay and I sat in this, was before Joe was involved. Because Joe,
we sort of then went after and said, hey, we've got this group called the Northern Dragons. We want
you to write the music for our first production, right? Yeah. And this is what we're doing. And Joe
was a friend from high school and he knew when I got into the demo scene and he saw some of the
productions that we love and things like that. So, man, there was just, I'm kind of being nostalgic
for me. There was this one kid in grade school, like seventh grade, and to be honest with you, who I
kind of learned programming with, and was always into like graphical things. And so was I to,
to a certain extent, I started to move to more sort of texty sort of unixie things. But,
if we knew about demos back then, I kind of disappointed a little bit that that's exactly what
we would have done most definitely. But the neat thing is that the average age of the scene
is sort of in their early 30s, especially in North America. You read texts. Okay, on the internet,
you might read something that says that most seniors are 13 in mail. That's false on both counts,
for the, especially the first count, because no one is 13. There's this Sega Genesis demo person
who's 15, I think. I forget his name. That's pretty cool. And of course, I don't know the age,
basically the average age is about 30 now. Yeah, I think so. I think it's something that has
grown up. Now, we're starting to see, you know, new groups form, right, with people that are
in their late teens, you know, so 18, 19, 20, so we're in there, right? When I founded the Northern
Dragons, I was in my early 20s, right? But of course, that was back in 2001, so it's been a while
since then, right? Your calculators. I'm 33. Okay, there you go. So in terms of JV, it involved with
us though, right? So we getting back to that. Yeah, you know, it was a chance for him to travel,
and we loved it, and we also tacked on Germany tour trips, so we spent, we had a fantastic travel
agent. What can I say? You found it by spending an extra 90 bucks with Finair, as opposed to
Air Canard at the time, that we could spend up to 90 days either in Frankfurt or Munich.
We tried for Munich, but we couldn't pull that off because of some timings or something.
We managed to get Frankfurt, but so we toured Germany for about a week before going over to
Osamboi and going over to Finland and had an amazing time there. So, and that was for me also
life defining to a degree, because that gave me a, the demo scene, I think the demo scene for
giving me the inspiration, the reason to travel and go into a foreign country, that didn't speak,
you know, the language, English, isn't there? To be honest with you, that's going to be the reason
why I'm planning on to break point, probably pretty soon here, and that's the reason why I'm going to
Germany for other reasons, of course, too, but that's the motivating. It's the fire cracker,
right, that gets under your pants and just comes to you to go for it. Yeah. After that, though,
I have probably been to about 13, 14 different countries for personal travel, and not necessarily
demo scene related, and have loved it, and has been a great joy in my life to travel and experience
other cultures, to study other languages. So, I wouldn't have studied German or Finnish or
Arabic or any of these other languages, which are also fun, you know, because you meet somebody
that happens before one of these countries, and next thing, you know, you've got a buddy,
you know, a best buddy, because you happen to speak some of their local language.
Well, we're going to close up the interview here. Do you have any demo that you want us to listen to?
Listen to, it's kind of weird because of the speaker, but you watch it.
Listen to this adjunct, but you've got to watch it too. I think all of our stuff is fabulous.
All right, everything. Listen to everything ever done by the Northern Dragons. We'll be right back
while we listen to everything by the Northern Dragons. If I had to pick one, I would suggest
maybe picking blobzilla 4000. And what kind of demo is this was blobzilla 4000?
Blobzilla 4000 is actually a 4k, but on a lark, we said, you should call it blobzilla 4000,
and you know what? It should be no more than 4000 bytes. And at the time, we were more than 4k,
and so I had this sort of like, oh dear God, I was going to try to get this to fit 4k,
now I got it to 4000, and it was funny because we had this massive team that was working on,
we had too many cooks in the kitchen, but every night we'd have this new feature,
and every night I would shrink it down to less than 4k or 4000 at the time. Then all of a sudden,
people would add more, and I'd shrink it down again, right, you know, changing the algorithms,
working things differently, you know, changing the way that the entropy worked in terms of code,
you know, duplication and so on. So I had this consistent tug of work, how far can Polaris go
to take our stuff and just squish it that much more, right? Let's see how pissed they can get
polite. And then we had this 4000 thing on top of it. You can get this down. But you know,
I'll let you in on I guess a little secret. I can add it that out, because I don't like
sign that word, and I just realized I did. So I'm sorry, everything? Another word, I guess you
could say like a golden egg or a little insider secret. Look at that production with a hex
header. Yeah. You'll find out that we actually did it in less than 4000 fights, but we've had it
the executable with the message in order to make it 4000. Don't tell me, I will find out myself.
It's nothing brilliant. It's just a little footprint that that pushed us there.
It's 4000 bytes. You might as well do this with 4000 96 bytes. You might as well do this with
every 4k that you find, because maybe this is maybe there are some messages out there,
and I'm not about that. It's entirely possible, you know, the dead beef right where you just go
dead beef dead beef dead beef in order to, you know, fill up your executable, right? At the point
where is where you wanted it to be? And I'm sure 4k is probably not so much, right? But I'm sure
that 64k's got a lot of 64k's. I'm sure that some text depended at the end of that executable
image just for fun. Yeah. All right. Well, good night. It's good to have you as a guest,
and I'll see you around. And I'll definitely see you at the next blog party. And I do try to
answer your newcomers questions. I get an incredible amount of spam, but I go through an incredible
amount of spam so that anyone that wishes to email me can actually reach me. Yeah.
At Polaris at NorthernDragons.ca. So I advise anybody that wants to ask me a creative question,
something maybe a little different, or something that they're really dying to know,
to go ahead and ask me, and I will do my best to correspond with you, because I do troll through
all this spam just for your message. So, please email me. He cares, ladies and gentlemen.
Make it worthwhile. Do you have any other websites on what's the website of Northern Dragon?
NorthernDragons, www.northandragons.ca, which stands for Canada, not California,
and California. We have had that sometimes, absolutely. I'm sure. But I will also say that the
Northern Dragons has been blessed to have an international community artist that work with us. So,
while we are focused with Canadian membership, or even members that work Canadian have become
U.S. Living in the U.S., we're not exclusive in that way, and I wouldn't want anyone to think
that we are. Okay. And then there's InforK.
Underground.net. Yep. Just type in 4k and just search page and you'll find it.
And so we're going to lose the program with Blavzilla 4000. Take care everyone.
Okay. Yeah, we came back because all I apologize for, for anyone who is, is, I've asked any
questions and we got half the answer and switched to another subject. And you disappointed.
I'm sorry, but you wanted to mention, we were just talking about, you wanted to mention,
how you got the name, Northern Dragons. Yeah, you had started on talking about the name for
the dragons, and we realized that we didn't come back to it. So I was like, oh, did you want to know
when you went? Yes. So, you know, it is just like any other thing, very organic and funny story.
The Northern Dragons sort of found it over conversations that were held at a pub in Winnipeg.
Kingshead pub on King Street. People will be coming there. Oh, yeah, absolutely. The cameras
of the DJing, you know. Yeah. It's just where, you know, Dave and Jay got their start, you know,
found it right here. And can we photograph them? Oh, exactly. I'll be there renovated. So you
can't get the exact spot we said anymore. Oh, no. But, you know, they can have to make the exact
same spot, you know. And they need to renovate in order as well as the capacity of all the people
that will be going to the Kingshead in order to do it. And ironically enough, the owner's name
is also Jay. So, if you happen to go ask for Jay. And so, anyway, while sitting there and having
a conversation over a few points, debating this brilliant idea of making a production and going
halfway across the planet in order to attend this event cult assembly, we were talking about
group names and founding with, you know, the two of us starting it off and then getting a third
member right off the hop. We wanted something that was showed our roots as being Canadian.
So I thought, okay, well, Northern, right? You know, truth, nor strong and free, right? You know,
Canadian identity, right? So we figured, okay, well, we'll do Northern. And then one of our buddies
wasn't doing this with us, but we were just chatting and we had all kinds of friends at the bar.
This was teasing us. And I said, oh, the Northern lights, the Northern pixies, the Northern sprites,
you know. And today- I live in the Northern pixies that I mentioned.
Hey, it's open. You can go for it. And so I was like, no, man, the Northern dragons are, you know,
type of thing, right? Well, little bit of, you know, the name stuck. And so sure enough, we became
the Northern dragons. And our birth date, which is the 1st of January, sorry, the 12th of January,
2001, was the date that we actually said that, okay, that is our name. And so that's like for,
for the sense of the dragon's history, that's when we sort of became incorporated or something,
or where we actually at that point in time had a name thing. Okay, cool.
All right, well, thank you. No problem. And there's really a lot of questions that come up
after this. Yeah. That people are banging on the doors and hey, you didn't answer this or you
didn't come back to this or that. Maybe it's an opportunity to do this again. I'd be happy to
answer any more questions. Interviews by popular demand, ladies and gentlemen. There you go.
So come knocking on our doors and let us know if you want to hear more. So take care and bye-bye.
Thank you for listening to Hacker Public Radio.
HPR is sponsored by Carol.net. So head on over to C-A-R-O dot N-C for all of their
