Episode: 459
Title: HPR0459: Sine Nomine Interview
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0459/hpr0459.mp3
Transcribed: 2025-10-07 21:04:20

---

Hi everyone, this is Quattu. I'm at Ohio Linux Fest and kind of hanging out with David
from Sinea Nominee, which is a really cool organization doing exactly what, David?
What we're looking at is a lot of different ways to explore using some older discoveries
that a lot of the older generation systems in the 50s and 60s were developing but not
really capable of making production use of because the hardware simply wasn't capable of it yet.
We're taking those ideas and implementing them and combining them in ways with newer technology
to essentially be able to do a lot of enterprise-scale things with different operating systems
and different hardware combinations. So a lot of the things we've done for example in the past
is bringing back some of the virtualization technology that IBM invented in the 60s
and combined that with Linux and Open Solaris, I'm going to be able to deploy that as an
enterprise-grade scalable infrastructure system. So kind of the research technique.
Okay and what, so what kind of stuff, I mean there's something, there's a specific example
like about that virtualization stuff, I mean like what's unique about it that deserves being brought
back now. Well the major reason is that they've combined several stages of virtualization technology
and that a lot of the work that was done in the 60s was both a combination of hardware and software
design to work together. That's cool. So that you're able to give everyone the concept of a separate
computer and that separate computer can represent hardware that is not actually present on the physical
hardware. So you're able to not only test the way that hardware could be constructed and in fact
many several generations have IBM hardware since then, they have actually built the system in
software before they actually created the hardware. Okay. The second thing is that in a lot of
enterprises that hardware is present, it's paid for and it's also considered to be a mission
critical. Right. So it's the same hardware that runs the batch operating systems that print
everybody's paycheck. Sure. So what this capability does is that it allows the same sets of hardware
to take advantage of the technology advances that are available in Linux and also in now an open
Solaris. So a lot of the storage management capabilities that have been introduced in the Solaris,
for example, are very similar in concept to the work that was done in the older mainframe operating
systems. This gives it a new a new life in being able to take software that was designed for
that type of architecture and combine it with this classic software. So you end up getting a lot
of value for something you already own and it's paid for and then in general those applications fit
people's businesses very very closely because they've been involved over a very very long period.
It's exactly what people want as contrasted to a lot of these off-the-shelf ERP packages where
you're pretty much going to end up reworking your business to match the software. So do you guys
like go around all the big businesses and knock on the door and say, hey, what do you need?
I don't know what those research or what. Sometimes a lot of what we do appears under other
people's labels. Okay. So a significant part of the initiative that IBM has with Linux is
based on work that we did. A lot of the scalable data center stuff that they're starting to deploy
in their smarter planet initiative. We're heavily involved behind the scenes and so those ideas
and what we do with those ideas tends to take them from the era of, gee, this would be kind of
cool if it happens, to, this is something that an organization like an IBM or a Nortel or a
group of that size could actually take and produce as a product. They have the capability to go
out and market that to the customer base where they're traditionally successful. You know,
we're not big enough to be able to go to Citibank or AT&T or people like that. They are,
they have extended extensive relationships with them. Sure. And what we can do is supply a new
and exciting thing for them to take to those companies and then back them up with the ability to
deliver it. It seems to me and I could be wrong because maybe it's just something that I look
into but it seems to me like a lot of this technology would have been lost with time. So how are
you guys like sort of, how do you know about it in the first place and how are you I guess recapturing
it? Our staff are generally second or third career people. So we tend to be a bit older than most
organizations. We value that because in a lot of cases this is very carefully preserved skills.
Some of the technology may have, you know, we're talking about things that were invented in
first market at 30, 40 years ago. And so as someone who's coming back into this environment
and being familiar with the development of these ideas, there are things that are we're part of
our first working lives and adapting them in new ways is a fairly simple step from there. So a lot
of that we've preserved a lot of documentation. We do a lot of work with technology preservation
by itself but the skill sets to use that are part of what the value we offer to these people is
that we still remember how it worked. That taking that memory and turning it into something
interesting. Yeah. Exactly what are values? Are you a for-profit organization, not for profit or
what? Oh, hopefully for profit. For profit. We do we contribute a lot to the community because
that's part of what we talked about, you know, what's really the value of doing that. Right.
Comes back to us four or fivefold in terms of how we can approach problems that are bigger than
we can solve by ourselves. Yeah. And so it's a strange composite of profit and non-profit. Yeah.
The more you give, the more you get back and the more you get back, the more you can take,
you can push back into these other organizations. And that's kind of the philosophy is like open
source and stuff. So I guess that makes a lot of sense. Are you a Linux geek yourself, a Unix Geek,
actually? I'm a multician. I started life working on the odd systems. So, you know,
when I talk about list machines, you want to talk about Multics, you want to talk about
VMAs, I want to talk about obscure operating systems that nobody's willing in decades.
Shit enough. It's something that that challenges a lot of people because it's something,
you know, I enjoy playing with Linux. It's certainly an interesting technology. There's a lot of
cool stuff going on, but I'm more interested in the glue. The pieces that hold all these other
systems together and how you can best make those systems work together. And so, you know, I don't
really land on any single technology. There's a lot of things where I'm sticking bits and pieces
together. And that's what challenges that's what I like to do. That's cool. What on the booth over
there where you guys are set up on the exhibit floor, you've got a little IBM portable computer,
what's up with that? I mean, it's packed in some way or what? No, the reason we brought those
bits of ancient technology was really to highlight the fact that there's a lot of parallels between
the older communities and what we're talking about in the open source community. A lot of
things that went into making those communities work. And, you know, we have examples there from
technology from the early 1950s. A lot of things from the 60s and 70s and a little bit even into the 80s
and 90s. Yeah. But to get just a contrast, how far we've come based on the contributions both
from corporate sources like IBM and Dak and the other hardware manufacturers and also the user
community itself. And so the whole principle of how open sources being pushed into those environments
is not a new idea. And the value of seeing that these older things is that you see that you see
how much of that has actually happened over the last 50-60 years. So the IBM portable is there
just because it was on the top of the closet. But I mean, it did. Yeah, that's really cool.
So I was a hardware engineer, so it's maintaining the hardware as old as that. But that is something
where they still, there were some very interesting things in there like, for example, some of the
keyboard technology. That's all something where if you're looking at very high reliability systems,
it's one thing that IBM mastered in the early 1970s. And that has carried through their PCs,
it's carried through what is now ubiquitous keyboard standards. And more and more we're seeing
demands for that kind of reliability in smaller and smaller packages. So a lot of that technology
that's in that old PC convertible is something that is actually going into the manufacturer of today's
modern Nokia cell phones. Gotcha. So it's an example of how that cross-pologization is still paying
off today. So you guys, I think, sponsored the T-shirts for the OLS this year, which is very cool.
I like the logo in the name. I think it's pretty neat. And I love what you're doing. So,
yeah, good luck with it and everything like that. Perfect. Thank you all for listening to
the H.P.R. sponsored by Carol.net. So head on over to C-A-R-O dot N-E-C for all of her community.
