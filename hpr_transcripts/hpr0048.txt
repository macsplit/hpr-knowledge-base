Episode: 48
Title: HPR0048: Virtualization Part 2: Qemu quickstart
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0048/hpr0048.mp3
Transcribed: 2025-10-07 10:45:00

---

...
Hello and welcome today's episode of Haco Public Radio.
I'll be your host for today, DeepGeek.
Today will be part two in my ongoing series on virtualization technology entitled QMU,
A Quick Stock Guide.
So, you know, I want to talk a little bit about how things are going to proceed with the series in general.
I will be using the Emulator QMU and all the links for all this stuff will be in the show notes for this episode on Haco Public Radio.org.
I will be writing a Doc Dropper's article because I'm breaking down these parts into very, very small pieces.
And I think this episode is going to move so quickly that you really won't need the web-based documentation on Doc Droppers.org.
So, what I want to do is I want to get up and get you up and started with two methods.
One is going to involve a downloading the ISO image for a popular live CD.
And the other method is going to be actually taking the image pre-engineered for QMU and kicking it off.
So, all the more complicated stuff will be for the introduction part, which will be part three.
Things like creating your own virtual machines, disk image file, and the different applications for that will be put north.
Today, we're just going to get up and running, kick off a few windows, and fool around with it.
It's going to be a lot of fun.
So, if you want to far along with me, I want to first make an important assumption that you're using a Linux that relies upon an at-based package-managing system.
Such as, I use Debian Linux.
A lot of people using Ubuntu.
Both these popular distributions, we should be just going through to a root-enable command line, and type in apt-get-space-install-space-q-em-u-avid-enter, and watch your package manager do its thing.
With two downloads, I'm going to need it to make, and the buildings are up to where to get these from.
The first, everyone's favorite, NAPIX STD.
The STD, by the way, stands for Security Tools Distribution, and this is every 10 testers favorite distribution.
It's a live CD, but once you download it, don't bother to burn it to CD.
We don't have to do that for this.
The second thing is, there's a website out there called OSZU.org.
The links up in the show notes are hackpublicare.org, where OS images are, and download the free BSD image.
Go to the link at hackpublicare.org, download free BSD 6.1-REL.qao.img20060526.tore.
Don't try to write it down from what I just said. Read the show notes, find that file, download that, and the NAPIX image, and we can get started.
Do you have to get installed QMU and it will install the system?
The first thing we're going to do is we're going to pick off the NAPIX STD copy.
So how do we do that? Well, first, we change directory into wherever we downloaded the ISO image from a command line.
So pick off your favorite X term, do a CD space, and whatever the directory name is where you saved the ISO file with the NAPIX STD in it, and type in the command QMU space.
Dash sound HW space ES1370 space, dash CD ROM space, and in the file name of NAPIX, NAPIX dash STD dash 0.1.ISO.
And that will just start up a new window, and you'll get the boot for NAPIX STD hit enter, and it'll come right up.
And follow around with it. Have a good time. Check out STD without having to bother with running it off of a CD.
OK, I got to tell you, I was really very tempted to end it right here at five minutes into the show.
But it's literally that simple to just use this software. It's sure you have to use command line, and there are graphical ways of picking up virtual technologies.
But it's just a command and it runs. All right, so the only thing you need to know is that, you know, to get into it, you know, you move your mouse into the box, click it, and begin using it like a regular system.
When you want to break your mouse out of the box, you hold down the control and old buttons on your keyboard, and your mouse goes back to normal, rocking in the whole screen of your desktop.
All right, so now that's one thing, and that will work with any live distribution.
But let's have a look at what it is to download a virtual machine that's already engineered.
So you go to the oszoo.org, and you download the free BSD file at a reference to the show notes, and you can go for your X term or what have you, and you change directory to wherever that is.
So then you're going to have this tall file, free BSD6.1, blah, blah, blah, blah, tall.
All right, so you're going to have to untarge, so you type in tall space, dash xvf space, and then the name of the file, and it will create until unpackage that compressed archive.
And then you change directory into that, the new directory you create when you compress it.
In other words, when you untarge something, it's going to create a subdirectory.
So for me, it was CD space, free BSD6.1.ol.qpow.img, and I was in another subdirectory.
Now I want to just have a look and see what they did.
So I typed in qemuse-img, space info, space, free BSD6.1.ol.qpow.img, and like I said, all these things are in the show notes.
All right, so don't try to copy it for my voice.
Now, qemuse-img, that is the utility that comes with qemuse, so that you can look at virtual disks that are expressed as files on your, on your system.
So you'll see, you'll give you the actual disk size, which is something like 600 megabytes, and it'll give you a virtual disk size of like 10 megabytes.
So you see this, what that's telling you is that this file actually takes up the 600 megabytes, but if you begin saving things and working within this image, you can go up to 10 megabytes, 10 megabytes, with this image.
All right, if you want to backup this image before using it, use a static copy command.
I wouldn't use a drag and drop when file manager to make a backup copy, because it might expand the file out to the full 10 megabytes of size.
So use bash, bash, is the ultimate file manager, you know, use the CP command.
Then I typed in a quick cat space, and all cats read me, where the little blurb that the guy who put together made, and so that the only user was root, and that the password was freeBSD for this image.
Now I knew that, I just kicked it off. All right, here's the command, QEMU, space, freeBSD6.1, REL.qcal.imj.
That's it.
You'll see the boot come up, and after a couple of seconds, you'll have a full Linux boot, I mean, excuse me, a full Linux boot, this is a freeBSD, and you'll have that system in front of you.
So play with your systems, enjoy them. It's that easy.
And on our next episode in this series on virtualization, I will begin introducing the topics of building your own disk images as files, and going to some more detail of what that's involved, and that will be the introduction proper to QEMU.
If you're sitting there listening to this and saying, well, what about other systems? What about VMware? What about Zen?
I don't work with those in day to day. I'm a free software advocate, and so I stick to free software's.
So, you know, I'm going to be working QEMU, but all these concepts will carry over.
So I hope you enjoy that.
Today's gig tidbit. I'm going to continue with my series of greats of computer science.
I want to just mention to you, and Wikipedia is a wonderful place to start.
I want to mention to you a German computer scientist, now passed away recently, Dr. Edgar F. Cod, the 2Ds.
Dr. Cod was the fellow in the 70s, the computer scientist, who introduced the concept of relational database management.
Dr. Cod wrote papers and even published a book, the relational model for database management, explaining what it meant.
He based his vision on database management on a obscure branch of set theory mathematics, where information was expressed in a mathematical way that related to each other,
and then began working towards the definitions of languages that referred, that helped us navigate within very large sets,
and changed forever the face of database industry.
So, he passed away in Florida in 2003, I believe. I don't have the word paid for it in front of me.
But it was an amazing, amazing scientist. Toward the end of his life, he was inducted into the fellows of the ACM,
and after he passed on to the great computer room in the sky, or I love being a ham, excuse me.
The Association for Computing Machinery, named one of their highest awards after him.
So, if you get a chance to read his book, a PDF article, or maybe even go further and actually pursue some of his books,
you also wrote some things on cellular automata, you know, if you've ever heard of the Game of Life, you might be interested in that too.
So, as always, I invite feedback. You want to send me email, hpr at deepgeek.us,
or you may leave a message for me, a private message on the bin rev forms.
My username there, as it is here, is DeepGeek.
I hope you enjoyed the second in our series of virtualization with QMU,
and the next episode will be an introduction proper, where we'll go over, still introducing material,
but we're going to get a little deeper into that one, I'm sure you'll enjoy it.
So, this wraps up today's episode of Hacker Public Radio. Please tune in tomorrow for another episode. Thank you.
Thank you for listening to Hacker Public Radio.
HPR is sponsored by Carol.net, so head on over to C-A-R-O dot-N-T for all of us here.
Thank you.
