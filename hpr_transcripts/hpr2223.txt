Episode: 2223
Title: HPR2223: FOSDEM 2017 K (level 1, group B and C)
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2223/hpr2223.mp3
Transcribed: 2025-10-18 16:04:26

---

This is HBR episode 2,223 entitled, Fostom 2017K Level 1, Group B and C. It is hosted
by Ken Fallon and is about 115 minutes long, and Karim an exquisite flag. The summer is
Canon to use the products in Group B and C on the K building level 1.
This episode of HBR is brought to you by an honest host.com. Get 15% discount on all shared
hosting with the offer code HBR15, that's HBR15.
Better web hosting that's honest and fair, at An Honesthost.com.
Hi everybody, I'm at the ReactOS booth and I'm talking to Colin Fink. Hi Colin, can you
tell me what ReactOS is? So ReactOS is an open source effort to create an operating
system that can run all applications and drivers written for Microsoft Windows. So we
are basically trying to establish the Windows platform as an open source platform.
That is fully supported and both fixes maintained, I guess.
Yeah, there's an active development community around it. It's still a big effort. We're
still having much work to do, but it's emerging very nicely and more and more Windows stuff
is working nowadays. What sort of applications can you get running on it now?
For example, MS Office 2007 runs nicely already. Then we have recently got, for example,
a Java platform or also .NET running on it. So more and more applications written for
these languages are supported. Right now what we are showing here are also laptops which
run with the common Windows drivers. So for example, this is using a third-party
Broadcom network driver. Always the day in a very one's life. I'm sorry. Always a problem
for people. Broadcom. Yeah, we have the advantage that we can use the official ones by Broadcom
and don't need to resort what like others are supporting in their free time.
Okay, and so how stable is it? Can you use it? Could I run an organization on it at this point?
It's not yet ready for everyday use and for every task, but for example, we have some users already
who just need Windows for a single purpose. There's one application that requires Windows and if that
one runs in a VM, you can actually react as could be a solution to them already at this stage.
Okay, very good. What have you planned coming up this year?
For this year, first of all, we have planned to be more present at exhibitions like FOSTEM or also
yeah, upcoming ones like in at Chemnitz or in Bonn. What else? There's currently a huge effort to
support Office 2010. The more recent version and then also 2013 and all that. So more,
more support of really those, what you would say, killer applications for Windows.
Yeah, I think this will be a huge effort that's going to be done in 2017 as well as for
example, more stable USB support. Right now, we are still distributing CDs, give away CDs here,
but we're looking forward to do that with USB drives in the future.
And who is supporting the, is there anyone supporting the project financially or is it
entirely community based? It is entirely community based. We are totally running on donations,
but we are having a German nonprofit organization handling this and due to some very successful
fundraising campaigns, we are having some money now which we can use to fund the development.
For example, that Office 2010 effort is currently being done by some paid developers who are
yeah, fixing those issues nobody else wants to look at. You sometimes have this problem and
then it's good when you have some money for paid development. Okay, thank you very much for
taking the time and good luck with the rest of the shop. Thank you, thanks a lot.
Hi everybody, I'm at the Haikou booth and I'm talking to POSWA,
I front well, what is Haikou? So Haikou is a free software operating system that is not a
new Linux distribution. Yes, there are other operating systems around. You might have other
practice and there's also a free BSD, a net BSD and there's also Haikou and Haikou is inspired by
the B Operating System, which was around until the end of 2001, which was a proprietary operating
system, but we thought it had interesting features and we didn't want to see it go, so we just
rewrote it. Completely from scratch and what language are you using to rises?
So yes, almost completely from scratch, we reused other blocks from free software projects,
like free type for the funds and other stuff, but the Haikou code itself is mostly C++
and some more see in the kernel, but there are some C++ check in the kernel as well, so yeah,
and how well has the take up been of Haikou? Do many people use it?
I didn't really check the figures, but I could talk about the commuters at least,
there are more than 100 people who are ever committed to the main repository, and we now have
a port repository, so people contributing recipes for parting software, and last time I checked
the figures, there were like more than 200 different commuters, it's probably more now because we
participate in the GCI, the Google Code in Contest, so we have students contributing recipes
every year, and it's really interesting seeing them learn Haikou and contribute to it.
Is it then more an academic project, or do you envision millions of desktop PCs running
Haikou in the future? Well, domination, yeah, well, it's more of a bad project, it's really fun
to do, and well, we try to do something different, so to make people see that there's not only
a new Linux, and also, well, come up with new ideas that Linux Disroke and could be from us,
maybe. So what is, if you can describe the desktop to me that I'm looking at, what makes it
different than a traditional desktop like KDE or GNOME? Well, it might look a bit old-ish in the
style. Retro is the word you're looking for. Yeah, retro is the word, but well, we like it that way,
we don't really fancy bubblegum effects and everything, but yeah, it's quite slick. I think the
window tabs, they are really useful because you can drag them, you can hold shift and
flick them out and drag them, and you can group windows, so you have tapped windows, and you can
group them, so it's really interesting. There are some nice features as well on the file system,
for example, we support extended attributes, so it's basically a meta data that you attach to
files, but BFS actually can index them, so instead of having to run an update DB every night
to see what changed in the file system, well, you just let the file system handle it,
and just run a query and it's instantaneous. That's interesting actually.
And yeah, we use it for the mails, for example, so each mail has a file with attributes,
so basically the mail ions is just searching the file browser with the mails status equals new,
so you just see the new mails. It's not very good, so this is, I think Microsoft we're talking about
doing something like that a long time ago and dropped it. Yeah, I think they were trying something,
they tell you call it like WinFS or something, yeah, well, BFS did it 15 years ago, you know.
And is it easy enough to install or are we talking specific hardware here?
Well, most pieces, it actually boots quite well, we still have some driver issues, of course,
because it's not Linux, so we need to write drivers. We do have some help, for example,
for our network drivers, we wrote a compatibility layer, so we can actually port three BSD drivers
without much changing them, so we don't have to maintain a separate port, because I remember
people from our times, it's an embedded operating system, they first tried to port the BSD drivers
one by one, and then it was a mess to maintain, and then they switched to some blue code, separate
blue code, and it was much easier, so we just did the same as they did. But for graphics driver,
we support VCR modes and most of the graphics cards, we still like some 3D stuff drivers,
for example, but yeah, well, it's in the works. Okay, can you can you use it for a daily driver,
can you email, can you surf the net at that time?
Yes, well, we have Megliant, we have an IRC client, that's important.
Here at least.
Yeah, sure. We do have a native browser now that uses WebKit,
well, if people are interesting, we are still wanting for Firefox ports,
because we did have a Firefox port, it was like version 2 or something, but you know,
it's like, oh, let's ditch native vacans, let's use Cairo, and then we port it Cairo, and then they
said, oh no, Cairo is bad, let's use something else, and then we say, okay, we'll just wait.
You want to have somebody knows Rust now?
Yeah, exactly, well, that could be an interesting idea for like G-soc,
the Google Samorph code, contest, maybe, if anyone is interested in porting Rust to Haiku.
We still miss LibroFist ports, we have Olivier around here, we actually started an open
of his port back before the port, I think some people expressed an interest in finishing the
ports for some of the cellar code, so maybe, who knows? Okay, thank you very much for taking
the time and good luck with the project, thank you.
Hi everybody, I'm at the Gen2 booth and I'm talking to Matthew Dodie, and Matthew, can you tell me
what Gen2 is? Gen2 is a source-based Linux distribution, I tend to like to think of it as a meta
distribution where you can just kind of build your own Linux distro as how you like it.
So this was an immensely popular project a few years ago, but it seems to have wind a little
in the meantime, would you agree with that statement? I wouldn't say that the popularity has dropped,
I would say that the buzz around it has dropped, yeah. Okay, that's fair enough, so how do I,
how do I get into Gen2, I want to, I have a brand new laptop, what do I need to do? Well, we have a
couple of live DVDs here that you can do, and we also have, you can install really any bootable
media, like StenOS, CD you could use, Debian doesn't really matter as long as you can CH-roopt,
and it, and we have really, really good documentation for installing, the install process is
mostly manual still, we have the stage 3 is what we call it, so you've got the stage 1,
stage 2, and stage 3, yeah, so what are the differences? Very quickly, your time starts now.
Very quickly is optimizations and how much of the system it contains.
So, say somebody relatively new to, or say somebody like, but a little bit of experience in Debian,
bit of experience with Arch wants to move to Gen2. All right, a little bit of experience,
so if you've experienced Arch and Debian, then you've experienced some manual installs,
which is a good thing, and it will be a little bit hard at first, just because there's a lot of
flags that you can do to turn on and off things, like I like to use the example of LDAP,
not everything uses LDAP, so you can turn that off on a lot of packages if you don't need it,
and just have smaller binaries. Okay, but say then my boss comes to me and goes, I need you to
turn on the one thing that does require LDAP and all your applications, then more do I need to do.
Oh, then you need to recompile, but if you're deploying out to many, many servers or many desktops,
it's not as much of a problem because we have binary packages for it, so you compile to a binary
and register to be at that, and port is just automatically portals that down when they use
flags to match something that's already compiled, and you're good. And can I take advantage of that
then if I'm installing a system myself? You can. There's a few bin hosts out there. I don't know
of any off the top of my head, but they exist, and you can just use those to install the base
system and then optimize later on if you wish. And the general package maintain, is this as
difficult in Arch Linux? Does it require a lot of reading in order to do update? I don't think so,
like honestly I updated a couple of packages just this morning here, and it was copying the
renaming the file. Simple as that. Yeah, simple as that. So basically if you want control of your
system, you can use Gen 2. Yes. Very good. Okay, anything else that's coming up that you've
milestones that you've hit this year, that you want to talk about, any successes? We're rolling
distribution, so milestones are kind of a difficult topic. We don't do milestones very often,
mostly when we just release DVDs like this. You've got a really nice Gen 2 ecosystem
graph down here. Yeah, Core OS even is a based off Gen 2. They use our build system and stuff in the
backend, e-votes and whatnot. I see System Rescue CD, Savion, Google Chrome OS. I did not know that,
and I know a lot of server employees, a lot of people use Gen 2 in the cloud. Yeah, I work for
a cloud company and maintain OpenStack with Engine 2, and it works just fine. We're using
Gen 2 in the cloud typically requires using the bin packages I mentioned earlier, because you don't
want to compile and just waste time and stuff, but it works great. The optimization that you can get,
because cloud providers tend to ship generic stuff, and sometimes you want to use
SSC optimization that's not in the system of Debian or Archer, whatever. Yeah, because you know
what you're running at London, you can strip out all the crops that you don't need. Exactly. I'm
put the stuff in that you do need. Oh, yes. Okay, great. Thank you very much for taking the time
and good luck with the rest of the show. All right, thank you very much.
Hi, everybody. I'm at the Core OS booth, and I'm talking to Brian Redbeard.
Brian, sorry? Redbeard. Where did you get that name? It's a little bit of a norm to
care as it were. It's actually started as a pejorative in middle school, where other kids would
make fun of me, because I could actually grow a full beard in middle school and my parents wouldn't
let me shave. Very good. That's a story for another time, but we're here to talk about Core OS.
What is Core OS? Core OS is a minimal operating system specifically designed to run containers
at very, very large scale. And it's based on? It's actually based on Gen2. We use Gen2 under the hood
as an actual SDK for building the entire operating system. Okay, awesome. And that's a lot of
bullswords you got in there. Can you explain to our regular old listeners what a container is?
Amaya would want a special operating system for that container. Absolutely. So a container is
actually just a set of components that the kernel provides that are carved out so that you have
separate namespaces for networks and users and mounts and things like that so that you can
actually bring multiple user lands on top of a single kernel and run them concurrently at the
same time. This means that you can actually then segment things out and have a Debian user land
running an IMAP server with a Red Hat user land running full HTTP stack and be able to pick and
choose the exact libraries from the distros that you want and compose them together in the way
that you want to use them. Okay, where does Core OS come into this? So very, very early on we
realized that being able to automatically update systems and build higher order distributed systems
was a really going to be critical to the security of the internet. So we wanted to come up with a
way where it became easy to move a workload from one machine to another and containers were very,
very critical in doing that. So we kind of started out without like see very early on then we
moved to Docker then we kind of created our own container runtime to be able to manage things
exactly the way that we saw kind of the most optimal and being able to have that stateless
machine under the hood that could schedule a workload and move it around made it much, much easier
to automatically update things and fail across hosts when you had transient hardware failures.
So does Core OS run on the native hardware providing the Docker containers or does it run
within the Docker containers themselves? It actually runs underneath the hood and is the thing
that actually spawns the containers for you. In a lot of cases folks actually run it as a virtual
machine though internally we actually use a lot of physical hardware so it ends up being the
hypervisor for containers in that case. Okay, so physical harder than you would have Core OS
than you would have Docker. That's absolutely correct. Absolutely correct. And on top of that you have
Red House or Debian or whatever else. Certainly. And then Core OS provides the tools to migrate
and expand and increase memory and stuff like. Exactly and we also have built in a lot of
as I was saying earlier like critical things that you need for distributed systems so we have a
distributed key value store called FTD that actually allows you to replicate configurations
across machines. We also have a container scheduler that we collaborate with on Google or
collaborate with Google on called Kubernetes which ends up being an entire scheduling system for
ensuring that you have n number of copies of a running application always at a given time
routing the traffic to it, etc. Okay, very good. So where can I get more information about the
project? So going to CoreOS.com and also checking out our CoreOS user and CoreOS developer mailing
lists. Okay, very good. Thank you very much. Is there anything that you want to bring to our
attention and come out during the year or? Certainly. So coming up in the end of May and early June
in San Francisco we have CoreOS Fest which is our annual user Fest where we kind of bring in folks
from the community to share both the things that they've done and the ways that they're using
technology built by CoreOS. Fantastic. Thanks very much for taking the time and have a good
show. Have a great day. Hi everybody. I'm here at the Debian stand and I'm talking again to
Sebastian. How are you? Fine. So for the people who don't know what is Debian? Debian is the
universal operating system, one of the oldest Linux distributions completely stuffed by volunteers
now company supporting it. And yes it's one of the largest distributions out there in the commercial
field. How did that happen? Probably because there is no company behind it, no mandatory support
contracts like Red Hat, etc. And probably because it is a true free software operating system.
Okay. And what's your involvement with today project? I'm a Debian developer. I maintain the
geospatial and open street mapper data packages. That's right. Listen, what have you planned for
this year? What happened last year in the Debian community? What's coming up this year? What's
coming up this year is of course the stretch release. Of course we never know when the actual release
is going to be because it's going to be there when it's ready. But my expectations somewhere
the third quarter this year, the freezes coming up tomorrow. That's the hard freeze, no new packages,
etc. So if things work out with the open SSL 110 transition, we might be able to do a tuner.
So what's that transition? Is that there's always seems to be one thing that causes a problem?
Yeah, fortunately it was not a game this time. I remember frozen bubble causing a delay in
a previous release. But the thing with open SSL now is the open SSL maintainer would like to have
open SSL 110 in the Debian stretch because of the support for the chacha, cipher and other
improvements in open SSL. And the other hand open SSL 1.0 is the long term supported release,
which makes more sense for the Debian stable release. And the biggest problem is that the
ARP broke. So a lot of software needs to be patched to work with Open SSL 110. And with many of
the packages in Debian, they simply don't have that support yet. So we now have both versions in Debian,
but not all of the packages far too many still haven't been rebuilt with either one. That's one of
the biggest pain points to sort out now. Okay, last year when we were talking the big issue was
switching to system B. How has that turned out? I think the big fuss is over now. The Debian
guys have started up their alternative. I think they've made the first release now. So everybody who
doesn't like system D has a nice place to go. And everybody else who didn't make big deal out of it
is happily using it. Yeah, exactly. It's been almost three years now since the release of Jesse,
which made system D default. And I think we're most people are pretty much happy with it. It works.
And Debian, what other events are going to be happening around here in Fostem this time?
Well, as I said, we have the nice blog post on bits.debian.org with a list of Debian-related
speakers here, at least 45, as I see right now. So that's good. And of course, we have our
general attendance at the boot to answer questions. Salty shirts. Salty shirts, exactly.
Well, thanks very much for taking the time, and I hope you enjoy the rest of the show.
Hi, everybody. I'm at the PostgresQL stand, and I'm talking to. This is Robert Evans.
Hi, Robert. How are you doing? Doing good. Yeah, how are you? Can you tell me what PostgresQL is?
PostgresQL is an open source relational database management system,
coming out of a project at Berkeley University, and became open source, and it's been picked up
by an international community worldwide, and being sponsored by many, many different companies.
And it's essentially un-by-nobody, in the same way that Linux is not un-by-anybody,
so it's a true community product. Okay, very good. And how many developers are involved?
And what language is it written in? Ah, okay. It's written in C. How many developers?
Hundreds, I mean many, many, many. So we've got a core team, we've got a hacker team,
a lot of people around it as well, so being involved, or being employed by different
companies from different backgrounds. Are there any full-time developers in a PostgresQL building,
or is it a people working for HB who are contributors? It's working for people working for like
NTT and Japan, but also consultancy companies like Enterprise DB, Second Brother and etc.
But also like VMware also provided code for the project as well. So there are many,
many different companies that are involved in the development of the project, so yeah.
Okay, very good. And it's becoming quite popular now to run it in the cloud, it seems to be,
so how would you suggest that people will best deploy PostgresQL in the cloud?
In the cloud. Well, most cloud providers actually have Postgres in the cloud, so Amazon has
a Postgres service. There are also other specific SaaS providers that provide Postgres as
database as service essentially. Like scientists, they'd be like Heroku, and there were many others.
What does Met PostgresQL have the effect of choice there for them?
The effect of choice, it seems to be extremely popular. Why is it so cloud-friendly?
Why didn't it obviously start cloud-like?
Yeah, well, cloud-friendly, I mean like Amazon actually changed the code a bit,
so to adapt it to their environment and to their services. I mean, the whole source is open.
It's a sort of a BSD license. It's actually PostgresQL license, which is even
freer than the BSD license, so it's essentially just you can do with it at whatever you want.
So, a friendly license, an open source code, a lot of people use it. Amazon supports it,
Amazon supports it, everybody else has it. Exactly, yeah. So a win-win for everyone?
It's definitely a win-win, yeah. And where did the logo come from?
The logo. Actually, we got two logos, so the Postgres, so the the elephant logo.
I think it comes from, or at least a name, sorry.
It's fine, we'll, uh, what did you do?
Our recording device has just fallen down, my backup recording.
But we're going to keep going, and I will not suggest, no, we never had that.
Right, right. Okay, I'm not sure where the elephant comes from.
Might come from our Russian developers, but definitely the name of the elephant,
Slonik, which is Russian, comes from Russia. We got a bunch of developers in Russia,
coming from the Moscow University, now they're actually got their own companies,
and it's really booming in Russia now as well. But in Japan, we have the turtle,
because the elephant has a different meaning there, because there was a group using the elephant,
and there were kind of terrorist groups, so there's, yeah, that's not good.
It was a Seren attack in Tokyo with them, so it's not good. So they got the turtle,
but the elephant is the official, sort of, international logo.
So is there anything cool coming up this year that we need to be aware of, or?
Well, this year we're going to have version 10, so we're going to go from 9.6 to 10.
There's a lot of work being done on logical replication right now,
and many, many new features, and the community is also growing. We've got some really nice
conferences coming up, like in New York, Europe are going to be in Warsaw and Poland in November.
Yeah, it's really booming, development-wise, but also community-wise.
And you're just a member of the community, or are you to work for a consultancy company as well?
I'm actually self-employed. I'm a developer, and so I use Postgres, but there are core members
here that actually code on the project, and yeah, so we're a wide variety of people. We were users,
we're consultants, we're core developers here, and spouses as well, so yeah, so everybody's
familiar. Exactly, yeah. Very good. Well, thank you very much for taking the time and have a great
chill. Sure, thank you.
Hi, I'm at the next cloud booth, and I'm talking to.
I'm Frank Karliczek. Hi, Frank, and can you tell me what next cloud is? It seems to be a new
project here at Postgres. Absolutely. Well, it's half new, I would say, so I'm the founder of
OwnCloud, which is a well-known open source project, and basically the core developer group,
and the community, and me, we fostered like nine months ago into next cloud as the next generation.
So it's in a way, it's very new, yes, it's like nine months old, but in another way, it actually
the community in the software and everything is already established for like seven years now.
So you involved the open source thing, you took the code and you fought it? Yes, exactly.
So like I said, OwnCloud was founded by me, and we built a community around it,
and later a company, and there were some problems with the company, which lead us to the decision
to fork it. So basically I forked my own project, which is a bit funny, but not only me, but really a lot
of community people. As you can see here, the booths, there are a ton of community people and volunteers
here, and this is like the power of open source, so I'm really, really happy that it works like that.
And I see that OwnCloud are still here, are you maintaining contact with the developers?
Oh yeah, yeah, yeah, I mean I said hi a few minutes ago, and talk with some of the developers
a few days ago. So yes, we maintain contact on a technical level, on a business, on a company level,
while we have different directions, different focus now, but sure, I mean we are still friends, of course.
Of course, it's a two-way street, they can also take your code and continue to use that.
The agreements of the license, obviously. In theory, yes, and they decided that I don't want to use
our code, about their decision, but everything we do is HEPL, so everything we do is 100% open source,
it's not open core, like others, so obviously it means that everybody can take our code and do whatever
they want with it, yes. Was it an important decision to pick HEPL? I think so, yes, yeah, so I picked
the HEPL license seven years ago when I started with OwnCloud, and I think I got really good feedback
with it, so all the developers, the Contributor seems to be happy with it, and we are also working
together with the Free Software Foundation and in the US, the people who actually invented the HEPL
and seems to be the best license for this kind of software. Yeah, served you well, and have you
what sort of language is a written name? So next cloud is written like in a ton of different
languages actually, so the server component. We know how to tell people what next cloud is at this
point. Oh yeah, of course, so I could point. Absolutely, so next cloud is what the original idea was
to have something like Dropbox and Google Drive, but completely open source and you can host it
yourself, so you can basically go to our website, you can download like a zip file, you can put it
on a Linux fork somewhere, and then you have your own little Dropbox and Google Drive for your
friends and family and maybe company or university, but over time it became bigger and bigger, so now
we have a very good calendar, so you can synchronize your calendar with your phone and your desktop and
share the calendar with your family and your colleagues, an address book, there's a news reader,
there's a mail reader, there's a chat app, there are all kinds of features, and now with next cloud
we also added like video and voice conferencing, so as you can see here on the booth there's a demo
where you can basically have video and voice communication with others, and it's all like everything
completely self-hosted, completely encrypted, completely secured, completely private. Very nice,
and what sort of box would I need to run this on? Can I run on Raspberry Pi for instance?
Yes, so you can run it on Raspberry Pi, not the Raspberry Pi 1, I mean it kind of works but
that's really really slow, but Raspberry Pi 2 and newer is really really fine, this is good for
like a small group like 3, 4, 5 people, but if you have more users then we recommend like a real
Linux server and we can also cluster to lots of servers, so the biggest installation has several
million users, so the current one that's in production is in India, it's a few million users,
but we're actually working together with a big customer because next cloud is also a company
who is deploying it for over 20 million users, so it's really nice because it's the same software
that works from very very small like Raspberry Pi to very big. Okay cool, and now have you
anything planned this year? Is it more just tidying up getting the next cloud round out?
They're consolidating or are you going to have events or what's what's the plan for the year?
Oh wow, but that's a lot, so yeah I mean last year when we started next cloud there was a lot
of consolidation like also rewriting proprietary components into open source and a lot of brand
building and everything, and now this year we really can move like full steam forward, we're going
to a ton of events, so there's like just oscon this year then there's scale like in Los Angeles
in two weeks and mobile world congress and a ton of open source events, and of course we also have
our own conference next class conference which is hosted at the University of Berlin in August,
on our website there's more information and this is just the conferences and then we have just
have like the usual hackathons in between where people come together, we have very active meetups
so we have regular meetups in I don't know 5 or 6 cities like regularly every month and people
coming together to work in next cloud and yeah this are just events and then of course we have
like big plans for the software too, but this is something that yeah we will you will see over the
year there's a lot coming. It seems like you're going to have a very busy time, listen I won't take
any more of your time, thank you very much for the interview, I'm good luck with the show and the
project. Thanks a lot. Hi everybody this is Ken, we're here at the Bezel booth and I'm talking to
I'm a name's David Stanky, product manager for Bezel, and what is Bezel? Bezel is a build and test
system, it's based on the system built at Google over the past 10 years called Blaze, designed for
massive builds with incredibly fast reproducibility and Bezel is our open source version of it,
we open source in 2015 and are looking to build a community, so would it be similar to Jenkins or
something like that? So Bezel works at a lower level, Bezel is similar to a maven or a make,
it's the thing that does your compilation and your test of your code base, you can plug it into
Jenkins or other CI systems, and what is this written in what language? I was expecting gold
there to be honest. Not yet, certainly we love Google and Bezel can be used as a build and test
to a forego, but the story of Bezel is that it's multi-platform out of the box, so it's first class
support for C++, Java, Python, Go, and it's extensible to support any other language that you
can think of. Okay, so what are your plans with it, how Google released this? I'm Audna.
We have Bezel's fully open source at this point, we have a great community of contributors
both to the core platform and to the extensibility side where there are people writing rules for
Scala, for Rust, for closure, and we welcome anyone who's a language expert to please help us
build that community. Beyond that, it's a matter of continuing to grow, we recently released Windows
support and are hardening the core, looking to build towards a big open source release of a 1.0
with a governance board and all of the great stuff that comes with having an open source community.
And so exactly, say I've got a little app, where does Bezel fit into my app at what point?
I've got an application written on the little world application in, I don't know, see,
where does this fit in? So you're going to use Bezel as part of your
build and test cycle. So as an engineer, you write some code, you hit compile, it runs, right?
The beauty of build, not wow, no, because you've got to make a change. So the beauty of Bezel is
we maintain what we call a dependency graph, meaning that we analyze your code and know what
every piece depends on every other piece. If you make a change to one file, we're only going
to rebuild and retest the pieces that depend on that one file. Everything else retains its
build and test status from before. So that makes incremental tests lightning fast. So as an engineer,
you can build and test at every file change. And in fact, there's a way you can use Bezel
where it monitors your file system and automatically rebuilds and retests every time you change a file.
Interesting. Very interesting. Very interesting. And how difficult is it to install? Is it available on
most distros or do I go to the website and pull it down? Go to website and pull it down,
you can compile from source or pull the binaries. We have, of course, an active project to get it
into the distros, but we're not there yet. I mean, we're just, anywhere, the dependencies around
anything like that. Just a Java runtime is all. Okay, cool. So what's coming up this year that you
want to make us aware of? So I think that this year is a lot about productionizing for Bezel.
And it comes from the Blaze, which is the tool of built at Google. It's been around for 10 plus
years, meaning we have a very strong core. It's a much more mature product than you would think,
based on how long it's been in the wild. We are working with the communities to really make
language support for all the different languages work really well. Increasing our
strength in sandboxing so that your builds are really reproducible. They're not dependent on
anything that's on the local file system. And hardening Windows support is a big part of what we're
doing right now. And what was the motivation? If I have to 10 years, that you were using this
to wipe and bother open sourcing us? Well, one thing that happened is that a lot of Google
open source projects, so something like TensorFlow. They have Googlers and then they have external
contributors. And the Googlers are really used to using this tool and love it. It's harder for
them to make contributions in an environment that they're not familiar with. So by opening that
up, we make it live easier for Googlers. As the external community starts to experience it,
they get excited about it. And then that continues to pull it out. It also helps with,
you know, spread the word about how great Google engineering is, helps with recruiting efforts,
and helps for new Googlers coming in if they understand the tools that we're already using inside.
Okay, fantastic. Thank you very much for taking the time and good luck with the project.
Thank you. It's pleasure.
Hi everybody. I'm Fostem and I'm at the OpenQA and the OpenBuild service booth and I'm talking
to OpenSUSA. Yes, it's pictured around the OpenSUSA chairman from the OpenSUSA project.
So tell me, what are these services? Why are you, what are they first start?
They're the secret source of the OpenSUSA project really and not just the OpenSUSA project.
So the OBS, the OpenBuild service is our build system, building all of our distributions,
including the enterprise SUSA distributions as well. And it's the only build system that is
fully dependency aware. So it knows it's trying to build a cohesive product. It doesn't just see
a distribution of the pile of packages, but there's an interconnected weave of things.
So when something changes somewhere else in the stack, it knows when and where it has to rebuild
everything. So it's always pumping out in theory, ISOs and disk images that are a proper
work in distribution. So for example, if I have just one text file that's local to my app,
my app gets compiled. If it's the C library, then everything gets re-compiled.
Yeah, exactly. So it takes you all that. But of course, buildings great. But in reality,
does it actually work? And in the past, there's something that every project distribution has dealt
with and normally dealt with like with passive testing. Like I'll just throw it out to the community,
put it in some testing branch somewhere and if hopefully it'll work and if nobody moans about it
in two weeks, then we ship it. That's not good enough in this day and age, especially with
something like OBS where we're changing an awful lot of stuff all of the time. So OpenQA
actively tests our software, actually tests our distributions from the same perspective that a
user is actually going to do. So it's actually firing up VMs. It's actually controlling real hardware.
And then actually loading up the operating system, clicking on the same menu buttons user's going to
click on, typing the same thing that is going to type, reading this, looking at the same screen,
actually doing open computer vision, open CV image matching of does this have the UI elements
I've been told to look for, and then driving through an installation or an upgrade and then actually
using the operating system and its applications, the same way a user will and if that all passes,
then it's good enough to ship. Could I use that then for checking websites and the like?
Yeah, totally if you feel like it. In fact, we test OpenQA which has a web UI
in OpenQA. So it's a little bit confusing when it's testing itself, but yeah.
That's more than human element, I'm sure it has no problem with it. And where do I
open those services, something that's hosted by Suza as a thing for the community?
So yeah, the OpenBuild service is software which you can download anywhere. The Open Suza
Build Service is Suza's sponsored instance for the community. So it's an installation which Suza
has which anybody can use. But if you wanted to download OBS and run it up on your own service,
try and have at it. Have fun. Oh, I didn't know that. Yeah, and in fact lots of companies have Del,
Linux Foundation. So just to clarify people, because every year we do the same interview, so we
presume that people will know, but the Open Service, if I have a small little app, I can just
upload it there and it will create not only the Open Suza RPMs, but you can make the Suza RPMs,
the SLEE RPMs. You can build arch packages, Debian Ubuntu. I've lost track of the amount of
distributions. It's like up to like 32, 42 different distributions. It's a, I'd say there was a Debian
package produced by OpenBuild service. Can I sneak that into the Debian repository or have they
got more requirements? No, but if you build it properly, then it'll be submitted and accepted
fine. I mean, there's no reason why not. So with zero knowledge whatsoever, you can
maintain your package. Yeah, that's actually excellent for another thing that I intend to do.
This OpenBuild service sounds really cool. Okay, sorry, OpenBuild service, that's really cool.
Moving to the OpenQA, which I was then pointing out. How do I get that? What do I need?
For that, there's no public instance for people to dive in and use in the same way as OBS. You
can see OpenQA.Opensusa.org, which is our public instance. You can see OpenQA.Fodorahosted.org,
which is the Fodora project, it's because we're not the only people using it. So, and then we can
download the software around them internally. And you can go to Open.QA, that's where the software is,
that's where the source code is. It's also where all the sources for our tests are. So you can see
actually how we've written all of those tests for OpenSusa and even the SLEE stuff, like we're not
trying to answer it with hiding the enterprise stuff away. Is it difficult to write a new test?
Not really, it's got its own kind of bespoke domain-specific language, which if, especially
if you're a Sysadmin, it's kind of a, you know, a pearl history, it's really familiar. But if you
don't like Po, we've abstracted most of that away now. So, you know, it's semantics, but really,
in reality, there's effectively a macro-language of type of string, check a screen, assert the
screen so, you know, check and fail if it's fatal, that kind of thing. So there's a little bit of an API,
you've got to learn, once you've learned those commands, you can write very nasty tests just by
arbitrarily running those commands, you know, macro stuff. If you then want to get fancy and start
programmatically doing stuff like, look at the screen, check for this element, if this element
there go off and do great stuff, we've got all that power in there too. So you can do really dynamic
tests of actually reacting to stuff you might not be expecting and then have open QA still work.
So we can teach open QA to like work around its own bugs and that kind of thing.
Okay, fantastic stuff. I will definitely be looking at that because I have a requirement of work
for automated testing. Thank you very much for taking the time and enjoy the, anything cool
coming up often, Susie, related to these projects yourself? The main cool thing at the moment is
sort of tumbleweed away, you know, our rolling distribution, which is kind of the embodiment of
those two technologies being, you know, done full blast. And of course we've got leap, which is our
enterprise-based community distribution. And we've got an interesting challenge coming up at the
moment because 42.3, so the third iteration of the SLEE 12-based leap is on the way this year.
And in parallel, we're developing the new codebase for SLEE 13 slash leap 43. So it's going to be a
really busy year for us doing kind of two codebases in parallel and we'll be leveraging all these
tools because if this stuff doesn't work the way I just said it did, with screws, yeah.
Okay, excellent. And thank you very much from the community for providing the open build service
All right, enjoy the rest of this. Thank you very much.
Hi, I'm at the FSSE booth and I'm talking to Florian Snow. Hi, I'm not your relationship with
the project. I'm a volunteer, so I help out here at the booth and I organize a local group in
Franconia in an upper part of Bavaria, northern part. So this is the free software foundation
Europe. Exactly. So we're like the European spin-off of the free software foundation that was
started by Riches Solomon in North America. Can you tell people who don't know what that is?
Well, it's an organization that supports the political work to support free software and
like the societal change to enable users to have freedom in their computing. So by freedom you mean
everything's going to be just, you know, you don't have to pay for it, I guess. No, we actually mean
free as in freedom, not free as in price. Well, surely you should call the freedom software. Sorry,
I just did a show about that, so I'm pulling the, I'm taking a joke too far. So it's important
work that you're doing and is there many people in the organization? Yeah, there are many
fellows as we still call them or changing that right now to supporters who support us as volunteers
and who donate money. And then there's a few employees who like coordinate work in a central
location. What are we planning to do this year? What cool stuff's coming up? We're like, there's
going to be a talk about the radio lockdown directive that we've been involved in. There's just
what? There's a European directive that says you cannot change the firmware of any radio,
the device that has a radio on inside of it. So that would involve free routers and would maybe
prevent us from having radio stuff also. Yeah. Yeah. There's going to be a new campaign since the
stickers are out. I can name it. It's called public money, public code. So there's going to be
some action on that. There's going to be I love free software day again in February. Okay. So
good stuff. And where can I get more information about the project? The best way is to go to our
website, fsfe.org and just check it out there and get involved with us. No harm to donate some
funds as well if you can. Of course, like we always are happy about donations. Excellent stuff.
Thank you very much for taking the time and enjoy the rest of the show.
Hi, I'm at the Vikings Libra hosting provider booth and I'm talking to
I'm Thomas. Hi Thomas. What is Viking Libra hosting? So Vikings is a new project which does
basically leap of friendly and sustainable hosting. That's the main focus is leap of friendly
and sustainable. So I see behind you 100% leap of friendly 100% leap of software and boot
firmware and 100% green zero CO2 emissions. How do you do that? So we basically have the
well most modern platforms are usually encumbered by proprietary hardware firmware and software.
Like the platform we use is the Vikings T16 which is based on a ASUS mainboard. So this is a
I'm looking now here at a pizza type server. Exactly. And this has been re-bursed engineered by
by the cobalt people and which allows to run this mainboard completely with leap of software.
So the BIOS is completely Libra and if you also run a leap of operating system on it,
you have a full stack leap of system which allows us to provide for leap of hosting. So basically
we will provide email, storage servers, VPSs, also dedicated servers based on this machine
and sustainable we do by
be basically go into data centers that already exist which get the energy which is
certificated by for example cream piece. So an independent organization which says okay they
use energy from this or that factory power plant and so it can be made sure that it's
completely green and there's no CO2 emissions at all. That is an astounding feat but where's the catch?
Well, there is none. It's going to be more expensive though than your average everyday run of
the mill hosting. Actually not because the platform we use is quite recent. It's been sold
still sold and has been sold since 2012. It's still very powerful. We have two CPUs with 32 cores
up to 256 gigabytes of RAM so it is a platform we can use for the next at least three to five years
and after that time we will probably get towards the power platform which we will provide for
for even more power that is really well how can I say that it's at that time it will be more
efficient like monetary wise to provide to use this platform. This will be at some point
you will always use something more powerful to to provide better prices. Do you go into one
data center or do you have multiple servers and multiple data centers? Originally we've planned
to build our own data center so we can provide full physical security. We have done a crowdfunding
last year which ended last month and it wasn't very successful so now we are doing basically plan B
so we are going into existing data centers and enable them so to say with our libra services
and our libra hosting platform. By doing that we save a lot of money of course with a catch that we
can't really provide for complete physical security because it's not our data center. We will
have some hardware that will provide for that namely Flexber which will be developed this year
and will be sold this year for this mainboard and this will so with this Flexber you can provide
any system based on the D16 server anywhere even in the US so if somebody changes the hardware like
for example the NSA takes the server out of the rack and they temper with it you will find out
about it and you will be notified and you can say oh no somebody has tempered with it I will
for example if they flash another firmware you can say oh no I will just reflash my firmware or
you will say no I can't use the system anymore yeah no more trust in that server okay that's
a that's an interesting approach do you think that there has been a lot of interest in yeah actually
we have a lot of despite the failing of the crowdfunding we have a lot of interest especially
from the US for people who are really worried about the current situation or I wonder why and I think
that we will succeed with this it seems logical that if you have a you know someone like Greenpeace
they should be running their servers on you know energy neutral servers they should be running
the website on you know it seems like a logical thing to do if you're into the whole industry sector
there that should be running their servers on something like this it's a good opportunity where
where did the name come from and where are you based well we are based in Germany currently
and the data center we can actually go in any data center we want to right now we are in a
data center in Frankfurt and in a data center in Nuremberg so customers potential customers can
set up a strategy to have redundancy for example and the name Vikings it's just a cool name
nothing to do with your beard it has nothing to do with my beard and it's basically the Vikings
where where people well what you know they they fought for their rights they were not only people
who who went to England and killed everyone for for for for for the gold and silver they were
people who know what people like you and me you were worried about their future and they fought
for their own future and we are doing the same we're not killing anyone there's a difference
but we also very worried and that's why we are offering this project to the people
okay so how do I sign up what are the prices what what sorts of solutions are you offering
and where do I go to Vikings is a very new project so we are still in the startup phase and
there will be a pretty orderings going until the first of May when we will go life with our
platform and it's Vikings dot it's Vikings dotnet Vikings dotnet fantastic thank you very much
for taking the time and good luck here I hope you'll have lots of people signing up thank you to
him hi I'm at the general tour network stand and I'm talking to
to worry from friend from the inn and what is that while friend from the inn is Luxembourgish
and stands for Friends of the Onion and we are a tour service dot nap part organization which
means that we want all notes all over the globe okay now I'm gonna as you're the first one here
I'm gonna need to ask you the question what is tour and what does it do tour is a software that
you can use to anonymously surf the internet that's basically what tour does and it helps people
all along the world to communicate with other people and to securely communicate and how does it
do that while it's doing it with the so-called onion routing which means there are multiple layers
of servers that it will use to get to the internet site you want to visit so who started this project
who said you mean the tour project or our organization the tour project to start off with
the tour project well there was some some fancy guys that thought okay we need anonymity
in the internet and which got help from the US government with governmental funds and yeah
which are now spreading the word of tour and we are trying to get organizations like ours to
want the infrastructure okay and so basically I can browse anonymously using the tour browser
well pretty much now yes and the tour browser is based on what what underlying system
well it's using the Firefox with some modifications that it like something like to block
JavaScript by default and yeah we choose the tour as a proxy server so I've downloaded that
application and it seems trivially very very easy to use is it still safe if it's so easy to use
while we are trying to make it as safe as possible and as easy as possible which always means that
we have to adjust things because normally if you make things easy means that you are offering
or which reduces the security and that's always again we have to play and to get in on the same
echo lever and well it's pretty hard but we are trying to make it as easy and as secure as possible
and what's your organization what does your organization do well our organization
which is based in Luxembourg is currently trying to get more exit nodes and bridge servers on the
tour network so what's the next node and then what's the bridge server well the next
node is basically the last server a tour uses to get out to the internet so if you are using tour
the probability of going to one of our exit nodes is right now at 5% so the website you are using
or visiting we'll see the rp address of our exit nodes so if I if I'm browsing google for instance
and I come out at google dot at you is it then I'm coming out through you guys yes yes thank you
very much that there you go and why are you here exactly and who pays for these exit nodes surely
there must be a lot of traffic coming out then well yeah we are we have generated like 20
petabytes of traffic for the last three years and all the servers are running with donations from
members or donations from like here the first time or back in Luxembourg we have to have you
and other conferences so we yeah we depend on donations okay what motivates you to get involved
in this so the motivation was like that we had to first script a party in Luxembourg and we thought
yeah why not invite people all over the all over the globe to come and speak to us and we invited
Moritz which is the founder of tourservice.net which already wants exit nodes all over the globe
just like we do and he just asked well guys why don't you create an organization like ours
about in your country and we were like okay well we are from the case computer Luxembourg why not
so we created it in 2013 and yeah we began to win exit nodes and now we have
currently like seven exit nodes in Slovakia, Romania and Luxembourg and the hell of a lot of
bridge servers all of all along the globe. What's a bridge server? What a bridge server is mainly a server
you use when you can't directly connect to the tour network like in China which is
tanzo-wing connections to the normal tour network you have to use a bridge server to get
around this tanzo shape and is that is that something that does that need to be as high bandwidth
as the exit nodes? No not as the exit nodes because whichever is only used to make the first
connection to the tour network and not every county tanzo is the direct connection to the tour
network that means that not everyone has to use bridge servers only those countries like in
Slovakia or like China that are when you're using it. So who can help out if they wanted to say
I have a hundred megabits internet connection can I help out or is it better for organizations?
Well I recommend everyone to want it under an organization why because we have to go to a lawyer
which wrote us down the Luxembourgish law about hosting tournodes and doing all the stuff with
the traffic and it's a hell of a lot better to be in an organization because when it comes hard
to hard and police is knocking on your door you want to have something someone behind your back
in this case it's our organization and the law. So if what do I need infrastructure
why in order to be doing an exit node or a bridge node? Well if you look at our infrastructure
we are only hosting gigabit exit nodes so let me we need at least like 16 gigabit of RAM we need
i7 CPU to handling all the traffic and yeah of course on me to a gigabit connection to the outside
world and who would who would be who would be inclined to give that sort of service?
Well not many ISPs because you know they are also bad guys that use the tour service
for doing spamming or didosing or hacking and we are mainly can report of course
yes yes of course and we are mainly convincing ISPs I want to cloak to allow tour because it's
also used for good case and we are talking to them we show them okay those are the implications
when you host it what can you do talk to us that's the law in our country that's the law in your
country and yeah we we have to convince them recently much a lot of them it was at the beginning
okay but not much change unfortunately and they come in yes yes yes okay anything coming up that
I don't need to be aware of over the common time vibration well yeah we are all they here at the
first time so you can go to our booths just talk to us about tour by exit nodes I don't know about
security anonymity just come by drop us a word we also have some gimmicks to sell and well
recently we are trying to in our country to go to the libraries and say okay that's a top
project why don't you host a bridge of your facilities and yeah those are some flyers just
educate the people about tour and we are trying to yeah get in contact with the libraries thank you
very much for taking the time hi I'm at the Zen booth and I'm talking to Julian hi and
can you tell me what Zen is and specifically what Zen orchestras Zen is a authorization solution
and then orchestras is a web interface for it okay so what's a virtualization solution it allows
you to create virtual machines and to abstract physical resources okay is this more like VMware
or more like Docker more like VMware so I could run Windows on the Linux machine exactly and so
that's been going for a while is there is there support for Zen in the in most distributions and in
the kernel I'm sorry I can't understand is there support for Zen in the kernel I don't know about that
and what is Zen orchestras then so the orchestra started as a web management UI but now it's
small like a cloud light solution based on top of Zen so you can you have a self-service you
can create users delegate some resources you can schedule some backup jobs and you can
administrate your servers from everywhere because it's a web based solution so you can add servers
can you increase the size of disks for example exactly yes you can do all of that you can start
to migrate your machines and how do how do I go install that you just have to to get on
GitHub our GitHub the whole code is here and you have a link to the documentations and then you
can find how to install it from the sources and if you if you are an enterprise and you don't want
to turn that by yourself we're still selling a solution when the Zen orchestra is already
bundled in the virtual machine and is there any major updates coming this year have you added
new features in the last year yes we've worked a lot on on backups delta backups and five level
restore but this year we probably we be more about hyper convergence and hyper convergence you know
it's when each host is not only a compute node but it's also a storage node and the
and because we are using cluster effects on top of it so the the whole storage is seen as a
single a single storage unit with a replication so this is the main feature for this year
okay very good and are there any conferences or events coming up that you'll be asking
we don't know yet probably Zen Agasson and maybe links coming us okay very good thank you very
much for taking the time and enjoy the rest of the show thank you
hi everybody i'm at the open stack booth at first time and i'm talking to
Aurélion hi and what is open stack open stack is a project manage
i'm sorry i'm very bad at this take your time okay open stack is
and to bring a kind of AWS from Amazon inside your walls so you can keep
your workload inside your walls so it's a private cloud yeah it's the main i would say
private cloud system you can have in your company okay so this is a say a
intern large corporation has a data center and they wanted to be able to provide AWS
like services then we could deploy open stack yes open stack is the main the principal
project you could use to do that and is this a supported by one company or is it multiple
companies so open stack is backed by the open stack foundation which is composed of very large
companies they have support from red hats IBM I think that's used to the main Linux
windows the main Linux windows distribution windows I'm sorry provides open stack
distribution and open stack support and consulting those also small companies as I want
I'm working for providing that kind of support but the main big Linux companies can help with
open stack okay and so how do I deploy this what do I need I've got my hardware what else do I
need where do I go okay so if you want to try it at home or just to make a small lab you can
use DevStack which is a suite of tools made for you to deploy an open stack on your laptop you
can deploy a working open stack on your laptop you're not going to have very big performances but
it can give you a hint on how to use the web UI the APIs and so on when you want to go further and
deploy that on multiple servers and go more production like you can you you can use project like
open-sack and cyber there's also RDO from red hats which I don't know very well you can also use
windows distribution like Mario and discipline stack or I guess Susie has their own too
and the open stack itself is that like the virtualization or is it the containers or is it all
the above what open stack is a suite of tools many basically it exposes you APIs to talk to
make a virtualized environment behind open stack if you want to know what runs your VM it can be
came your KVM it can be Xen it depends on how you want to to implement your open stack cluster okay
so it's quite flexible in that it's very flexible also for the storage of your VMs there's a
component called Cineau which can be backed by a lot of back-on which can be safe for the
software-defined storage it can also be your big appliance if you have a three-power appliance or
big sun you want to still use you you can do that as well and do you support a software-defined
networking as well I'm not very knowledgeable in that but yeah open stack the network in open
stack is managed by notron which is software-defined network because it uses open this switch it can
use open this switch Linux time spaces to do switching and routing between instances inside your
open stack cloud okay very good so what's your involvement with the project I'm not involved a lot
in the project itself but I worked with open stack daily for customer and I wanted to be here to
tell people about open stack explain them what it is like people are asking oh I got
GPU boxes I want to share with people can I share them with open stack and I
expose them with open stack so yeah it's interesting to to share that knowledge too very good
so do you know what the plans are for open stack during the year the any events coming up or
any developer conferences that we need to know about so then the main open stack summit is
going to take place in Boston in May there's also going to be a smaller more very very
technical meeting in Milano I think very very soon and in November next open stack summit will be
in Australia very good okay enjoy the rest of the show thank you very much for filling people
in the model for seconds thank you very good I'm at the over booth and I'm talking to Yaniv
hi and what is your relationship with the over project I'm an over it community member I'm part
of the development meme I also develop over it as part of my work at Red Hat okay very good
and what is over so over it is a complete data center virtualization management system you
manage your host you manage your virtual machine and all the infrastructure around it essentially
it give you an infrastructure service complete solution okay and how is that is that using
open stack at all we're no it's actually partially overlapping open stack but open stack is more
towards cloud and we are more towards data center virtualization okay so yeah we both use KBM we
both use liver it but the use cases are a bit different okay I'm not so different so for example
in open stack virtual machines can come and go they're less less more of a pets kind of where you
actually nurture them you take care of them they live longer and so on you care less about those
and data center virtualization yes you do in open stack you wouldn't necessarily over provision
because really cost is an issue that rolls out to the customer and that center virtualization
it's your cost so you will over provision you will optimize the hell out of your data center
okay so this is for your own data centers as opposed to running something in the cloud mostly yes
okay and do you have do you have a lot of interest from people running this yes of course so
we meet a lot of our users year after year here in the conference we hear a lot of people that
actually heard about it but haven't tried it we hear a lot about people who are using VMware and
are looking for an alternative and over it is a great alternative in two ways first of all it
provides very very similar functionality but also it enables a migration path so you can actually
import your virtual machine from VMware to over try it out see how it works for you while
keeping your VM in or in the VMware environment so these are the two main characters of the users
that we see here so there'll be more a VMware replacement VMware studio replacement then
for something like Amazon web services yes yes it's going to be a VMware placement it's going to
be replacement for people who actually run already VMs using kvm liver it by doing it themselves now
it's okay if you do it for one server for two servers but it really doesn't scale up how does
the what sort of things can I get now as a as a customer of that do we get snapshot backups
everything you can think of we have hundreds of features all the top features are critical for
virtual machine management are there if of course running them running them in sophisticated way
with kind of scheduling live migration live snapshots live hot add of disk hot add of CPU of memory
of network card anything that you can think of really including a very extensive ecosystem so
everything you can do from the user interface you can do from the rest API you can do from
Python SDK a Java SDK a Ruby SDK and uncivil which was just released actually that's funny you
should mention that I may be interested in that so what do you recommend running say a cluster
of databases to keep high availability of databases that's something that you can solve with this yes
of course so we have support for high availability of virtual machine we actually in the very latest
release which we just released two days ago we introduced a new highly available architecture for
virtual machines you can easily do that we have great integration with cluster actually we can
you can actually run hyper converge scenario so you compute and storage host are essentially the same
okay very very good and cluster is the distribution file system which I still need to do an
interview on right that's it might even come before this you never know magic of podcasting
so this is a red hat company and is this am I required to go to red hat to get contracts for
this or can I just download the source code myself no no over it is a community project it's
on over.org yeah we have very vibrant users community that are contributing especially to the
ecosystem we have a contribution for example for a vagrant provider we have someone who wrote a
CLI around it we have someone who wrote a monitoring agent solution around it we have quite
big community involvement in this if you want to buy a product yes red virtualization is the
downswing product for over it and of course we heavily involved in over development so it's
going to be an overt before it's going to be in the red hat version yes okay so anything new
that's come up this year and that you've been working on what to be more working on this year
well of course since we just released a new release two days ago especially for fosden we
yes our milestone was exactly to meet the fosden time frame we're very excited about this release
it's a 4.1 so it's the first stable release that we've done after the big 4.0 it still contains
lots of features I'm very excited many of them we've contributed the overt uncivil modules to
uncivil 2.2 and 2.3 actually we have a discount support and storage which is a boom for storage
efficiency and utilization we have moved through QQ2 version 3 which enables high performance we've
improved the scalability of the database and so on so lots of needs and pieces everywhere that
can help you improve the user experience on the dashboard that we introduced in 4.0 now loads
much faster in 4.1 and we're still continuing to fix mugs bugs, improve stabilization, improve
scalability and add more features so let's come up next year I've never satisfied me what's the
plans well for example we're using the pattern fly open source design patterns we are now
upgrading to a newer version so the UI will look even better we have a new user portal that's
coming up we have integration with the open virtual network which is a software defined network
solution on top of OVS so that's coming up it's already in tech review it will move to production
and there's plenty more to see now as always very happy to hear very happy to hear the
different workloads and different kinds of setups that we see from our user in a community I'm
always looking for positive feedback on the product I'm always looking for what can we improve
where can we improve and I'm very happy with the community of giving out this feedback all
they'll give feedback here and that's for sure yeah thank you very much I had a good look at the
rest of the show thank you I'm at the Foreman booth and I'm talking to Greg Sakloff can you tell me
what Foreman is sure so if one was a lifecycle management system it aims to help you deal with
the whole of the operations necessary to manage your servers that could be physical servers that
could be virtual servers so that's not just configuration management but also provisioning
integrating with services like DNS, HTTP maybe IPMI, BMT stuff whatever you need to get into in order
to bring your servers up get an OS on the desk up and running into your infrastructure monitor them
over time and eventually the deprivation them again at the end so why would even need this when
we've got the cloud well we can talk to the cloud that's absolutely fine we can talk to physical
systems we can talk to physical like systems such as over here next to us or you know VMware
or Libver but we can also talk to easy to digital ocean RAC space GC if all you want to spin up
an image that's fine but that's not part of your infrastructure yet you can spin up a thousand
servers and they're useless to you until they're doing some work that means you've got to get your
application on there you want to get it maybe hooked up to Puppet or Ansible so there's some
one-time steps that need to happen and you want to also monitor that right you want to see those
puppet reports coming back and have a nice front end to that so you can see what's happening in
your infrastructure find out whether there's a problem you need to investigate nice graphs for
your ops team or your management all that kind of stuff so how does it work I order some servers
from Dell and I put them in my rack then what okay so first of all you need form and somewhere
right form and it's a Ruby on Rails application so it needs to live on the network somewhere
and we have little pieces of Ruby code called the form and proxy we put those on the services
the need managing so DNS, DHCP these things we put little properties out there that gives us
a consistent API to talk to allows us to scale out nicely so you still only need one single
form and one source of truth on your network so we have a rack of hardware now you have two
approaches physical servers are an interesting use case because we never know the mac address is
in advance right if I talk to Libver and get a mac address back so you could either write those
mac addresses down put them in form or we have a plugin called discovery which gives you a kind
of a metal as a service approach where we can boot them into a round disk and get the mac addresses
ourselves either way there's some registration process right so you either do it yourself or you
do it via a plugin and now we manage the rest of the process so in form and you say I want to
provision this machine it's going to have sent us on it and I want it to use this kickstart template
and this display out and go and as soon as you hit go form is going to hop out and
important to say every part of form is optional so maybe you've enabled DNS and DHCP so we go out
we say okay and on my mac address I can go to the DHCP server and get an IP back now I can write
a reservation that host is always going to get that IP I can go to the TFTP server I can write
some pixie codes so that it boots into the correct installer I can go to the DNS server and write
a DNS record for my new host name and now it boots up into the unattended goes to the unattended
install finishes that tells form and it's done we take away that pixie code replace it with local
boot and it comes back up into the network and then you hand it off to a puppet or answer ball or
whatever the same sort of configuration for AWS right exactly there one of the nice things
about form is that UI doesn't change you're still feeling at most of the fields but as soon as
you say I'm not doing physical now I'm doing AWS a lot of those fields in the network specific tab
will disappear and instead you're going to say okay this I am I in this region and everything
else is the same right so so the UI remains consistent that's good for your junior ops people
good for your processes all that kind of thing and then what comes on top of what comes on top
of form of from top of form that's interesting question and I'm struggling to see where you're
going with this right if you've got integration with Ansible then why would any dance will live
up for because form and won't take actions that's the point form sits there is a as a central point
of truth and a way to drive things like configuration management systems but it itself has no
configuration management built in so I can say okay I could manage my Ansible roles by hand
or I could import into the form in UI and allow people to assign them to host and run them from
there but you're still running Ansible at the end of the day it's just a different way of interacting
with it and so it's a question of what you need out of your infrastructure if you're happy with
doing everything on the command line then you don't need form and to handle that part of it and
you can turn it off I mean everything in form is optional but if you do want to be able to do that
from an iQI and maybe build up things like host groups so you can group similar servers together with
the same things then maybe this is something you want to look at okay excellent so what is the
history of the project choose what's the license for example license is mostly gpl obviously
there's been contributions and because it's a rail project you end up with plugins from different
places and so on but it's it's mainly gpl v3 and the project's about seven years old it was started
by my manager or had levy and he has taken that over the last years and grown it we've grown it
into a large team at red hat mostly I mean it's fully open to contributions from the community of
course as you would expect from a red hat project but it's fair to say most of the development is
paid for by red hat and we're probably I don't know how many people these days but it's important
to say four men plus one of the larger plugins forms the upstream of red hats at like six so if
you're familiar with that like six you're already familiar for them and even if you maybe don't know it
so so that's where it came from it grew out of a need that oh had had that's a really bad phrase
and he took it from there he joined red hat they they saw the value grew it from there
excellent so what milestones do we have last year success that's a really good question because
I'm fantastic so probably the most valuable thing we did last year was it almost exactly a year
ago we met up with the puppet guys we've been trying to get puppet force support into form
of a quite a long time and we met with the puppet guys we've hashed out a roadmap and within about
three months by our birthday in July we'd actually got a release out with full puppet force
which made the community very happy we've been waiting 18 months for that also one of our community
contributors a guy called Timo Gervel he can contribute a full IPv6 stack to it as well so we know
how proper IPv6 support throughout the project so well I say full obviously there's some
edge cases things like TFTP is kind of an IPv4 thing and so on but you know you can assign IPv6
addresses get them from an IPv6 system and pretty much everything you want to do with IPv6 is supported
and this year what's what are we looking at going forward are going to be any meetups?
there's okay meetups in the next few days actually because we've got config camp next week
we'll probably do something around our birthday again nothing concrete yet but we had a really
good run of about seven or eight events within the space of a month around our birthday last year
I'd love to do that again in terms of milestones one or 15 will be out in a couple of months
that's got a new notifications framework in it which is going to be lovely I'm really
interested to see what plug-in maintainers do with this and what sort of notifications they
want to give to users beyond that it's hard to say we don't really do roadmaps so it's whatever lands
in there anything else we missed her I've recovered it I think we've got most of it we've got
shout out to Catello our sister plug-in that forms part of satellite six and to all of the
community who are absolutely fantastic we wouldn't be where we are without them fantastic thank you
very much and thanks for taking the time
hi I'm at the cluster booth and I'm talking to I'm Mohamed Ashek
I'm Chiffin Tony yes I can and Kaushan and you need to write your name on the thing later on
and tell me what is cluster what is cluster is it cluster FS why am I wanting to say cluster FS
because uh cluster FS is the what you say flagship project of the cluster community
yep so cluster started out as uh what do you say a software defined hyper sorry
high performance computing or a super computing project effort because the cluster founders were
super computer developers somewhere in the US they started out doing a software stack for a
super computer but they found out that uh software uh the storage part of the stack was a much
bigger challenge and they wanted to solve that and that's where cluster FS started out and that's
how it became cluster FS and right now cluster FS is the flagship project and it's yeah
difference here then from cluster so right now blaster and blaster FS are interchangeable
but it started out as a part of blaster so what does it do
so basically it's a file system distributed file system so applications can store their data in it
uh i guess so there will server sign clients and the clients can talk to different servers at a time
in a single point so that's it so i mount i go to my ectc fs tab and i mount slash
cluster and that's it yeah and where is much before actually so yeah a lot i think different
wanted to say was cluster FS is a distributed file system where you install cluster FS on different
servers you want you created you create a single volume out of them so all of these servers together
are available to your clients as a single storage device so i just need to mount it one place
so you can mount high 20 cluster FS on your clients you can put them in your fs tab if you want to
and your clients get the storage available from the servers all of them in a single
mount point instead of like doing separate mounts for each server get a single mount point and
cluster FS handles distributing files across all these servers right i'm getting very nervous
now because my family photos are stored and my cluster server what if one of them goes down
so we have replica options in case of a note going down you will not lose or you will not see
any delay on data not being there so if one note goes down other two replicas will show the data
on your mount points so it's like raid only across servers
raid it's just replica so whole yeah whole volume is created one more time and kept it there just
for a backup in case if you lose something it'll get the copy from there or else in case if this
note goes down it will show to the mount point from there okay so i'm any server so each of these
servers will be running some sort of redundant array anyway as a as a operating system so on
on the underlying file system is that also cluster or is that exe change yeah the underlying
file system is any physics compliant file system which has support for extended attributes
better support the so some file system generally don't do extended attributes really good so
if i add something it would be xfs that's what we test on that's what we as raid had the company
we do a lot of our development on so that's what we do so i got now lots of servers i've got two
in each data center three data centers i make one cluster of everything do i
different data centers i think one data center can be one cluster other data center can be
other cluster if you want to have a similar volume both the places you can use georeplication
that's what we support so you can have a separate volume here and you will have one more volume
there and you have to start georeplication session with this as a master and this as a slave
either way so both will have the same content of data if you mount that volume there it will have
the same data and if you mount the volume here it will have the same data well if i update on the
slave will my changes go back from the slave to the master yeah like you can do the change of our
master it goes to the slave but say i was in the remote location and it was faster for me to
write to the remote locate to i'm in the us and i want to write to my slave which is in the us
yes it's not possible we don't support that right now we are working on ways to probably do
active active or master master application that's slightly hard to do yeah i've heard that
all right yeah you probably heard this the same the last time we have been trying to do this
for a long time we haven't found the proper solution so so generally you would use the geore redundancy
for just geore redundancy okay so what have you been working on the whole year i have been working
on integrating cluster with Kubernetes so we have a plugin inside Kubernetes now you can easily
create easily run your cluster inside Kubernetes and also provide storage for other Kubernetes parts
any major releases or new milestones so like we are applying to do a release in next month
like cluster 3.10 so this month so within two weeks actually so it has new features like
brick multiplexing and debugging features like taking the state dumps on gfap clients and
performance improvement like kind of that and yeah and we have like long-term projects like
speaking yeah yeah so our upcoming releases will with the coming release we are mainly targeting
improving our container kind of workloads we weren't particularly suitable for the container
scale where you would with the asix project where we can automatically create volumes
lustrefs volumes on demand with the way lustrefs worked it wouldn't scale so much so we have done
brick multiplexing as jiffin told this enables us to run multiple bricks in a single process
what's a brick a brick is basically a directory that lustrefs exports right so to export
this directory lustrefs runs a demon we call lustrefs d or the brick demon so each directory
would have its own demon that was exporting it but when you scale to the cloud or the containers
that doesn't manage it a lot we would waste a lot of resources so we have we are working on
making that better by running multiple or serving multiple bricks from a single process
that's one of the major things we are going to do apart from that we are working on improving our
performance particularly for small files and those things where we got right now we got
notification support that was implemented recently that would that will in the future help us
do better caching and that would improve performance better so that that is like in the upcoming
release we are also doing better we're also doing a lot of work on our apis the lustrefs api gf api
to make it more suitable and give more features and apart from that in the longer term we got
projects happening to do a server-side application so right now lustrefs works by doing everything on
the client so servers are generally dumb servers don't know what they're doing lustrefs client
decides where the data should go where it should be replicated and everything but we're trying to do
a server-side replication to reduce some of the load on the clients because clients generally won't
be as powerful as servers right so servers can do a lot more of the heavy lifting so we want to do
that there is a new project to do distribution better so we have a distributed translator which
distributes files across but that is that doesn't scale particularly well so we're trying to
improve that and in addition to that we're also working on a new management team so called
blessed e2 which should help with our scale issues and which should also help what do you say
new developers coming into the project because lustrefs lustre d is a really complex bit of software
and generally if any new feature were to be developed in blessed here for that to be available to
end users you'd have to do something in blessed e and for a developer who was working on that
particular feature to come in and figure out what to doing blessed e was a hard task so we are
simplifying that cleaning that up and there'll be a new daemon around that and that's happening so
that should be in the next couple of releases so yeah these are our longer term goals right now
I mean anything else guys?
it's what commercial told is mostly internal to Gleester so in integration parts we also now
support Gleester blocks as in we have a way to export the Gleester volume bits into as a block
now it is an integration part not completely inside Gleester.
yeah thank you very much guys enjoy the rest of the show have a good night
hi everybody I'm at the on cloud booth and I'm talking to
Holger Dairoff from on cloud hello so can you tell me what on cloud is and why you're here
on cloud is an open source file sync and share solution so basically dropbox for your own
server and your own data center and your own Raspberry Pi if you happen to have one and we're here
to show people how on cloud looks like and we're even printing some on clouds with an open
source 3d printer today when you come by our booth.
who met the printer sorry who met where did you get the printer this is from the fablab
and it's all open source on guitar and open singing yeah you can go out and print your own
own cloud which is kind of cool. so there was a bit of a parting of ways during the year
so on cloud is still going ahead as a project? oh absolutely on cloud is strong going ahead as
a project we have rehired quite some people to get ahead and programming again we're planning a
tender old version for the spring there are some exciting stuff upcoming like integrity checking
with check-summing custom groups so you should definitely have a look at the early
better versions there and yeah some people decided to go a different forked way so to say like
it often happens in open source but that's normally an open source I guess and they're probably
different focuss we'll see and what sort of licenses on cloud released under so on cloud has a
core version which is which is on cloud server which is released on the HEPL so everybody can take
that and enhance like the forked it's right and then we have an enterprise edition which has
very small additional features which are useful for very large corporations maybe 500 users
upwards and that's under a so-called commercial license which means those people still can have
a full look at the source code they can still modify it but they cannot give it to other people
and so what it's been a busy year I guess but going forward what does it say what's the plans
the plan for own cloud is really to continue to provide a great product focused on the integration
of the server side the desktop client android and iOS devices and other devices as they come up
and really provide a great user experience between all of those and having functions not
just in the web front end but also have them accessible from the desktop side with sharing
API and all of those great items so as a if I was a corporation rolling out these boxes are
providing as a service I could go to you guys for contracts and support know that oh absolutely
right so we sell subscriptions yeah and which includes support and then also the right to do some
modifications on your own and keep them if you like so which some people like to do others don't
yeah so it's a freedom of choice from all of us absolutely okay well anything else that is coming
up that you want to tell our listeners about there will be a new version of the desktop client I
think in one or two weeks version two dot three couple of exciting things like right click share
with email which is something people were missing till now pretty easy which actually but people
will like it and as always it's got to be a new greater and better version which provides even
better sync performance fantastic thank you very much for taking the time and enjoy the rest of the show
very welcome thank you so much
hi I'm at the CAA circuit and I'm talking to a first over hi can you tell people what CAA
is it's a free and open certification agency so we provide certificates like let's
encrypt but we are older and a little bit different okay how are you so different okay our
focus is on the identity card the signing and everything like this while let's encrypt mostly
focus on the encryption both provides encryption but we provide also certificates that identify who
is owning the server or the email or whatever you use can you so this whole process relies on
the agents yourselves I guess verifying the identity of the people who are going to be issuing the
search so if I wanted to become unsure what do I need to do you have to get this showed yourself
to the maximum of points 100 points and afterwards you have to do a little test you can do this
test as often as you want until you have finished it the reason is we want just that you know
everything we don't want to test you we want just and sure that you know what other things and
then you can start to ensure others okay so what's the process let's pretend I was a newbie
coming up to the stand here okay first you sign up on the website or you can do it later but the
ideas that you sign up on the website first then you can already get certificates but it's an
or anonymous certificate and we cannot say well it's you if you want to be you then while you
enter you you ask the sure if you can be assured then you fill up your inform with your name the
date of birth and your email address and the signature and the date and you sign that you accept
our policies and everything and then you provide you a D card or passport or driver's license
or something like this so some kind of official document born or true and then they assure
checks this documents and we are told we do more or deeper checks than most polis or
or something like this and you know what? Yes the checks are very thorough I've done this
yeah yeah and then we do a little yeah ask questions or something like this to just ensure that
whether the person is yes he needs to be honest and then we send sign it and compare the
what we also do is compare the picture and the signature everything to the person also so we
really identify the person like on a PGP key signing but a little bit deeper process and then we
enter this on the website with some points and then we're done and the whole point system the more
points you have the more trust you have because you've been so I could go with my start to you and
I could go to somebody else and we could go to somebody else and that proves to more people more
people are saying yes I am who I say so therefore my trust level in the metro coza exactly so we start
with one assure who can give you probably up to 35 points you start as a assure with 10 points
a maximum and there's more you assure the more points you can provide and you need 50 points
as a surey for the one who gets the assurances to get certificates with the names and 100 points
to get an assure yourself and also for co-signing certificates but you can get as many certificates you
want all the time very good so the more focus is on building the trust model so have you been
able to get any of the master certs into any of the browsers or as yet no not yet we had one attempt
of an audit which is some years ago and this was in theory quite positive but there was one element
while it was failed and we did not manage to start another audit since then and actually currently
we would be more interested in the audit as such and not yeah it would be a nice bonus to get into
browsers but we actually believe that the system with browsers and the browsers except in certificates
is broken because well why are you going to a certificate agency to get the trust you trust
the certificate agency and so well you don't see it in the browsers so now as you trust the
browsers about the certificate agency and you don't select them yourself and that's just broken
yeah so by yeah you've gone to all this work to trust everybody and then you go yeah no it doesn't
matter exactly so that's well we be want to be able to pass the audit eventually but
well it would be a nice bonus to get into browsers for us but for us it's more the idea to get
the policies correct the processes correct the trust level adjusted and that's more in our
interest than well okay it would be nice to be in the browsers but well there's nothing to say
that a piece of technology won't come around when everybody has got a level of trust to go okay well
this is how we're going to implement it and now we put the root certs and if the trust level of
the root certs is over 14 million then we can say more or less and of those people you can build
a technology for trusting this the root cert yeah exactly but the work on trusting peoples
it needs to be done yeah exactly so for us that the more important thing is that our members can
trust us and that's what we care most about sure we know that we would get a lot more members
and everything if we would be in the browsers and that would be great and everything but we don't
want to give up the trust of the current users the current members and that's our focus okay so
so what we're saying is for people who want free and easy certs go to the lesson crypt
for people who want trusted certification from the ground up come over to the ASR so if you're
only interested in the encryption and easy handling everything go to lesson crypt and it's great
that they are there because they cover ground that was not covered before we're happy to have them
we have some ideas maybe to to join into it we discussed something today that was
quite interesting not this lesson crypt and test but with somebody who has some ideas and yes we
would say yeah if somebody is like this it's enough and if they it's what they need this
great there was nothing like this and we could not provide it so it's we are really really happy
that they are there but we provide something differently we it's a different service I believe
in I think so too is all that so well thank you very much was around coming up we should know
about or can encourage people to start yes so we need a lot of people we have something
quite boring for most of you to do which is we have to move our organization that is behind us
so we have a kind of association in Australia and we have to move to Europe with the association
so we have to create another association we have to switch all the policies and then get all
the assets moved and everything so that's quite boring but we have to move because we don't have
enough members in Australia to fulfill the laws yes exactly so at the moment it's okay but we
know that we will have to move soon and that's what we are working at at the moment and we always
need people in other things as well so servicers and everything so we can need people yeah
cool thank you very much links for everything will be in this show notes so thank you very much
for taking the time yeah thank you
hi I'm not the secure youth boot who could you possibly be okay I'm if I should I'm not from
security but I can tell you a little bit about it um yes security is a German association
to support secure project or projects about security to be more honest and the major projects
they support the CSR but they also have a PCB server and some other things actually I'm not
too deep into it so I don't know all the details but they also support other projects what they do
is they collect money and provide it to those projects they also have servers running and they do a
little bit yeah advertising and some practice not as much but a little bit and that's a major focus
and that they also compare them a little bit and yeah low-level research so that they don't have
much much manpower to do this but they also inform about those projects different ones so it's not
only CSR which we mostly see but they also have some other ideas that's very okay thank you very
much
you've been listening to Hacker Public Radio at Hacker Public Radio dot org we are a community podcast
network that releases shows every weekday Monday through Friday today's show like all our shows
was contributed by an HBR listener like yourself if you ever thought of recording a podcast
then click on our contribute link to find out how easy it really is Hacker Public Radio was
founded by the digital dog pound and the infonomican computer club and it's part of the binary
revolution at binrev.com if you have comments on today's show please email the host directly leave
a comment on the website or record a follow-up episode yourself unless otherwise status today's
show is released on the creative comments attribution share a light 3.0 license
