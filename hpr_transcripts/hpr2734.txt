Episode: 2734
Title: HPR2734: Mashpodder
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2734/hpr2734.mp3
Transcribed: 2025-10-19 15:58:21

---

This is HPR episode 2007-134 entitled Mash Potter.
It is hosted by Mr. X and in about 19 minutes long and carrying an exquisite flag.
The summary is a pro-rushed attempt at covering the excellent podcast client Mash Potter.
This episode of HPR is brought to you by an honesthost.com.
Get 15% discount on all shared hosting with the offer code HPR15.
That's HPR15.
Better web hosting that's honest and fair at An Honesthost.com.
Hello and welcome Hacker Public Radio audience.
My name is Mr. X. Welcome to this podcast.
I'd like to start as usual by thanking the people at HPR for making this service available
to us all.
She's really a truly invaluable and unique service on these here intertubes.
Hacker Public Radio is provided by the community for the community.
That means you can contribute to.
Why don't you pick up a microphone and record something yourself.
She's really very easy.
You can use your mobile phone.
I name P3 player.
I can beat it if you've got one.
I kind of am doing.
Might you give it a go?
I'm sure you've got something that might be interesting to us all.
It could be just a few minutes or a big long rambly thing.
Hopefully this isn't going to be like that.
Well, it seems like a while since I've recorded something and I feel a bit rusty and this
is really a bit off the cuff.
So hopefully it won't be too rambly.
It all started when I was...
I've got a server that I use.
In fact, the only thing I use it for is now it's an old compact iPAC server which I've
mentioned before in a previous podcast.
Nowadays I only use it for downloading podcasts.
I use it for nothing else.
It's got a very old version of Ubuntu and I should really upgrade, rebuild it and I can't
be bothered.
I don't have the time in too lazy.
And I've been using for a long, long time H-pudder.
That's right.
And the only reason I chose that as I mentioned before was because it could import iPudder
which is before H-pudder.
So H-pudder is an incursus command line client thing that you can run.
But recently for some reason it came back with an error and I can't even remember what
the error was as I say this is off the cuff.
So I think it just locked up and wouldn't pick up any downloads.
So I just gave up and I went hunting for a replacement podcast client and I think I created
a list actually.
I've got that here.
No, I don't.
I don't have the list here.
Yeah, I had to look at it because I wanted something that was going to be an incursus command
line thing.
I always didn't want the graphical user interface.
I wanted to run it as a start-up and script and just do its thing and that was it.
So I looked at a few options and the other thing was that I couldn't have too many dependencies
trying to install the thing because the repos are probably a long gone on this.
I'd imagine on this old version of Ubuntu.
It's through lack of time and laziness that I was going down this route and I think a lot
of people actually use, there's bash scripts going about that can do this sort of thing.
And there's a famous bash podder which yeah, the bash podder was written by Link.
The problem with the bash podder is from my particular needs is that it basically pulls
all your podcasts into one directory for you to listen to, to give you some listening
for the day sort of thing.
Whereas I don't tend to listen to my podcast like that.
I download each podcast feed into a separate folder and then I listen to one until I've caught
up and switched to another and listened to that until I catch up.
So I can be way behind time doesn't really matter.
It's sometimes makes a match as well but I like them in separate folders for each feed.
So that's how I do things.
So that wasn't ideal and I think other people found that issue as well.
And the infamous, the great Chez Griffin took, I believe, took bash podder and came
out and matched a few ideas that people were talking about and produced a mash podder,
hence the name, mash podder.
And a recent episode of Clatu in his January order, it was a season 12 episode,
I can't remember 24, I could have been 24, not sure.
I'll put it in the notes.
I want to show notes when I get down to it.
He mentioned Chez Griffin and I said, oh, I learned from Chez Griffin today.
And I must admit, when the series started and I was just at that point in time when I was
really keen on Linux, I still am, but I don't have the time these days.
I listened intently to every episode and a great source of knowledge and just looking at the script,
it's a joy to read that and whatnot.
So I basically got a mash podder by Chez Griffin.
So I'll just have a wee mash, mash podder, yeah.
And it's available on GitHub.
I don't have a funny feeling, it's now no longer maintained.
I was starting in 2005, I couldn't have the notes I've got here.
And as I say, one of the things I've got is it's got very few dependencies.
It needs WGate.
I'll just put every Linux distribution got WGate curl.
Again, everything's got curl.
And XSL, XSL, T-proc.
Again, that's pretty common as well.
So I just need to put this bash script in the right place, run it.
And I was way to go sort of thing.
I'm going to do a terrible job of explaining how to set it up.
You'd be better just looking at the website probably.
So yeah, it's available from GitHub.
And the Chez Griffin mash podder, I'll put a link to it.
So I've just got a folder called the mash podder.
And the first file that you need to edit is MP.conf.
And that basically stores your feeds.
So you just paste the feeds into there.
And there's each line in the configuration file
has three fields to it.
So the first field, and they're separated by a space.
So the first field is the URL to the RSS feed.
So you just copy and paste that from whatever, you know, to get the feed.
A bit of space.
And then a name that you want.
It's really the name that the folder name that it's going to be stored in.
So for example, I've got, let's say I've got the hacker public radio, RSS feed.
And then I put a space.
And then I've just used the letters HPR.
So that will generate a folder called HPR.
And then you say, well, how many feet?
How many episodes do you want to check back?
So I think that's what that does.
And you can either, you see, you can either have, for field three,
you can either have the option all, none, update or a number.
So all, with all it'll, it'll go through the whole feed.
Checking to see if it's been downloaded or not.
Obviously that takes a heck of a long time.
None.
Well, that's like the same language feed.
So it won't download it.
Update goes through the RSS feed, episode by episode.
And records each episode into the log file.
So that much better thinks you've downloaded the episodes.
It doesn't actually download them.
It just, it just brings it up to date.
Just, just a catch up feature.
I used this when catching up with HPR.
Obviously there's a lot of episodes.
And I took a while to pick up all the episodes and mark them as downloaded.
But didn't download them as explained.
And the last number is, how many episodes is the check back?
So I've got mine set to 20.
So it basically checks back 20 episodes,
and if these have all been downloaded before, then nothing gets downloaded, basically.
Or if any new episodes have appeared, then these get downloaded.
So that works nice.
So that's the configuration file.
Three fields, URL, folder name, and stringing with either all none update,
or the number of episodes to check back on, basically.
So that's quite straightforward.
Now you've got the actual script itself.
Now I moved that into a script's folder so that I couldn't run this from anywhere basically.
And that's been added to my path statement.
So the script itself, the way it's been set up,
you've got a big chunk.
There's lots and lots of comments.
And the top part is to do with configuring the script.
And then at a certain point you come to a com.
It says end user configuration.
And then below that, no changes should be necessary below this line.
So it's really just the top part.
You really need to worry about it.
But it's certainly the stuff below that is interesting to look at,
particularly if you want to hone your skills at bash scripting.
There's some gems you can pull out from this.
If you have the time to look at this, I already looked myself,
but getting times problems.
So the first setting is Baster.
And that just tells bash budder.
Where the base directory is for bash budder.
And you know, might just set to home files.
Mash budder for example.
Next one is RSS file.
That's telling you where's the RSS feed stored while they're stored in Baster,
which is when you just defined forward slash MP.conf.
I mentioned that that holds all the URLs.
Podcaster, well that's Baster, forward slash podcast.
So we're on my podcaster stored.
Create underscore podcaster equals one default.
One will create the directory for you if it does not exist.
So you can turn that off if you like.
The reason for that is that means it will fail and exit if the podcaster does not exist.
And that might be useful if you've got a mounted share for example.
You wouldn't want to go off and create a directory in your mount point
sort of thing if there's no share there.
So that's quite a handy feature if you're doing that sort of thing.
Date field there.
Well I think that's that's again if you're using it like like bash budder
and storing everything in one folder for that day, you know,
as I said to you, that's not the way I listened to podcaster.
I have a folder for each feed location of temp there.
So temporary files are stored and Baster, forward slash temp.
Date string valid date format for date based archiving.
So again, that's using if you're using it,
if you're archiving it by date, just just talking about then you can do that.
In part parse enclosure, location of parse enclosure XLS file,
Baster, forward slash parse enclosure.exl, XSL.
Just leave that as it is.
Podlog says this is a critical file.
This is a file that saves a name of every file downloaded or checks
with the update option at mp.com.
If you lose this file, then mash purer should be able to automatically
recreate it during the next run.
But still a good idea to make sure the file is kept in a safe place.
Default is Baster podcast.log, which is what mindset set to.
PD log backup, setting this option to one will create a date stamp
backup with your podcast log file before a new podcast file is downloaded.
Default is not to do that, so I've left it at that.
First only means look to mp.conf for whether to download or update.
One will override mp.conf and download the newest episode.
As I've left the default, I'll left that blank.
M3U default means no M3U playlist file created.
One will create it while I don't use playlists, so I'll leave that to blank.
Daily playlist, default is empty.
It means no daily m3U playlist created.
One will create an mp3U playlist and podcaster listing all the newly downloaded shows.
That's fair enough.
Update default means look to mp.conf on whether to download or update.
One will override mp.conf causing all fees to be updated.
Meaning epsis will be marked as downloaded but not actually downloaded.
And the link on the default for that is to be empty.
For both default is empty so it's quiet.
I've got my set to one so I can just see what's going on.
Just for now anyway.
Wget quiet, default is dash Q.
I've got that set to Q so you don't get out boot from Wget.
Wget time I set to 30, 30 seconds.
That's fine left that as it is.
Location of binaries.
So Wget is set to user bin Wget.
Curl is set to user bin curl.
SSL tproc is set to user bin SSL tproc.
And that's it, that's all there is.
So there's only a few things to really change there.
You basically run it and it crates.
In my case it crates a folder for each feed and it just does its thing.
And I think that's really all I've got to say on mashbudder.
And it isn't anything earth shattering.
It just does what it says in a time gets it gets on with it.
Does its job.
It's just great.
It's a great replacement to hproder and got me out of a sticky situation.
Because I really just couldn't face building this old server.
I'm in again rebuilding it.
I should.
I really should.
I shouldn't be using this old version of Ubuntu.
I think it is actually.
But I just haven't got the time.
And so that's that.
I have a feeling this was very very rambly.
I do apologize.
I hope it was of some use to somebody mashbudder.
If you're looking for an incurses command line client for downloading podcasts.
It's a ticket.
Right.
Okay.
I think that's about all of it to say for this podcast.
If you want to contact me, I can be contacted at mrx at hpr at googlemail.com.
That's mrx at hpr the at symbol googlemail.com.
So until next time, thank you and goodbye.
Today's show, like all our shows, was contributed by an hpr listener like yourself.
If you ever thought of recording a podcast, then click on our contribute link to find out how easy it really is.
Heckup Public Radio was founded by the digital dog pound and the infonomicon computer club.
And it's part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly.
Leave a comment on the website or record a follow-up episode yourself.
Unless otherwise stated, today's show is released on the creative comments,
attribution, share a like, 3.0 license.
