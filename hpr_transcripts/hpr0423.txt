Episode: 423
Title: HPR0423: Interview with Ian Geiser of the KDE Project
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0423/hpr0423.mp3
Transcribed: 2025-10-07 20:15:22

---

It's like the
This is Clat 2. I am at South East Linux Fest and I'm going to be talking to Ian Gelser Geyser.
Geyser. Like the Geyser. Cool. So you're at the KDE booth, which is really cool. And I see
that you are running KDE 4.2, which is really cool. I love the four series. I think I overheard
you say that you were kind of fond of the 3.5. I, to be honest, really liked 3.5 for a long time.
But it was kind of like, I love KDE 1 for a long time and I think KDE 2 came along. So I mean,
I, in February with the bullet, started developing for four. The new API is much better. A lot of new
goodies, a lot of hardware extraction, sound extraction, just a lot of neat stuff for software
development. So how long have you been with like Linux and KDE, I guess? I've been active on KDE
since about 2001 and Linux in general, maybe 96, 97. Okay. All right. Cool. So what do you do on
the KDE project? Historically, I worked on everything from D-COP. That was the interprocess
communication as well as some JavaScript bindings to the cute layer and KDE layer. I've also done
some hacking on KDevelop and a couple other side projects, mostly related to just interprocess
communication and stuff no one ever sees. Nowadays, I'm working on the kiosk support.
This is ability to lock down a system. Okay. Basically, every KDE application has the
ability to have system settings enabled or disabled based on user, based on policies set by
the administrator. And that part has been very well tested and implemented. What I'm working on
right now is the GUI tool to demonstrate these things remotely. Okay. Now, with this kiosk mode,
I mean, obviously it'd be used on kiosk like in places where there are machines. Is there any other
use like mobile devices or anything like that or is that not really? This is also very useful in
academic environment where they need to lock down a machine so that students don't mess up the
machine or use on authorized applications. Oh, cool. So it's almost like lock it down. I mean,
like, right, you can even filter file types, URL, you can make it so they can't turn off the
machine, sort of pulling the plug. Okay. There's a lot of functionality you can enable and
disable meant specific menu items features of application. Okay. So it's a very powerful framework.
The problem is that the is under-documented and not advertised a lot. So yeah, I mean, I've
read like KDE Planet. I follow.news a lot. I'd never heard of it. It's one of those things for
a long time. The only information about it existed in a read me and subversion. Wow. Yeah.
But it is possibly one of the coolest technologies in KDE because it's integrated so deeply
in the KDE. It's very easy to use and hard to serve the best. Now, this is something that strikes
me about KDE in general and you can correct me if I'm wrong because maybe this is just, I don't
know these kind of things, but it seems to me like a lot of the technologies that KDE uses,
it is like very, it starts, it's from the like the ground up sort of, you know, it's like it's
all very integrated or whatever. Is that an accurate statement or is it just someone talking
because they don't know? No, that actually is very accurate. What drew me into the KDE project?
Features that are added in the core libraries stream up to the end users very easily.
We joke that people say that KDE has too many features or is too complicated. One of the
running jokes that I've heard is that it's too easy to add features to KDE. That's why there's
so many bells and whistles. Right. Yeah. But yeah, there's the ability to integrate at the
base platform is what I think makes KDE very integrated and very powerful. Yeah. Here's a random
question and this is pretty random, but what is like in, you know, 10 words or less if you want?
K-developed versus cute creator. What's the difference? K-developed? Why do both
exist like that? Um, TrollTech needed something specifically to do C++ for cute K-developed can
do everything from WX Windows, GTK, SEL, Windows development. Everything. And it's not limited to C++.
It does Python Ruby. That's what it is. So if you're going to do PyCute, it would be true K-developed,
potentially. Like if you wanted to do it that way. Okay. Yeah. That answered that thing.
And that hasn't hit before yet, right? No. It's really, we're suffering because we don't have
a lot of developers. So people listening to this podcast and you're looking to actively be in a
project, K-developed needs people. And you'll be a hero amongst people who at least use K-developed,
right? Now, how, like when you, like a lot of the applications that I really, really like,
you know, they're very slowly coming over to Q4 slowly but surely. I imagine it must be a big
task to port an application from Q3 to Q4, or maybe it's just that, like for instance, K office.
We didn't took it a long time to get over to Q4, but maybe that's just because it's a big application.
It's a big application, but people also took the time to re-evaluate and clean up code,
so things that take it longer. Okay. There were a lot of changes that happened both in K office,
Dan Keating, Amarang, all of these are not just bit for bit for it. Right. There was a chance to say,
you know, we're going to break a lot of stuff. Let's get them out. Fix some of the things we couldn't
fix in the past. So it, yes, it did make things a lot longer, but I think two or three years down the
road, we're going to be glad that we did these things now versus just waiting another release
to clean up the crop. Yeah, yeah. I mean, I might be one in a hundred, I don't know, but I mean,
I certainly appreciate, I don't care that it's a slow conversion in some cases as the user, I mean,
it seems like it's really worth it, because when it hits, it's really, really incredible.
Right, really cool. Like I've been telling people all day, 4-2 is really a Katie release that I'm
proud of. Yeah. 4-3 is looking great, and we're getting new features that I think are more solid
and mature. So I think as a development group, we're really coming into our prime with the Katie
project. Here's another random question. Sure, you might not be the right person to even ask. So Katie,
if you take Katie, there's like, you know, there is Katie, the desktop environment, I guess.
Right. And then there's like little applications like K, right? Big ones like K office.
Those are all, in my mind, at least part of these KDE packages. Right. If you buy quote-unquote Katie,
that's what you get. Is Katie in line the video editor part of the KDE package?
I would not consider it part of 4KDE, but it is definitely part of our application stack.
It's like DigiCam, Amarang, K3B, all very important applications, but they're not necessarily
part of the core KDE. Okay. So, but they are part of our stack and very, very valuable parts of
our stack. Yeah. Okay. I mean, I think the Katie package, whatever that is, you know, the KDE
as a entity, they do a really good job of like, you know, packaging, packaging applications together,
giving the user a very complete experience. And I mean, I certainly enjoy it. I recommended
everyone I know. So, you know, great job to all of you developers. Great job to all of you guys,
all of the development team and everything like that. I'm just, I'm immensely impressed with it.
I use it as often as I can. So, you know, yeah, thanks. Thanks for the interview. Thank you very much.
Thank you for listening to Hack the Public Radio. HPR is sponsored by Carol.net. She'll head on over to
C-A-R-O dot-A-C all of the three.
So, thank you very much for joining us today, and thank you very much for joining us, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and thank you very much for joining us today, and
