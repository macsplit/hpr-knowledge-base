Episode: 4228
Title: HPR4228: Auditing Audio Files For Youtube
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr4228/hpr4228.mp3
Transcribed: 2025-10-25 21:44:38

---

This is Hacker Public Radio, episode 4228 for Wednesday the 16th of October 2024.
Today's show is entitled, Auditing Audio Files for YouTube.
It is part of the series a little bit of Python.
It is hosted by Dave Hingley, and is about four minutes long.
It carries a clean flag.
The summary is a detailed technique to ensure all music used on my YouTube channel
is free from copyright claims.
Hi, welcome to the episode of Hacker Public Radio.
I'm going to talk a bit about some nerdy stuff today,
which I know will go down well with you guys, so here we go.
I'm familiar with, and I'm sure you must be familiar with Abraham Wald,
who was a mathematician and founder of a problem solving technique called operational research.
You may be familiar with the core principle.
So during World War II, he was tasked to help decide where arming needs to happen
on aircraft coming back from bombing raids.
So he was looking at all these aircraft full of bullet holes,
and he quickly came to the idea that an aircraft that came back with bullet holes
doesn't need arming in that position.
So the assumption is that an aircraft doesn't come back,
had a bullet hole not in that position.
So if you map the location of the bullet holes,
that will give you an idea of where you need to put your armor,
as opposed to just cover the bullet holes,
because that really doesn't work.
But also the idea is that the planes themselves demonstrate that I can fly with a bullet hole,
so it doesn't need arming in that position.
So there's the genesis of today's episode.
So here's my problem.
My problem is I have a YouTube channel.
And if you're interested, I talk a lot about making comics and drawing and drawing and art and creativity.
And as part of that, I put music all over the videos.
Now the music I use is always public domain.
I spend a lot of time finding public domain recordings that I can use.
And so if you're so often a YouTube will throw up a copyright strike or copyright claim.
And I then have to sort of dispute that.
Now I've got swaves of information.
I write down the location where we follow.
I download the picture right from the conditions of the license, all that sort of stuff.
So I'm normally armoured.
I'm normally armoured here against this stuff.
But be interested to know which songs are difficult,
which ones should I worry about and not worry about.
So I came up with the idea of making an audio audit
and using YouTube's own system to tell me which tracks are problematic.
Now I've got about 450 music tracks on my music directory.
So I wrote a bit of Python.
And what the bit of Python does is it takes the first minute or,
or their about if it's, if it's less than a minute uses, you know, as much as it can.
Of the music.
It taxs it all together into a big long video with a picture on there.
And then puts the song title on.
A little bit of text and we're using some, a few of the libraries like Pi Movie and the films like this.
It then generates a video.
And then puts that video in a location that I can specify.
Now it will make the video at a low res because you don't want to have a massive video to upload.
Just so you get some idea, my audio video was about four hours long.
It took eight hours to upload.
I just left it overnight basically.
And then the next day I got back and it found five copyright claims against this video.
Which I can look at them and check.
And yes, they are still probably the main locations.
But I know that if I'm going to use these pieces of music in the future,
YouTube will throw up a copyright claim.
Which I can, yeah, I've got the information I can dispute it and win.
I've uploaded the Github.
So if you're interested or want to use that code for your own purposes, you know,
you can get it from there.
If you're interested, my YouTube channel is also in the show notes as well.
And I look forward to hearing if you found it useful or found this episode interesting.
Alright, take care, bye now.
You have been listening to Hacker Public Radio at Hacker Public Radio.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording podcasts,
you click on our contribute link to find out how easy it leads.
Hosting for HBR has been kindly provided by
www.unsthost.com, the Internet Archive and our Sync.net.
On the Sadois stages, today's show is released under Creative Commons,
Attribution 4.0 International License.
