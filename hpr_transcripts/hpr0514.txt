Episode: 514
Title: HPR0514: Talk Geek To Me ep 06
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0514/hpr0514.mp3
Transcribed: 2025-10-07 22:14:05

---

Music
Hello everybody and welcome to today's episode of Talk Geek to Me.
Today I have for you a review of my experiences with Debian, GNU, K3BSD.
And they featured Latin American free software news item from news.northxsouth.com.
So without further ado, let's get out on with it.
So, what is Debian, GNU, K3BSD?
Debian, GNU, K3BSD, one of those typical hyphen-filled names where each component means something.
In this case, what I'm reviewing is Debian, GNU, which is the Debian distribution of the
GNU operating system, but one which runs the free BSD kernel.
What people who are not involved with the Debian distribution may not know is that Debian
comes in many ports.
Most of these ports revolve around an architecture or a computer type.
Some of you may have heard of Alfa, Spock, PowerPC.
These are some types of computers which Debian will run under.
Debian even has one for S390, the system 390 IBM mainframe.
Let's exotic i386 or AMD64 for the standard 32-bit IBM PC-style computers until Pentium
and Post Pentium and the AMD 64-bit architecture respectively.
With the K3BSD community within Debian 1 to be, it's an official port, but yet they
are still proving themselves.
They want to be the port that makes Debian run with a free BSD kernel.
Now you may want to know what the significance of a choice in kernels is and what meaning
it has.
It turns out that there is a give and take between different kernels.
At a certain point in time, one kernel or another will surpass the other kernels at something.
For a while, the BSD kernels were more stable, less crash-prone-prone, than Linux.
Currently, free BSD has better SMP support than Linux.
I believe right now Linux has more desktop hardware support than BSD.
For a long time, BSD could handle Apache web servers with large numbers of threads better
than Linux could, but this is all dependent upon where you are in time.
Maybe SMP on the BSD is better today.
Tomorrow, Linux may be on top.
Let's not forget that most of us are running an operating system called GNU with a Linux
kernel.
I need to rehash this one here for my regular audience you heard the old story before.
What I do think you need to know, for the sake of this review, is that GNU has a kernel
of its own called heard.
They never got off the ground into mainstream use.
It's like if we likened our operating systems to a car.
It would be as if the car came without the engine.
Most of us choose the next kernel as our engine.
It's like the car manufacturer can't quite get the engine down, but everything else is
great.
Finally, that my first hack of public radio was about choices and customization, being
the real Linux selling point.
I invite you to take a moment to think about the possibility that could come about.
Someday you may be able to choose your distro and your preferred kernel as separate and
seamless choices.
There are other ways to look at this too, because of the fact that as people in what is sometimes
called the NYX world, we have the greatest amount of software available to us to run.
While there are a few very few apps from my Windows pass that I still run, okay, one
game actually.
I still run it under a virtual machine.
I was for a while running it under wine.
We can run most Windows software given a little geeky effort using one of these techniques.
Truth be known, there is always a preference for running something built natively for your
current OS.
FreeBSD is like this too.
It has its virtual machines.
Mainly, it is good old Unix portability that allows nearly the same code to compile
under different systems, but BSD goes even further as it has a Linux compatibility layer.
We are no longer talking about any link of virtual machine.
We are talking about a mapping between BSD system calls and Linux system calls.
This allows BSD users to run binaries, which means already compiled programs from the world
of Linux.
Of course, BSD is no stranger to this.
They had an SCO Unix compatibility layer for quite a while and perhaps they still do.
And the world of AMD 64 Linux has its own compatibility layer also.
Debian GNU Linux for AMD 64 comes with a package called IA32Lubs standard.
This allows you to copy a binary for 32 bit Linux and give it libraries it needs so you
can run on otherwise 64 bit OS.
I run the web page authoring package composer with a K in the name, but it's not part of
the KDE project this way for quite a while.
As an aside, I recently went back to running my system as a 32 bit system, both for composer,
but there is also a kernel module for the QMU virtual machine package that allows near
native performance for virtual machines.
For my personal situation, it meant more to have QMU machines running just as fast as
everything else than to run my system as a 64 bit system.
This merry go round of software does not end here.
There are emulators on Nix for old game systems galore, as well as DOS emulators.
I've even heard there is a PDP emulation.
I've heard that some industrial systems were controlled by PDPs, but are now controlled
by a PDP emulation under Linux.
And lastly, sometimes file format support for proprietary software last longer in the world
of Nix.
My understanding is that open office can read old versions of dock files that Microsoft
themselves no longer support.
Why then would you want to run one system over the other?
Let's get the quick one out of the way.
It's always good to know what is out there, kind of like having a plan to do something
else.
Just in case, Linux itself takes a wrong turn someplace.
But another reason is that you may want to keep something you're used to while you
check out something else.
Let me give you my personal favorite, which is the app packaging system.
Sure.
FreeBSD has their own package for almost everything you could want, as well as a compatibility
layer for stuff that may be Linux only.
But I have my favorites like everybody else.
I love the app package manager.
I even hear there is app for Red Hat for Door, CentOS.
The idea of keeping app and maybe seeing if I like a real Unix was something I found
compelling.
So I took the punch.
I got the ISL and tried to load it into its own partition.
Here's what it was like.
As can be expected, there was some frustration of getting used to the freeBSD installer
after getting used to the Debian installer.
This was nothing I didn't expect.
When I got the new partition up, I was dropped into a straight 80x25 column terminal.
The login was root with no password.
Okay.
So you have to make the first user account on your own.
I followed the instructions to point app at the Debian, GNUK freeBSD mirror, and then
did the update routine.
All these packages became available.
So I went to install the X server, the web browser conqueror.
After an hour of fiddling, well, this is where I had problems.
After we poured that there were dependencies missing for IStW and Conqueror.
These are two of my favorites.
However, BSD boots very fast, which I really like, so I kept trying.
After an hour of fiddling, I got X going.
X could not order to take my video, and it could not run the NV driver for Nvidia cards.
I managed eventually to get it to run in VGA mode.
With some trial and error, I got a fluxbox to run, but it could not run KTM, my usual display
manager.
I thought maybe it was just my video.
So I tried the live CD for Debian GNUK freeBSD, GING, but that did not recognize my video.
I still did not want to give up.
So I tried GING under QMU.
I figured that since QMU simulated older well-known hardware, that it ought to work.
Well, GING just hung under QMU.
Lastly, I downloaded an image from OSZU.org and went to run that under QMU.
That too hung.
Well, my conclusion is this.
I do like the faster boot time.
I like that a lot.
I also do not yet abandon any plans to try out BSD down the road.
But alas, at this point, Debian GNUK freeBSD is not where I need it to be.
In theory, I guess I could get it going because I got fluxbox going on, but I have to assume
that most users are actually using GNOME components, which I don't prefer.
I would have to try GDM for the display manager, then adopt a new web browser, a new CD
burner from GNOME, etc.
That is giving up a lot of my favorites, which I am not willing to do.
I do believe that if this project picked up speed, it would be truly amazing for our
community.
But this point is just not ready for prime time.
Latin American Free Software News featured story.
How the US blockade against Cuba affects information technology.
As mentioned before on this new site, the embargo laws in the United States have a direct
impact on information technology development in the affected countries.
Now a blog from Cuba has reported that Google Waves blocked for Cuban internet users.
The article in Spanish only goes even deeper and itemizes other examples of how the USA
embargo affects the IT development in Cuba.
Here is a translation of some of the cases.
An English travel agent, Steve Marshall, lives in Spain and sells travel packages to
tropical destinations, including Cuba.
An October 2007, about 80 of their websites, surprisingly stopped working.
As a result of an action taken by the US government, the Treasury Department, stared that
enum company had not acted in accordance with the law.
As the agency helped Americans evade restrictions on traveling to Cuba and was, quote,
generating resources used by the Cuban regime, unquote, among the domain names that were
shut down include www.cubedashhemingware.com, which is a side about literature, www.cubedashhavanacity.com
on Cuban history and culture and other support services for tourists from Italy and France,
such as www.chowcubed.com and www.bonjourcubed.com.
The Institute of Scientific and Technological Information, Idect, was affected significantly
when it was denied access to the Database Premier Academy with eBooks from Taylor and
Francis Publishing.
It was launched in 96 as a central database for researchers in the fields of science,
technology, and medicine.
In 2008, access to new versions of the Database engine free software used all around the world,
MySQL, remained limited, as also happens with Java.
They were purchased by the U.S. Corporation Sun Microsystems.
Carlos Martinez, the author of the article, also lists some other websites that express
their blockade against Cuba and other countries between them.
The most famous ones include Cisco Systems, Oracle Technology Network, Telefonica Spain,
and the Total Bank, and online banking and payment services, banking and business
credit cards company.
The good side of it, according to Carlos, is that the Cuban users will have to look for
alternatives to Microsoft Messenger and Google Wave tools in the free software communities.
But by doing so, the users will gain more security, privacy, and software freedom, he says.
Technically, although Cuba is living these prohibitions as a disadvantage compared with
other internet users, this blockade will force the Cubans to use messaging services,
Liberus, which is known by Jabber and the English-speaking world, giving them more security
and privacy.
Well, that about wraps it up for this episode of Talk Geek To Me.
Today's out.
There's no mail back today, because no one wrote me, boo-hoo-hoo, oh well, maybe this
episode will be a little bit better, maybe we'll get some feedback.
I hope so.
Anyway, the website, TalkGeekToMe.us.
My personal website, DeepGeek.us.
My email, DG, at DeepGeek.us.
At my TalkGeekToMe.us, you can find a variety of RSS feeds, the scripts for the shows.
Choose your download format.
Also, maintain a small mailing list of people who want to receive notification of new audio
by email.
Email me at DG, at DeepGeek.us, if you want on that.
Today's closing music, Mike Burgess, audio love song.
This one I got from Podsafoto.com, and it's kind of cool, it's like a rhythm thing that
goes on.
There's no real lyric line, but there is some vocal sound effects that I found very interesting.
I think you'll like it.
And I'll see you in a few weeks, thank you for listening.
See you in a few weeks, Mike Burgess, Mike Burgess, Mike Burgess, Mike Burgess, Mike Burgess,
Mike Burgess, Mike Burgess, Mike Burgess, Mike Burgess, Mike Burgess, Mike Burgess, Mike Burgess.
See you in a few weeks, Mike Burgess.
See you in a few weeks, Mike Burgess.
See you in a few weeks, Mike Burgess.
See you in a few weeks, Mike Burgess.
See you in a few weeks, Mike Burgess.
See you in a few weeks, Mike Burgess.
