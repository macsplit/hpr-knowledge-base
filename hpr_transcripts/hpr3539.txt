Episode: 3539
Title: HPR3539: Linux Inlaws S01E50: The OpenSUSE Project
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3539/hpr3539.mp3
Transcribed: 2025-10-25 01:11:35

---

This is Hacker Public Radio Episode 3539 for the first ever 24th of February 2022.
Today's show is entitled, Lillard's in-law S01550, the open-susur project and this part
of the series, Lillard's in-laws, it is the 50th show of Monochrome, and is about 68 minutes
long, and carries an explicit flag.
The summary is, an interview with Dr. Mayo, and Axel Braun from the open-susur project.
This is Lillard's in-laws, a podcast on topics around free and open-sour software, any
associated contraband, communism, the revolution in general, and whatever else, fans is critical.
Please note that this and other episodes may contain strong language, offensive humor,
and other certainly not politically correct language.
You have been warned.
Our parents insisted on this disclaimer.
Happy mum?
Thus, the content is not suitable for consumption in the workplace, especially when played
back on a speaker in an open-plan office or similar environments.
Any miners under the age of 35, or any pets, including fluffy little killer bunnies,
a trusted guide dog on their own speed, and Q2T Rexes are other associated dinosaurs.
Welcome to Lillard's in-laws, season 1,258, episode I can't remember.
Buttonhawtings!
Oh, things are great, I think it's episode 1,200,000, no?
Yes, something like that.
Today, we have very special guests.
It's the open-susah project that was kind enough to donate some time to us, but for you,
why don't the two guests on our own introduce themselves?
Let me start with you, Doug.
Yeah, so I'm Douglass Domino, I've been with the project since 2000, I basically do events,
marketing, PR, just a variety of different things for the project.
I also manage the open-susah conference and liaison with the company and manage the budget
and other things, so that's kind of what I do for open-susah.
And they go to person for a lot of things.
Excellent.
Yeah, my name is Axel Brown, I got in contact with Zuzer at that point in time, I think it was around 1998.
I'm an open-susah contributor since 2000s somewhat.
The year of the Linux desktop is for me actually since 1998, that was the time when I switched
completely to Linux, and my focus is making it usable for non-technical persons, so I'm
mostly packaging software to make it usable on open-susah, and I'm on the open-susah
board since about three years now.
A board member that stood as packaging, I'm impressed.
Well, yeah, why not?
All kinds of contributions are welcome, and the open-susah board is not something like
a board of directors, or something like that.
But before we go any further, maybe for the two people listening to this episode, who
do not know what open-susah is, maybe we should shed some more light on this.
So open-susah is a community project that was founded around 2005, I think, by our main
sponsor, of course, by Zuzer, and we still have a very close relationship to Zuzer.
So this is a commercial company, they are funding their money on open-source software,
and we are sharing a lot of values of ideas and, of course, technology.
The latest move that we did was that the open-susah leap, which is a classical release model,
is now sharing the binaries with Zuzer Linux Enterprise.
So what you basically get is open-susah Linux Enterprise without a subscription fee.
Excellent, excellent, excellent, excellent, but dark, and before we go further, Zuzer the company,
maybe not everybody knows it, what is it, and how it came about, what is the purpose
behind this company, maybe you can share more some stuff on the history of things.
Yeah, so I mean, the company really started out in the beginning of the days of when
Linus started with the kernel, and it really started out as a translation company,
so just a contributor base, and then eventually it had moved into creating, I believe it was
a slackware.
It's sort of the, I mean, the company has been around longer than any of the other companies
pretty much, and that's kind of why you often hear that people will say that Zuzer was
there first, but it started out based on the translations, you know, before.
Even longer than Ratchet, okay.
Yeah, and it started from four guys, matter of fact, one of them, I think he's still with
the company, but you know, a few of them have gone on and done different things in their
life, and actually one of our, one of the fellow board members works with one of the founders
for a different company, Dato, but so they create open source software dealing with
the distribution, either working obviously creating tools and working configuration management
and, you know, tools for, you know, helping to build the distribution, you have the open
build service, which might be familiar with, which, you know, that's sort of the, that's
the open, open, Zuzer project, and they also have the internal build service, so Zuzer uses
that, you know, they share open QA, which is a quality assurance for distribution, but
yeah, they, and they recently kind of got involved with the old container aspect, you
could probably see that through the purchase of a rancher and bringing them on board, and
so yeah, they, they're all over.
So it's a company older than Ruthead, and still being active, I understand, if I remember
this correctly, they floated 2019 or 2020, some of them, didn't they?
So they were purchased by Novel, this was, oh, I don't know, I guess it was somewhere
in the early 2000s, and then, you know, they'd gone through some transition of being purchased
by companies, and from, from Novel, they've got purchased by Tashmaid, they've got purchased
by Microfocus, and then it's purchased by a, a fund, and from there, then they floated
on the stock market, and now it's kind of back to where it was, when it started off a
little bit, you know, interesting, yeah, so it's a long road, but we're back to where
we started, but back to the open source project, so the relationship is somewhat comparable
to say to, to Ruthead and Fedora, on what Ruthead and, and, and, and center, as well as it was
independent, not part of this, yeah, yeah, I think it's comparable, it's comparable.
The open source project itself, so open zoos is more or less independent, although we
do not have a legal structure behind, just a something that is in discussion already
for long, for example, KDE is the EV, an eingetragnerverein, this is a charitable, charitable
kind of organization in Germany, or the document foundation, who's publishing a Libro
office, is a foundation, a stiftung, and we are actually thinking about something similar,
but if it's not driven from community, hang on, that was my phone, sorry for that, if
it's not driven by community, the board itself will probably not push for it.
Okay.
So it's a report structure for sure, you need that, those elements, I think, for the open
source, for an open source, community function is a nonprofit, and Fedora finds themselves
in very similar situations as well, so we actually have a lot of cross-collaboration
with them because there's a lot of similarities between them.
It's an RPM distribution as well, but before we go into the low level details, Martin,
what's on your mind?
Yeah, with all open source projects, my question is always, what do people do in their
daytime, right?
How is the people that build open-susahaware, earning their money, there's got to be some
people that work for a suited company, I imagine, that they should also enlarge them,
but that contributes to open-susahy from different purposes, is that fair to say?
Yeah, that's right.
Many of the Zuzer employees are also contributing to open-susah, for some reason as well, because
Zuzer has also a so-called factory-first policy, and for this, I need to explain a little
bit how the open-susah distribution is built.
So we have a repository, let's call it, it's called factory, and all new software has to
be submitted into factory.
From factory snapshots are taken, being tested in open QA, and if the test is positive,
then this snapshot is released as a new tumbleweed release.
Tumbleweed is basically our rolling release, which is updated at a maximum once per day.
This is comparable to Arch Linux, for example, with the big difference that our rolling release
is tested.
So you can imagine if you have a new kernel with proprietary NVIDIA drivers or a new
G-Lib-C or something like that.
The one or the other thing may not work at Hawk, so it needs a little bit of adjustment,
and this all comes up for the most part, comes up in our open QA testing, and maybe this
is the reason that the amount of unique users of open-susah has increased in the last year.
I think it's nearly doubled.
So that means as well, if there is new software for a Susel Linux enterprise, it goes through
factory as well.
No, excellent.
Some people may have a different opinion about testing, because as a man, the people are
just maintaining Arch packages.
Exactly.
For this culture, I'm an Arch package maintainer, so it's an Arch user-positive package maintainer
on my dad.
So, for example, there's this alarm distribution.
This alarm distribution was created specifically to port arm to the, sorry, to port Arch rather
to the arm processor family.
And they use a high level of automation, as it's not only for building the packages,
but also QAing the packages, once they've come down from upstream, as in the Arch, the
original core extra and community reports, just to stick to that example.
So they're doing that as well.
Yeah, I think in between Fedora is also adapting our open QA system for automated testing,
DACA, are you aware of that?
Yeah, they are doing that.
Katie uses as well.
Yeah.
And, you know, I mean, they, they, they, they, they, exactly, no more, no, brings a bell
in that context, yes.
Yeah, even before, before system, the Alliance, but that's a different story.
And I do believe there are some people from Debian using it as well.
And it's a keep, it's so us, I think, they do it.
The bump into people, you know, all over the place, because, well, I mean, not for the
past couple of years, right?
Since, since we haven't had so many events, but the bump into people constantly who are
using the tools.
And, you know, I often, I mean, that's one thing about open Susa's, we're really open
to the idea of any, anyone just, you know, like being a part of the whole ecosystem, you
know, like, if we have a tool, and, you know, we think it's useful for,
people, I mean, here, here you go, you know, just use it and contribute to it.
I mean, because that's how the whole ecosystem works.
Okay.
Martin, sorry, you wanted to add something.
Well, there you have it.
It's an always really about the fact that, around OBS, right, that seems to be quite a
differentiator of, I'm not mistaken, being able to build other distros.
Right.
Yeah, I must say, open, open build service was, for me, one of the key parts to join this
ought to stay with the community.
I mean, as I said, in the beginning, I think my first contact with, with Susa was around
1998. And in between, I think, I tried nearly every distribution, but always returned,
because not only of this nice community, but as well, because open Susa really makes it
easy for you to package software for different releases, for different distributions,
and as well for different architectures.
If you ever tried this the classic way that you have to set up a built environment
for, let's say, leap and tumbleweed, and maybe for dappian and something like that,
then you know what amount of work that is, and with the open build service is more or less
a key stroke, right? Then you can, for example, build for arm processes as well.
What are the usual CPU architectures that you support apart from Intel?
I remember, I remember ARM, SV5, V6, V7, V8, at least V7, V8, if from a completely mistake.
So, actually, I can kind of go back to a little bit of what had Martin had brought up,
you know, with the whole ecosystem and how people work in it, that kind of goes along
the lines of that question, you have as well. So you'll see that we have the ARM ecosystem,
you know, ARM7, we did a survey last year about that, you know, ARM8, we have in the OBS,
I believe we just got a few power nine machines, power PC, mainframe, so 390X.
That's 390, yeah.
Yes, 390, yeah.
Risk five.
Risk five, yeah. I mean, so it's, if you just go to the open build service, you'll see all the
different architectures is building for it. We have people that are actually part of the project,
part of our weekly engineering meeting that we kind of do, and, you know, there are people
that come in and support from that side, they were actually working for IBM or working for,
for ARM, you know, and they're contributing on that level where there's constant communication
there. So that's, that's where you kind of see some other people that are involved with the
project is, is being, you know, highly active, but also coming from a different direction or a
different company. I mean, that doesn't surprise me, given the fact that ARM is gaining, I wouldn't
say the upper hand, but even apart from this mobile craze about what? 98% of all mobile devices on
this planet. I'm, I'm guessing now run ARM processors in some fashion or other. ARM is also
very quickly capturing the cloud at the data centers. If you take a look at AWS, if you take a
look at HPE's moonshine or the rest of them, these are clearly projects aimed at taking away a piece
of the part, a piece of the cake from Intel when it comes down to mass deployments in terms of
beyond mobile. So I reckon that ARM will become even more important in the future,
especially now that ARM is also capturing the desktop. I'm using an Apple M1 on a daily basis,
and that goes to show, I suppose. Well, you know, I was in recently, I was
taking part in the open firmware conference. And, you know, there was, it was really good
discussions, just listening to them. They were talking about X86, and they're saying that the
models kind of going to have to change there a little bit from that architecture, you know,
because you need, you need just that open environment in the hardware space now,
because otherwise you're, you're highly at risk, right? So pun intended risk five, of course,
being the pronix up in here. Yeah. That's what I'm going to show up, of course, building them on chip
data. Where do you see Martin even then, they like, they have to license the SOC design from,
from ARM. I mean, highly modified, of course, but at the end of the day, that's an ARM architecture.
Welcome to the Nurtler of this podcast.
Anyway, but we are digressing. This is not the ARM podcast, but other Linux in laws.
There was something else wanted to ask us. Maybe you can shut a little bit of light. I mean,
you already talked about the history of the project, but what's the current status with the guards
to be on, say, leap? And the other one was tumbleweed, right? Yes.
Well, yeah, what's the current status? First of all, I think our flagship is clearly tumbleweed.
Many people use it as daily driver in between and as well. I just learned that one of the other
podcasts, I think it was distillation Linux or something like that, they set up a server with
a tumbleweed and are quite happy with the results so far. Then we have, of course, leap,
which is following the classical release model. So it is a long-term support release because
what we're currently seeing is a service pack, 15.3, to the original, to the starting,
leap 15.0 series. And the service packs will continue until we come to a leap 16.0. And this
goes synchronous with the development of the Susel Linux Enterprise kernel. And previous times,
when we switched from the 12.1, 13.1 to 13.3, the old development model to the leap development model,
we were sharing the sources with Susel Linux Enterprise, but they've been built slightly different.
And now we did the so-called jump project where we unified the binaries for both
for both series for the SLEE series as well as for the LEAP series. So we basically save one
and now we're going to write the word. Can we cut it out?
Well, try me, Axel. I don't have a little bit of basic English.
I have a good linear spine. You can save a little bit on the coding, on the code I support,
let's split this way. Yeah, that's true. So we're saving one line of support. We don't have to
build for SLEE and LEAP, but we're only built for SLEEP and important binaries into LEAP.
Yeah. So you mentioned the history of the project and being around for a long time.
It's actually the second biggest next distribution. Is that correct?
But it appears to be mainly aimed at the desktop. Is that fair statement?
What do you say?
So the one thing that I can definitely say about open Susel is that really it's built for the,
I mean, it's built for the people that are contributing to it, so to speak, in a sense.
You know, I mean, you could say it's for the people running servers at desktop, but it's a lot of
the people that are using it have very particular use cases, right? And so that's why there's so
much variety within open Susel. But yeah, I mean, you have different, you also have different
aspects with like microOS and open Susel CUBIC. You know, you have people that are running servers
with Tumbleweed, you know, but looking at LEAP as a server base, I mean, that's also, I mean,
it's kind of one of the reasons why we actually sort of move to that, what we move to that one
year release cycle, where, you know, there's a few distributions that are still around doing
that six month for early cycle, but people just don't want to be upgraded to their servers every six months,
you know. So really, it's kind of hard to save what it's for, but it's really just, you know,
people that are contributing it and putting the things in that they need to experiment and
test things out and, you know, plan for the future.
Okay, but I mean, actually, you mentioned that you've been running it since, oh, come on,
what it was, but 1980's said 1980, 1998.
1990, just before Prince came up with that song.
No, it's, I mean, the Destovorist, well, word, I say, whatever you want to call it, it's
still not been quite wrangled out of the hands of the Microsoft's, right,
But what does Top War Martin?
Yeah, exactly.
It's not quite a war.
I mean, the people that like open source and they develop an over source, they run a Linux
desktop.
But, you know, the main stream of people running laptops are going to be on Windows
still.
Do you see that changing or that there's mention of some German stage changing Windows
PC still Linux and stuff like that?
Is that something that you see more and more of from your side?
That requires probably another action, but I actually look at the analytics quite regularly,
like once a week.
Okay.
And so, I mean, you know, you, and it also depends where we're talking about in the
world, right?
Like, because you see certain countries like accelerate more with open source software
than you do with other countries.
So, yes.
So, really, it's, I mean, I heard statistic in the US that more, more Chrome OS is starting
to be used rather than Microsoft.
So, I mean, those are, those are transitions that take place and then you look at parts
of Africa where you see a lot of countries coming on board there, which is really nice.
And then Asia, I mean, like what, I know that when we look at our,
when we look at, when I look at the distribution, basically Germany's number one, US is number two.
I believe it didn't would go Brazil, China, Russia, I think.
So, you know, and that's basically just capturing, mostly, mostly desktop.
You're talking about deep desktop deploy, desktop deployments, not unbelievable.
It's a mixture of both, actually.
Okay.
I mean, from what I see it, yeah.
The US, interesting.
I would have thought more like France or Spain or something, not necessarily US.
Well, the Europe is Europe is really covered, but I mean, you kind of, I think it's the
population aspect that somehow needs to be considered, you know.
We have big following in Indonesia too, but I mean, like,
Europe primarily, it's just covered where there's a lot of, a lot of use, you know, Spain as well.
I mean, basically all over Europe, but obviously Germany has the highest.
Like on the map, it's, you know, in the eat map, it's the darker color.
But the other ones are right there, it's just not.
Right, I'll be open as well.
I run and you've been to on my laptop, right?
So, I think why don't, would it be fair to say, if you want to convince people to,
or if even, would you convince people to use open Susie instead,
or is it really a matter of choice, right?
What are the benefits of, if, you know, if you were to do it,
just using that.
I think first of all, we would need to convince people that's a good idea to use free software
compared to proprietary software.
As long as you can only buy hardware with a pre-installed proprietary system,
be it macOS or Windows, it's definitely difficult to convince Jack user
or the normal user to use something else, because people are lazy.
They're just using what they get, they're using what they're used to use,
and every change is difficult.
If it's something new, then people have adapted to it, and it's difficult.
If you're used to a Linux machine, for example,
and you sit the first time in your life in front of a Mac or in front of a Windows machine,
you're saying, hey, come on, what's that?
It's not easy by nature, it's easy because you're using it.
Yeah, for a very long time.
As long as we cannot convince more hardware manufacturers to come up at least
with a pre-installed IDLE free operating system,
whether it is Ubuntu, whether it is Fedora, or whether it is OpenZoosa,
the life for the free software community will be difficult.
That's for sure.
The obvious question is that clearly, you know, why is this not happening yet?
I mean, I can't think of one reason, but it's like you're taking it as well.
My impression is that the manufacturers have contracts with one major software supplier,
and I guess he's putting some pressure on them as well.
To give you an example, I'm using ThinkPad laptop since the 90s,
and I wanted to buy a ThinkPad without pre-installed operating system,
and I wrote to the CEO of Lenovo in Germany,
and I got a call back from them and saying,
I know we're not selling them without Windows.
I said, okay, you can send me one with Windows,
but you reimburse the license because I don't use it.
No, we're not doing that.
I said, can I get this in written or not?
Of course not.
And with this, the discussion was finished.
In the end of the day, I got me a ThinkPad without pre-installed operating system,
and that was okay.
Luckily, we have some smaller manufacturers like Tuxedo, for example,
who assemble computers, laptops, as you want them,
with the system of your choice installed,
and I think that's a good thing.
But in mainstream, if you look at the big manufacturers,
it hasn't arrived yet.
And it's not because it's difficult.
It's just the marketing and contracts, and I don't know what.
Tuxedo, if you're listening to the email,
there's a sponsor at Lenovo.eu.
On that same note, I'm almost tempted to add, yes, you can.
You can get Linux-based laptops from Dell too,
because I'm one of the ages ago.
So, I mean, the one reason for it is around the adoption is clearly,
you know, things like availability of gaming software, right?
You know, Windows is known for that,
as the platform for where most games come out on,
so unless you're on a console.
So that kind of, you know, in the start changes,
you're not going to convince the markets to change to a...
Yes, the...
Martin, don't forget SteamOS.
Yeah, fair enough.
Have you tried it?
Does it work?
Well, the operating system is based on Linux.
And if it figures anything to go by,
there's a fair share of market capture.
Yeah, but it's, you know, most games come out on Windows first, right?
That's still...
Okay, so unless it's on the console, as mentioned.
And this is when, you know, the younger generation are growing up with Windows,
and as you say, it's hard to change,
then it becomes a harder battle.
But yeah, with that.
Yeah, even worse.
I mean, the pupils and students are forced to use Microsoft products
in the universities, and this is the real scandal behind it, I think.
No, is that true?
I mean, you're at before that,
whether this will change, maybe in the public sector.
And I think now we really have for the first time the chance
that there is something changing,
because Schleswig-Holstein is pushing for it, for example.
And even in Lower Saxony,
where there was supposed to have been about 12,000 Linux-based installations
in favor for Microsoft Windows,
it seems that the train is not really gone.
There may even be a chance with the change of the political...
of the political leadership in there.
So people, forget about this coronavirus thing.
Just go to the streets for open-source software.
You heard me here first.
On a way more serious note, Axel.
Yes, you have a point, but on the other side,
I'm almost tempted to say who cares about the rest of anymore.
More and more things are moving to the cloud,
and you already mentioned Chromebooks.
And if I take a look at the numbers of these units being sold,
especially in the mass markets like U.S. and so forth,
this is staggering, because all that I need is an interconnection
and the rest are more or less in the cloud.
And on this Chromebooks normally run something called...
Well, normally something called Chrome runs,
which essentially is an open-source project,
because Chrome is an open-source code base.
So at the end of the day, all you need is basically
a bootloader called Linux,
and some sort of browser that allows you to do your work in the cloud.
That's the end of the day.
So, I guess, was it Shells?
Was it Shells.com?
That's sort of an aspect.
Which is quite interesting.
We had worked with them.
A lot of distributions actually worked with them
as a cloud-based operating system.
But yeah, I mean, you're right.
A lot more workloads are moving to the cloud,
and we do have...
We do have something like microOS
that actually would work for that.
I mean, kind of designed for that type of thing.
It is...
OpenSusit has a very diverse set of projects within it.
I guess when we talked about earlier,
when you asked what is OpenSusit,
really, it's a project full of projects,
and there's so many different things you can find within it,
within OpenSusit, and things that you can build.
And we have options to do that.
So, you don't want to expand any more on that, Axel?
Please do.
Not sure where to pick up now.
Yes, I mean, these cloud models or Chromebook models
they work for a certain use case.
But if I look at myself,
I mean, I'm mostly not working on a command line
that happens every now and then,
but I'm using a regular desktop.
I'm using a tablet, for example,
but I feel these tablets are very limited
with what you can do with it,
except reading emails and watching movies,
and things like that.
So, if you really have a job to do,
I think there is no way around having a local,
locally running a laptop.
With cloud, you always have to be confident
that the individual or the company
that you're sharing your data with is trustworthy enough.
Especially, a cloud is very attractive for attackers.
So, I guess it's not the question, Dave,
but the question, when you prefer it,
cloud supplier will be hacked.
We are now entering the philosophical
security part of the podcast of this episode anyway.
I get the security angle,
but if I take a look at the generation after us,
the question backs, do they really care?
They're all on the Android devices,
they're all on the Chromebook,
and they're all in the cloud.
This is a cloud native generation, I suppose.
I'm guessing I'm open-source, but regardless.
Gladly.
I mean, there's still the makers,
the people that want to create.
We have one of the guys in our project.
He's like 16, and he hops in.
Actually, there's a lot of people who are sending them
down the right path of learning these things.
It's not going to go away.
You're going to have people that are always interested in that.
Is does it become mainstream?
I mean, I don't think so.
But there's always a need.
You need something to develop on.
You could be right where people don't necessarily care about it,
but that's the thing.
You don't care about it until something happens to you.
That's all you get the message.
Absolutely.
Martin, but you had it hard as well.
Well, I'm going to finish that discussion.
Yes, your developer is not going to be running on the Chromebook.
They're all there.
Apple MacBooks drinking a lattes and we have here.
I'm on the Apple Mac, they're normally in beer, but that's bizarre.
Final time of day, it is.
Mind you when you're okay.
Let's move on to the same background.
Where do you see this on these projects, rather,
because OpenSuzi S, which has turned this into an umbrella for a project
for quite a few projects.
How do you see this going?
Hang on, I need to polish my crystal ball a little bit.
I hope we're attracting many more people.
We are growing a base of happy users as we did it in the last year.
That correct me if I'm wrong.
But if I'm looking at metrics that O.O,
can you really double the amount of users during the last year?
Can it be?
You all could view it on metrics.openSuzi.org.
Basically, it has gone up.
I do know that there were some counting figures that weren't happening correctly,
but at least that's what I heard.
But yeah, it has gone up a significant amount.
Some of that, I think, had to do a little bit with perhaps
the timing or so of the CentOS announcement.
But on the other hand,
the tumbleweed wouldn't necessarily be in that category,
but we've seen jumps in leap,
and we've seen jumps in the tumbleweed as well.
Sorry for those who are out there.
We do not know what the CentOS debacle is.
Maybe you want to explain a little bit about it.
Well, I mean, what happened?
I mean, I could, but you know, you could definitely...
We have good relationships with the CentOS community.
So basically, there was an announcement where they're sort of shifting the way
they're going about producing, I guess, CentOS,
and they're changing it more to CentOS stream,
which is sort of like you could say a rolling development,
but very conservative, I think, rolling development toward REL.
So that's my understanding of it.
And of course, you know, there were a lot of different forks based on that announcement.
You have rocky linux, Alma,
and of course, a lot of people really transitioned to open to the leap as well.
So I mean, like, if I'm missing anything, please, please feel free to add.
Some people told me essentially,
the Red Hat, after the acquisition by IBM,
broke their promise in terms of CentOS,
basically following the code base of Red Hat,
and making sure that the quality of it stayed the same,
or through these cases stayed the same.
And apparently that, and of course,
the duration of support that you would get with the CentOS release
was shrunk and hence the stream thing.
That was what I'm looking for,
somewhat made a few people in order to avoid the term annoyed,
made them reconsider their choice of operating system,
in terms of Linux enterprise distribution.
And that's probably the thing, basically, that you saw,
when quite a few people jumped over to open Susa.
Because at the end of the day, if I'm just not the correct name,
please correct me if I'm wrong,
open Susa follows the code base of something called Susa Linux enterprise system,
also known as SLAS.
Yeah, I mean, it is fully compatible.
I mean, it's built from the sources and the binaries,
Leapis.
And so, you know, it took some years to do that.
You know, I actually kind of explained that a little bit earlier.
But basically, we'd been working in that direction as much as possible.
And now we got it down to basically where it needs to be,
to literally my understanding, I haven't done it myself.
But, you know, if you wanted to go from Leap to the enterprise,
Susa Linux enterprise, you know,
it's basically the branding packages that you switch over
and you're right there.
So it takes like 20 seconds or something like that,
as opposed to the other, you know, what it was in the past.
But we'd always been working in that direction, you know, from the 42 series.
The 15 series showed a lot more promise.
The 42 series was a, in itself, a movement, right?
It was, hey, let's do this.
And then 15 kind of got closer.
And then ultimately, like, yeah, 15.3 was the one that really was the game changer.
And so we're looking at coming out with 15.4,
sometime in, we'll say early summer around the time of the open Susa conference,
which should be in June, this time frame, and then guaranteed also that we'll be having a 15.5.
And so overall, if you look at the 15 series, I mean, it's, I think,
it's on the roadmap or actually, but I think it's like on the weekend,
we're talking about the life series or the life cycle of leap.
And it's, you know, it's no successor has been named yet.
And the way that leap works is basically once a new version comes out,
the old version will run for another six months.
So basically you're looking at minor versions running roughly 18 months.
You know, and the major major versions are, you know, well, well passed 72 months.
I think it's somewhere in neighborhood of like in the 80s or 90s amount of month months.
Yes, you mentioned the conference.
You want to plug it in terms of what it is and who should attend?
Well, actually, yeah, sure that, you know, that's, we, we have the call for papers.
It just opened up.
We do, we're planning to go for a physical conference in Nuremberg.
We do it at the Zetbau in Nuremberg and people that would, we would like to submit talks,
could be anyone from anyone in the open social community.
You know, we have a certain tracks dealing with new technologies, you know,
open suits, the tracks, community tracks, cloud and container racks.
But, you know, people, people that we would like to see come are basically all the distros, right?
Like, you know, if you're, if you have something you want to share with the community,
I mean, it's a great opportunity and, and I don't know if any of you are familiar with soft iron.
The arm servers that came out, like it was a while back.
You know, they, they basically sort of test piloted their, their talk, because they had to talk with Red Hat.
But they test pilot with us and announce the release of their arm server at our conference.
And I mean, like those are, those are the things like we would really like just people to like participate.
I don't know, we've had people from Ubuntu come Red Hat,
Fedora, Debian, just a variety of different people.
So you just mentioned that being so it's more like a death conf, where you can submit it pretty much anything as long as it's of interest for the open source community.
Doesn't have to be the distribution related.
No, no, it doesn't.
So if Martin wants to submit his proposal on quantum computing on an arm chip as an emulated, that's the place to do it.
Absolutely.
Martin, you heard of your first go ahead.
And it would be even better if you bring a demo system along.
Yeah, sufficient cooling facilities.
Martin has been working with us for the last 20 years, but that's another story.
Oh, it's a quite good issue.
The computing can be an issue.
So it's either quantum computing or quote here.
Can you provide zero Kelvin?
I wonder.
That's conference.
How are you?
Dr. Just mentioned cloud computing, containers and something like that.
Maybe we should briefly talk about two quite new developments in the open zoos of world.
And this is micro S and cubic.
Micro S is a minimalistic self-contained transactional system, which technically is based on tumbleweed.
So minimalistic means it comes when you install it with a very small set of software.
And it's actual means that it runs from a read only file system.
It makes use of the butter of S file system.
And once you apply an update, which the system does automatically, it checks the update.
And if the update is okay, it requires a reboot.
And then it runs from the new slice, so from the new read only file system.
If it's not okay, it rolls back automatically.
And the intention for that was originally for edge computing and something like that.
But as the people are quite creative, they started using it as a desktop environment.
So as such, you can install all the packages that you get from tumbleweed, for example.
I think we're shipping some 15 to 18,000 programs.
Or you can also use a flat pack, for example, or app images on it.
And micro S combined with Kubernetes as a management for large container deployments is cubic.
So it's technically the same basis as micro S.
And I think you mentioned that briefly in the beginning of our talk,
there is, since sometimes a project working on a micro S based on leap.
And I think that is about to be released in one of the coming weeks.
Doctor, do you know more?
I don't recall the exact timeframe, but I know.
So we had it at the community meeting where we're, where Luba was discussing it.
And they were supposed to have a beta coming up soon.
Actually, it should, it should come up very soon.
Since we're actually getting close to the beta cycle of leap anyway.
So I would expect it to come out.
Just wondering if, if you're cleaning targeting this one more at the, at the enterprise or kind of zero downtime community.
Are there any plans? If, I mean, if you still have to reboot the kernel, often update.
Are there any plans for technology similar to K patch or K graph?
In that regard, as in based, you can patch the kernel and then do no reboot.
You simply, as you lift it, let the, let the, let the, let the, let the system work on.
As an run on, as in live patching.
Any plans? I mean, the reason I'm asking this is quite straightforward, because if you're, if you're targeting the container ecosystem,
you're targeting automatically more or less the data center as an enterprise grade deployments.
And there typically change when you're sent to be really small, if at all.
I mean, I'm not quite certain.
But when you update micro OS, I don't think it, like you need an automatic reboot.
It's just when it does reboot. It goes into that new one.
That correct? Axel?
No, it needs a reboot, because as I said, it runs from a read only file system.
The change is applied, basically a new snapshot.
And then you need to activate the snapshot somehow.
Okay.
So that has nothing to do with kernel live patching or something like that, which is, I think, available for sleigh.
And I have to admit, I didn't link into it.
I don't know whether it would be available on leap or something like that as well.
But the understanding right is that if you're looking at cloud computing and things of that nature, like, isn't sort of just throwing, I mean,
you know, if you're running a bunch of containers or whatnot, like, it's not like all that important, you know, because you have the container orchestration.
You'll be using a variety of different machines.
So it's just a matter of, yeah, how you, how you do that, right, with maybe some sort of configuration management tool, which also, like, if you look at you, you need, which is another sort of project as well that kind of falls in the open.
It's interesting.
And these two developments came out of the range, or came out of the branch acquisition.
Uh, you know, the most before wrench.
Yeah.
Okay.
Wait before.
So what are the plans for the, for the rancher technology that the acquisition brought into the game?
I think you think you need to ask Susan about that.
There's a community.
Yeah.
I mean, I, I really, to be honest, I don't know.
I don't know.
I mean, I, I, I'm here for open Susan. That's really kind of what I.
But the rancher code base was open source to if I'm wrong or correctly, right?
Yes.
I mean, they had, they, they have a lot of, uh, a lot of users and those users, apparently, you know, are the, the user base.
Uh, becomes a customer base, right?
So I mean, like, um, but, uh, I, I'm not, I mean, they've been around a while.
I know, uh, we, we bumped into them before the acquisition happened.
And I mean, open Susan itself, like, we've worked with them because we did the Google summer code.
And, you know, we obviously reached out to them and see if they wanted to participate.
They hadn't, they weren't aware of it.
Um, but, uh, we, they were part of our Google summer code last year.
But it was just a matter of like, you know, just supporting them administratively from the open Susan side.
I mean, containers are different piece anyway.
You just have to take a look at the open shift.
Native companies, of course, come to mind the likes of swarm that have clearly died more or less.
Well, Docker itself is at, at, at as opposed, I suppose, um, in terms of what's going to happen to the future.
They saw the enterprise assets to some of the government.
And I think the Docker desktop thing probably might be a silver or long term.
So it remains to be seen, but the juice is really actually on the, on the enterprise level in terms of having orchestration framework, such as open shift.
That really drives a couple of million V course in a data center or data centers across the globe in containers.
Rumor has it that if you type a search query into Google it runs in, in its own container.
And given the fact that at least four or five people on any, on any given day, you school is the main search and that's quite a few.
It may be more than four people.
It sounds like cubic is a bit of an alternative for open shift on, on your side.
Would you agree with that?
Does it do more or less than open shift?
Any thoughts on this?
I know that they work together, but actually, if you have anything to know that it's not in my area of expertise.
I can't come. I love it.
There's probably won't be, though, in the show, no, no, I'm joking.
I mean, I, I, I don't, I'm not so familiar with it, but I know that there's a lot of cross collaboration there, just based on the packages that are involved.
Like, you know, but you have a various, yeah, like I could believe cryo is one, one of the packages that might be a cross for both of them, pod man, things like that.
Exactly. As far as I know, basically they are all OCI compliant.
Isn't the open container initiative? And that's the, and that's the API definition, cry probably being the best example as in the container runtime.
That docker open source at some stage.
But this brings us neatly to the end of the container section of this broadcast.
Guys, before we close this off, any, any final thoughts, especially from a community perspective.
So are there, are you still looking for our hands on the ground or feet on whatever you want to call in terms of people joining the project?
If so, what are you looking for?
Are we looking for? I think we can need, we can make use of hands in any areas, be it documentation, be it moderation of our discussion discussion channels.
Our website could need a refresh as well.
I think we're not looking for something specific, but we welcome any kind of contribution.
Now, one of our community members said once, open-sus is a duocracy.
That means those who do decide. So if you have a good idea and you want to bring it onto open-sus, feel free to do so as long as you're staying within the guidelines.
Then you can basically do anything that you like to do.
Except, of course, things that are related to proprietary code, especially codex or something like that, which we do not allow on our infrastructure.
So Martin, just wondering, is that the way to X thing that you keep talking about, is that proprietary nature?
If not, just go ahead and do that quantum computing port.
I'll think about it for the talk here.
Perfect.
I'd like to follow on to the board members.
It's also like, you know, governance is the big thing, right?
Like these things, we just had our open-susa board elections.
And I mean, you know, these things are relatively important.
We hope that people do get involved and participate in the governance aspect, contributing all of their facets of open-sus.
Their open source is great.
But, you know, there is that aspect of governance that it needs to exist in order for the whole system to function.
So, what type of people are you looking for in that case?
Well, you know, basically just someone that is willing to, you know, do kind of what Axel does.
If you're an ambassador, you take part in the project, you're heavily involved, you mediate, you, you know, deconflict things.
I mean, there are certain qualities that we all have, and some are better things than others.
And I just, I think that from a, from a governance side, you need people that can lead whether that's talking to the media, whether that's, you know, reaching out to someone who might have an issue with another person in a project that may be where conflict exists.
And they have the right skills to, you know, make two people come together or solve their problems in a, in a fashion that's not confrontational.
So, that goes from, from people like myself who can't, who cannot stop talking at all or mark to a less extent, run up to technical people who can solve code basis conflicts.
Or people who run our infrastructures, we have the heroes team, for example, who is managing all the open source infrastructure, mail server forums, and so on and so on.
People you heard it in first, if you're looking for an interesting hobby, who should they send mail to?
I would say probably check out list.opensuza.org.
We'll be in the show notes, yes.
There'll be, you know, there's a lot of different projects within that, and, and so you could, you could find it.
Or the simple solution is just, just to email opensuza-projects at opensuza.org.
That email address, yes, will be certain in the show notes.
You have to subscribe, though, so.
No, no problem. And is there a website that people could check out before subscribing to that mailing list, I wonder?
For the people who do not know what email is, there might be one, two or three out there, I don't know.
Or a fax.
I would say they could go to get.opensuza.org or opensuza.org.
Those are some key options.
There are a variety of different email, or a variety of different websites we have.
You know, we have forums, we have social media, we have a variety of different channels that people can reach out.
You can go to simply chat.opensuza.org if you want to talk to someone.
And got to give the bar a plug, we actually started a bar, a virtual bar.
You can go there now if you want, but it would be meet.opensuza.org, flash bar, and all these people hanging out in their chatting.
That's a good entry point for people.
Yeah, that's a good idea.
This is really a nice thing.
It started a little bit more than a year ago.
And usually you find always somebody there from all over the world.
And that makes it really interesting.
Martin, that's probably something.
Yeah, but we should probably think about what it was in Los Angeles on a different note.
For people like Martin and myself as in the dinosaurs in the community.
Do you run IRC channel or something like this for opensuza?
Yes, we also have an IRC channel or multiple IRC channels where usually the developers and so on hang around.
The details of your opensuza.org.
Not for the IRC stuff.
It's actually on the wiki, but I'll send you a copy of that.
Yeah, please do so that I can.
I mean, if the wiki, of course, if the wiki is public, if it's not a bother, it is.
Perfect. Anything that you want to mention before we close up the show.
Thank you.
You're welcome.
Given us an opportunity to talk about opensuza and open source.
Anytime, because at the end of the day, open, opensuza relates to suza and suza.
Of course, the German company that makes it a communist cooperative.
Simply as that.
And not to forget, we cooperate with the communists around the world.
Good friends from Dabian and the other communities.
Guys, that has been more than a pleasure. Martin, you want to do the honors?
Yeah, thank you very much.
It's been a real pleasure and great to hear about opensuza.
Thank you.
Go and try it out.
Yeah, thanks for having us here.
And if you cannot decide where to start with openzuza, just download tumbleweed with the KDE desktop.
We have 10 more desktop's to install.
You don't need a second distribution for that, like a K and X or an L.
And you know what's coming afterwards.
Just give it a try.
Thank you.
And it has been a pleasure.
This is the Linux in-laws.
You come for the knowledge.
But stay for the madness.
Thank you for listening.
This podcast is licensed under the latest version of the creative commons license.
Type attribution share like credits for the intro music go to blue zero stirs,
for the songs of the market, to twin flames for their peace called the flow used for the second intros,
and finally to the lesser ground for the songs we just use by the dark side.
You find these and other details licensed under cc achamando,
a website dedicated to liberate the music industry from choking copyright legislation and other crap concepts.
.
.
Maybe it may be tricky for Martin to to to enter that kind of a proposal for that quantum thing,
because as you probably know, the Britain is no longer a part of the European Union.
And that's this pandemic thing.
The might be some people.
Yes, but let me see what I can do about this.
So you're actually living in bumper Connecticut.
And not bumper.
I see it.
I live in my own world.
I'm just checking.
No, no, no.
I mean, I would really like to see you again, because it's been a while since I mean,
we last met I think in inside August in the form of completely music.
And that's at least at least three years back.
If I recall correctly.
Yeah, there's probably the one I got my ticket on the way back.
And now it's nicely framed in your in the living room, right?
I get one I get one per year.
For some reason, they always get.
You've been listening to Hecker Public Radio at Hecker Public Radio.
Today's show was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast, then click on our contribute link
to find out how easy it really is.
Hosting for HBR is kindly provided by an honesthost.com.
The internet archive and our sync.net.
Unless otherwise stated, today's show is released under a Creative Commons
Attribution Share Like 3.0 License.
