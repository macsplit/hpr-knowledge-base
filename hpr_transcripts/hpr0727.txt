Episode: 727
Title: HPR0727: HOWTO root and mod an Andr0id phone.
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0727/hpr0727.mp3
Transcribed: 2025-10-08 01:35:48

---

Hi everyone, you're listening to Hacker Public Radio, this is Clot 2, and today I want
to talk about rooting and modding a popular phone platform that comes from Google, and
the name of which is such a buzzword and is on every podcast that I listen to, and on
every news site, IT news site that I go to, that I can't even bring myself to say it,
but it is the phone operating system that comes from Google, and in this episode we're
going to cover the phone that I actually have access to.
My friend from IRC, the last name God, and another one of my friends has the mode roll
a click, and so I'm going to cover that.
Everything I'm going to cover, I'm going to try to make very, very generic, so that you
should be able to apply it to whatever phone you have, I mean as long as it's running
this operating system, and of course everything I'm covering here is also already been
done and completely well documented online, so I'm really just kind of telling you what
I've learned through the process of actually doing it myself.
One of the first things I learned while doing it was that the information about this and
how to do it and everything is just scattered all over the web.
Think about when you have a computer and you want to install Linux on it, and if you've
never done that before, you can usually find one site, I mean hack you could just go
to a Linux distributions site and find all the information you really need, or you could
go to like Slackware to get the distro and then Slackbook to learn how to install it.
We kind of have central authorities for information on how to do this stuff on the computers.
On the phones it's not really like that.
Every phone seems to be fairly specific unto itself, and when you're looking for information
on how to install some new exciting version of this OS on the phone, then at least in my
experience, I've got to go from site to site to site to site, just to end and piece together
all these different steps.
So I thought it would be helpful if I kind of aggregated all of that and condensed it
and did a hacker follow the create you episode on it, so that if you've never done this before,
then you'll hear the overall process here, I'll give you some helpful links, and then you
can probably go out onto the interwebs and kind of figure out the rest on your own.
Given the audience of hacker follow the radio, I probably don't really need to justify why
you would want to root and mod your Google OS phone, but I do have some two pretty good
reasons for doing it.
The first and foremost, at least the reason that I was interested in doing it is that you're
removing Google from the phone, or that you can remove Google from the phone you don't
necessarily have to, actually, it really depends on what you put on the phone, but when
you get a phone from the store, it literally requires you to create a Google account,
to sign into your Google account.
You can put all fake information in there, obviously, if you're savvy, you might have given
the salespeople false information when they sign you up for your little contract or whatever.
But I don't know, if you're okay with all that, then maybe this isn't a good reason,
I know for myself where I to get a Motorola click, for instance, I wouldn't want to sign
up for Google just to have that.
I wouldn't want to give information and then associate that with that Google account, just
in order for me to use the hardware that I just paid $300 to $400 for.
And then the another reason might simply be for that reason, that you did pay for this
hardware.
I think a couple of years ago, or maybe a lot of years ago, it would have been incomprehensible
to tell someone that they're going to pay $300 or $400 for a piece of electronic equipment
and then tell them that they have no control over what it's running, how it gets updated,
when you change it up, what you do with that hardware.
The fact that you have to root your own electronic device through a hack or an exploit is pretty
shameful, I think.
But everyone seems to be okay with it, I don't know, kind of weird, but this is how to
do that.
And I think that as the owner of that physical device, you have every right to do this.
So hopefully that will be informative.
And finally, and this, I didn't really, this wasn't something that I thought about while
I was rooting the phone and putting a different OS on it.
But something that I have found to be true is that you may see a performance boost.
The Motorola click, as of the time of this recording, I believe the latest you can go via
Motorola, who graciously gives you the operating system for your phone and the permission
to flash your phone with that new operating system version.
So the latest that they've got is 2.1.
The latest you can get on the interwebs through the open source people doing the builds and
everything, I think that I've seen is 2.3.
And amazingly, the 2.3 modded OS's run smoother, like the animations and the speed and everything
like that, they actually literally run smoother on the Motorola click at least than the official
2.1 ROM from Motorola.
I don't know why, I don't know if that's just true of 2.3 versus 2.1 on any phone or if removing
all the excess bloat stuff that Motorola put into the OS is helping, I really don't know.
But yeah, performance boost for sure, noticeable, really, really unexpected benefit, didn't
really expect that.
But of course, rooting your phone and being able to do whatever you want to with your hardware
would also give you the ability to overclock your processor and things like that as well.
So there's that.
Okay, so you're probably convinced by now, yes, you want to rip out the Google version
of the operating system off your phone and you want to put on this customized version
of the OS.
So obviously the OS is open source and that's why we have all of these custom ROM images
that you can flash to the phone.
Well, the problem is that the phones are all different.
And so if you go to the, I guess the one that's most popular and I don't know, maybe it's
the one that, you know, from which all the other ones are derived, I don't know.
But the really popular one is called Sianogen Mod and Cobra II, who you'll know from
HPR episodes and UnixPorn.com.
He told me about this and showed it to me on his phone, I don't remember what version
or what phone he had, but it's pretty cool, it's all the, you know, it's just the open
source bits of the Google version of this operating system.
And if you go to Sianogenmod.com and I'll have a link in the show notes for that, then
you'll find out which devices are actually supported by Sianogen Mod.
And it turns out that it's like maybe 18 devices or something like that.
So if you don't have one of those, then at first glance, you're not going to be able to
do this on your phone.
The good news is that they do list very clearly with pretty pictures and icons and stuff.
All the phones that are officially supported by Sianogen Mod, meaning that, I mean, I imagine
that these are the phones that the most active developers of that project actually have
access to and can test the OS on.
I don't know if contacting them and sending them a spare phone, you know, the exact same
phone that you've got would help them support that device as well.
I don't know how they work, but if you don't have a phone yet and are in the market to
get a phone and aren't sure which one to get, this would be a great thing to look at.
Because I guarantee you, after maybe a month of using the native OS on whatever phone
you end up buying, you will absolutely want to root and mod the phone.
So making sure that you've got an officially supported Sianogen phone would be a really
good step in your purchasing process.
This is the step that I don't even think was around when my friends were looking into
getting the phones that they've got, like the click.
Anyway, on Sianogenmod.com, somewhere I think there's a wiki and on that wiki, there's
a list of unsupported devices and of course that would include the phones that other
developers happen to have and those developers have in turn taken the Sianogen ports of
the OS and modded it so that it works on these unsupported devices.
So that's where it gets really interesting because then you're kind of hunting down
all the different bits and pieces so that you can piece them all together and actually
do to your phone what you need to do in order to root it and mod it.
So the overview of this process, it's basically, it's three steps which naturally have lots
of little steps as sub points but the three main steps that you need to kind of think
about would be first to root the phone which of course just means to get root access
on your phone which at least for me as a Linux user just didn't even compute.
I just could not understand what rooting a phone meant because I thought what do you mean
root a phone like why I don't understand, I own this device, why would I have to root
the phone?
Well even though you own the phone you actually don't have root access, it's really really
strange but yes it's true you do not so you need to get that luckily some people have
come up with some exploits that will root it so you need to do that.
The second step is to install, I guess what's called a recovery mode, I think most Linux
users would think of as a bootloader meaning something to snag the phone during the boot
process and or actually right before the boot process and redirect it.
If you've ever done rock box or iPod Linux then this is very familiar to you.
And then finally the third step would be to actually install a custom ROM.
So those are the three simple steps that you're going to take to get the phone de-googleized
and fully pretty much open source and all that other good stuff.
Step one let's cover that rooting the phone.
This is actually a pretty involved process to be honest, this is probably the most complex
part of the entire sequence but it's not hard, it's just got a lot of different steps.
In order to root the phone you need to have an Android development environment on your
computer.
Yes you really do.
This is a big beast of an install that if all you're going to do is root your phone,
it seems like a lot of trouble to go to just to get root access on your own phone.
But you just kind of need this.
And first you install, you go to developer.android.com slash sbk-index.html and there are downloads
right there.
As long as you're on an x86 platform, you're good.
It doesn't matter whether you're on 32 or 64 bit Linux.
So you need to download the environment and then you can see the, well you untar the
download and you see the into the Android SDK Linux directory.
And if you read the read me, it kind of explains what's going on.
But essentially what you just downloaded is the skeletal structure of the Android development
kit and you need to now run an update program so that you pull all the actual tools from
Google.
In order to do that, you see the into the SDK and you do a dot slash tools slash Android
space update space SDK.
And that pulls all the latest tool chain components from the internet.
After that step, you'll have a full development environment on your computer.
In addition to all those tools, you'll of course need Java.
So this was a major step and I knew that I probably wasn't going to ever use this stuff
again.
But I did it was I got a nice live CD and just popped that in and did all of this rooting
of the phone and the recovery image part of all of this on the live CD.
You don't have to do that yourself.
You can do it anyway you want.
I just didn't want the full Android development kit lying around on my computer for the rest
of my life because that's exactly, I knew that's what I would do.
So I just did that on a live CD.
Makes it a little tiny bit slower as you know from if you've got any kind of live CD experience.
But for all practical purposes that works out fine.
So as long as you got Java and the Android SDK, you're pretty much ready to go.
So what you need to do is on the phone itself, open up the applications menu, go to your
settings and then go to the applications setting and make sure that USB debugging is activated.
By default, of course, this would not be active.
It's something that is used for application development.
I don't know why or what for, but you need to have that turned on for this process.
So make sure that that's on on the phone.
And while you're at it, you could probably go ahead and download a terminal emulator for
the Android phone.
You're going to need it eventually anyway.
So you might as well do that now.
There are a couple of them out there.
I don't know that anyone is better than the other.
Just grab a couple if you want.
You're going to use it during this process and then you're going to flash the phone.
So they're going to be wiped away anyway.
So grab all of them for all I care.
So the SDK installation process, it will take a while.
Just get ready for that.
It has a lot to download.
So you think you've downloaded it all when you go to the SDK site, the developer.android.com
site, but you haven't.
So when you do the Android space update, space SDK, that's going to download a whole bunch
of new tools.
So just sit back and relax while that happens.
So once it's finished and once you've got your phone set up with your little USB debugging
turned on and a good terminal emulator loaded up onto it, you're pretty much ready to
go.
So one tool you're really going to use out of this SDK is located in the platform-tools directory
and it's called ADB.
Okay, so we've got the SDK set up.
Now we need to actually route the phone, get root access.
A lot of these files seem to be spread all over the internet.
There's no go to site for all of this stuff.
One good site is the unlocker.com.
Another one is modmymobile.com, but you're going to have to kind of poke around.
And the file that you're going to be looking for right now is, well, specifically the name
of it, literally, as of this recording, which is like April, I don't know, 26 or so, 2011.
The actual file was called Moto underscore MSM underscore root.zip.
But obviously if you have a different phone, then you might need a different root exploit,
I guess is what it would be, or if you've got a click and it's months later from when
I'm recording it, who knows it all might have changed, and that won't work either.
So I don't know what exactly you're going to be looking for, but in essence, you're looking
for some kind of hack or exploit that will give you root access to your phone.
So you'll download this root hack and then you will plug in your phone into the computer
and you're going to issue a couple of different commands.
So you're in the terminal.
You should be, you've either added the Android SDK to your path, or if you're like me and
you're never going to do this ever again, you don't really want to bother installing it
and adding it to your path.
So you're just doing this off of a live CD and you don't bother and putting it onto your
path.
So you're in the Android SDK directory, which would mean that you would, you could even
go into the platform dash tools directory and then you would issue the command dot slash
ADB, meaning run the ADB command, which is located in this current directory, the dot slash
means from this directory, run ADB space devices.
And that should return to you whatever Android device it detects hooked into your computer.
So you should see a serial number and probably some kind of brand name or something like
that.
If you don't see anything when you say dot slash ADB devices, then your phone isn't plugged
into your computer or your phone isn't on or it's not in the bugging mode or it's just
not something's wrong.
You need to swap out the cable, check the connections, whatever.
If you get some kind of error about ADB command not found, that means that you're not, you've
either not updated your SDK so you don't have ADB the application yet or you're not in
the right directory.
So find ADB and run that.
All right.
So once you've established the fact that yes, you are connected to the computer, you can
issue different command dot slash ADB space push space, for instance, till the slash download,
slash Motto underscore MSM underscore root slash superuser dot APK space.
And this is not, for instance, this is actually what you'll type in slash SD card slash
superuser with a capital S dot APK.
Now when I first saw that command online, I thought that the slash SD card was an example
of what the path would be.
So I was trying to give it a slash media slash, you know, no name slash, I was trying
to find the actual device.
You don't do it that way.
You simply say slash SD card ADB knows where that is.
So just type that in.
Now the location of the superuser APK obviously is going to vary.
Just depends on where you downloaded this Motto underscore MSM underscore root two.
Um, and if there's any subfolders in that, you might have to get down into a subfolder
in order to get the superuser dot APK.
But the point is that you are pushing a little Android package APK that's an installable
file.
Uh, you're pushing that onto the phone from the root hack that you've downloaded.
Okay.
So you've done that.
Now it's going to be dot slash ADB space push space till to slash download slash Motto
underscore MSM underscore root slash SU space slash SD card slash SU.
So that's the SU command.
Obviously, you're pushing that to the SD card.
And then you're doing a dot slash ADB space push space till to download Motorola underscore
MSM underscore root slash rage against the cage dash ARM 5 arm 5 dot bin BIN space slash
data slash local slash temp slash rage against the cage dash arm 5 dot bin.
Once again, I freaked out when I saw this because to me when I see a space slash data slash
local says to me that this little ADB program is looking on my root file system for a folder
called slash data slash local, which as far as I know, I don't have, don't worry.
It's not looking on your local file system for that.
It knows to go.
It knows that it's destination is the phone that is hooked up to the computer right now.
So just type in what I said to type in.
Don't try to think about it more than you should, which of course is what I had done and
totally messed me up.
Uh, final command more or less is dot slash ADB space push space till to download Motto
MSM root slash install dash root dot s H space slash data slash local slash temp slash
install dash root dot S H.
Okay, you've pushed all the little root hacks over to your phone now.
Uh, and so now we can actually to mod them so that they'll run and then we'll switch
over to the phone.
So in order to do that, you can switch over to the ADB shell is what they call it.
And to enter that shell, you simply type dot slash ADB space shell and you will be dropped
down to your own little Android SDK prompt, which will look pretty much like any other Linux
prompt you've ever seen.
So there you are.
You're in the shell.
So you do a CD space slash data slash local slash temp.
Now you're in your slash data slash local slash temp folder on the phone and now you do a
Tramod 0755 space rage against the cage dash arm five dot bin and hit return and then do
a Tramod 0755 space install dash root dot S H.
Okay, so, um, that was easy.
Now you need to go execute that code on your phone.
You can keep the phone connected to the computer, but grab the phone in your hands, launch the
terminal in your later and and now CD into slash data slash local slash temp and issue
the command dot slash rage against the cage dash arm five dot bin.
This command will take longer than you will expect it to take.
Trust me, you will think of that something is going horribly wrong.
Visions of a brick to phone will flash before your eyes.
You're going to start getting tempted to grab the phone and start randomly pressing buttons,
trying to get out of it, quitting the little terminal in your later, you'll yank the
plug from the computer, you'll yank out the battery, don't do that.
Just be patient, wait for this little application, so full of rage against the cage to finish.
You will know that it's finished because you will see this little message that says plus
forked some number of childs.
So it's like plus sign in two brackets and then it says forked, for instance, 2,374 childs.
That is the message that you will see when this is finished.
Until you see that message, that application is still running.
Do not try to interrupt it.
Do not press any buttons, don't let your friends come by and press buttons.
Just let it run, let it do its thing.
But trust me, it will take longer than you think.
In real time, it probably only takes less than a minute, I'll bet.
But while you're doing this and you're afraid that you're breaking your phone and all
these other horrible things, it's going to seem like forever.
But it's not forever and it does work and it forks all of these processes.
At that point, and the number it was arbitrary, it might be a different number.
It tends to be from what I can tell in the thousands and it will tell you that it forked
that number of childs as it says.
So okay, so that's done.
You can close that terminal emulator instance and then launch a new one.
And you should see that you are suddenly at a root prompt.
Of course, that will be signified by the usual hash or pound sign of a Linux terminal,
meaning that yes, you have root access now.
This is obviously, of course, only temporary.
You need to install permanent root access for yourself by running the root install script.
Okay, so pause.
If you don't see the root prompt at this point, then the rage against the cage, dash arm5.bin
program didn't work.
Maybe you saved it in the wrong location.
Maybe you got a bad download.
I don't know, but it didn't work.
You need to try that again, which means you might possibly have to go back to the ADV
shell.
The program back over to your phone, make sure that you're getting the paths correct.
Make sure that you've got the full download, all those other kinds of troubleshooting things.
But at this point, you should see a root prompt.
If you don't, you won't be able to do this next step, which is to run the shell script.
So we're assuming now that you are a root prompt, so you do a slash data, slash local slash
10th slash install dash root.sh in typical Unix fashion, it returns nothing upon success.
And so as long as you are dropped back at a prompt, then you've just rooted your phone.
Strictly speaking, if that's really your only goal, you could actually stop here.
If you're perfectly happy with your current phone provider's version of their operating
system, you could just have rooted your phone and you could do lots of cool things actually.
Simply with root access.
You can now use Andro SS, which is the screenshot application for the phones.
You can do cool stuff just by having root access to the device.
You don't necessarily have to continue on from here, but I'm going to assume that you
want to go the whole way, so we will continue on step two.
Step two is installing the recovery mode or the bootloader or whatever you want to call
it.
This step, I did the hard way and then later learned that there's like a one click, supposedly
a one click install of this thing.
I probably should have thought of that myself because the rooted phone, you can basically
do anything on the phone now, but I did it the hard way, so I'm going to go over both
ways.
I've only tried the hard way.
I can't actually vouch for the easy way, however, the thing that we need to do is install
essentially again, a bootloader or I guess what in phone terms I might be called a recovery
mode.
I don't know the proper terminology, but whatever it is, it is something to intercept
us when we reboot the phone or when we boot the phone from it being off.
It intercepts us so that we can then do some action like, for instance, wiping the data,
doing a factory reset or installing a custom ROM.
It seems like the most popular recovery mode out there for at least a click, and I've
heard from other people for other phones as well, is called the clockwork mod.
Again, I don't know where the clockwork mod lives, I don't know, probably I should search
for it.
It's probably got like a great home page with all kinds of information on it that I just
never bothered to look for, but I had to go all over the internet for it.
So one place that has a really good rundown on it is called addictivetips.com, I'll include
that link in the show notes as well.
So if you want all the information on what the recovery mode does, how to install it,
and all that of the good stuff, as well as a one-click installer, then visit that site
and read up on it.
The application itself, I think, is called ROM Manager, and I believe that it is available
in the marketplace.
The hard way to do it would be what I did, which is to look around on the interwebs until
you find this recovery image, and it will typically be called recovery.img or some variation
of that recovery something.img, anyway, it's an image that you're going to flash onto
the phone.
So you download that, it will probably be a zip file, you'll unzip it, and then you'll
have this thing, you know, this recovery image for your phone somewhere on your hard drive.
It's probably not a bad idea to have this on your phone itself, so just I would, if your
phone is not right now plugged into the computer, plug it into the computer, activate the USB
drive, drag the recovery image onto your USB drive.
I go ahead and eject that USB drive, I don't know if that's a necessary step or not, and
then you can do the rest from the ADB shell on your computer.
And the way to get that onto your phone would be dot slash ADB space shell, and then in
the shell you can flash underscore image space recovery, space slash SD card slash recovery.img.
If you don't want to do that on the computer, if you've already rebooted from your live
CD, or if it just doesn't seem to be taking when you try to do it on the computer, then
you can actually do that from the terminal emulator on your phone as well.
Again, you've got root access at this point, so you can do a flash underscore image space
recovery, space slash SD card slash recovery.img straight from the phone.
There might be some variation in that command when you're doing it from the terminal on
the phone, I don't exactly remember, but I think I did it from both places.
I would say that they both work, although it's kind of hard to tell, because once it works
once, it kind of is already there, so how do you know if it did or did not work, but
I didn't get errors.
So either way you do it, whether you do it from the phone or the computer or as a one-click
install from the market, that's how to get this little boot loader, boot interceptor onto
the phone.
And so at that point, you can issue the command ADB space reboot, I think, and it will reboot
the phone.
I think it's ADB space reboot, space recovery, and I could be wrong on that.
To actually reboot it in recovery mode, the other way to do it, and probably the more
common ways that you'll be doing it after you ditch your ADB shell, if you do, will be
to simply boot the phone.
You hold down the camera button, at least on the Motorola click, hold down the camera button
while it's booting.
So the sequence would be to press the power and the camera button at the same time.
The power you can release, but the camera button you hold down.
During that boot process, you should get a message on screen and plain text that says to
release the camera button or release the button, whatever.
So you release that, and then you'll have two choices.
You can either press the volume up key for one mode and the volume down key for the recovery
mode.
You should press the volume down key.
You've got 10 seconds in which to do it, so you don't have to fumble too much.
But if you press the volume down key, you are pretty quickly dropped into a text menu
bootloader that is sitting on the firmware chip of your phone, and you can now do whatever
you want to from this bootloader.
Interesting stuff.
Of course, before we actually do that, we're going to want to get some custom ROMs to
load onto our phone.
So if you were doing that while I was telling you about it, then simply resume the normal
boot.
I think the OK button on the click is the camera button, so you can use the volume up
and down as arrow keys on this little boot menu.
And then if I recall correctly, it's the camera button on the click that says, OK, you
know, do that.
So you can resume a normal boot.
And then, oh, and by the way, if you have any issue, like if the recovery thing doesn't
seem to be working, you'll get like an icon of like an exclamation mark in your phone.
And again, you'll probably think, you know, you'll panic and you'll think that you've
bricked your phone and stuff like that.
Don't panic.
Sometimes you have to remove the battery and pop the battery back in.
If you haven't bricked your phone, you just haven't loaded the recovery image correctly
yet.
So go back and try to reload that, flash that recovery image again.
Again, if it's not working, just hunt around online and try to find another version of that
recovery image or try that one click install, who knows, maybe that's the easy way to do
it.
Otherwise, you should get the recovery modability.
But from that recovery menu, we will be able to install a custom ROM.
The custom ROMs, you will have to hunt down again online.
There's no central place to go to tell you about really.
I mean, you can go to this Vantage and Wiki, that's probably a good reliable place to start
from.
Wiki.Vantage and mod.com.
You can find all the unsupported devices there.
And then under each unsupported device, they'll show you the different ports to different
phones that you can try out, you know, all the different ROMs.
So download some ROMs.
Same deal as the recovery image.
You just want to push them or you, I shouldn't say push.
You want to copy them over to your SD card.
So again, plug your phone in, activate the USB mode, and then drag the custom ROMs over
those apps.
They need to stay zipped.
Copy them over the SD card.
Don't put them into a subfolder.
Don't make a folder called ROMs and put them in there.
Just put them out on the SD card.
This is so that the bootloader will be able to find them correctly.
Okay, so once you have the ROMs, then we really are ready to reboot.
So you can reboot your phone, snag it into recovery mode with that camera.
And then the volume key down to enter recovery menu.
Now you'll be in the recovery menu.
First thing you should do so far I've found online about the click at least is do a full
system wipe.
Meaning that you need to wipe the cache and you need to wipe, I think the whole system
as well.
I'm assuming that's what they mean.
They say make sure to do a full wipe.
So that to me says everything.
But on the recovery mode, there is a cache wipe and there's a system wipe.
I did both.
You know, it wasn't my phone who cares.
Of course, I should probably mention this does erase all of the user data like your address
book, contact list, whatever.
Your email settings or email, you know, if you've got email coming to the phone, all those
settings will go away.
So I guess you should probably back up first.
There's a way to back up all that data.
I don't really remember what it is, but there is a way to do that.
You know, it'll grab all your contacts and your email settings and stuff like that.
If there's stuff on there that you really care about, you might want to do that.
I fully anticipated losing everything off the SD card as well, although I guess I should
have known better since the ROM itself, the boot ROM itself, is on the SD card.
And so how could we install that boot ROM from the SD card if we are in the process wiping
the SD card?
But I really did think that I was going to lose all that.
You don't lose that stuff.
The stuff on the SD card is fine.
Which is why you basically want to back up the data from the phone's OS, you know, from
its little read write section.
You want to back up all that stuff to the SD card, basically, in that way you've got
it.
And you, you know, it probably wouldn't be a bad idea to back up the SD card itself as well.
I mean, you are doing some pretty drastic things to the phone.
But yeah, so once you're in recovery mode, you can then scroll down to the, well, like I
say, the system wipe of the cache wipe.
And then there's a selection called install ROM, I think, from zip or something like that.
Click on that selection and then you can locate the boot ROM on the SD card, tell it which
ROM you want to flash.
It will flash that ROM onto your phone and then it will start to boot.
And now you're running Phanogen or some variation thereof.
And finally, when people ask you what kind of phone you have instead of saying, be obligatory.
Oh, I've got an Android phone.
You can actually say, oh, I have a Phanogen phone.
A couple of random notes about this then, if at any time during this process you find
yourself needing a root prompt and not able to get to a root prompt, at least on the
phone.
But all you have to do is run the command SU, as long as you've rooted the phone, you
should be able to get a root prompt that easily, just SU.
The inevitable question I think is going to be battery life.
So far, I haven't noticed any reduction in battery life on this.
I will say, however, that the battery turns critical sooner than it did on the native OS.
I've noticed.
So if you're used to your little battery being, you know, looking full 70% of the time
and then starting to look low, you know, whatever it does, whether it turns red or just it
looks low, then you might find that on certain ROMs, it starts to look, it starts to claim
that you're low on battery sooner than you actually are.
This happened to my friend who, you know, would see the battery looking critically low,
but it just looks critically low for longer than it would on the stock OS.
So it's just an icon.
Don't get freaked out by it.
It might be different.
Depending on what mod, on what ROM you actually use.
Those are the two notes that I had.
Other than that, everything's pretty much as would be expected.
So have fun.
And I encourage you to root the phone and try out some custom ROMs because there's no
reason that you shouldn't control your own device.
There's no reason you should ever have to sign into Google just to use your cell phone.
Thank you for listening to Hacker Public Radio.
For more information on the show and how to contribute your own shows, visit HackerPublicRadio.org.
