Episode: 1985
Title: HPR1985: Fixing Bug 1092571
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1985/hpr1985.mp3
Transcribed: 2025-10-18 12:51:37

---

This episode of HBR is brought to you by AnanasThost.com.
Get 15% discount on all shared hosting with the offer code HBR15 that's HBR15.
Take your web hosting that's Honest and Fair at AnanasThost.com.
Hi, I'm at the Google Osomar code booth with Jeremy.
We aim to view you before.
How are you doing?
It's me.
Hi.
Yes.
I have a bug.
And this is what FastTime is all about getting bugs face.
I can connect to a Windows Server via Dolphin or Nautilus, but I can't connect via EGCE FS tab.
Why is that?
So the reason is almost certainly that, well, I can tell you the difference between the FS tab and Nautilus,
Nautilus uses LibSNB Client, which is code that we write as part of the Samba project.
Now LibSNB Client supports both SMB1 and SMB2 and Kerberus and NTLM.
The kernel client is a little more limited.
So the reason you can browse to it using Nautilus and go straight in is it's almost certainly using SMB2.
The kernel client, depending on what the kernel is, may not be supporting SMB2.
It certainly supports SMB1.
If your Windows Server has been upgraded and they may have turned off SMB1, then the kernel client won't be able to connect.
You'll need an SMB2 kernel client in order to connect.
Now, I haven't kept track of the kernel client because like you, I often use Nautilus, if I'm browsing to my Windows chairs,
or I don't use Windows, if I'm browsing to my Samba chairs.
So I usually use Nautilus for that, so I very rarely do a kernel mount.
So you're going to have to check into the kernel version and whether it supports SMB2.
The way to tell if this is the case is to run Wireshark, listen on port 445, between both client and server IP addresses,
and then browse to it via Nautilus.
And then, save off the capture trace, look at it, and find out if the protocol listed in the protocols field is SMB2.
If it is, try and do the same mount as you're doing normally from the kernel client, capture the same thing.
And if you see it trying to open at SMB1 connection, you know what the problem is.
So what's the difference between SMB1 and SMB2?
SMB2 is Microsoft's modern file sharing protocol.
SMB1 is the original DOS version that went all the way up to Windows XP and server 2003 or something.
With Vista and above, they created a new protocol SMB2.
It's actually, funnily enough, with Samba to Samba, we could get the same performance out of SMB1 that Windows gets.
They have to create a new protocol to do, because we pipeline our reads and writes on the wire.
They do that now with SMB2, but they have to change, they were so frightened of changing the SMB1 code in the Windows client,
because nobody understands it anymore, that they invented a new protocol so that they could create a new client that they can fix.
So that, the SMB2 client pipeline reads and writes.
They also integrated our idea of doing transport level encryption, so you can have an encrypted connection.
That's actually, they had to wait for SMB3 to get that.
But anyway, so SMB2 means SMB2 or above, which goes all the way up to 3.x.
It's a more modern protocol, it's all handle-based, it does much larger reads and writes, it does more asynchronous,
it's kind of a more modern file sharing protocol.
But we implemented it anyway, so, you know, this is your fault for using Windows Server if it was Samba, it would have just worked.
But that's, I'll thank you very, very much.
No problem.
You've been listening to Hecker Public Radio at HeckerPublicRadio.org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HPR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out how easy it really is.
Hecker Public Radio was founded by the Digital Dove Pound and the Inflanomicon Computer Club,
and is part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on the website or record a follow-up episode yourself.
Unless otherwise stated, today's show is released under Creative Commons, Attribution, share a like, 3.0 license.
