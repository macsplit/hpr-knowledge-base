Episode: 1514
Title: HPR1514: Give The Small Guy A Try
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1514/hpr1514.mp3
Transcribed: 2025-10-18 04:32:19

---

MUSIC
Hello, it's Beesr again. A few months ago I produced my first HPR episode which I entitled
The Long Road to Linux. Now in that episode I talked about how I became a refugee from
proprietary software after the best part of three decades work in the IT industry. These
days I think I've described myself as a committed free software enthusiast, but certainly not
announced an outfundamentalist. I went to see Richard Stormman give a talk at Wolfson
College in Oxford a few months ago and I was very impressed by what he had to say. It's
little doubt he is an eccentric, but he's certainly not the outnatter that some people
portray him as. It's hard to argue against most of what he says after the normal pragmatic
level. Where my views divergent is is that I want my Wi-Fi to work, even if it does mean
using non-free drivers, and I feel much the same way about the use of non-free audio and
video codecs as well. After I'd installed my first Linux distro, which was Ubuntu 804,
I started exploring the Linux software repositories and it didn't take me very long to realise that
a lot of free and open source software is every bit as good as its commercial counterparts.
I think a lot of open source developers must use those commercial counterparts as functional
templates. Meanwhile that may help the developer cut some corners with the requirements capture.
It must tend to stifle innovation to some extent. LibreOffice is a good example of this.
There's still plenty of Microsoft Office functions which you won't find in LibreOffice,
that dreadful ribbon bar thankfully being one of them, but I'm struggling to think of any
significant feature that's unique to LibreOffice. Perhaps that will start to change before too long
because from what I can see Microsoft Office is running out of new ideas. Each new version
delivers features which I can't believe that many people ever use. Maybe he wants to LibreOffice
developers decide they've got nothing further to learn from Microsoft, that'll leave them
free to consider some completely new features. Now if it were up to me I'd put a lot of effort into
turning base into a viable business tool. Now don't get me wrong, I'm not picking on LibreOffice
because I don't like it. Far from it in fact I'm a huge fan and I use it every day,
but it's certainly one of those applications which has a commercial counterpart acting as a
benchmark. The problem Microsoft and every other commercial developer has got
is that they only make money when they sell a copy one of their products. Over as the software
evolves and gets better in terms of features and functions they must inevitably start to run out
of useful things but in the next version. This is exactly where Microsoft is now with Office,
the trouble is from their standpoint, the idea of calling it a day and ceasing active development
can't really be an option. I'm sure that's why all these software companies now spend so much
of their time dream up new ways of extracting money from their customers. To my mind this highlights
another advantage of open source software certainly from the developer's perspective.
If you're a developer of an application and you decide it's got all the features it needs,
having no financial incentive there's no reason not to just put it into bugfix only mode or
evil walk away from it altogether. Obviously some packages like virtual box have to reflect
changes to Linux kernel so all the while Linux is under development those packages will have
to be maintained or they'll become irrelevant almost overnight. I'll listen to a lot of Linux
podcasts and I've often heard an application described as being dead. Now for a distribution
that's probably fair enough but for a simple application that delivers a few straightforward
functions it can be misleading. A distribution that's not been updated for a year or two probably
has not much use and it may even be a liability but it seems not necessarily true for a simple
application. If it does all it's said out to do well and reliably and it still satisfies a relevant
requirement that I think will be better described as having a frozen design much as they do in
manufacturing. After all you don't take your car to the scrapyard as soon as Ford or whoever
stops producing that model dear. One thing I've noticed is that despite the vast choice of
applications there's some which just about everybody uses and others which never seem to get a
mention. Could it really be that these widely adopted applications are not much better than
the alternatives? I think you could draw analogies between free and open source software and the
world of books. If you go in any bookshop you'll probably find thousands of titles but how many of
those get any kind of promotion? Very few. Does that mean that the other books just sit on the
shelves with no publicity and no good? Well of course it doesn't. Maybe you could view repository
tools like Synaptic as the book shelves where every package is equal and it has no promotion
while software managers, app stores or whatever you care to call them are a short windows.
New applications which get no promotion will never get top billing so they tend to get ignored.
Take the audio recording and editing as a case in point. What did you last year anybody
proposed using anything other than audacity? You'd be forgiven for thinking that there are no
either audio audices around but you'd be wrong. I'll say people who do use audacity how much of
its total functionality they've ever used other than maybe for pure experimentation and I'll bet
it's not a lot. If that's the case why not use an audio editor that focuses on the functions
that most people really do use? Bloat in software inevitably comes at the cost of performance and
stability. The more features you've got the more the risk to go wrong. I've looked at maybe a
dozen open source audios and some to be honest are pretty grim. Either the user interface is dreadful
or the application keeps crashing sometimes both. However they're not all like that while I cannot
recommend too highly it's called MH Wave Edit. You can cut paste, mix, normalize, fade and do all
the other basic sound editing functions and you'll recall from any audio source your system will
recognise. No it won't apply fancy effects but most people don't need to most of the time.
The payback is that MH Wave Edit will load a one gigabyte file in just a few seconds
and doesn't take that much longer to save the changes you make to it. I don't think I've ever known
it a crash either. Can you say that about audacity? Now as far as I'm aware the version of MH Wave Edit
that I use now is the same as when I used in 2008. Now I don't know if it's developed as ceased
but if not there can't be much development going on but then there doesn't need to be.
Another area where excessive bloat has become the norm is audio players. The trend in expectation
now seems to be that an audio player should not only play audio files but also provide access
to music streaming services and internet radio stations, write media tags and sync music to
iPods and phones but why? Streaming services always provide their own play of some kind either
in the form of a local client or some kind of web service. It's totally optimized for that stream
so any change of provider makes to the API stands a good chance of breaking any third party applications.
Okay so it takes a few mouse clicks to move from one dedicated application to another because
that really sets a big deal. Integration of disparate functions sounds like a great idea
but if any part of the application's ecosystem is beyond the control of developers
you're always building in the risk of obsolescence and instability.
For its worth I would recommend the decibel audio player. It plays all the regular audio formats
like RGMP3, WA and so on. You can play CDs and you can create playlists and save them to a file
but that's about it. The user interface is clean and tidy but it's not flashy or sexy just gets
a job done and never crashes. It's good enough for me and I suspect it is for a lot of other people too.
I've probably come across as something of a luther but my approach seems to serve me pretty well.
I've subscribed to quite a few forums and there seem to be an awful lot of problems encountered by
people who are trying to be clever, trying to integrate everything with everything else.
The overall point I want to make for my roundlings today is not that my choice of applications is
right and everybody else is is wrong. Everyone has their own idea of what they require from a package
and that's fair enough. What I would like to do though is encourage people to look beyond
simply using whatever a BRC is using and explore what the repositories have to offer
before they settle on which application is the best option for any particular task.
I love LibreOffice but you may find that Abbey Word and numeric suit your way of working better.
I never got on with all that Steve but clearly plenty of people do. Maybe is the right choice for you
but make that decision after assessing what else is on offer.
When somebody sets out the right and opens all that application they're not doing it to make
manual get famous. They've seen a need to approach a task in a way that no other application
currently does or improve upon what's already available. That takes a lot of time and effort and
probably sacrifice too. In my days riding commercial software or more than one occasion I spent weeks
working on something which ended up for one reason or another not being used. It's demoralising
but at least I was getting paid. Free software developers don't have that consolation.
At least if people try to software if it turns out to be garbage that can be fed back to the
developer and you can learn from it that if you like maybe it's reward. We all benefit greatly
from the efforts of other enthusiasts it's not asking much to give the small guide chance every now and
again. Before we just take the easy option and settle on what every else seems to be using invest
an hour or so looking through snappedy yum or whatever repository tool to use and try some
of the lesser-known packages. It's one of the major advantages of open source software
you try and think like and it won't cost you a bean. Like me you may be pleasantly surprised at
what you find. You have been listening to Hacker Public Radio at Hacker Public Radio.
We are a community podcast network that releases shows every weekday on day through Friday.
Today's show like all our shows was contributed by a HPR listener like yourself.
If you ever consider recording a podcast then visit our website to find out how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the economical computer club.
HPR is funded by the binary revolution at binref.com. All binref projects are crowd-sponsored by
linear pages. From shared hosting to custom private clouds, go to lunarpages.com for all your hosting
needs. Unless otherwise stasis, today's show is released under a creative comments,
attribution, share a like, video's own license.
