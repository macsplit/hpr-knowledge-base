Episode: 3801
Title: HPR3801: Enter the gopher
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3801/hpr3801.mp3
Transcribed: 2025-10-25 05:32:25

---

This is Hacker Public Radio Episode 3,801 from Monday the 27th of February 2023.
Today's show is entitled, Enter the Gofer.
It is hosted by Screw Tape and is about 14 minutes long.
It carries a clean flag.
The summary is, participating in the Gofer Internet Protocol.
Hello everyone, my name is Screw Tape.
I like to do lots of writing and sharing code on the Gofer.
I want to do a short and sweet episode about entering the Gofer for everyone.
For everyone, because everyone can.
I'm a little bit opinionated, but I hope that I have good reasons.
Gofer is the Internet Protocol that was popular before the web.
The experience is like browsing files on a Unix file system.
That's the intended experience.
Oh, this episode.
What I talk about.
I'll have links and clear examples in the HPR episode text, which I will write after I finish recording this.
Floodgap.com is the de facto website about Gofer.
If you need to, if you currently have a web browser, visit Floodgap.com.
I think that's how I originally got into vlogging on SDF's Gofer.plub.
Files are often text files, which is item type zero.
So Gofer has a set of known item types, which also include
arbitrary binaries and images and sound format files and PDFs.
And HTML, I think, is all in the standard.
But we like to use text files a lot.
CGI's are called moles, just as a quick aside.
ASCII art is popular, relating to the text files, because there's nothing defined like HTML.
So because it's not part of the rules, people can express themselves how they like in text files to convey text.
In order to participate, I think the absolute right way is to get on a till,
like SDF.org, or something in the tilldiverse.org, of which I'll have links here.
A till is a public access units like Facility, where you'll be able to connect,
like they'll have instructions to help you connect in a way that you're comfortable with, generally by SSH or Mosh.
And then you just have have a command line shell onto their server.
And that will help you interact with Gofer.
And once you're in there, type links, l, y, n, x, gofer, colon slash slash, gofer.club,
or links, gofer, colon slash slash, tilldiverse.org, and start browsing the Gofer.
Generally the arrow keys and enter are useful to you on links.
I guess if you want to advance by one line and links, it's control and or control.
I know links is also a fully featured web browser,
but it is also useful as a fully featured Gofer browser that's present everywhere.
So if you have a Linux computer, you almost definitely have links or can get links easily for it.
Again, I'll have this in the episode information.
The reason that I think everyone needs to get on on a tilld is that tillds have in general support you hosting your own Gofer in a public Gofer directory.
The particular tilt will have a utility for helping you with this if you went with sdf.org,
which is an absolutely wonderful kind of the till classic.
Once you've got into your shell there, you type make Gofer or mkGofer.
And it's a little helper script tool that walks you through generating up directory.
And just files you put in that directory will be your Gofer.
So you just type make Gofer, it gives you a public Gofer directory,
and you just put text files in there where make Gofer has some helper tillds.
Let's just read what it tells you after you run it.
I think in the tilldiverse it's normally burrow.
B-U-R-R-O-W is the popular helper script there.
Because the reason that some help is helpful is that there's an extra level of security that Gofer generally practices.
The most popular server Gofernicus and other servers practice is they don't let you serve files with too many permissions.
You need to get the file permissions right.
But that's hard to remember.
Unless you're like me and you actually like typing chmod.go plus rx than your file name.
That's an aside. Forget I said that. Use mkgofer on your sdf tilt or use burrow in your tilldiverse tilt.
Gofer's standard is rfc1436 which is eminently readable and includes interesting commentary.
And it's really good as an rfc goes.
You can also find one of its co-authors Bob Alberti on on mastodon which is your side quest.
If you want to go away and try and find somebody on mastodon on the mastodon.
The mastodon is not the Gofer but you know they have some synergy mastodons and Gofers.
I guess Gofers are more cute to furry elephants than mice are or maybe mastodons aren't scared of mice.
Other Gofer browsers. If you can tell that I'm staring at a checklist while I speak.
If you already use emacs install alpha mode.
If you already use emacs that will make sense to you.
It's in the non-gunu alpha package source which is the standard in modern emacs.
For many reasons Fetch P-H-E-T-C-H is the best Gofer browser but you have to build it yourself.
So come back to another little one.
There's a popular Mootzilla Firefox plugin called Overbite which you can find on floodgap.com.
They'll help you read about and install it.
And floodgap also do a web proxy so you can browse your elegant Gofer text files from your in-elegant web HTML environment.
As you can tell I don't think it's the best to you go for as or experience Gofer as an extension of the web.
You don't need all that web baloney and also it's not going to be conducive to you participating in the Gofer.
Where I think the most wonderful thing about the Gofer is that you're kind of writing and art that you post there.
You're participating in communities and everybody's very different and which is fascinating and fun and you kind of get to know each other.
I'll have a bunch of links to interesting places to venture once you're in the Gofer.
So floodgap do have that popular Mootzilla Overbite plugin and JavaScript and not JavaScript web proxies into Gofer.
A little bit about the mechanics of Gofer.
There's kind of the de facto great INETD, so internet super server, Gofer server, GoferNicus, which is very highly secure.
Like we were talking about it's paranoid about file permissions or appropriately paranoid about file permissions.
Now one thing the Gofer standard doesn't do, which I argue is extremely good, is it doesn't attempt to offer current advice on internet security.
The protocol is just a communication protocol saying basically the rule is just the client connects.
The client says one thing which specifies an item and the server returns that item and breaks the connection and that's the rule.
So that doesn't include negotiating a transport layer security connection, which means you need to add that if you want to have secure communications with Gofer server.
Which of course is popular, though slightly more obscure, not more obscure.
In lots of cases, if you want everybody to happily read your blog, you don't really need TLS.
Like what you're getting from it is needs to be specific.
Anyway, GoferNicus works well with a wrapper utility, which it can be easily configured with examples called Stunnel 4.
And this just wraps your normal Gofer server service in a Stunnel 4, which TLS is the server.
So people will be making TLS connections, but otherwise experientially it is a totally normal Gofer respecting the Gofer RFC 1436.
One of the reasons I said Fetch is the best Gofer browser is that Fetch also very conveniently supports transparently using TLS.
If you just have the TAC S or the TAC TLS flag when you start Fetch, it will prefer to negotiate TLS if possible.
Fetch also has good support for, now we're bearing into wild opinions of mine. Fetch has good support for ANC, like Terminal Colors.
And while those aren't present in lots of Gofer browsers by default, I argue that they're actually really good because when you're in a normal Terminal these days in a Unix-like operating system, normally they are very colorful.
But I think that in going with the spirit of item type 1, the directory item type being experientially like Unix-like Terminal, or even viewing text in the Unix-like Terminal, often we have Colors in those.
And so I think that's a solid default even if it's not all that common.
Anyway, please look at the episode description for hopefully clear and helpful links in a small amount of commentary.
I hope to see everyone on the Gofer, and I'll also have a list of cool Gofer places, even though floodgap, SDF and the toll diverse are basically great places to get you on.
Alright, thank you everyone, goodbye, I love you all.
You have been listening to Hacker Public Radio at Hacker Public Radio does work.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording broadcast, then click on our contribute link to find out how easy it really is.
Hosting for HBR has been kindly provided by an onstoast.com, the Internet Archive and R-Sync.net.
Onstoast.net, today's show is released under Creative Commons, Attribution 4.0 International License.
