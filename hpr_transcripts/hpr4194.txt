Episode: 4194
Title: HPR4194: Get more user space on your Linux filesystem with tune2fs
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr4194/hpr4194.mp3
Transcribed: 2025-10-25 21:06:23

---

This is Hacker Public Radio Episode 4194 for Thursday the 29th of August 2024.
Today's show is entitled, Get More User Space on Your Linux File System with 2-2FS.
It is hosted by Delta-ray and is about 5 minutes long.
It carries a clean flag.
The summary is, how to use the 2-2FS program to reduce the reserve block percentage value.
You are listening to a show from the reserve queue.
We are airing it now because we had free slots that were not filled.
This is a community project that needs listeners to contribute shows in order to survive.
Please consider recording a show for Hacker Public Radio.
If you're a Linux user and you've ever run the DF program on your root file system or
some file system, you've noticed a discrepancy between the size of the file system versus the
amount used in the available space.
They don't all add up.
You've wondered, why is this what they talk about when they talk about space loss to
formatting or to the difference between two powers of two and powers of ten and stuff
like that?
Well, no.
There's actually another element in play here that is maybe not as well known and it's
called the reserved bytes percentage and so when a reserve blocks percentage, when
a EXT3 and EXT4 and EXT2 file system get created, it actually, since forever, it reserves
5% of the file system so that only the root user can use it.
I guess the logic here has always been that if you run out of space on your drive, you
need to probably give the root user some space to work with to recover things or maybe compress
some files in case like a non-root user filled up the drive with stuff.
This is why if you add the used and available up, it's only about 95% of the way there
to the total size and this is because by default, 5% of the file system is reserved for root.
If you want to change that because when it comes down to it on a one terabyte drive, 5%
is 50GB, that's quite a bit of space that you could be using for something.
These days when I install Linux on a system, I'm usually, depending on the total file system
size, but I'm usually reducing that reserved block percentage to about 1%, and you do
that with a program called Tune2FS, TUNE2FS, and it has an option called dash M and you
just give it a percentage amount, so you'd say dash M, space 1, I wouldn't set to 0 just
in case you really do need that reserved blocks for root if you happen to run out of space,
so you still have some room to work with.
But I would at least set to probably 2 or 1 because these days, file systems are so
big that it's quite a bit of space that's being used there.
So you say TUNE2FS, space dash M, and then 1, and then space in the file system device,
so slash dev, slash SDA1 or whatever it is, it's going to be whatever is in the output
of DF, and so yeah, that can give you some space right there to play with and give you
a little bit of extra space if you're already running out of space, but if you're already
running out of space, you might want to look into getting a bigger drive, of course, or
finding places where you could actually recover some space, and for stuff like that you can
use programs like NCDU and DU to figure out where you're using up quite a bit of your
space and so on, or a program like Find, space slash, space, dash size, and then you can
say plus 100 capital M to find stuff that's more than 100 megabytes, that might quickly
give you some files that are very large, maybe you've forgotten about like old ISO images
or large log files that need to be compressed or something, you know, that will help you
find stuff quickly.
All right, so if you're hearing this, it probably means that Hacker Public Radio is running
low on episodes, and so I'd really encourage you to think about stuff that you're interested
in and think about recording a show, all you have to do is go to hackerpublicradio.org
and click on the give shows link at the top, and there's more explanation there, but we'd
love to hear from you.
Thank you.
Bye.
You have been listening to Hacker Public Radio, and Hacker Public Radio does work.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording podcasts, then click on our contribute link to find
out how easy it really is.
Hosting for HBR has been kindly provided by an honesthost.com, the internet archive,
and rsync.net.
On the Sadois status, today's show is released under Creative Commons, Attribution 4.0 International
License.
