Episode: 1789
Title: HPR1789: The Ubuntu Quickly Ebook Template and Ebooks in General
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1789/hpr1789.mp3
Transcribed: 2025-10-18 09:20:18

---

This is HPR episode 1,789 entitled The Ubuntu Quickly Book Template and eBooks in general.
It is hosted by John Kulp and is about 34 minutes long.
The summary is John Kulp and Mike Kingley talk about eBooks in general and Mike's Quickly
Book Template project.
This episode of HPR is brought to you by An Honesthost.com.
It 15% discount on all shared hosting with the offer code HPR15, that's HPR15.
Better web hosting that's honest and fair at An Honesthost.com.
Hey everybody, this is John Kulp and I thought I should say a few words about the recording
you're about to hear.
This is a conversation that I had with Mike Kingley about a year ago when he reached out
to me regarding his project called The Ubuntu Quickly eBook Template.
I thought it was a pretty cool project and something that we should talk about on HPR.
So we got together on mumble and recorded for about 25 minutes and then for one reason
or another the show never got edited and uploaded so I finally got back to it today.
And I apologize for the audio quality on my end.
I was clipping a little bit and I don't like that but hopefully you can just bear with
it.
I also apologize for what seems like my denseness when he's trying to explain one of his visions
about this.
It seems like I'm misunderstanding him every time where he talks about how he would like
for this project not only to be used to create an eBook but also to get it into the Ubuntu
repository so that a user could just grab it using the package manager and then also
have the eBook updated as part of normal system updates.
A very, very cool idea now that I listen back on it and it irritates me that I just seem
to be fixated on using the tool only to create eBooks.
On the positive note he talked to me a few times in there about the Python libraries
to get at Caliber to do some eBook conversions and so forth and I'm glad to say that I use
those all the time now and they work perfectly and my entire eBook creation process is automated
for my counterpoint book so that's a good thing and with that I think I will just leave
you to it.
Hope you enjoy this and again I apologize for the long delay in uploading and for the
poor audio quality on my end.
Not that channel is good, easy to edit out coughing and things like that.
Alright, so let's, I don't have a script or even a list of bullet points or anything
here.
That sounds good.
So have you recorded any HPR episodes before?
Yeah, I did a couple, I did one watching my bag, obviously I figured everyone does that
one and the hell I got into the next, I think everyone does that one as well.
I did do one about content packaging which is where my sort of passion lies these days.
We hadn't done an official start here but we might as well start with that I guess.
I'm John Culp and Lafayette Louisiana and I'm talking to my name is Mike Hengley and I'm
in Birmingham in the UK.
Alright and so I did recently an episode for HPR where I talked about my renovation of
a 1910 counterpoint textbook for use in my counterpoint classes at the university.
And I talked about the process of doing corrections, putting musical examples and coming up
with scripts that would help me insert examples and all these kinds of things.
And also about my philosophies of the relative openness or not of university textbooks and
things of this sort.
I didn't listen to that episode then I guess you could go back and listen if you wanted
for some more background info but the reason I mentioned that is because Mike got in touch
with me shortly after that episode came out and introduced me to a pretty cool package
that he has written for, I guess it's for Ubuntu but it looks like it could be used
on any Debbie and based system is that right?
Pretty much yeah I think so yeah.
And tell us what it's called and what it does.
Okay, thanks John.
It's an Ubuntu quickly eBook template.
It's a system that allows you to create eBooks using the quickly templating system.
That's an open source project that I know it's part of Ubuntu.
It might be available on other distros as well but using that you can create eBooks like
ePOP files and get them once you're kindling or rest of it.
It's challenging but it's all right.
Yeah, it looks pretty cool.
I watched a screencast that you did and I remember hearing about the quickly project
either right when it came out or shortly after it came out and I don't remember which
podcast I heard about it on.
It might have been the Ubuntu UK podcast or something like that.
I know it was a couple of years ago but they were talking about this really cool new
package where if you want to start a project all you have to do is type quickly space project
name and boom you've got this directory with all of the files you need in it with version
control set up and it really sounded cool.
I just didn't have anything to use it for it.
It would never would have occurred to me to use it for eBooks the way you are.
Yeah, well the traditional sort of templates you got with it were things like Pi game apps
or a GTK app and that kind of thing.
So if you wanted to do those things that's great but one of the things I found was you could
do quickly quickly so you could tell quickly to create your quickly template.
It's really sort of meta and sort of yeah.
So that's how I started template was to quickly quickly something and basically then started
taking things out and putting replacement things in.
The thing I really liked about it was you could take your content and you could share
it on launchpad so you could like take your source files and people could then potentially
re-package that themselves or add to it or fork it like a normal piece of source and I
think that's quite important for content.
One of the things I've been sort of writing about on my blog is if we take content and
put it on Google or Megaflow or whatever, we're sort of reliant upon them maintaining
it and I thought it's probably an opportunity as it's the sort of fundamental building block
of the operating system, the repository system that I was using to share it with.
It would mean the content would be fundamentally sort of preserved as well.
It's a very cool concept and also I can imagine that if you, if I were working on this
counterpoint book with a colleague or two or three of them and we were all working at the
same time it would be much easier to deal with the editing and updating if it were stored
centrally on a repository like this and people could commit their changes and all of us
would always have the same version of the files.
Yeah, certainly an advantage.
The buying version system for Launchpad is Bizarre which is a distributed version system
with like GitHub so there's no reason why you couldn't all have your own branches and
then do your own updates and then merge them all together.
It's sort of, it being decentralized reduces that sort of reliance again on a central
point to store off your data.
One of the questions I had for you when you emailed me was, I mean you had mentioned
that my students could track the code and get the updates via Bizarre or something but
I think I mentioned that I don't think any of my students run Linux and at least in
the 13 years I've been teaching here I might have had three or four students who actually
ran it and a handful more who kind of knew what it was but I don't know about the, they
could certainly download a finished product from there like a finished EPUB or a finished
AZW3 file from there and there would be a central place to grab it.
Yeah, I mean that's still supported under Launchpad, you can sort of still link to it.
You can build sort of build recipes so you can say, take this source, do this stuff
to it and give me the output and we could use that to sort of publish your book and put
that into a download location on Launchpad.
But the real advantage of, say if you were a Linux user would be if you were subscribed
to that particular PPA or even it was part of the distribution, any changes would be
automatically pushed out to your system.
So it would appear like a normal system update.
So when you switch your PC on it would say, hey John's done a new version of the book,
would you like to download it?
Yes, please.
Yes, I would.
Yeah.
That would be excellent for things like documentation of whatever, I mean if you could
have things like that updated and then push to your kindles or your whatever readers you
have.
You can certainly see it being used for like a Ubuntu manual.
I mean, what better way to maintain a Ubuntu manual than to use a Ubuntu to build a Ubuntu
manual?
Right.
So when you first started this, what was the use case that you imagined?
I'd sort of been looking at the way distros asked for help and it seemed to be if you're
a coder, great, write some, you know, fix some bugs for us.
And if you're not, perhaps you could raise some bugs or do some documentation and it seemed
to be the selling point to a distro was the applications.
And as a user, you know, you're there to basically big up the applications and make them better.
So it all seemed to be geared towards application developers, which is fine because that's what
a distro is.
But I wanted to, I thought, well, what about if, if I don't write applications, what about
if I'm an author?
Or what if I'm Cory Doctorow, you know, writing my books, wouldn't it be cool if Ubuntu
could sign some sort of deal where my books would be available, you know, on Ubuntu?
You wouldn't have to go to Amazon or Cory Doctorow started or anyway, particularly to get
them, they'd just be available and you'd be able to search for them, they'd be indexed
so you'd sort of search for home land, a little brother or whatever and get the book
that you wanted.
Yeah.
That sounds pretty cool.
I mean, I don't think I'm going to be using this project for what I have going right
now, but I could definitely see maybe using it in the future.
I mean, right now I've got my own build process and scripts and things like that.
Actually, before I talked to you, I was working on a bash script that would take my source
HTML file and then run a bunch of said substitutions to make it work better on the Kindle.
And I'll have to do a different script to make it work on the iOS reader that I have found.
And this is a constant source of frustration that there's so many different devices that
handle these files differently.
It's hard to make something that's going to work exactly the same on every platform.
I mean, the Kindle, for example, will not render the music players.
And most of the ebook readers on other platforms I found also will not render the music
players in my counterpoint book, but I found one on iOS.
Actually, there's an Android version of it, too.
It's called NeoSore, but NeoSore book, I think in EOS OAR, and it does render the audio
players.
And so when I look at the book on that, I can play the music also, but it had a problem
where it didn't deal with ordered lists the right way.
It ignored my counter things where I would tell it to start an ordered list here, but
it started at number 63, well, it would start at one.
And so it does some things well, but not everything well.
And so I'm having to come up with scripts that will run a bunch of substitutions depending
on what the device is that the person is going to read it on.
And I guess this is one of those things that could be handled in Launchpad.
You say, like, you can set up a build process that will run all these things for you.
But also, have you considered the caliber libraries?
I use caliber at some point, and usually that's like the last thing.
But I don't know how to script with caliber.
Is there a way to get at it from the command line?
Well, it's got a better interface, so you could just run Python, a little Python script
to do the thing that you wanted and just call that.
But I have to be inside caliber to run it.
No, I think you can call it dirty from the command line, passing it in values.
I will have to look into that some more, because I really need this to be able to run everything
from a command line.
Right now it's a very clunky process I've got going out, I'll fix, I'll take my source
code, run it through the script to create what I think will be a pretty good, say,
Kindle file, and then I have to import it to caliber through the caliber interface and
then do the caliber conversion to Kindle format and then drag it over to my Kindle to see
how it looks.
It's very tedious.
I managed to get a copy of, there's a virtual Kindle emulator that Amazon make available
windows.
I managed to get that to work on the line under Ubuntu, you might try that, that might
save you having to use a physical Kindle and stuff.
Yeah, well, I just got my Kindle yesterday and so I'm very excited about it.
So right now I don't mind the tedious process, because I want to see it on the device,
I'm so enthralled with it.
How great to see it in a book you've written and you just like transfer it onto a Kindle
and it's proper reading device, it's like, this is brilliant.
It really is wonderful.
And this is not one that I wrote, but I've done quite a lot of work on it.
Yeah, I like the Kindle a lot.
Yeah, I remember the first time I wrote a book and it was literally a page that said this
is a book.
I know, I basically copied it by a caliber onto my Kindle, it was like, yet that's there
and, oh look, it works.
It's pretty cool.
I have an idea that I might actually, for my college classes, make Kindle versions of
the course syllabi and various other documents related to the course that people can put
on their Kindles or other devices.
But now I just do everything in HTML because it's so universal and all my students have
a phone in their pockets where they can grab stuff either that way or whatever.
But I really like the dedicated readers also.
So I want to keep those in mind as I'm distributing stuff.
Yeah, it does sort of raise the second question, I suppose, if you're producing content, what
is the future of e-books?
If our devices are phones, e-readers, they're getting more and more permanently connected
to things, is there even a point in e-books anymore?
Is it just going to be a case of when you browse to a web page and that's your book?
Well, I don't know.
For me, at least right now, I still like the e-book format because I'm not necessarily
going to be connected to the internet all the time.
And I like to be able to transfer something over.
And at least for the counterpoint book that I've been working on, the source file is so
big that it doesn't work very well if you try to access it just on your phone's web browser.
I mean, it works okay, but it's very slow to load up because there's so many images.
It's a massive file, it works much better when it's been converted to e-pub or to a
kindle format, just because it doesn't have to keep the entire thing in memory at all times.
I think our connection is going wacky here.
I saw your lips turn red, but then something sounded like it was all broken up.
Yeah, yeah, I got that as well.
I did, yeah.
So if I'm not listening to this and they'd like to see your book that you've been rescuing
from public domain sort of obscurity, where can they go to to find it?
Because I've had a quick look at it and it looks amazing.
Thanks, yeah, they can go to my website.
I'll put a link in the show notes for it.
I have one page on my website that is devoted to my counterpoint projects.
And there's a link to the HTML version that people can look at just in a web browser.
And I also have a link to the e-pub.
I'm going to add a link to the Kindle version since I have one now.
And so people can look at those as well.
So if there's all these devices that you want to try and support with the book and stuff,
is there any way we can sort of try it on different devices if anybody out there's got
like an obscure knuckle or whatever, would that be beneficial?
Possibly.
I mean, I actually have, my kids both have knuck colors.
And I have this Kindle, we don't have an original knuck that uses the e-ink.
I'm always curious to see how well something's going to work on just about any device.
The e-pub format seems to be the one that's most cross-platform friendly, because I know
that I couldn't put e-pubs on my kids' nukes and they can read them.
The Kindle, I'm not sure if the Kindle will read an e-pub book or not.
It reads mobile, it reads mobile based formats, but you can build your e-pub to mobile using
the caliber libraries.
Right.
Yeah, that's what I've done so far.
I mean, I start with the HTML as my source and then I convert it to like imported to caliber
and then convert it to e-pub or azw3.
I guess this is what the extension is.
Ask the Kindle, one, isn't it?
Right, but I'm going to have to look into these Python libraries and try to work that
into my scripts to automate more of this.
I don't like having to use a graphical interface to test the changes that I've made.
I definitely, I just want to cross it the other night.
I thought I really must remember to look at that because I was thinking that I could
be able to use that myself, so when I publish my books, not only does it go to e-pub as
it does currently, but then perhaps gets converted from there to mobile or whatever format.
Because it suddenly goes to me like, I'm producing an e-pub file and the Kindle won't
read an e-pub file.
Right.
So I think it currently reads it, I think, is fbreader, which is the native built-in e-book
reader in Ubuntu and it's a bit, it's not great, it doesn't appear to be too great.
That might be a little bit of me as well because my book might not be that, maybe not that
good.
Well, fbreader is a very bare-bones e-book reader and I don't like it so much on the desktop,
but it's great on Android.
What I like about it is it's very lightweight.
When you turn the page, it turns really fast.
It doesn't have a lot of fancy options, but you can hook into lots of different book sources.
You can add the Gutenberg project page to your list of sources and just grab books straight
from Gutenberg to fbreader.
I like it.
It doesn't have some of the cool features that the Kindle reader has on Android or, say,
the Nook Reader, which will keep track of your progress through a book and then if you
start reading on another device, it'll find your place for you.
So fbreader won't do that, but as just a basic book reader, it's pretty good.
I like it, okay.
I started doing some research into the Amazon Cloud Reader, have you seen that?
I have not tried enough.
Well, it's like the Amazon Kindle, but in a web page, so once you've got your books
in your library, you can read them on the web.
And I actually managed to set up a sort of proxy and you can actually watch the commands
being sent to Amazon backwards and forwards.
Yeah, it's really cool.
I mean, a lot of it doesn't make a lot of sense because I've had to put like a proxy
in the middle, so I can see this request to like get a book state and go to this location
stuff.
But it strikes me that if you've got that sort of API and it's just simple calls to go
and get this book based by an all the books in Amazon, I've got an ASIN number, which I'm
assuming is some sort of identified to the book within your library.
What about if you could pass in a personal document ID as opposed to a library document
ID, because one of the restrictions that Cloud Viewer is that you can only view books
not your personal documents.
So if you put a book onto Kindle, yes, it will track your progress on all of your readers
apart from Cloud.
It won't show up at all.
But that's still a good feature, the fact that once you've got your book and your book
would still support that, but as you navigate through and read your Kindle point book,
you can pick it up on the Kindle and then pick it up, say on your phone or on a tablet
or on the laptop or whatever, and it should sink it across.
Yeah, so far I have not tried to, all I've done is put it on the Kindle device.
I've not tried to sink it up to my Kindle library online.
Yeah, that's one of the next things I should try to do.
It seems like you may have to email it to your Kindle address or something, or I don't
know, there are a number of ways you can get content onto the Kindle.
One of them is through a Kindle email and the other.
I've just been dragging it on there connected with the USB cable.
You can us, but I'm not sure from that how you get it up to cloud.
You can upload it onto your Amazon drivers.
There's an Amazon just done their sort of storage system.
And as part of that, if you email any books to your Kindle at your free.kindle.com address,
it appears in your Amazon cloud drive thing, and you can also leave upload files directly
to it.
Yeah, I'll have to try, I looked around for a button that says, click here to upload
a file, but I just couldn't find one.
Maybe I'm in the wrong place, but I will try emailing it to my Kindle email address and
see if that, yeah, I need to sort of get like that because, I don't know, but did you
say the humble ebook bundle recently?
No.
They just know the humble ebook bundle and it's got like a bunch of novels in there by
a load of people.
I speak, I spent $10, so not a huge amount for a load of books.
And one of the books on there is From Hell, which is the Alan Moore graphic novel.
It's massive.
It's like 400 meg.
So I don't fancy trying to email that to myself because I don't think it's going
to work.
Yeah.
But one of the reasons I had not tried to email the counterpoint book to my Kindle yet was
that it's 37 megabytes in the EPUB version, but somehow it's only one megabyte or maybe
1.5 in the Kindle version, I think because it does not try to pull in all those audio
files.
Yes, possibly, isn't it?
Where?
Yeah, whereas the EPUB, I think wraps them all up in there, I just have gone to the humble
ebook bundle.
Well, I guess there's YouTube video that talks about it.
I'm going to check that out after we're done here.
Maybe I'll get it too.
Still on is it?
Well, it says humble ebook bundle pay what you want.
Let's see.
I'm going to click on this link here.
It's hard for me to tell.
I don't want to just poke around on a web page on a podcast.
That's not very good radio, but maybe I'll have to check it out later and maybe record
a podcast about it if I like it.
Well, is there anything else for us to talk about with respect to your project?
Oops.
How would people get a hold of your product?
What did you call it again?
Probably ebooks?
Oh, I think I lost you again, Mike.
We may have to do some editing to get these things back.
Ah, are you there?
I see red lips coming on, but I don't hear Mike.
Yuhu!
Hello!
I'm still here.
Oh, there you are.
Wait, now I lost you again.
I'm still here.
Ah, there you are.
Wait, now I lost you again.
I'm still here.
Ah!
Okay, there, now I hear you.
I think you're trying to write alt tab.
I was just going to alt tab and see if I've still got the humble ebook template, the humble
ebook page open on my browser, but I think whenever alt tab my machine decides it's going
to kill the internet.
Oh, whoops.
That's not a good feature.
It's not too bad.
So maybe we can come up with a link for the show notes to go to the humble ebook bundle.
Yes, you and it's still on.
But if people aren't aware, it's definitely a good resource to look at because it's a
pay what you want, pay what you think it's worth, ebook system, it's pretty cool.
Yeah.
So tell people, again, what your project is called and how they can get it.
Okay, it's the Ubuntu quickly ebook and play.
It's on launch pad.
There'll be a link in the show notes, I'll send you a link.
If you want to read more about my experimentation with content packaging, including how I packaged
the hold of Linux reality to go on to launch pad.
You can hit.
It's great.
Sounds good.
Yeah.
So titanium bunker dot com.
Cool.
Well, that's, that's, I've got 26 minutes on the recorder here.
So maybe we should call it quits, people want to find out more about your book and your
writings.
We can then find about you.
That would be at johnathanculp.org, j-o-n-a-t-h-a-n-k-u-l-p dot o-r-g.
That's my website and all kinds of stuff to bore you with there.
Include, you can also, one of the most recent posts there, you can find out how I made
a door knocker from my front door out of old skateboard and bicycle parts.
How nice.
All right.
Great.
Very nice meeting you, Mike.
Thanks for getting in touch with me after my episode.
I'm glad we got to get together and record one here.
Thanks, John.
Thank you.
Take care.
Yep.
Bye-bye.
Talk to you later.
You've been listening to heckaPublicRadio at heckaPublicRadio.org.
We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out
how easy it really is.
HeckaPublicRadio was founded by the digital dog pound and the infonomicon computer club
and is part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on
the website or record a follow-up episode yourself.
Unless otherwise status, today's show is released on the creative comments, attribution,
share a life, 3.0 license.
