Episode: 1171
Title: HPR1171: Tech and Loathing 13 - Remote Desktop Protocols
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1171/hpr1171.mp3
Transcribed: 2025-10-17 20:59:16

---

.
Welcome to the Black Sparrow video.
We are hit broadcast and at 1.
.
Well, hello everybody and welcome to episode number 13,
a bad luck episode of the tech and loathing podcast.
I want to start this episode off by giving a brief apology to anyone who's in the live stream tonight,
even to hear an episode of Linux and the handshake, which is not going to happen because
something happened to my co-host today.
He wouldn't tell me what it was.
Apparently there is some kind of shit storm as he put it at work.
And whatever happened, it left him practically for dead.
So as far as I know, he is in bed at this time.
And so I've had to dig up some random co-hosts from other cardboard boxes and random places around the country,
one of which is with us tonight via cell phone technology.
And that would be Lorde, welcome once again to the tech and loathing podcast, Lorde, how are you tonight?
Besides a little mayhem with my home networking setup, I'm alive and well.
A little mayhem with the home networking setup, what's that all about?
I made the mistake of deciding to try to put an LDAP system into place using my running NAS for free system
instead of testing with a VM first.
So it caused some issues with the permissions on the NAS Reeboks.
Sounds like fun.
Not.
Again, welcome back.
This is the second time you've been with us.
And last time we talked about guns tonight, we're actually going to talk about a tech subject.
Well, a couple of tech subjects anyway.
So stay tuned for that.
But we have a new guest on the show tonight.
His name is Kevin Wischer, also known as K-Wisher or Quisher, if you prefer, on the IRC over at a pound aug gas planet.
And we'd like to welcome Kevin into the show tonight.
Thank him for being here and find out how he's doing.
So how are you doing?
Been good tonight, Russ. Thanks for the invite.
And I'm just happy to be here.
Excellent. Any home networking problems we should know about?
Kill any hobos lately?
You know, anything of interest?
Do you want to tell anybody?
Now my network's up and running pretty good right now.
I'm like Lord D, sometimes I like to play around with my stuff live too and do occasionally coal.
I was a breakage here and there, but tonight everything's good.
All right, that's excellent.
I'm glad everybody's network is working fine.
As a matter of fact, just before this show, I had to go up to where one of my servers is co-loaded and switch out a hard drive tray.
Because I managed to wind up getting the hard disk in before I got the hard drive tray.
And so I had a little bit of jury rigged hot swap hard drive action going on,
involving some cardboard, rubber bands and stuff like that, holding the hard drive in.
And then I got the tray, so I actually put things together the way it should be.
Now to me, that's like hardcore tech.
So since that generated absolutely no response whatsoever, maybe we should just move on to the main topic.
Unless anyone has anything they want to bring up now.
I know that Kevin has looked at the notes for the show tonight.
Anything there to peeks your fancy?
Do you want to start with or you just want me to run down the list or what?
Just go ahead and get started and I'll chime in when I have something to contribute to the topic.
All right, well as it happens, I think I'm going to skip the number one thing in the list
because I talked about that on the Linux and the ham check that we did a week ago,
that was episode 94, and I talked about that topic there.
So people can go get that episode if they want to hear about creating a desktop image slideshow in Canome.
My first thing is a little bit of complaining to do about the Motorola droid X
and the Motorola droid X2 and recent releases of Android.
Now, do either of you happen to have an Android phone?
I'm currently coming through on a Samsung Galaxy S3 running CM10 stable,
which happened to be released just this morning.
And what version of Android is that based on?
4.1.2.
Okay, so that would be an ice cream sandwich distro and what about you Kevin?
I'm currently using a droid razor max and I just look at it and it's running version 4.04
with a stock rom still from Motorola.
Okay, well YouTube both have slightly newer phones than I have apparently.
And I just wanted to kind of rant about Android a little bit and where things are going with that
because I know Android is rather ubiquitous in the cell phone market these days.
And it's on a lot of devices.
It's an open source project.
So that is excellent.
It's really hard to argue with that kind of thinking for those of us who come to open source,
looking at it in a positive way.
But the sort of fracturization, is that good?
I need to make a correction for you.
I believe 4.0 is ICS and 4.1 is jelly bean.
Okay, good. Well, that's exactly what I'm getting to.
You know, the inability to actually figure out what version is codenamed what is kind of part of my problem.
But in a more generalized sense because in a typical Linux distribution,
which Android is at its base, you have the kernel,
you have the applications that run on top of it.
And that's what makes Android Android.
But Android has been so fractured because Google does weird things with it.
They tend to do all of their development behind the scenes,
then release their code after it's already been pushed out to all the devices.
And then they have developed hardware,
or there have been hardware vendors that have developed hardware in conjunction with
current versions of Android at the time the hardware is released.
And then they don't bother to give them either specs for the time of day
so that they can be upgraded to new versions of Android as they come out.
Thereby, Kevin is using 4.04, which presumably is ICS.
And Lorde is using 4.1, which is jelly bean.
And of course, there have been one or two revisions that have either come out or coming out very soon after that.
But my Android phone, which is less than two years old,
is currently running gingerbread and cannot be upgraded because Motorola or Android,
or not Android, I'm sorry, Motorola or Google can't be bothered to put out
an updated release of Android for my handset.
And I've got to say this is frustrating as hell.
So not being a victim of this,
do either of you want to comment on this sort of weirdness with Android
and the sort of vendor lock and you get with the handset you buy?
Well, the first thing I'll say is I've made the choice not to be a victim of that.
I was pretty careful about choosing the phone.
I was going to buy when I bought the Galaxy S3,
making sure I was going to be a phone that would be supported by cyanogen mod,
moving away from the vendor's version of the ROM.
I know there's some inherent risks that I take with that,
but I've chosen not to be a victim in that whole vendor's being very, very slow
on updating their ROMs.
Okay, slow on updating their ROMs.
I kind of gather from Motorola that this isn't a case of them being slow.
This is the case of them not giving a crap,
and there will never be an update, anything past gingerbread.
But there's a problem there in that I can't get a new phone unless I go to a new phone,
unless I go to a new contract or pay $6 or $7 or $800 for a handset.
At the moment, I can't even get a new contract because my 21 months
of my original contract aren't even up yet.
So I'm basically screwed, and I'm not enjoying being there.
So, haven't any thoughts?
Well, I just recently upgraded to this Razer, Droid Razer Max
about a month, a month and a half ago.
I came from the original Droid, and I, you know,
the Motorola is like, like you say, they're slow and getting their updates.
So on the original Droid I had the first phone, the first smart phone I owned
after, I don't know, two or three months, I rooted in ROM debt
and started running, you know, various different ROMs.
I kind of settled on a signage and for it.
And I really haven't on the new phone kind of waiting to see
since it's still new.
I'm not real in a real big hurry to root in ROM yet and doing my research.
And when I don't see any updates coming for the Android,
you know, coming down from Motorola,
and I will take that step into, you know, rooting it and putting a custom ROM on it
when they fail to provide, you know, me with the features that I think I should have
from the company you buy the phone from.
And I think another thing we need to kind of be aware of here is that
we're the tech crowd looking at this problem.
My fiance who's now running my older Samsung Galaxy Captivate,
she really doesn't care what version of Android it is.
A lot of the lay people don't care as long as it works and works well for them.
So I think we need to at least state that, you know,
this may be more of an issue for the, you know,
tech crowd who wants to play with newest, latest, greatest toys.
And I agree with you, Lord Dean.
And I think that's kind of why the iPhone is a hate to say it is popular amongst the non-techy crowd.
It's just something that, you know, they accept what they're given and it works for them.
It's simple to use and it's just not for the geeks.
Well, let me interject here.
Well, of course, I'm not really interjecting, but let me comment on both of your comments
because the problem that I'm having with my Android phone is that it's not working for me.
My girlfriend also has a droid X.
Well, she has the droid X2, which she got about a month after I got my droid X.
And both of us are having very bad problems with our phones,
having to reboot all the time, having applications lock up,
not being able to make calls, sound going away.
And I've heard that a lot of these problems have been fixed in later versions of Android,
but because of the, you know, supposed age of our handsets,
even though they're less than two years old, we're still stuck with what I guess you can consider a bad or a buggy version of Android,
can't upgrade them.
I've actually looked at doing something like rooting them and going to SyEngine Mod, but unfortunately,
both of us decided to take Motorola firmware updates.
And so our basebands are too new and they haven't over at SyEngine Mod,
apparently been able to crack the latest baseband so that we can roll back far enough
in order to install SyEngine Mod.
So we are really stuck with the phones we have.
It has actually pushed me to the point where I believe that both of us,
when our contracts expire, are going to go back to iPhones.
And that's a sad day in our world,
but the iPhones just work and we can't really deal with this anymore.
So the question I'll ask is, are you on a ChSM or CDMA carrier?
I'm on Verizon, which is a CDMA carrier,
so there is no swapping of SIM cards allowed, so to speak,
because there are no SIM cards.
We just have handsets with the CDMA circuitry built into them.
Now it's my new droid razor, the Razer Mac,
it actually has a SIM card and I'm on Verizon.
Okay, so that's using like the 4G LTE,
which apparently is a GSM-based technology?
Correct, yes.
Yeah, see, unfortunately, we're stuck in that place
where everything is working against us.
It's like the hurricane Sandy of phone problems right now.
We're at a total super storm of, you know,
can't regress the baseband, can't update the firmware,
can't root and put on signage and mod,
can't get updates from the manufacturer,
and so on and so forth, and can't get out of our contracts
and switch to something else.
You know, the point we're at is we'd have to pay $700 for a new handset,
and obviously that's unacceptable for most people,
including myself.
That's why I'm frustrated right now.
Oh, I'm not trying to downplay your frustrations
with Motorola at all, G5,
but I really want to lay this problem directly
in the hands of the manufacturers,
and unfortunately, in the case of Motorola,
it's kind of easier to lay that problem at the feet of Google
since they're now a Google subsidiary,
but I still would put these problems
at the feet of the handset manufacturers,
and especially in the case of Verizon, Verizon as well.
Yeah, I mean, I see them all as culpable,
at least in part, so that makes it even worse,
because there's no place to focus blame.
You have to kind of spread it around
and that dilutes the anger and the frustration,
so it's just a bad situation all around,
which kind of leads me into the next topic that I had,
which is what Apple does right,
and I sort of was leading into that,
based on my frustration with Motorola and Android and so forth,
and the idea that I might actually switch back to an iPhone,
I think I've pretty much decided
that I will switch back to an iPhone
because of what Apple does right.
Now, I think we all understand that Apple does a lot of things wrong,
but what I'm seeing lately is that
in the open source marketplace,
and specifically in Google's marketplace,
the idea of Android being open source is there,
but it's not really free.
It's not really free as in Libre,
and it's definitely not free as in cost.
I mean, these handsets are not cheap,
and the only way you can really afford them
is to get the subsidized contract price.
So, yes, Apple does things wrong,
but I think Google is doing things plenty wrong themselves,
and I feel less and less guilty every day
about going back to the Apple iPhone,
just because I know that when I power the thing on,
and want to make a telephone call or surf the web,
I'm going to be able to do that,
and I can't do that.
I can't be confident of doing that
on a daily basis with my Android,
and I got to tell you that's incredibly frustrating.
Well, unfortunately, you being over on the CD,
a main line of things, at least as it stands,
the Nexus is not an option for you,
and I think Google is now going a long way
with the Nexus 7, the Nexus 4.
I don't know about the Nexus 10,
I haven't seen prices on that.
They're going a long way to changing the price
for an Android device.
To the tune of what?
I mean, what do you...
I assume you're saying that they're coming down
to a reasonable price for an unlock device.
What would you consider reasonable for said device?
Well, the Nexus 4 handset runs,
I believe about $300 US,
and the Nexus 7 tablet is $200 US.
Yeah, I would consider that reasonable,
and I would certainly consider switching carriers
in order to be able to have that technology.
I assume that AT&T,
and I'm not sure which of the other carriers
are based on GSM technology.
One thing that sort of helped us out in Verizon's cases,
with AT&T, they allowed you to upgrade your phone
after only half of your contract was up.
In Verizon's case, it's 18 months,
which means I only have to wait 6 months more,
and then I can just get out of the thing altogether
and go to a different carrier.
So I may consider that as well.
So, if you switch to an iPhone,
you don't think you'll fall into the trap that Apple...
I feel like this trap where they come out
with a new phone every 6 months,
and everybody rushes out to get it.
And so, you know, you're stuck with...
You're still going to be stuck with a phone
for the length of your contract,
so is that going to be a problem
when the next version of the iPhone comes out,
and you're stuck with an old model
that's going to be two years old
before you can get a new one?
Well, the thing is,
there's another piece of this puzzle
that hasn't been discussed yet,
which is that before I had an Android phone,
I had an iPhone.
My very first smartphone was an iPhone,
an iPhone 3, then I upgraded to the iPhone 3GS.
I actually upgraded to the iPhone 3G,
but the 3GS came out a week later,
but I was lucky enough when I was still with AT&T
that I went into the store
when the iPhone 3GS came out
and said, you know, me and the thousands of other people,
probably millions of other people,
and said, you know, I just bought this thing,
and the 3GS just came out,
and they said, oh, you know,
we'll give you a 3GS
and won't cost you anything blah, blah, blah.
So I didn't get screwed
on the short release cycle of Apple hardware,
but the thing is,
even for the two phones that I had from Apple,
I was happy with them every day.
I could rely on them.
It's not that they were perfect
because they did glitch every now and then,
but when I look and compare them
to the Motorola Droid,
they were unbelievably sound.
And, you know, the sort of hardware lock-in
that Apple does,
it's annoying when you think about it
because everything they do is locked down,
everything they do is so proprietary,
so closed, so anti-
what we all think is the better way to go.
But by doing that,
they make everything stable.
They make everything reliable.
And, like I said, it's not perfect,
but then electronics and general aren't perfect.
But when I compare the two,
and I think going back to the iPod,
is the way to go.
I still think it's the way to go,
because I know that if I stick with Android,
I'll probably wind up with, like,
a Galaxy S3, you know,
something along those lines.
And yeah, it'll probably be a decent user experience,
and I'll probably be fine with it and all that.
But I know what I had before,
and I just think I'll enjoy it more.
But the enjoying it more than Android
is not really the determining factor.
The determining factor is now,
I feel that Apple and Google
are on even footing
when it comes to their sort of overarching evilness.
So it doesn't matter to me which one I pick,
because they both suck.
So I feel like I just should go back to Apple and be happy.
So your overall deciding factor
is the perceived stability
of an Apple device over the crap,
which is what Motorola has put out on you.
Well, that's certainly what I'm looking at right now,
and it's not a perception.
It's actual evidence.
I have, you know,
I have actual sighted evidence
of how well my iPhone 3GS performed
and how crapily my Android X has performed
over the roughly two years that I had both.
And there's no question in my mind
that going back to the iPhone
will make me a much happier person.
Well, since everybody's been driven off by that comment,
I guess we should probably move on
to the real topic of the evening,
unless someone else wants to bash me once again
for mentioning Apple in the context of open source
and anything else that we all believe is good.
Before I move on to remote desktop protocols.
Well, I'm going to have to apologize at this point,
but something's come up and I need to bow out
at this point in the evening, Bellman.
Not a problem whatsoever.
Lordy, thank you once again for your thoughts and comments
on the show so far.
Hope you have a good evening.
Thank you, K-5, and have a good evening
and same to you, K-Dub.
Talk to you later, Lordy.
Okay, so let's get off of that ridiculous topic.
I've probably ranted on it way too much
than I should have anyway.
I wanted to talk a little bit about remote desktop protocols
because not that long ago,
I was using an X-based application called TSClient
on my Linux Mint and my Debian machines
to connect to RDP servers and DNC servers,
you know, when I needed to do remote administration
or things along those lines.
Well, it turns out that some of the more recent releases
of those distributions, the TSClient has gone away.
It's no longer available in the repositories.
Now, this may or may not be a problem for you
in whatever distribution you're using,
but it happens to be a problem for me.
So I was looking for an alternative.
Well, the alternative I found is an application called Remina
or Remina.
Is this something you're familiar with, K-Wisher?
Yes, it is.
I'm a network administrator at a local K-12 school system
and I have the unfortunate enough to wear my main box,
my main system that I use is running,
right now I'm running SolosOS,
which is a based on Debian stable.
And I administer all my Linux servers using Remina,
Remina, I don't know, exact pronunciation of it,
but I find it very useful.
I can remote into any of my Windows servers,
Linux, I don't really have any.
I've got Linux servers, but they're not, they're all,
I know, just servers are not, don't have any gullies on them.
And then we've got a couple of Mac mini servers
that I also can connect with this same client.
Yeah, that's excellent.
I mean, you basically do with it the same thing that I do with it.
It turns out that, you know, on our network,
there are several Windows machines that have to be administered.
Now, Remina, Remina, Remina,
doesn't have to be used for Windows boxes,
but it turns out that it's very useful to me for that purpose
because it supports the RDP or the remote desktop protocol.
Now, this is a Microsoft protocol,
terminal services clients,
or terminal services boxes use it,
and it happens to be, you know,
sometimes Microsoft actually does things correctly.
And RDP happens to be one of those things
that they've done correctly.
It's a very good remote desktop line.
It's very efficient, it's highly compressed,
and even over relatively slow networks,
you have to connect to a server
that is serving its desktop using RDP.
Its responsiveness is very good.
Now, I'm comparing this specifically to things like VNC,
which the compression tends to be not so good at,
and it doesn't perform quite as well,
especially over a slow network connection.
Is this something you've noticed as well?
Because I mean, it really seems prevalent to me
that RDP is a very efficient remote desktop protocol.
I'll agree there.
I've really never used any other client.
I have tried, like, Type VNC,
but I find Romania just as an all-purpose client.
And it's something I don't know if you're aware of,
and I just became aware of it there in the last month,
is that you can actually use it as an SSH client,
it's like cutting.
Yes, there's actually, if you go into configuration,
there is an SSH tab,
and you can actually use it for SSH tunneling
and transporting your desktop sessions encrypted on the wire,
which is a great added feature.
But it's something that I in particular don't really use,
because I have a separate administrative land
that is entirely off the internet
when I go to these remote desktop sites,
so I'm not typically worried about encryption.
The other problem with encryption is it increases overhead,
and, of course, responsiveness will go down
if you use encryption.
But to have that as a feature is an excellent part of the application.
I've never used it for connecting from home to my network,
because we have a Cisco ASA firewall,
and I'll have to connect the ENC to it,
and then use a window since Cisco.
They do provide Linux and Mac clients,
but I never have had any luck with them,
so if I do happen to have to remote in from home
into our network,
I have to use a Windows machine to run the Cisco BNC client.
Okay.
Well, in my environment, I don't use a Cisco ASA.
I actually have a Linux machine running as a firewall
in a router box using open swan for IPsec VPNs,
and, you know, any protocol works fine over that,
because the whole tunnel is already encrypted using IPsec,
and so I don't have to worry about what's going over it.
Sort of eliminates a step in worrying about encryption for me.
But I noticed that...
I noticed that lag when I'm connecting from home,
through the firewall and getting into the internal network.
It's nice that the way it works,
because it's like I'm setting artwork when I'm tunneled in that way,
but I definitely notice a little lag coming,
even though I've got a cable internet speed at home,
and it is definitely laggy.
Yeah, understood.
And typically, you're over like a DSLR cable connection,
which it doesn't have full bandwidth available full-time,
and, of course, you're going to experience lag and slowdowns
and all that kind of thing.
So the nice thing for me about Remina is that,
before Remina, before I found it,
and after sort of lost the ability to use TS client,
I was using GNOME-RDP.
Now, this is an RDP client, too, and it does work.
But the real problem with it is, if you want to set it up,
it's set up in a sort of tiered configuration structure.
Now, I get the tiered configuration structure
because there are other databases and other data sets
that I use that are built this way.
But basically, what you have to do is you have to say,
I have this group of servers,
and you define that group of servers,
and then you say,
I want to define a certain connection type,
and that can be VNC or RDP.
And then you have to say,
I want to configure an authentication type,
whether it's RDP authentication or local authentication or whatever.
And then you have to link all of those pieces together
to create a client definition,
where you say that I want to connect to this server
using this protocol with this authentication type
at this IP address,
and then link all of those things together and call it, you know,
server name or whatever.
And to me, that's a lot of configuration steps
to just do a remote desktop into a remote machine.
With Remina, you don't have to do any of that stuff.
Basically, unless you want to get down into the nuts and bolts of it
and configure it to your total, you know, satisfaction,
where you can set arbitrary screen size,
bandwidth limits, and I can't even remember all the options
you can configure inside Remina.
It's a very large number.
But at the root of it,
if you just want to connect to a remote desktop client,
you fire up Remina, you type in the name of the server
or it's IP address, click OK, and you're in.
That's all there is to you authenticate locally
with whatever server it is, typically for me,
it's a Windows box,
where you log in as administrator,
whatever the local administrator password is,
and you're done, you have an RDP session.
To me, that makes Remina incredibly useful,
super easy to configure,
and then basically you can save that configuration.
And if you want to change some of the settings
like you want to use scale mode or full screen mode,
or a different bit depth, you know, color depth,
or log, or a different protocol,
or any of those things, you can just save it
and fix that stuff later,
whereas in order to even get a session started
with the Nome-RDP,
you have to set up all that stuff first.
Those to me is really annoying.
So, does this match your view of that,
or do you have a sort of a different idea of it?
No, I agree.
Totally, it's very easy.
Like I say, it's very simple.
You just put in the IP or the server name and connect.
And if you don't like what you see,
you can configure the screen resolution.
And you can even save your password if you want,
if you're not worried too much about security.
And when you save those settings,
it all saves in a dot,
you know, in your home folder,
in a dot Ramina folder.
And so, you can back that folder up
if you ever decided to wipe your machine,
and you can go,
you're seeing restore that folder back
and be back and going in a shorter time.
So, it's really, it's really slick.
And like I said earlier,
I'm connecting to Windows machines
and also connecting to Mac machines
with it.
It works really great.
Yeah, that's excellent.
I haven't actually used it to connect to a Mac OS machine,
but I'm going to give that a try just because I want to do it.
But connecting from a Linux machine
to a Windows machine has been so super easy
that I have just been blown away by Ramina
and I can't recommend it enough
to anybody who has to do this,
even if it's only on a, you know,
an occasional basis.
It's just such a great program.
You know, I believe it's in all the repositories.
Of course, I use pretty much Debian repositories.
It's a simple app-get install Remina away.
And that's Remina-R-E-M-M-I-N-A.
By the way,
let me go ahead and
let Evan make any more comments he wants to about this
while I find the URL for the application.
Another feature, I mean,
this is not just exclusively to Remina,
but, you know,
I have at any time during my workday,
I may have, you know, four sessions open up
in the main window and they're all tabbed across the top
and to switch between the servers, you know,
so it's a simple click of the tab
and you're into whatever server you need to be,
just real quick exploit.
So, and I leave that running, you know,
logged into all my windows servers all the time.
So, I mean, even over the weekend,
I'm not there.
My box is pretty fairly secure.
It's a Linux.
Like I say, it's Linux.
I'm not too scared of anybody.
I leave my Boston, even though my password
logged into my machine.
So, I just leave that up running, you know,
all the time.
And I can, of course,
the main machine I'm server I'm logged into all the times
are main AD server
and then our exchange server.
And sometimes the print server
and a file server.
And then occasionally I can say I have to log into
a couple Mac mini servers.
Yeah.
I mean, I haven't even gotten to the point
where I've had to use it multi-tabbed
because basically,
I kind of leave the windows machines alone
as much as I can.
But sometimes I just have to pop into one,
do some random, you know, administrative function
and I'm sort of done with it.
For that, Remina is just so awesome.
Bill in the chat room,
who is our normal Linux
and the hamshack keeper of all knowledge,
has switched over and been very helpful
in the tech and loading podcast tonight.
Found the URL for Remina,
which is remina.sourceforage.net.
You can find out all the information you need to
about the application there.
Download it from there if you need to.
And it's in every repository
and every distribution out there
in the world right now.
So if you don't actually need the information,
just go ahead and use your YAM,
or your YAS, or your app yet,
or Pac-Man, or whatever it is you use,
and go ahead and install Remina.
I can't recommend it enough.
And I believe it also supports VNC.
Now, I haven't actually used it for VNC,
but I'm pretty sure it does.
In fact, yes,
when I connect to the Mac servers,
that's what you have to use.
You have to use the VNC part to protocol.
Yeah, so there you go.
It even supports VNC.
Now, GenomRDP also supports VNC.
It supports RDP,
and like I say,
if you sort of have the mindset
where you like to be very organized,
where you want to set up,
each tier of your configuration
and then use GenomRDP to connect to those,
it's a good application.
It really is.
It just takes a little longer to set up.
Once you do that, building, you know,
future connections is really easy,
because you already have the,
you already have the foundations built.
So building on top of that foundation
goes quickly, and you can add stuff later.
But to me,
it's a little more work than is really necessary,
just to make a simple remote desktop connection
to a remote box.
So use it if you want to,
but I'd say go ahead and use Remina.
Another, I don't know if I want to call it RDP,
because on RDP it's the
Windows Protocol,
but I hear it home when I want to have a graphical remote
into my other Linux boxes from Linux to Linux.
I use a,
called Vanagra,
B-I-N-A-G-R-E,
and it works kind of similar to Remina,
but you can go from Linux to Linux
and use the build-in,
you know,
I don't know what protocol,
it's Linux used from for Linux to Linux.
My understanding is it's pretty much VNC,
if you're talking about serving remote desktop,
or of course there's,
there's a straight connection.
I mean, you can get a straight X-server connection as well.
Right.
Try it, if you got two Linux boxes at home,
and you want to play around with,
try that Vanagra.
It reminds me a lot of the Remina,
but it works pretty good
for going from Linux to Linux,
I just needed occasionally here at home
to remote into my myth TV boxes.
Okay, that's one I haven't heard of,
and Bill, of course,
keeper of all knowledge,
has given us the URL for it,
and it's projects.genome.org Stroke Vanagra,
V-I-N-A-G-R-E.
So if you want to check out that,
go ahead and do that.
Also, as far as doing Linux to Linux Remote Desktop,
like I said,
you can have a raw X connection
to a remote desktop that's running an X-server.
The problem with this is,
it's a raw connection.
It is straight data connection over X,
the X protocol,
and that is highly bandwidth intensive.
So unless you're on a local area network,
it's going to be very, very slow.
And if you're doing a Linux to Linux Remote Desktop,
you're going to want to use a different protocol.
You're going to want to use V-N-C
or Vanagra or something else.
And one thing that I've recently discovered
is a project called X-R-D-P.
Now what this thing does,
to me, is super clever.
What it allows you to do
is you do an app dash,
get install X-R-D-P,
or YAM, or YAS, or a Pac-Man,
or wherever I assume.
It's in all the distributions,
repos, you install it.
And then when it starts up,
creates an RDP Shem,
R3389,
which is a front-end
to a V-N-C back-end.
So basically what happens is,
there's a little bit of a shell application
that sits in front of V-N-C
on a local server
and presents an RDP interface
out to the network.
So when something connected this box,
whether it be a Windows Terminal Server client,
or Mac OSX running the Windows Terminal Server client,
or having REMINA, for example,
on a Linux machine,
it will connect to a remote Linux server
as if it were using the RDP,
the remote desktop protocol,
the Microsoft one,
connects on that port,
and then what it does is,
it shunts that connection
across the loop back
to a local V-N-C server.
So you get the advantages
of running RDP across the network
and V-N-C across a local connection,
inside the local machine.
So you get the performance of RDP
using V-N-C
and you can connect to it
a Linux machine from any client
that understands RDP.
This is super awesome.
Everybody should install XRDP on their machine.
Make sure you secure it properly
but you should definitely use this.
Have you seen this before?
Never have.
In fact, it's the first time I've heard of it.
Well, you should definitely try this out.
To my Linux box,
using something other than V-N-C
or an SSH connection,
or a straight-up X session.
And XRDP came up in my Google search.
I tried it.
It was in the repositories.
I installed it.
I went from my macOS box,
from a Windows machine,
and from a Linux machine running Remina
to a remote Linux machine,
using RDP,
totally fronted by this little,
you know, RDP shim,
even though it's V-N-C running in the background.
And it works perfectly.
It gives you a brand new
X desktop,
loads, you know,
whatever your local desktop environment is.
And it does it not
with the native performance of RDP
but with certainly better performance
than V-N-C
SSH or a raw X connection.
It was super nice,
and like Remina,
I can't recommend this thing enough.
If you need remote connection to a Linux box,
definitely check out XRDP.
Which by the way,
you can find that,
www.XRDP.org.
Let's see.
Do I have anything more?
Is there anything else in it?
It does.
Yeah, sure does.
It's got a couple of things more that I should probably talk about.
First being V-N-C,
there's a couple,
I mean, there used to be,
I think, what, six or seven versions of V-N-C out there.
But the two that seem to have
stuck around
through the years or whatever
are real V-N-C
which tends to be a little windows centric,
a little Microsoft centric.
And then there's tight V-N-C
which tends to be a little more prevalent
in the Linux arena.
Now, these are great clients
and protocols.
You can use them for connecting,
via remote, desktop,
not using RDP.
They use their own protocol,
V-N-C protocol.
The only problem with these is,
compared to RDP,
they tend to be less compressed
and slower.
If you're on a local area network,
this isn't really an issue.
But if you're going over a DSL
or a satellite
or a cable connection,
it's really degraded
using V-N-C.
And you may want to opt
for some of the other RDP options
we've already talked.
Anything you want to comment about V-N-C
because I don't think there's really
anything to say about V-N-C.
I think RDP is just better overall,
so I don't want to waste too much time on it.
Yeah, I agree.
I've used them in a patch.
I used the tight V-N-C
a couple times in a patch
and I was
I needed a way to get connected
to them through a windows box
and
when you do a quick Google on how
V-N-C into a Mac
from a windows box,
you know, tight V-N-C
and real V-N-C
are probably your first
couple hits on Google,
so I tried tight V-N-C
for a brief period of time
and haven't really used it since.
I mean, I've just been so
used to using RDP
that when I have to sit,
when I have to endure
a V-N-C connection,
it's just very frustrating.
Kind of like my problem with Android earlier.
But in the realm of RDP
for Macintosh,
if you're running MacOS 10,
there is a windows RDP client.
You can just do a Google for it,
you know, Google for RDP
and MacOS
site where you can download
an RDP client,
written by Microsoft,
and you can connect to any server
that's running an RDP server
or a terminal services server.
This includes a Linux box
running XRDP.
So if you need to connect to a Linux machine
from a MacOS machine
or to a windows box
running terminal services,
you can do that with this client.
Of course, it's not open-source
where, you know, if you don't care
about your immortal soul
or free software.
Trying to think if there's anything else
I wanted to touch on.
Oh, there's something that's not really on the list here.
One of the other ways you can connect to a server
that might be of interest to people
is particularly in Linux to Linux
and maybe exclusively
in a Linux to Linux environment.
But let's say you wanted to run an application
on a remote Linux server
but didn't want to have to start up
a higher desktop environment
just to run a single application.
Well, you can connect
an X server
application from a remote
X box.
From a remote Linux machine
running X
to your local machine
because X can transfer
the video data
across an SSH connection
and all you have to do to get that to work
in a typical situation
where your X defaults
file setup and you have SSH
on your remote machine
setup to allow incoming SSH connections
is you can do an SSH
space dash
capital C
capital X
space name of a server
space and then
an application name.
And what this will do is it will tunnel
an X connection
from the remote machine
to the SSH
so that connection is encrypted
and it will run the application
you specify on the remote machine
but it will display the
output of that application
on your local machine.
You know, I've done this many times
where I've wanted to run like
audacity on a local machine
so I can like
just bring up an audacity project
and export a flat file
but I'm not actually at home
with the Firefox
or I don't know, there's
a million things that I can think of
and a million more than I can't
while you might want to do this.
Now the two options that I gave you
the dash X
is to allow the remote handling of the X connection
and the capital C
is for a compressed connection
and the idea that is that
the data passing over that SSH
tunnel is compressed
therefore you get a little bit of a speed
or a performance improvement
across that SSH.
Pretty much works with anything
sometimes you'll get a few bizarre errors
like you'll get something
like it can't load a library
or it can't connect a D bus
or something like that
but it typically should still work
and you should be able to see that
remote application
locally on your X server
so usually when I describe these
kind of technical things
I've never had to do this
personally, I've read about it
and I always try to think of a situation
where I can use it
but I just never have
I've never tried it
it sounds interesting.
Yeah I've used it in several instances
where there's an application
that's running on a remote machine
where the output of that machine
happens to be
an X app
so the display is something you need to be able to see
like a CLI application
or something that runs on your end curses
so you actually have to be able to see the output
the X output
of the application
and using the SSH
dash capital C capital X option
is a great way to do that
and I haven't found a situation
yet where it doesn't work
so maybe something to consider
you can certainly check the man pages
for details on it
but it does work
I'm going to give my
email information at the end of the show
and you know feel free to contact me
so I think I'm about ready to wrap up here
unless you've got anything you want to comment on
No I think we've covered everything
I can think of
the only other thing I mean
it doesn't actually encompass the RDP protocol
but you know
there's always SSH
I got to love SSH
and from Linux to Linux
Yeah the thing about SSH though
there's a separate topic
and something for another show
so I think we're going to leave that one alone
tonight
just wanted to let people know that there is a way
to tunnel a desktop using SSH
if we want to talk about all the ways you can use SSH
that's about 13 episodes
all by itself
all right well with that
I think we're going to wrap up
episode number 13
the unlucky episode of the tech and loathing podcast
I'd like to thank Lord D
he had to step out
but you can find him typically
over at IRC
at free node
on the ash
augcast planet panel
if you're looking for Lord D
I can't remember his email address
off the top of my head
and maybe he doesn't want me to give it out anyway
so we'd still have Kevin Wisher in here
I want to thank you for stopping by
being a first time guest on the tech and loathing podcast
is great to have you here
yourself who you are, where you are
if you can be contacted
or you just want to become a hermit
like some of us do
I'm generally on the IRC
like I say in the augcast planet channel
on the Linux Basics channel
you can catch me on
sometimes I contribute on the Linux Basics
podcast on Friday evenings
plan on doing some
HPR shows here
in the coming months
maybe around the Christmas break time
when I get a little more free time
so I
don't I don't want to give out my email address
at this time so
no reason for anybody wants to contact me
they can find me on IRC
that's right
they have your name and with google maps
they can probably find out where you are
at any time of day anyway
sure probably can
and I don't do twitter
I don't do any social media
I do hang out on
I do have a google bus account
thank you very much for coming on the show
I appreciate it
and I guess I'm going to go ahead and sign off
and say this is Russ
K5TX
saying apologies once again
for those listening
thinking they were going to get Linux in the ham shack
but you did get a show
there are still people listening on the live stream
thanks everybody who's stopped by the chat room
really appreciate seeing everybody in there
and thanks to Bill
for being his usual
self for the evening
that's Bill K9WKA
you can find him at
Linux and ham shack website
if you are so inclined
my name is Russ
you can email me at K5TX
at techandloving.info
or Russ
at techandloving.info
of course information about the show
is at techandloving.info
you can be over there
check out all our past episodes
leave us a comment
on the website
one of these days
I may actually even put up a
place for people to call in
leave a voicemail
and all that kind of stuff
trying to actually put out the show
a little more regularly
hope everybody enjoyed it
really appreciate all of our listeners
and we should be back in
a couple of weeks or so
with episode number 14
so with that I'm going to sign out
techandloving number 13
is officially closed
and we'll see you all
next time
you have been listening to
HackerPublic Radio
at HackerPublicRadio.org
we are a community podcast network
that releases shows every week day
on every friday
today's show, like all our shows
was contributed by a HBR listener
like yourself
if you ever consider recording a podcast
then visit our website to find out how easy it really is
HackerPublic Radio was founded
by the digital dog pound
and the infonomicum computer club
HBR is funded by the binary
revolution at binref.com
all binref projects
are crowd-responsive by linear pages
from shared hosting
to custom private clouds
go to lunarpages.com for all your hosting needs
unless otherwise stasis
today's show is released on the
creative commons,
attribution, share a line,
free those own license
