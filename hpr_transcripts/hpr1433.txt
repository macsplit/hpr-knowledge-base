Episode: 1433
Title: HPR1433: Ubuntu Quickly Ebook Template
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1433/hpr1433.mp3
Transcribed: 2025-10-18 02:15:29

---

Thank you.
Hello, my name is Mike Engley and in this episode of HPR, I'm going to talk about Ubuntu
quickly eBook template, which is a project I'm working on.
So way back in episode 855 of HPR, I talked about the idea of packaging content for your
distro as if it were an application. The idea was to take the same tools and techniques
that we use to push applications and apply those to content so that the software centre
or repository system for your Linux environment becomes a single place to get both content
and applications.
I've been working on this template system as part of that research and now using the
quickly system, I'm working on a template that will allow you to do just that, will
allow you to package an eBook and make it available in software centre.
So this solution is built using quickly and if you haven't heard it quickly, allow me
to elaborate. So quickly is a boilerplating system that allows you to create all of the
necessary infrastructure for a project by building a template directory and expanding
various placeholders within that to fill in blank data and almost like a fill in the
blanks project. I've created one of those for an eBook along with a set of scripts that
will allow you to interact with that project. Using the Ubuntu quickly template, you can
create a sample eBook and that sample eBook contains two chapters. That allows you to
demonstrate things like chapters, navigation, table contents, imaging, using the basic
editing tools you can now edit your text and you can add a cover. It builds on the same
resources available to Ubuntu developers so you can use G-Edit, you can use bizarre to
track your version information, you can use launchpad for bug tracking and build services
and you can use the repository system to push out updates to all of your readers. You can
store your book on launchpad and you can get the source code and remix it, assuming that
you've licensed it in an appropriate way. The template I've been working on adds a set
of commands to the quickly system. So once you've created your eBook, you can issue commands
like quickly add chapter to add a new chapter into your eBook, automatically adding into your
table of contents and making it a badable few to edit. You can quickly set a title so you can
rename your eBook and it will automatically build the front cover and all the rest of it.
The quickly template will allow a book author to upload their book to a PPA. That's like a personal
package archive, that's like a repository but a personal one. You can use the build services available
from Canonical to build your book into a book that people can download. So this means that any
readers who have got your PPA installed will automatically find your book when it's released.
So imagine your, I don't know, Curry Doctorow and you have a PPA set upon launchpad where all
your books are. If you write a new book and push it to the PPA, everybody who's read all your
previous books will be able to find your new book. Because we're using the standard repository system,
authors can now sell their books. Software Central and Ubuntu allows you to have products that
can be sold, which means that authors have a more direct relationship with their readers.
Authors because we're using the repository system can look at alternate ways of publishing.
This system allows you to do things like periodicals where a chapter is released every month,
or perhaps a chapter is released by different people every month, or perhaps it's more of a
collaborative approach where the book is owned by the community and chapters and characters
are added in by whoever happens to be running the book for that month. You can now read a book
anywhere, anywhere where you can install software. So your desktop PC could have the book or your
laptop or your phone. How about your TV? If you can run Ubuntu or by extension any Linux on those
environments, then you can now install books on them. So question, why would you want to read a book
on the TV? Well, perhaps you could publish the TV guide using that system. It may even be a new
revenue stream for companies like Radio Times or any other TV guides. And the convergence of
Unity, the same desktop and operating system available on your phone, laptop, desktop, TV,
car will allow you to potentially take your same book and deploy it everywhere.
And it leads a really interesting possibility. The Ubuntu One system allows you to sync
data between all of your platforms. So what about if Ubuntu One could record where you were
in each book? And if that location was synchronized between all of your devices, it wouldn't matter
which device you went to, you'd be able to carry on reading from where you were. A bit like Kindle
does. And that leads me to a whole different podcast where I'm going to be looking at
hands-on Kindle, stalls, bookmark, location. That's to come. This podcast is purely about the
template ebook side of things. So what can you do at the moment? Like the moment a template can
create a sample book folder, set a perversion control system, create a chapter, delete chapters,
rebuild table content, build sample covers, reorder chapters, add images, remove images, edit a
chapter, set metadata, you can also add custom metadata. You can list the metadata, you can
publish to ePub, you can share your book via a PPA, you can read the book. To audio file, I'm
currently working on a system that will build audio files based out of your book content.
And you can edit it all using a web-based interface. To allow you to do all this
adding chapters, removing images or rest of it graphically. So if you're interested in writing books
or you've written books or you fancy helping a brother out with some Python work, then hit the
sub. My blog is titaniumbunker.com. You can reach me at Mike at titaniumbunker.com. You can find the
launchpad project site for a quickly Ubuntu eBook template at launchpad.net slash quickly
hyphen Ubuntu hyphen eBook. I'd be interested to hear what people think, whether this makes the
concept more solid in people's minds. And I'd be interested if anybody can offer any
advice or guidance, particularly about things like audio books. So that's a little shout out to
HPR community. At the moment, I'm trying to read audio books, trying to create audio books from
my eBook content. I can create all the chapter files. I can create all the audio files. I can
stitch it all together. I'm having problems getting chapter markers set. If anyone knows how to do it,
can you drop me an email? Let me know. Because that would be fantastic. The only way I'd be
able to do it so far has been using a something called authentic, which is a system that was
I believe reviewed an HPR. Actually, I've just checked it was actually on Floss Weekly.
But that's not an idea for an episode for somebody. Anybody wants to do a review episode of
Authonic? That would be quite interesting. Anyway, that's my rambling episode over for today.
As I say, contact me if you've got new ideas or guidance hints, tips, whatever about this project,
that would be cool. If you've got ideas of your own, record an episode of HPR and tell everybody
and get the community involved. That's what it's here for. It's amazingly simple to contribute to HPR.
And I'd encourage everybody out there to drop an episode up to HPR. To find out how you can
record your episode, you can even call in an episode using the phone, go to hackapublicradio.org,
and click on the link to contribute. Or go directly to hackapublicradio.org-contribute.php.
I'm looking forward to listening to all your shows and getting all your feedback as well.
Thanks everyone. Take care. Toodles.
You have been listening to hackapublicradio at hackapublicradio.org. We are a community podcast
network that releases shows every weekday Monday through Friday. Today's show, like all our shows,
was contributed by a HPR listener like yourself. If you ever consider recording a podcast,
then visit our website to find out how easy it really is. Hackapublicradio was founded by the
digital.pound and the economical and computer club. HPR is funded by the binary revolution
at binref.com. All binref projects are crowd-responsive by LUNAR pages.
From shared hosting to custom private clouds, go to LUNAR pages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under creative comments, attribution,
share a like, lead us our own license.
