Episode: 581
Title: HPR0581: Open Source Games and the community
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0581/hpr0581.mp3
Transcribed: 2025-10-07 23:29:08

---

.
Games in open source community. I'm the guy. I've some contact information there if you want.
I play games, some of the description. I've also a student of Aberte, I study computer game technology in fourth year.
During my time here I've used open source software for two projects that I've been involved in and I've used Linux since about 2002-ish.
That's a little bit about me. What I talk about this presentation is gaming and also the development of games using open source software.
What games are currently available, how I can play them and also how I can hopefully make them.
Why would you want to do it? Because one thing somebody's already said that it's not particularly easy to play games under Linux and that's something that is true to an extent.
But here to show that it's also possible to play games, various degrees.
Also enjoyable to play games, to make games, it's educational because you can make games free without having to play license costs for anything.
And that covers the last one as well. Most situations it's free to play them.
Blah blah blah blah blah.
You can tell I just copied a slide layout and just changed bits.
Then Linux and games, free games, do you know why? Yeah, I covered that.
So yeah, gaming and making games, any preference to which I spend more time on.
Anybody?
Making games. Great, I've got more slides on the gaming one. See how it goes.
Okay.
Oh, now I've got slides for both. It's just, I don't have to do both.
Okay. Gaming, native gaming, so if that's open source games under Windows, Linux, whatever, across platform.
Also playing proprietary games under Linux is a possibility using wine.
And also playing games on open source platforms. I've just had somebody playing on my GP2X outside.
So yeah, native open source games is a little bit of an issue.
The loads and loads and loads of games, but they are all of varying qualities.
Most of them started off at least as tech demos.
So there's one thing that works really nicely on them and the rest is a little bit interesting.
But there are some really nicely polished games.
There's also quite a lot of different styles and genres.
And yeah, with open source games, it's really easy to take a game and make it into something that you specifically want.
So I'm modding it anyway you want.
Quick list of some games that were natively under Linux.
So they see huge different selection, got flight simulator, flight gear.
But quite a few first person shooters there.
Next, who is Assault Cube?
I've put in some older games, it also remakes.
I've got free arign, which is, I don't know if anybody's old enough to have played Master of Arign.
Yeah, somebody played Master of Arign. Awesome.
I like that game. After finding that, I'm now going to play that.
Lots and got Civilization, free SIF there.
And I've got a tone clone.
Just because.
So I've got some screenshots left.
Flight gear, which is a flight simulator.
And I've tried playing that.
However, I have found that there are hundreds of key mappings to do absolutely everything.
So it's really in depth.
It's not like flight simulator, you can just press fly and it flies.
You have to, everything has to work.
And it's quite complicated and I tried to set up the keyboard.
And it came up with words that I didn't even know existed.
So it's very, it's very good, but it's quite complicated.
And so yeah, that's a really nice example.
I was planning on having working outside, but unfortunately forgot to find out which port I needed forwarding and stuff.
So it's there, but you can't actually play against anybody.
So that's based on the open-sourced quake engine.
It's got some real-time strategy stuff.
You can build towers of various descriptions.
So it's quite nice.
If it's on fire, which has been played a couple of times outside.
And it's a perfect example of the modding thing.
Guitar hero clone.
That is the standard layout at the top left there.
But people have put new buttons and made it look as much like guitar heroes they want as a can.
Scorch 3D is kind of like a remake of an old DOS 2D Worms type game.
But in 3D.
Had to have took the race on there.
Because it's awesome.
Yeah, it's not much else to say.
Your tux, you slide down a mountain, you eat fish.
Next, who is, again, based on quake engine, that is running outside.
We have two machines, I think, Gordon's had, I don't know his.
So now we go with that.
And we have the Tron clone.
And I'll get it on advanced.
It's quite shiny in 3D.
And quite nice.
Civilisation.
Free-set.
And assault cube, another game that we've had quite a few people playing outside.
Which again, FPS, but quite nicely done.
Okay, for proprietary games.
There are native clients for some games.
Interversion, who are a small company in London, I think.
I've made four games now.
As far as I know, all got Linux clients.
Uplink.
Darwinier, DefCon in MultiWinier.
Bioware have released Linux clients for never-winter nights.
And I, Dean, all bar, I think somebody told me the latest Unreal Tournament
have Linux clients for the games.
Yesterday, while writing this, last minute, as usual.
I did check the wine out database.
And those are a list of games.
The last three are gold, which, according to the wine app database,
are fully playable with slight configuration.
The top ones are platinum, which apparently work just by installing into wine.
So World Warcraft, team fortress two, some quite widely played games there.
Someone did mention that Sims 3 is not gold, and doesn't work nicely.
But all I know is that it says there that it does.
If it doesn't work, it's not my fault.
I didn't tell you.
Open Source Platforms.
That is the Pandora I want one.
Every input under the sun.
There's a couple of open source handhelds.
I mean, there are loads that have come out of mainly Korea, I think, various times.
But those are the main ones.
GP32 made by a company called GamePock, which then the company split up.
And half the company went to make the GP2X, which I have outside.
It then got an upgrade with the touchscreen, but then they also made the whiz after that.
And then the Pandora.
They are open source.
The consoles are open source.
You can get hundreds of open source games for them, and emulators, of course.
But they also have a couple of proprietary games.
The one I have outside actually has a, what's basically a GTA clone.
And apparently according to the website, they saw GTA and tried to make it better.
So it's the original GTA, but slightly 3D and things.
So there are lots of games that you can play on.
Various different platforms, Windows, Linux, or open source-y.
Okay.
Just skip through that bit quickly.
Now to the bit that doesn't have many slides.
Yay.
And development.
Why would you want to do open source development gaming, especially?
Well, that's free.
If you're, for example, looking at getting a license to make a game using Unreal,
I have no idea how many thousand pounds it could cost for that.
So using an open source engine or open source software, open source programs,
obviously 90% of the time got free.
It costs you nothing to do it.
You have the free dump of, you know, somebody else joins your group.
You're enlarging your small project.
You can then give them the software and you don't have to pay for more licenses.
You don't have to worry about compatibility or anything like this.
The portability as well.
If you make an open GL application, it requires very little in terms of porting it to another platform.
The open GL supports, whereas if you were to do indirect X and then try and make a Linux client
or PS3 game from it or whatever.
If it supports open GL and practically everything does, then you can do it.
And also there's a community.
Most large-ish projects have a decent community.
Small projects tend to have a community which consists of the own of the project
and a couple of people who ask him lots of questions.
But even so, it's good to be in touch with the person who has started the project, known as it.
When making games, there's two searches.
There's tools that you actually use to make them.
And then the engines and stuff that you use.
As far as I know, there aren't any flexible game engine editors.
There are a couple of smaller ones that are very specific to the engine.
But nothing that's, I mean, if you're looking for an editor for the Quake engine, you would look for that.
But I haven't put them up because they are quite specific.
But there's development environments, programming editors and source controls.
It's an important one for anybody doing anything like that.
And then just a quick section, which libraries and engines are going through this too fast.
I'm sorry.
Development environments, the obvious thing is the GNU compiler collection,
which comes as standard on any good Linux distro.
One of the nice things about that is that people have made ARM cross-compilers and anything.
So you can actually get a GCC compiler for little work on Gameblood Advanced,
one that will work on the Nintendo DS1 for the PSP.
So you can, there is a, using the GCC tool chain, you can make games for virtually any platform you want.
If you're using Windows, you'll probably be using the MinGW probably with the minimalist system MSIS,
which creates like a unique environment, which, again, will have GCC inside it,
so that you can then compile in a similar way.
When you're editing, you can source code is plain text, so you could use notepad as usual.
But those are some nice editors out there.
I've just put notepad++ for Windows, which is on source for open source.
It has nice syntax highlighting and how it can have macros to compile and things.
Again, through MinGW, there's hundreds under Linux.
I wasn't going to go through which programming editors you should be using.
I used G-Edit, I just stuck that up there, and I put Emacs in feed,
because I was hoping to spark a discussion about that at some point.
Source control, again, I put, because anybody should be using source control.
And rather than using the really nasty, what's the Microsoft one called?
Source save.
Source save, yeah.
Instead of using Source save, there are loads of open source ones that are infinitely better.
So SVN and Gitter, too, reasonably well known ones, so.
Okay, this is what I can possibly bulk it a bit more.
Live reason engines.
When making the game, you can start off with and try and light everything from scratch
in assembly, if you want to.
In which case you'll be pulling your hair out within five minutes.
However, most of the time you'll want some sort of starting point.
Doing 2D graphics, you'll probably start off with something like STL
or possibly even just a GTK or QT, you know, 2D front end for games normally STL,
because it's cross-platform, it'll work everywhere quite nicely.
3D graphics, OpenGL, same reason.
With simple applications, you'll start off with something like that.
If you're making a more complex game, you'll probably want to start off with an actual game engine.
There are loads of game engines out there.
Some of them, like I said, on the Unreal Engine, will cost you thousands for a license.
There are open source ones.
They won't have as nice tools, but they are just as flexible in most cases.
There's the Yoga Engine, which is about as simple as you can go and circle a game engine.
The Quake, I've got there that obviously was the proprietary,
but they've made the source code for the engine available, so you can use that.
The Blend Engine, which I believe was in the previous talk,
I've also outside of shown Assault Cube, which was based on the Cube Engine.
I believe I'm not entirely sure, but I think that was a completely right up from scratch.
They've rewritten it and made a new one called Cube 2.
Code name, South Latin.
Got knows why.
You can use game engines like that.
Some of these will have audio and stuff built and physics built in.
Some of them won't, in which case you want OpenGL,
or you know, there are open source alternatives or open source possibilities
for anything you're looking for.
ODE, for example, is a brilliant open source physics engine.
The only thing I would suggest from experiences, if you're using ODE and Yoga,
do it manually. Don't try and use ODE. It's terrible.
I have it at the bottom, two sites there, CodePlex and SourceForge.
They have, they're hosting for open source projects.
CodePlex is actually surprisingly owned by Microsoft.
As far as I know, all of the projects on there are distributed under the Microsoft Public License,
which is apparently open source, but it is open source of Microsoft's game to let you get.
But yeah, I've used, I've had some very good experiences with CodePlex
of one of the games I've worked on.
I used XLA for 360 game and used something called Oops Framework.
It was basically adding more features onto XLA,
making it slightly more of a complete game engine, had physics and stuff like this.
And again, like I said, the community, something went wrong.
I posted a message on the board for that and the guy replied,
and I actually spent three and a half hours talking to this guy,
and Yahoo, instant messenger trying to debug animation, which is very interesting.
But yeah, that's the community thing. SourceForge is more GPL stuff
and MIT license and stuff, but they'll have, I believe,
most of the other stuff there is hosted on SourceForge or on their own sites.
So they're a good place to start.
And Tux is exploded.
Any questions?
Because that's about all I've got slides for, but I'm terrible at this.
So questions I will answer them.
On your course today, cover the notes at all of them.
Yes and no.
Not as such. There's no Linux requirements or anything on the CGT course,
but at the moment still they're using PS2s, which have the HomeBrew Linux dev kit on them.
So we do use Linux, but we're not expected to know an awful lot.
But again, that uses a modified version of the GCC.
So do you do direct X over over GL or that same?
We have a once semester module on each of them starting off with the OpenGL.
The DirectX1 follows and is not as nice because DirectX is not as nice.
We then do a procedural generation, like a terrain generation module,
which I think used OpenGL, but you can use DirectX for it if you want.
I know a couple of people who switched it to DirectX.
They preferred it because they're crazy.
Anyone else?
No.
Sorry, excuse me.
For a professional developers, you have actually made money of games,
which would be at least the Linux.
Yes, obviously there's the problem that at the moment the market isn't big enough,
but it's kind of that catch 22 people won't go to Linux because there's no gameplay games,
and there's no games because they refuse to make games of it.
But at the same time, I mean, as long as the actual game isn't open-sourced,
there is obviously just this much potential to make the games and make money,
because it is a similar sort of thing.
Once the game becomes open-sourced, then you then have people forking off
and basically cloning and doing whatever you want,
which is what most games developers don't want,
because they want their game to make money.
They don't want to spin off to make money.
But releasing games under Linux, it will require a rewrite,
but quite a lot of games have an OpenGL option.
Some of them hide them in nasty places,
but there are quite a lot of games that have an OpenGL option,
and in which case it would be not simple,
but not that much effort to port it to Linux.
And like I said, if it's not open-sourced, they'll make just as much money from it.
Thank you.
I'm sorry, I'm just wondering,
would it be any sort of more secure or less secure to make games on Linux?
I mean, is it more likely to get kind of hacked?
I think software is going to get hacked wherever it is, quite honestly.
I don't think it makes it any more less secure,
although Linux is seen as kind of like a good base to start hacking from.
So, cracking a game, maybe more likely for a Linux standpoint.
Do you mean it has a virus in it?
Yeah, one term is a kind of virus.
But if you were to get a spin to make the development game really soft.
Yeah, I mean, hacking a game either, online games,
sort of putting something in between to make yourself better or whatever.
The game in-house does like an online check every time you start the game,
but I imagine it's probably being cracked if you...
Yeah.
Yes, for the...
What is it exactly?
It's just something quite nasty.
Yeah, but I mean,
I think the idea of piracy being easier or harder on Linux is not really that much of an issue
because it's going to get pirated or it's going to get hacked anyway.
So, whether it's two days after it was released or one day after it was released,
I don't think it makes that much more difference.
Excuse me a minute.
Maybe slightly less.
Happy to kind of let you off, you know.
Excuse me.
It was a kind of ethical...
Say you were...
Let me choose a little bit.
There's more...
I get what I'm saying, there's more in the community against Linux
that people make feel it's sort of not acceptable.
Yeah, I mean, a lot of the Linux users that I know would quite happily pay for a game software
if it would run on Linux.
So, quite a few people have bought some of the introversion games.
I've got the Linux clients for it, so.
But at the same time, there will always be people, so.
And the question is, how much do you think the cloud will change our games and ship and solve that?
Because it kind of seems to be the solution to fixing...
From what I...
Of course, platform issues and...
You know, they're planning all that sort of stuff.
Everybody keeps saying cloud computing for this, that, and the other...
For solutions for virtually everything.
I don't see it as a solution for cross-platform gaming, at least not yet.
It is a brilliant idea to have this supercomputer somewhere running all the games for everybody.
But for one thing, I apparently have broadband in my flat.
However, trying to stream full-screen video is a pain in the neck.
And trying to do that with, you know, no lag is just not going to happen for anybody who...
For what I can see, who's paying standard rates for internet in the next few years.
I mean, once internet gets faster, as long as graphics resolutions don't get faster and stuff...
And bit bigger and stuff, then.
It might be a possibility, but right now nobody who wants shiny graphics will want cloud computing for the games.
Saying that.
I might try and start something off.
And if they can make deals with ISPs and stuff like this for...
Packet shaping the cloud traffic, then it might work.
But for what I can see, it's not going to be a solution in the near future.
Anyone? Nope.
Thank you for listening to Half Republic Radio.
HPR is sponsored by Carol.net.
She'll head on over to C-A-R-O dot N-E-T for all of her team.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
Oh.
