Episode: 3660
Title: HPR3660: BASIC
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3660/hpr3660.mp3
Transcribed: 2025-10-25 02:58:53

---

This is Hacker Public Radio Episode 3,660 for Friday the 12th of August 2022.
Today's show is entitled, Basic.
It is part of the series' DOS.
It is the 250th show of OOKA, and is about 8 minutes long.
It carries a clean flag.
The summary is.
We continue our technological archaeology to explore the old Warhorse Does.
This time it is Basic.
Hello, this is Ahooka, welcoming you to Hacker Public Radio.
And another exciting lesson in our ongoing series on DOS.
Today, what we want to take a look at is Basic at Wonderful Old Programming Language.
Now, any long time observer of the computer industry soon realizes the crucial importance
of choosing just the right name to yield just the right acronym.
Quick, no peaking.
What does PCM-CIA stand for?
Now, back in the 1960s, two professors, John Kemeni and Thomas Kurtz, at Dartmouth College
in New Hampshire and the United States, faced such a problem in naming the programming
language they had developed.
They came up with beginners, all-purpose symbolic instruction code, no never after is Basic.
This simple, yet powerful programming language quickly became a hit in college courses all
over the US and probably well beyond.
Quick to pick up, you could write programs to do surprisingly complex tasks.
I recall writing programs in Basic in the 1970s when I took a couple of computer classes
at the local university.
Of course, I was writing my programs on a terminal connected to a mainframe computer
using a time-sharing account.
That was the state of the art back then.
But at the same time I was learning Basic in college, a few folks were creating little
miniature computers.
These were mostly for hobbyists, of course.
Early heath kit models, for instance, had to be assembled before you could use them,
and were aimed at the electronics hobbyists.
The real cool thing was the hardware.
Software was almost an afterthought.
But once you had your computer working, you would eventually go looking for software
that could be used for programming.
In those days, application software scarcely existed on the hobbyist level, and no one
really cared.
People did frequently exchange programs with each other, of course.
But purchasing application software was unheard of.
Into this environment came a college dropout who moved to New Mexico, and started up a
company to supply a version of Basic to those hobbyists.
His name was Bill Gates, and he called his company Microsoft.
After a while he was making a decent living out of selling Basic, but his company was
no more promising than any of the other small companies at the fringe of the hobbyist
computer market.
Of course, that changed when IBM came calling, but that's a tale for another time.
The point to remember is that Basic was something that everyone would automatically want
to have on a computer at that time.
Even with the development of the PC operating system, in other words, DOS, Basic was still
essential.
The earliest PC models came with a version of Basic installed on a ROM chip.
This gave rise to the least understood error message in computer history.
If you turned on one of those PCs, and it could not boot into DOS, you would see an error
message about being unable to find Basic.
The BIOS would look for that ROM chip, not find it, and give an error message.
Of course, later computers didn't have a Basic ROM chip, but it took a while for BIOS
to catch up.
These days, you would just get a message that it could not find a bootable operating system.
Now, when Microsoft purchased QDOS from a Seattle company, and then resold it to IBM at a
huge profit, they couldn't resist adding in Basic.
In earlier versions of DOS, this was a version of Basic called GW Basic.
In later versions of DOS, it's QBASIC that is provided.
So every copy of DOS came with its own bundled programming language.
Of course, Microsoft has not abandoned the language.
It took Basic, added some object-oriented stuff in a graphical interface, and thus began
Visual Basic.
This is not given away free with each OS purchase, but a light version, called Visual Basic
for Applications, is included with Microsoft Office.
I've done a little programming in Visual Basic for Applications.
I was trying to do some things at my job that thought it would be a handy way to do it.
And of course, at my job, they used Microsoft Office for everything.
So the Visual Basic is for Applications, is used for writing macros, automating certain
things that Office applications can do.
Of course, it is also the source of the problems with Office viruses, more often than not.
Now in DOS, two of the key applications that you might want to use are actually coded
in Basic.
They are a program called Edit.
The text editor that you would use to make changes, for instance, to your auto-exec-bat
and config sis files, and help the application you would use to look up the syntax arguments
and switches for the DOS commands.
When you run either the Edit or the Help application, what happens in the background is that Basic
is loaded, and then these applications run within Basic.
The reason it's important to know this is that if the right version of Basic is not available,
these applications will not run.
And for that reason, I recommend that on your emergency DOS disk, you copy the following
five files.
Number one, Edit.com, number two, Edit.HLP, number three, Help.com, number four, Help.HLP,
and number five, Cubasic.exe.
Now possibly you'll find you're running a little tight on space in your emergency disk,
depending on what programs you have added.
You may find you need to either have two disks or make some choices.
I happen to think that the above files are absolutely indispensable in an emergency context.
If you're an expert on using Edit, and maybe you will be at some point, we're going to
talk about that in the next topic, you can perhaps drop the Edit.HLP file.
New Basic.exe is essential, of course, since neither Edit nor Help will work without it.
And the Help system requires both of those files to run.
Help.com is just a small 413 bytes executable.
All of the data of the Help system is contained in Help.HLP, so you cannot leave either of
them off the disk.
So this is a hook up for Hacker Public Radio signing off and is always encouraging you
to support free software.
Bye bye.
You have been listening to Hacker Public Radio at Hacker Public Radio does work.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording a podcast, click on our contribute link to find out how
easy it really is.
Hosting for HBR has been kindly provided by an honesthost.com, the Internet Archive and
OurSync.net.
On the Sadois status, today's show is released under Creative Commons, Attribution 4.0 International
License.
