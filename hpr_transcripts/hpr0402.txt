Episode: 402
Title: HPR0402: Interview with Paul Frields of the Fedora Project
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0402/hpr0402.mp3
Transcribed: 2025-10-07 19:50:53

---

.
.
Paul Freild's from what's your official title?
Fedora Project Leader.
Fedora Project Leader.
I know you actually work for Red Hat.
Okay.
Alright.
And actually sitting here talking to you, I see that on your desk, you have a Red Hat.
An actual Red Hat.
Yeah.
So, one of the things that happens when you begin working for Red Hat besides the
brutal hazing is that they hit you with the sticks, but the thing that you get at the
end of the tunnel is the Red Hat, the Red Fedora.
But I don't know if I should be making this confession here, but I actually have three
of them.
That particular hat that you're looking at is one that was sent to me by a friend back
when I was a volunteer of the door contributor.
I had been working on documentation for a few years at that point, and I don't want
to overstate my part in the team, but I think I was like one of the key people.
I mean, I would consistently come in and do work, and I really enjoyed it.
We have done a, I think one or two sets of release notes for Fedora at that point.
That may have been around, I want to say it was around Fedora Core 5 back when we had
the core.
And I think they're five or six, and he sent me that hat.
And interestingly, it's the only hat that I have that actually fits me, because I have
an enormous head, and my wife will tell you that for nothing, but I have a big head.
I try not to have a big head.
And if we're speaking, we've got a lot of, I'm not, you know, in the face of head.
Well, I think it's so comforts, because I mean, that's like an extra large hat.
And I mean, it just fits.
And I've got a couple others.
The one that Red Hat gave me when I was hired was large, so they apparently didn't know
that I had such a weld you got it.
They didn't know it that way, but you know, that's how I got the job, I skunked them.
Yeah.
Cool.
And it's actually a Fedora, right?
It is.
It is actually a Fedora.
So the official Red Hat is, I didn't really actually know that.
I didn't know the official, I mean, I saw that, I mean, obviously the logo has it.
I guess I didn't identify that as a Fedora.
Yeah.
The great thing about it is, I mean, you know that our name, the Fedora project's name came
originally from Fedora.us, which was run by a student, then I think he was a grad student
CS at University of Hawaii, by the name of Warren Tagami, and he started Fedora, US, as basically
a way of making add-on RPM packages for Red Hat Linux, which back then was a, you know,
a boxed product you go buy in a store, 40 bucks, yeah.
So he would, you know, he actually got some folks together to package up things that,
you know, Red Hat wasn't interested in doing for whatever reason, and so they had this
Fedora.us repository, so even back then they had, you know, as places you get those
RPMs, just, you know, download them and add them to your system.
I had no idea.
I didn't know this backstory.
Yeah.
And so the reason they, well, so they called it Fedora because it was a way, obviously,
they couldn't use Red Hat's framework, yeah.
I mean, you know, just like you wouldn't, you know, make a store selling like, you know,
things to add to your iPod and call it, you know, Apple add-on.
They're right.
You know, they get a little upset.
So you know, Fedora was a play on words because of this, you know, this red Fedora that
the Shadow Man War, right, little Shadow Man logo.
So Fedora.us eventually merged with Red Hat's original Red Hat Linux project, which was
where they had tried to sort of turn their Red Hat Linux product into a community.
Yeah.
Okay.
It didn't work really well, but what they realized is that what they were missing is, you
know, some piece of the piece of community and infrastructure that Warren had.
So, you know, when they put them together, that's what became the Fedora project.
Well, actually, that brings up another question, and I hope I'm not re-trading too much
of other interviews that you've done, but when did you come to Linux in general?
No.
Actually, no.
That's a good question, actually.
I haven't had a whole lot of people asked.
You know, when you've, you know, happened to land in a job like this, like I did, you know,
people just assume that you've been doing it your whole life.
And I'm not, you know, I'm not probably as long-time a Linux user as some of the people
that I've met.
I started using Linux in, it was around the beginning of 1997, or the end of 1996, beginning
of 1997.
And I actually worked in a, a criminal laboratory, like forensic laboratory, and we were processing
digital media.
So, you know, if there were cases involving, you know, this kind of crime, that kind of crime,
there was some sort of computer media involved, involved our laboratory process, that stuff.
And at the time, we were paying an enormous amount of money for proprietary tools, things
like, you know, an application that would allow you to boot off a DOS boot disk, do a 16-bit
and single user environment, and then copy one disk completely, and add the hard disk
completely.
Yeah.
Like a DD.
Yeah.
So, you just hit the magical point where I started using Linux and discovered the DD command
after, you know, a month or two of playing with it.
You know, friend who came in the office was a salarist guy, and he, he plopped a book on
my desk one day and said, this is Linux, I think it's going to be really big, and you
ought to, I think, I had been bothering him about, like, trying to teach me some Unix stuff.
Yeah.
And, you know, the sun work station he worked on, which was fascinating.
That's cool.
And he plopped this book on my desk and he's like, you're going to want to learn this.
I think it's going to be big.
And so, you know, that red hat Linux 4.1, I started on that, and, you know, I discovered
the DD command.
I'm like, we are spending just made everything up to $1,000 on all this software, and we
don't have to look at this, you know, and I started showing people the light more or
less.
I said, and more or more, you did you know while you're copying that disk, you can actually
be filling out your notes or, you know, doing other work on our system, you don't have
to, you know, your system doesn't have to be a brick, because it's, you know, oh, I'm
busy copying other stuff.
Yeah, yeah, yeah, yeah.
Don't bother me.
Right, essentially, we had these long desks of hardware, and if you started running
one of these copies, which, of course, we did a lot, the system was, I mean, that was
it.
It was tied up.
So, we had to have more workstations, you could possibly believe.
I mean, you had to have a license for each workstation.
Yeah, absolutely.
Yeah, absolutely.
And their uptime wasn't even necessarily complete, because it was more like, if you had
that many drives to copy, then you were using all the workstations you didn't, you weren't,
so they were sitting around.
Right.
I mean, there were times where you'd actually run out where you literally say, I can't
work today, at least I can't do any computer-based work, you know, I can go fill in some paperwork
in there.
Right.
But, you know, what happened is a lot of people would schedule the stuff, you know, they
would basically set everything in the last half hour where they went home, at least on
their last station, so that they'd be able to work through the day.
I mean, it was just looking back, it just seems ridiculous, how we did business that way.
So, well, anyway, the long short of the story is actually the long, I guess, we're really
not doing a short version, but the, to make a long story longer, I basically took that
as, like, the harbinger for the rest of my career, and I spent the next few years writing
forensic protocols for Unix Evidence and teaching all of our various forensic people out in
the field nationwide, how to use Linux, and we based everything on Red Hat, and I tried
a few other districts, but I always came back to Red Hat because it was, it was easier
to install than anything out there, and it had this great documentation back in, you know,
it had a good company behind it, and, you know, honestly, as I looked more into it, and
I started to care more about the ethics of free software, I looked at what the company
did, you know, that they actually really put their money where their mouth is, they were
just an open source company through and through, and I was really impressed by that, and
so I, you know, I stuck with them, and, you know, I'm not too big to admit that, you
know, I, I, you know, had these sort of dreams one day of coming to Red Hat, and, you know,
Max B, that called me one day, and, and said that, you know, he was looking to move on
and do something else at Red Hat, and, was I interested in taking his job, so it was,
it was a, it was a good day, it was, it was a, it was a hard decision because I had a,
you know, a really good job, was, you know, things were going very well, stable, my family
was happy, and, you know, it was a little bit of a, a little bit of a, you know, a fear
situation, some people didn't feel the unknown, and I thought, you know what, life is just
too short.
Yeah, exactly.
Just too short, you've got to take the chance when it comes along, especially if it's
something that you really care about with you, obviously, when you're doing Fedora documentation
every spare moment you have, and you're, you're, your hobby time anyway, then obviously
you care about it.
Yeah, absolutely.
I mean, it was a way, basically, to spend more time doing what I'm doing.
You wanted to do it.
Yeah, exactly.
Yeah.
Yeah.
And so it was, it was a, a very excellent time in my life.
I feel, I look back on it and say, at least, you know, for whatever else may happen, I can
look back on that and say, you know, I'm not going to have any regrets about it.
Yes.
So then I think, you know, people should, you know, should look at their lives and, you
know, you don't want to look back and regret not having done something.
Right.
So the adoption of Linux at that old job, the adoption of Linux was pretty quick there,
would you say, like the, the four-in-six lab?
It was, it was over the period of, I would say, a couple years and, you know, the reason
being is that there was some entrenched technology there.
It was all proprietary and they were, you know, you know, paying out a notice for it recently.
And when, you know, when I showed them basically that they didn't have to pay a contract
or a huge amount of money to build these, you know, pipelines to have incredibly automated
processes, I mean, it did shake things up a little.
I feel like, you know, it was, it was more, it was more, I think, that the people who
really understood what they were doing, understood the nature of scientific methodology and by
that, I guess, I mean, you know, repeatability that you have some sort of, you have the notion
of being able to take the tools that you use and present them in a court of law.
You can show open source code directly to a court.
You can give it to the defense attorney or defense contractors or whatever and they can,
you know, take that code and do the exact same tests that you did.
Right.
It's 100% repeatable and it's, and the transparency is what makes it so powerful.
It's not something that, you know, we, this laboratory, sort of built in a black box.
And you can't look at your code.
Yeah, I know you're talking about Jeremy Allison says a lot of the same stuff about the advantages,
at least in the legal area of open source because there's no risk that the code is tainted
because you can look at the code.
Right.
Right.
I mean, there's the way that we could drill down into it basically made it, I mean, essential
as a no-brainer.
So people who, again, they understood that scientific methodology and they understood the underpinnings
forensic science in, you know, in the legal sense and, you know, in the, I think, in the
ethical sense of being able to, you know, have this very transparent box that you do what
you're working.
They were very quick to embrace it, I would say.
And over the next couple of years, you know, as people started learning more about it and
they realized how easy it could be.
Yes, you had to go to a command line and run some commands, but we were already doing that
anyway.
Yeah.
The people who were doing this work were not.
They weren't Windows Point and Click junkies, you know, a lot of them understood how to do
things in a community.
Yeah, right.
Yeah.
And so it was very, very interesting that the fact that we had taken the help of the commodity
hardware.
Yeah.
That we had so much of and actually have a much, much greater return on investment for that
same hardware.
Well, Red Hat just recently, and you might not have, I don't know if you're able to comment
on this or not, but Red Hat posted on their official blog.
I think it was a video about open source in government.
Did you see this video?
Oh, is this pretty new?
It's really new.
Okay.
I may have missed it.
I've had, because I'm literally coming here like almost back to back after another conference.
Okay.
And I've been, I've been a little, well, I've been deprived.
Yeah.
Because it's really cool.
It is Red Hat saying that, you know, government institutions shouldn't be throwing their money
at something that doesn't belong to the public when the government belongs, ideally, to the
public.
You know, and that is, if the government is truly going to serve the people, and I might
be adding some of my own apolitical beliefs here, but essentially they're saying that if
the government is going to be owned by the people, then the software that the government
uses needs to be owned by the public.
Right.
So it's not Microsoft.
Absolutely.
And, you know, and I can't agree enough, you know, especially there have been, you know,
we've had many years now of discussion about open source in, for example, voting system.
Yeah.
I mean, that's a pretty old argument at this point, and I don't think that there's anyone
whose opinion is respectable, who believes that proprietary technology is running the underpinnings
of our democracy.
This is a good thing.
Right.
You know, I'm frankly horrified by that idea, and there have been enough, you know, there
have been enough examples of people doing penetration testing and scientific testing, and, you
know, there have been enough instances where the efficacy and the reliability of those sorts
of systems has been called into question, but I think that, you know, no citizen of the
United States ought to be thinking that a proprietary voting technology is something
we ought to put any stock in whatsoever.
I think it's, you know, again, I'd say that's another, it's another no-brainer.
You know, I haven't seen the video, and, you know, just speaking as a, you know, just
a person who works with open source all day, I mean, I absolutely would like to see more
of it in government.
And I'll tell you, you know, one of the major problems that I've seen in government, you
know, and I was, you know, as government employee for almost, almost 20 years, the thing that
I saw often is the government getting charged over and over for essentially the same basic
building blocks, all of which are readily available, yeah, consumable in open source.
I mean, right?
Open source is about, and I don't, I'll paraphrase, I guess, what Greg DeConexberg, a good friend
of mine, says, you know, it's always a good idea to steal from Greg because he's a smart
guy and, and he talks real pretty.
And so one of the things I heard him say recently was that there are so many people in government
who are doing work that is very specialized and very, requires a very deep corpus of knowledge,
right?
And those people are some of the best in the world at what they do.
And you can look all, I mean, people can make jokes about the government, you know, and
government employees, and that's fine.
I mean, there's, I'm sure that there's, you know, wide swaths of employees all over,
you know, all over the private and public sectors that, you know, you can do that.
And I believe that there are areas in government where you've got incredibly, incredibly brilliant
people who know a lot about a very specialized area.
And it does not make sense for those people to be paying over and over again for basic
building blocks of solutions, right?
When essentially, if you put those building blocks in front of them, I mean, what they really
need is they need Legos, yeah, they have what it takes to put the Legos together into something
that is a, you know, an amazing contraption that is going to be very well suited to solve
their particular problem.
But instead, you know, there's this culture that's grown up over many years.
There's this, you know, this, you know, I don't know what you call it, I like to think
of it as sort of a, you know, this blood sucking middle level of IT consultants that are essentially
just leaching resources out of the government constantly.
You know, I think that there's, there, there is a, there is a very respectable and commendable
move nowadays towards, you know, more transparency in government.
And I think that that should carry over into the systems that government uses.
There, you know, there, we have some interesting, some very interesting fingers and various
pies.
And when I say we not red hat, I mean, actually, some of the folks who are working in
the Fedora project, who've got some tools that we are making available and, and demoing
in a couple of places to try and show how government data can be made more available,
readily consumable, and available near real time to citizens everywhere.
So, you know, people will essentially be able to build, you know, mashups of government
data on, you know, on an accelerated basis.
Yeah, well, that's really cool.
Thank you for listening to HACC Republic Radio.
HPR is sponsored by Carol.net, so head on over to C-A-R-O dot N-E-T for all of her team.
