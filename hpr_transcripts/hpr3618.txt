Episode: 3618
Title: HPR3618: The nnn terminal file manager
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3618/hpr3618.mp3
Transcribed: 2025-10-25 02:13:40

---

This is Hacker Public Radio Episode 3,618 for Wednesday, 15 June 2022.
Today's show is entitled, Then Terminal Final Manager.
It is part of the series Lightweight Apps.
It is hosted by Archive 72 and is about 7 minutes long.
It carries a clean flag.
The summary is, Then Terminal Final Manager and Common Uses.
Hello there. Welcome to Hacker Public Radio.
This is Archive 72 and I will be your host.
Today I will be talking about NNN, the reading of two things.
One is from the Archwicky and the other is from the author of the program,
who goes by the username Jerun.
In the short tagline at the top of his GitHub page says,
The unorthodox Terminal Final Manager and is a BST-2 clause license.
From the Archwicky and NNN also stylized as NSuperScript 3,
is a portable Terminal Final Manager written in C.
It is easily extensible via its flat text plugin system,
where you can add your own language, agnostic scripts,
alongside already available plugins, including NEOVIM plugin,
NNN features native archiving decompression
to and from commonly installed formats such as XC,
disuses analysis and a fuzzy app launcher.
A batch file renamer and a file picker through its plugin architecture.
NNN supports instant search as you type with rejects or simple string filters,
and then navigate as you type mode for continuous navigation in filter,
mode with directory auto select.
I also supported our context bookmarks, multiple sorting options,
SSHFS, batch operations on selections on a group of selected files,
and a lot more.
Despite its capabilities, NNN is designed to be easy to use,
and is configured in a way of environmental variables
without use of a configuration file.
NNN can be controlled with VIM-like characters,
HJKL or the arrow keys, do not memorize keys, arrows,
and the forward slash and Q suffice,
press question mark for help on keyboard shortcuts any time.
The configuration section says NNN is configured via environmental variables,
typically by appending them to the tilde slash dot bash RC.
For detailed information on the settings, see the NNN man page,
as well as the NNN wiki, which they have,
the art wiki has links in.
And the wiki also gives examples of what you can put in your dot bash RC.
The only thing I added to my dot bash RC
was export editor equals VIM,
or if you want emax or nano, put that in there,
and then export path equals slash opt colon path,
or whatever path you want to use for your bin files.
I thought it would be interesting to have icons in the terminal
because I saw this in the wiki.
So I was using rocks term as my terminal manager,
and I decided to switch to the known terminal
because the icons did not show up correctly in rocks term.
To enable icons dash in dash terminal icons,
install icons in terminal that will leave a link.
Clone the NNN repo from Git, compile NNN with make,
0 underscore icons equals 1.
From the, I believe they meant root directory that didn't spell it out.
I don't think they mean to do it as root.
And there was also something that I didn't try yet,
is enable nerd font icons,
download and install patch nerd font,
apply that font to your term as your terminal emulators font.
This will vary from emulator to emulator,
but usually involves editing and config file,
changing a setting within the GUI menu system.
Clone the NNN repo and compile NNN with make,
0 underscore nerd equals 1.
From the root of the Git repo,
there is also a note here that arch Linux users can check out
the AUR packages, NNN dash icons and NNN dash nerd.
So next, some files don't open correctly,
so you might want to refer to the dot config slash
mineapps.list.
And you can change it via the command line
and I'll show some commands there,
or just right-click and in a visual or GUI file manager,
and change the default from there.
But regardless, everything else,
all the defaults end up in this mineapps.list.
So it makes it easy if you want to back up your system
and you're starting fresh,
that you can just copy this over to your new install.
So how do I actually use this file manager?
One of the things I do is watch movies
that I have set up on Assemblish share to my laptop,
because I have them on a media drive on my Pi server.
When I'm SSHedent to my Pi server,
I can move around video rips to another directory.
There are up to four windows or directories
that you can change to by pressing the number corresponding
to the next tab.
I just highlight the files that I want to move
and then tab to the next page
and be almost immediately transfers everything over.
I also read PDF files from here using Zythera,
which is a bit like keybinding PDF reader.
I can edit files and VIM directly from here,
just by pressing E for editing.
Create new files by typing N, then F for files,
or N, then D for directories.
Or if you want to do something without exiting the program,
use the exclamation point,
and then when you're finished,
Ctrl D brings you back into the program.
You can either list the contents or extract archive files
by pressing Enter,
and then E to extract or L for LS on the contents of the file.
I use MUT email client,
so I press O to open the file
and MUT-A attaches the file
and starts an email.
I also learned recently how to use KDE to send files and web links,
and I'll put the bash command in the show notes,
along with the screenshot of the rest of the commands
from Help section.
Well, thank you for listening.
I feel free to record a show of your own.
Bye.
You have been listening to Hacker Public Radio
at HackerPublicRadio.org.
Today's show was contributed by a HBR listener like yourself.
If you ever thought of recording a podcast,
then click on our contribute link
to find out how easy it really is.
Posting for HBR has been kindly provided by
an onsthost.com,
the Internet Archive, and our sync.net.
On the Sadois status,
today's show is released under Creative Commons,
Attribution 4.0 International License.
