Episode: 865
Title: HPR0865: Desktop Transparency
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0865/hpr0865.mp3
Transcribed: 2025-10-08 03:44:32

---

This is Death's Array, finally off the interstate, the driving battlefield.
I want to talk, just being my first Walker public radio podcast.
I wanted to talk about something that's like a story that I've known about for a long time and I'm not sure how well it's been recorded or written down.
It seems like there's a lot of stories like this that they go on tour for a long time and then somebody tries to write it down and they get the facts wrong a little bit and then that story gets quoted.
And then, you know, sooner or later we have all the facts wrong about what really happened.
So I thought it would be a good thing to at least tell everybody what I saw at least from my point of view.
It might only be half-righted. It seems to be what really happened.
Basically it's the story of how we have transparency on the desktop.
You might think that it's kind of a weird thing to talk about but it's actually one of those moments when free software was very innovative open source community.
Actually back then we didn't call it open source yet. The open source movement hadn't really started yet. It was still called free software.
Back in about 1997 or so there were a lot of people learning about Linux getting into computers open free software, open source software, years returning and a lot of people's heads.
A lot of the things that we take for granted now are being planned out and written for the first time.
So back then there was a very popular, you know, people used X term for their terminal windows for their shell windows.
But there was also another popular one called RXBT that people would use and that had a feature that allowed you to set the background on it to whatever you wanted to, you know, it could be a...
I think it would accept XPM, graphic files, quite a fault but you could also give it like a JPEG background, maybe even a paying background, although that might not have been until later.
So anyways, people were setting their backgrounds on the terminals, you know, that was back when I was trying to show off their desktops and took screenshots and wanted to show things that you could do with things like the terminal.
So Rob Malda, they created a commander taco, kind of slash top theme.
On his personal website posted a screenshot where he had taken RXBT and made the background of an image that lined up with his desktop background, although the image that he used was tinted a little bit.
And so what it made it look like was that this RXBT window had a dynamic background that adjusted with the desktop background.
It made it look transparent, like the windows had a transparent background somehow.
Apparently a lot of people read him and asked him how he did it and stuff.
All he had done was taking, you know, the image and lined it up properly and made a screenshot, you know, that seemed like it was a transparent dynamic transparent background in the RXBT window.
But really it was just a normal image. But that didn't stop people from going out taking the source code to RXBT and starting to tinker with it and make it so that it could do dynamic backgrounds.
And pretty soon we had RXBT and then a term, there's probably a few other terminal programs that started being released that were based on RXBT or other terminals that started having these transparent backgrounds that were based on the desktop background.
It's not like it wasn't like what we have now where we have alpha transparency and you can see windows behind it. We didn't quite have that yet.
But in its first phase of development, it would show the background on your desktop.
So, you know, you'd move the window around and your background and your terminal window would change accordingly.
And this got people, I think a lot of people excited about the possibilities that you could have with visual effects on a desktop.
So, right around that time, there was also a very exciting looking and up and coming window manager in desktop environment called Enlightenment that was pioneered by Rasterman.
Rasterman was a developer that looked up upon quite a bit for his ability to code very neat visual facts and do the hard work that was necessary to make it all work.
Enlightenment back then was kind of light years ahead of other window managers.
As far as the visuals go, that was the first window manager that I remember seeing where the windows could be shaped.
If you remember the BOS, BOS might have been the first actual desktop environment where the windows were shaped.
So, you didn't have a window title bar that would span the whole width of the window, it only went like, you know, a fifth of the way across or however long it did for the text.
So, Enlightenment took that a little bit farther and made it so that you could see your windows and the themes could be shaped so that you'd have a title bar or decorations around the window that could be any shape.
They would let the image might be a lot bigger than what you're seeing, but the alpha transparency of the image allows you to see the windows behind the decorations.
So, this started a, people started making fancy window decorations.
One person even made something that was based on like aliens where the alien was up on the upper left hand side of the window and it was grabbing onto the window and it was like a really complex window decoration.
And then you started seeing stuff like translucency, translucency being where you can see, you know, it's like semi-transparent.
You can see the other windows behind the decorations before you see the desktop background. So, it's kind of like you have layers of transparency.
And around this time, probably around 99, 2000 or so, there started to be a new, so you have X windows that, you know, everybody uses now X windows.
The fact that it was X-386, with the name of the brand of X windows that a lot of people used, now it's X dot org.
And so, there was a competing windowing system that was starting to be developed called Berlin.
Berlin, it never really came to full maturity and I'm not sure what's even still being developed anymore, but Berlin, the goal with it was to be lighter weight, or at least not have some of the bloat that X windows had grown over, you know, the decade or two of its development.
So, it was a completely new, you know, windowing system for unique systems. And it had the ability to do alpha transparency so that you could actually, like, change the transparency of a window, so it could be like 50% transparent.
And if anything was behind the window, you could see through the window and see what was behind it, like another window with text or graphics or whatever, before you saw the desktop, so you didn't have a case where, you know, transparency just meant to see the desktop background.
It was true transparency, like, what we have now, you could also do cool things, like, rotate the window, an arbitrary amount, text could be rotated, things like that.
But I think, if anything, Berlin was, you know, a concept system that provided a lot of influence to people who were working on text windows and window managers alike, probably providing a lot of inspiration for them to go out and try some of these new things.
So, I think, after, you know, during, also during the 90s, you had some windows programs, like on Microsoft windows, like WinAMP, WinAMP started to have sophisticated themes that could, you know, have transparency in them and everything.
But it seems to me, like, those themes didn't come about until after the transparency stuff started happening on Linux and on X windows.
Beyond that, we started seeing it happen on Apple platforms and started seeing, even in hardware design, it started seeing transparency started to take away, especially on Apple.
You know, they're sleek designs and everything started popping up in 98, 99.
I think that just the collective community was able to come up with a push towards transparency all based on people wanting these transparency in their terminal backgrounds.
At least that's how I saw it. That's the sequence of events that I saw happen. You know, there might be something else. It's kind of hard to watch the entire, you know, computer community and get the right sequence of events sometimes.
But I'm pretty sure that that's the way it actually all played out and went down.
So now you know, you know, even if even if it wasn't first, you know that there's more in-depth history on the Linux side as far as the visual effects we see today.
And, you know, a lot of times people say, well, we're always catching up. But in that case, that was something where we were way ahead of everybody else.
And we were really thinking ahead and started to do some neat stuff that influenced other platforms. You know, now you have windows, windows that are, you know, has transparency in its window decorations and Mac has the same thing.
And now we have like true alpha transparency with the compositing managers and so on.
So that's the story. You know, if you have any evidence to the contrary to counter contradict what I'm saying, then feel free to send me a line comment on this podcast and, you know, site any examples you have that would contradict it.
Because it's good to get the story straight, you know, so that history is told right in all the people that deserve the honors of being creative, get that honor.
You know, the story of how the zip format came about has been blurred and confused. And it's even cited, you know, it's told wrong on Wikipedia of all places.
And the citations that they're giving try to, you know, make it look like what they're saying is right that John Katz was the one who made the zip format, but it was really Tom Henderson.
So, you know, but just because of all the confusion that happened around that time, people got the story wrong and started running it down wrong and bad PR and everything led to it being, you know, the wrong person getting the credit for the whole thing.
And we actually give credit to the thief, you know, which is bad. So anyway, I hope you enjoyed this little history lesson. I look forward to giving you more.
You have been listening to Hacker Public Radio at Hacker Public Radio. We are a community podcast network that releases shows every weekday Monday through Friday.
Today's show, like all our shows, was contributed by a HBR listener by yourself. If you ever consider recording a podcast, then visit our website to find out how easy it really is.
Hacker Public Radio was founded by the Digital Dark Pound and the Infonomicom Computer Club. HBR is funded by the Binary Revolution at binref.com, all binref projects are crowd-responsive by linear pages.
From shared hosting to custom private clouds, go to lunarpages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under creative comments, attribution, share a like, read our license.
