Episode: 3430
Title: HPR3430: Booting
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3430/hpr3430.mp3
Transcribed: 2025-10-24 23:14:34

---

This is Haka Public Radio episode 3434 by May 24 on September 2021, today's show is entitled
Mooting.
It is hosted by Huka and is about 12 minutes long and carrying a clean flag.
The summer is, we look in detail at how early PC Mooted.
This episode of HPR is brought to you by archive.org.
Support universal access to all knowledge by heading over to archive.org forward slash donate.
Hello, this is Huka, welcoming you to Hacker Public Radio in another exciting episode in our DOS series as we do technology archaeology here.
And again, a reminder that I'm looking at really old technology.
This is stuff that I wrote over 20 years ago, probably 25 years ago would be my guess.
But, you know, it's useful information for some people, I think.
And what we're going to look at too is the boot process in DOS, you know, what's booting all about.
The term boot is short for bootstrap.
And this is a metaphor.
And that is what happens if you imagine a person wearing boots who reaches down, pulls on their bootstraps and lifts themselves into the air.
Now, this is ridiculous, of course, and is something that is only possible in cartoons, but it is a vivid image.
With the power off, a computer is a deadhunk of silicon steel and wires.
During the boot process, it has to wake up, find all of its peripherals and configure itself to run software.
It takes some doing to make all this happen.
Now, it starts with something called the BIOS, BIOS, and that is short for basic input output system.
And that's a series of instructions that are contained on a ROM or read-only memory chip.
In addition to the ROM BIOS, there are settings that are held on a battery-powered chip.
This chip is frequently made of a special material called CMOS, which stands for complementary metal oxide semiconductor.
These settings are configurable by the user and can be accessed at the beginning of the boot process by pressing a special key, such as the F1 or the delete.
Now, the settings held in the CMOS tell the computer which disk drives are present and the order in which these disks should be checked for boot information.
Now, the very first thing that happens in the boot sequence is something called the post, which stands for power on self-test.
This is run from the BIOS and allows the computer to check for memory.
And if you're booting in DOS, you will see it clicking through the available memory on your screen.
Then it's going to check for a keyboard.
One of the things I love, the error message is, you know, no keyboard present, press F1 to continue.
It's like, if there is no keyboard, how do I press F1?
Yeah, well, you know, it is what it is.
And it's going to check for disk drives and all that.
Now, if it does not find those things, it gives an error, sometimes on the screen, sometimes by emitting a series of beeps through the PC's built-in speaker.
Yeah, because yeah, PCs all came with built-in speakers for this.
And there were beep codes.
Every BIOS had its own beep codes and you had to get the documentation and look that up to see, you know, what is two longs and a short here, you know, that particular code means something.
Now, on the screen, you may see errors like keyboard failure, failure accessing floppy disk and stuff like that.
Now, assuming that the keyboard is working, the memory is there and it can find the proper disk drive.
The BIOS then looks to the appropriate disk for further instructions.
Now, that disk might be a floppy disk or a hard disk drive.
The very earliest IBM computers and the compatible, it was floppy disks.
Hard disks were extremely expensive.
I remember spending hundreds and hundreds of dollars to get a 20 megabyte hard drive and thought, well, I never need more storage than this ever.
Yeah, we're so cute when we're young.
So, anyway, the master boot record is going to tell you where to go for the next step, whether it's a floppy or a hard disk.
Now, if the master boot record is found, the boot process goes forward.
If it's not found or is damaged in some way, you may receive an error that says the disk is not bootable or is not a system disk.
Now, everything said up to this point is generally true with the boot process for all Intel-based PCs, regardless of the operating system.
Now, from this point on, the details will be given for DOS.
Now, some of these steps you might find are retained in Windows, but that's not our concern here.
When DOS was first used by IBM for its personal computers, the operating system was called PCDOS.
And IBM gave certain names to the files that made them sound IBM specific.
But as soon as clone makers like Compact and Dell started making IBM compatible clone computers, Microsoft released a clone version called MSDOS and renamed some of those files.
Now, MSDOS is much more widely used than PCDOS, and MSDOS names are most common.
Now, for DOS systems, the master boot record, the MBR, will point the computer to two hidden startup files.
The first of these files is IO.Sys, an MSDOS. For IBM computers, it's called IBMBio.com.
Now, this must be the very first file physically on your boot disk or your disk will not boot.
The second file in DOS systems is called MSDOS.Sys or for IBM computers, IBMDOS.com.
This must be the second file physically on the boot disk or it will not boot.
Now, this is why you cannot create a boot disk by simply copying these files to a blank floppy disk.
They would be on the disk, but they would not be in the proper position for the boot process to find them.
To create a system disk, you need to use a particular command that tells the computer to place these files in the precise position needed for booting to occur.
Now, IO.Sys or IBMBio.com contains the interface between MSDOS or PCDOS and the IO subsystem.
This allows the operating system to communicate with the basic peripherals and perform input and output tasks.
Now, MSDOS.Sys or IBMDOS.com is the kernel of the operating system.
It interacts with the hardware and helps process the various DOS functions.
Now, both IO.Sys and MSDOS.Sys are hidden files, which means that ordinarily you would not be aware of them, and they would not appear in a directory listing.
This is to protect the OS from someone mistakenly deleting these key files and rendering the computer unable to boot.
The third file to be loaded is config.Sys. As the name implies, this file contains information that helps to configure your system.
This is where you would install devices and drivers, for instance. In DOS, it is common to have your mouse, sound card, and CD-ROM drive installed here, as well as certain memory management and other functions.
If there is no config.Sys file present, a default version contained within MSDOS.Sys is loaded instead.
The fourth file to be loaded, which is automatically added to the disk when you make a system disk, is command.com.
This file does not need to be in any particular physical location on the disk, but it does need to be in the root directory.
This file is a command interpreter, which means it can interpret the commands you issue.
Every OS has some kind of command interpreter. They may use different names. In Unix and Linux, for instance, the command interpreter is generally called a shell.
A command.com interprets all of the internal commands, and we'll discuss what these are later. But for the moment, think of them as the most common commands that DOS uses.
Now, the fifth and last file to be loaded is auto-exec-bat. This is a batch file, which means that it contains a series of commands that are executed whenever the file is run.
This file is automatically executed when you boot, hence the name auto-exec. If there is no auto-exec.bat file present, a default version is run.
Now, you can usually tell, because if the default version is run, you'll be asked to enter the date and the time.
After all of this, if it all works correctly, you will finally see the prompt. And the prompt, depending on your system, will either look like a colon backslash greater than or c colon backslash greater than.
A would be if you had a only floppy drive system. The only head was floppy drives. A is always the first floppy drive. And c would be if you had a hard disk.
And c is always the hard disk. And in the early computers, the ones the first that came out, the IBM and the compatibles, were two floppy drive systems, yet an A and a B.
And then when hard drive started to become used, the default was c.
Now, I'm sitting here 20 years later, and we're still calling it the c drive. And people who were new to computing, and the YC, history, it's just the way it is.
It was called c back then, because A and B were already taken. And so c, and if you had another one, it can be d and so on.
So here's the summary of the DOS boot sequence. Number one, the power on self test. That's the first thing that happens. Then the master boot record is red.
Then we go to the IO dot sys file, then to the ms dot sys file, then to the config dot sys file, then to command dot com, then to auto exec dot bat, and finally to the command prompt.
And now we're ready to do some computing. So this is a hook up for hacker public radio, signing off, and is always encouraging you to support free software. Bye bye.
You've been listening to hacker public radio at hacker public radio dot org. We are a community podcast network that releases shows every weekday Monday through Friday. Today's show, like all our shows, was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out how easy it really is.
Hacker public radio was founded by the digital dog pound and the infonomicon computer club, and it's part of the binary revolution at binwreff.com.
If you have comments on today's show, please email the host directly, leave a comment on the website or record a follow up episode yourself.
Unless otherwise stated, today's show is released on the creative comments, attribution, share a like, 3.0 license.
