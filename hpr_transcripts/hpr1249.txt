Episode: 1249
Title: HPR1249: Software Patents: Who's Behind the Curtain?
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1249/hpr1249.mp3
Transcribed: 2025-10-17 22:25:11

---

Hacker Public Radio asked me to try and record this one, so I just want to let you know
in advance.
So, especially because sometimes people ask me questions about legal issues during the
Q&A on the talks about software patterns.
So, if you're in litigation with someone, and it would be a really bad idea for that,
the details or whatever question, you probably shouldn't ask it in a large group of people
anyway, but you especially shouldn't ask it when we're going to put it on the internet
for Hacker Public Radio.
So, if I, as long as I get the full disclaimer in there, so everybody knows.
I'm going to go ahead and get started.
So, basically I'm going to talk about software patterns, what's going on.
I'm pretty focused on the US, that's why we're here, but it's also where all the software
patents are coming from, well not all, but a lot, the lines share for certain, and the
lines share of the software patents seems.
So, if you have questions about this situation in another country, sometimes I can answer
that, but we're going to focus pretty hard on the US.
Okay, so first, we're going to talk kind of about where patents come from, in like
how did we end up with software patents in particular, and so I think it's important
to kind of think of the idea of innovation first, so we have this idea, you know, that's
like one of those buzzwords, right, like who we're thinking outside the box and pushing
that envelope and all of that, because we're innovators, and so that word just kind of
means it has like NOVA, which means new in it, and so it usually means like, you know,
putting something new in, and so, you know, that could mean a couple of different things,
but I think when we're talking about policy, it's important to think about, are we talking
about something that's actually a new idea, like a new, you know, process, product, machine,
et cetera, or are we talking about a new way to monetize or a new way to think about
an idea?
So like one is very concrete, and you know, inventions are great, I remain hopeful for
prime travel, but monetizing, and I hate saying that word, but I want you all to be angry
with me about it, so when we're just talking about a new way of thinking about things,
then, you know, so innovation is good, but be clear on which part we're talking about.
So the kind of further illuminate that, sorry, so the difference between patents and products
or ideas, just to get a little bit further in, so like an innovative thinker might say,
we could use a more efficient system to speed this up, like if we could improve the airflow.
So that's a thought, right?
Like, yeah, okay, cool, like, you know, sometimes I'm in the supermarket, and I'm like,
this would be great without all the other people, which is a thought, it's just a thought.
It's not like, I haven't implemented anything, a product is if you actually build something
that's more aerodynamic, so then you have like a new, more aerodynamic version of the
device, or like a supermarket with little holes on the outside, so you don't have to
interact with you with people when you're in there or whatever.
And then the person, the idea, says like, I feel like I charge more of this thing when
faster.
So those are all like different, separate concepts.
Patents are granted, are supposed to be granted for things which are novel and non-obvious.
And the U.S. patent and trade office, and this country is, I want to say this, no, we're
correct, upwards of 40,000 new software patents each year.
That's just the U.S.
There are some in Europe too, they have a lot less.
So, and you're like, why so many?
Because if you look at just like 10 years ago, it was half that, you go back to the 90s,
it was like 5,000 a year.
So one of the huge problems that happened is what is arising what we call functional
claiming.
So you used to be able to, like, get a patent on it, I built this specific thing to fix
a problem.
And that was what patents were traditionally granted for.
What we're doing now is granting patents for, I have an idea about fixing a problem,
comma with software.
So.
So what's your local property then?
Right, so this is in a general, yeah, patents are definitely part of what we call intellectual
property without getting into what's, I know, and you know, and we can talk about it.
So, because of the funny dance that we do with what's patentable and what's not, while
technically math is not supposed to be patentable, if you cloak it in a whole bunch of ideas
about your goals and what you want to do with the math, it can still just be a bunch
of like loops and lists and things that everybody uses, but if you hook it to your goal on
what you want to accomplish, all of a sudden you've made a patentable thing.
So that's where we went from 5,000 to 40,000 software patents per year from 1990 to today.
So that's just a little bit about like how we got to there.
It's also, I would say, the other thing about ideas is that it's harder to figure out
when you've infringed.
So if I have a patent on a chair or things you sit on, then if you sit on something then
you know you've infringed, because it's right there.
And that's sort of a really blatant example, but for an idea, like when does my idea hit
your idea?
So you can see how that gets like much buzzier.
It's almost impossible to write software and not infringed.
So everyone is with me so far.
Okay.
I did tell you this one would be more depressing than this one, right?
Okay.
So, so ideas.
So more money, more problems.
I'm going to move through this part pretty quickly so we can get to the solution part,
the part 3 is solutions, but and some of the stuff you already know, people have been
reading like Gropler or Slashod and sort of have a general idea that this is, I mean,
I assume you're here because you're like, there's starting some poor patent people.
They're going on.
Okay.
So, so what you probably already know, patent suits are clasping lots of money.
We lose $80 billion annually to non-practicing entities or trolls, actually over for term,
I guess they like, we don't have to do so.
But that's, and that's $80 billion that just goes down the drain, because those are entities
that are not like making a different version of the thing, they're just not making a thing.
So everyone is clear on what a troll is.
Okay.
I can talk about that a lot.
Really angry.
So, so it's expensive and I want to, I do want to point out that that isn't even including
litigation between practicing entities.
So there's the non-practicing entity where they're like, oh, I'll buy some patents and
then I'll sue people who are actually doing things.
Then there's the situation where one company says like, huh, you're like right in our
space and if we could sue you and get an injunction so that you would have to stop sending
your software out, we would have a total competitive advantage because you'd be stuck inside up
in the court.
So you see, basically like anti-competitive suing and that's, that's a directive is also
expensive.
There's don't get any cheaper over there.
So plenty of money over there.
The activity is increasing and not decreasing.
I think I have a couple of graphs on that in a bit.
And it's not spurring innovation, there's a couple of pretty comfortable sets.
Let's see.
So, oh, I did put this up as it was.
I tried to turn this up a little bit but ah, there's the activity increasing.
So these are patents, suits and valuing, not practicing entities.
A lot of this, this is not only software, but we are doing maybe like 4,500 software patents
this year.
This is just with companies that don't make anything.
And a large percentage of this is software because the software suits tend to be really
successful because they go to a court where the person doesn't really understand software
and they're like, yeah, it sounds like you guys did a lot of work and, okay, sure, you
can have money.
Or worse like the company that's going to pick onto suit is like, we forgot to leave
$5 million laying around for lawsuits.
So, okay, we'll just do a cross license at whatever price you need to crack.
So, that's a different thing, but let's see.
So in addition to being expensive software patents suits are also otherwise a pain in
the ass.
Sorry.
If anyone, you can, we're at, you have to remember, so, but, uh, so thickets where like whole
swaths, like whole general categories of software are so patent-encumbered that, you know, there's
a, like a mafia like presence, like a video is sort of this way, um, rewriting code if anyone
remembers the file allocation table thing, it's like a piece in the Linux kernel that, um,
had to be rewritten because, um, it infringed on Microsoft's amazing invention that sometimes
you put the long name of the file and sometimes you use the short name, but it's pretty deep
down in the kernel and so that had to be rewritten and it's probably a pain in the, you know,
what, for whoever.
Um, and, uh, you know, of course it's generally, like, it would be great if we could just go
back to writing software and not worry about any of this at all.
Um, so, uh, some of them were recent developments that you may not have heard about, even if
you were aware that this is a giant problem, is that, uh, the patent aggression entities
are getting bigger, that's, um, same as trolls from a park, um, and the targets are getting
smaller, some of them, not all of them, they still want someone with money usually, but,
um, they found that they, uh, can get a settlement pretty quickly with some of the smaller
targets.
So they're targeting people that are not, um, building software, but just making software.
And then, um, this is also a little bit, uh, they're going after kind of stuff that's
the stack versus the special sauce.
So, um, you see anti-competitive behavior, hitting, like, whole categories of things, like
tablets or phones, as opposed to, like, a phone that has one specific tiny feature among
hundreds.
So, um, it's blocking innovation in the worst possible way.
So, um, now on to intellectual vendors.
This is probably the largest troll, and I'm going to talk about them for a little bit.
Um, they have, like, 1,300 shell companies, uh, that we, that were, that people could find
records on.
So, these are all individually incorporated, and they all act in concert.
So, um, this is the guy in, uh, Russia, and he got, uh, a letter from one company that
was like, hey, it looks like you might be using some stuff.
Would you be interested in, uh, cracklaces or something like that, and we could totally
buddies, and you could just send us a little text, and it'd be awesome.
And he was like, mmm, but then got another letter from a different company, which happens
to also be part of the same giant structure, but with different letter heads, different
address, all of that, and they were like, we're thinking about suing you, because it looks
like you're using our stuff.
So, it was like a little good cup, bad cup, except they're not police, they're just sending
letters.
And so, um, he, uh, tried to send a letter to the FBI saying he thought he had encountered
some kind of, uh, racketeering organization, which he did, but unfortunately they're
incorporated and filled out all their paperwork, and, uh, so they're not like, I mean, they're
corrupt, but they're not technically a racketeering organization.
Um, the other thing that we do know about not only in electional ventures, but other ones
like a case of technology, they do regularly talk with each other, and don't know anyone
who's ever been invited to these meetings, but, um, it's, it's not difficult to imagine
some pretty terrible things that they might discuss with each other, like, oh, how about
you get that one, and then we'll come and clean up on them next month.
It could happen.
We don't know.
Um, there is also another, uh, pretty ridiculous example, uh, Nathan Mervold, who's the man
that owns an electional ventures, um, someone wrote an explosion saying, like, oh, isn't it
interesting that, uh, this company you're on the board of just got a patent infringement
noticed from intellectual ventures, ha, ha, ha, ha, ha, ha, and then like, it was reported
in the news, and then, like, quietly, that company got moved off of the patent infringement
list.
So, uh, we don't know, but it seems like this is so vast that he sued himself.
So, uh, you know, uh, there's a lot of potential for grossness there.
So, um, all right, so now we're sufficiently convinced that this is a gross practice.
Okay.
Um, let's go into, uh, oh, and then, uh, we did talk a little bit about how, uh, users
rather than just, um, then, uh, producers of software are being sued, and then this is
the number, uh, 40% of the time.
Um, Colleen Ten is over at, uh, UT Camp Clare Law, and, um, has been wearing a lot of, uh,
stuff because they're looking at those, but, uh, and, you know, the whole, kind of non-packeting
entity thing.
You know, bring in some of her numbers later, but, um, I think that the problem here is,
it's particularly troubling when you're looking at free software because, you know, we
want to be able to say, like, oh, you can use it, and it's not, you know, patent and convert
and all these things.
Um, I mean, I'm sure everyone would like to say that about their software, but, um, you
know, this is, it just is feeding into the fun and confusion and, you know, it's, uh,
so I think this is, this is worrisome, uh, in a separate way, so, uh, anyway.
So, um, let's go down to the solutions.
The great thing about, like, so some of these really egregious things were, like, Nathan
Rural, suit himself, or, like, you know, seeing, um, the big, like, telecom giants, do
you get out and have that stuff be in the news, is that over the last year or two, especially
there's been, like, a huge pile of people, smart people, like, Cromington, and, uh, we've,
like, seen the best in in Boston, looking at this problem and trying to figure out, like,
what kind of policy levers we could use to change those.
Um, so that's, that's the bright spot in those CU stuff.
Um, so, uh, this, and I think the other thing that's interesting to note here is that,
uh, we're not totally at C, um, and stuff where we like to think, like, everything is new,
and nothing like this has ever happened before, uh, but this, uh, we have seen the situation
before with, uh, what they called it the time patent speculation.
So, um, both with farm tools, and then also with, uh, railroads.
They had, uh, problems where, uh, patent speculators were buying patents on farm tools, uh, and
railroad parts, and, uh, that's not what trains were chasing at that, um, but, uh, they,
you know, were suing railroads for using breaks on trains.
Um, and the railroad companies are like, you don't have any trains.
What, like, why are you sending, like, you can't have the patent on breaks for trains.
Also, you can't have a train without breaks, like, so they, that sort of motivated them
to gather together as community and figure out, like, you know, industry-wide, like, what
can we do to keep from being sued, but it's kind of not even have any trains on the
concept of break on train.
Um, the, uh, the farm implement one was even kind of worse because, um, it wasn't, like,
I mean, it's not trying to gather a lot of, like, cheerio, sympathy for railroad magnets,
like, I'm sure they were fine, but, uh, for the farm implement, people were coming by
and they're like, oh, I see you have a hinge on your gate.
You know, who holds the patent on gate hinges, it's me, you know, and so, like, they're
coming down and shaking down farmers out, like, at their farm and people were like, what
the, you put, like, hide your tools so that no one could comply and try and get you to
pay royalties on something.
So, um, you know, maybe that, it could be a little exaggerated, then you didn't have
to do anything back then, so, uh, but this, uh, this has happened before.
So some of the scholarly thought process on this is not, like, based on, like, out of
nothing.
They're looking at what's worked historically before and what kinds of solutions we might
be able to tailor for us today.
So, um, all right.
So before we get into that, I want to talk about patentability and, um, what's already
on the books, because, uh, what I found over the last year of talking with people about
these issues is that, I would say, like, you know, blah, blah, blah, and they're like,
well, math just shouldn't be poundable, and I'm like, oh, it's actually, it's not.
And so, like, just to kind of get out of the way, like, what's already on the books,
and then we can talk about improving our embroidering on that.
Okay.
So, patentability.
It turns out that the current statute is actually not so bad if it was being followed to the
world.
So, um, the first bit, uh, no math, and stuff has to be actually new and actually useful.
So, you can not, um, cut the things, like, the idea of using magnets to help you sleep
because they don't do that, uh, or any of that kind of thing.
So, stuff has to be actually new, you cannot patent math, so that is already on the books.
So, we don't need to pass a law that says you can't patent math.
Um, novel.
You can't patent something that people already use.
And this seems like it should be sort of, like, of course, that's the point, it's supposed
to be an invention, like, I think I didn't just before, but, um, the statute is very clear.
If you see someone like, ooh, that's cool, I'm going to go patent it now, because it
just saw you selling it to other people, and then come back and shake you down for money.
You're already not supposed to be able to do that, so, um, which is, that's, that's
pardon me.
Um, non-obvious.
So, it can't be obvious to someone in that field.
Um, has anyone here ever made a bactite?
Yes.
Okay.
Oh.
Oh, I love the Pacific Northwest.
I asked this in New England when I was like, what?
Um.
But, so, um, like, sometimes you hear, like, underwater basket weaving.
So if you've never made a basket, that sounds like crazy, right?
Like, why would you get underwater to make a basket?
It's not you, it's the basket that's underwater because it makes the strands pliable.
So if you have never made a basket underwater basket weaving might sound really innovative.
Like, wow, that's a brilliant thing I never even thought about it.
But if you've made a basket before, you know that, that default is to do an underwater.
So, yeah.
And if hadn't been making a basket under saltwater?
I don't think so.
I'll tell you I don't think you want salt because it makes the basket all crusty.
Just, I mean, well, you want a crusty basket.
Not to, I don't know what to say on that, but, um, yeah.
Also, I don't, um, I don't know that we're having a lot of patents in the basket field
right now, but that's a little outside the scope.
Maybe someone will look at the video that needs to happen.
Um, so anyway, the stuff has to not, it has to be, uh, it can be obvious to someone in the field.
So, um, if so everyone's with me on the not audience.
All right.
And then, uh, yes.
It must actually have utility and be possible.
Like, you can't, um, I'm trying to think there was like a, um, someone had tried to, uh,
get, uh, something like human flight without any devices patented at some point.
Uh, and there's other ones that are like really not so like that, but, um,
you can't patent something that is impossible.
Which seems, yep.
Can you patent something that you think is possible in the petrol?
Oh, yeah.
That was the thing.
Yeah.
And that's kind of the whole problem with the software patents.
You can patent stuff that, like, you don't know if it's possible.
And then, um, you can, uh, I, I was a recall reading and hearing that, um,
there was going to be bad news of people who are special by the logical.
Yeah.
That's a very important question.
Uh, but number two seemed like that would include someone going to, um,
Yeah.
Yeah.
Yeah.
I'm good in mind too.
Um, I think it's similar.
I think they do a similar dance linguistic dance, like, like, people do with math when they're
patenting software.
So, like, you wouldn't say, I patent math or I patent genes.
You would say, I patent genes when you do this thing with them or when you use them like this
or when you, uh, look at them for this kind of research that maybe I put in a file allocation
table or something.
So, um, so I think they add some other verbiage around it that obscures the fact that they're
just full on patenting genes.
Uh, but I'm not as, I'm not as knowledgeable in that part of patentability by a long,
long, long shot.
But I think it's, I think there's some similar movement happening.
Yeah.
So, it doesn't have to work.
Oh, yeah.
I've gotten to the nice detector and it doesn't work.
An ICE detector?
For their points.
And it doesn't work.
Well, that's, well, we talked about that.
It doesn't have to, it doesn't have to actually currently work.
But someone at the USP2 has to read it and be like, that could feasibly work one day.
I mean, you can't, it's like, like, so unless you find someone who believes in leprechauns
in the USP2, you can't patent conversations with leprechauns.
Thank you.
Yeah.
What sort of proof does an evaporate patent seeker have to need?
What do they have to say to the actual possible?
Right.
So, um, so the short, yes.
So, the typical answer is, uh, it's just how you use the little patent scanner.
Um, and uh, the way that these are written, like, so I'm talking to you in regular normal people
English.
Patent applications are never written in that.
Uh, just, I promise you, like, it meets the eyes believe to look at that.
Um, but so, uh, and sometimes if you, if you want to, uh, you can go and read things that, um,
have already been patented and you'll see what I mean.
Like, the amount of verbiage, uh, there's a couple of different problems.
And I'll get to that actually a little bit later when we talk about ways that we might change
how the US Patent and Trade Office works.
Um, and you'll get a bit better sense of what the problem over there is.
Um, it's not, it's not exactly that they're stupid.
It's a little bit more of the overworked underpaid thing.
And so, um, yeah.
We'll get to that for sure.
Okay.
So, current statute.
Not too bad.
So, of course, we, uh, we talked a little bit about courts already with the foreign stuff.
Um, there have already been some cases.
Uh, the, at the staff was in Amicus on the Bilsky case and we had high, high hopes.
I worked there at the time that, um, the courts would take that opportunity to narrow the scope of patentability.
Um, that particular case was actually a business method patent, which is another kind of vague,
doesn't seem like it ought to be patentable abstract idea thing.
Um, but again, covered with verbiage to make it seem like a thing.
Um, there are many, many, many business that the patent's out in the world.
So, we had hopes that the Supreme Court, at that time, would choose to do something.
Um, they did not choose to do something with Bilsky.
In fact, they were along the decision.
Um, one of the justice has actually said, like, well, if we thought it was having a chilling effect on innovation,
then we might be moved to do something about that.
Yeah.
And I was like, where is that guy?
Oh, yeah, he's the Supreme Court of US.
So here, but clearly doesn't love.
I'm sure he doesn't recall.
But, um, he should.
That's the problem.
But, uh, anyway, so that one was, that Bilsky awash for the most part.
There's like, they might have left a tiny crap in the door, but we're not going into too much.
But, uh, another case that we had hoped would kind of also help to narrow the scope of patentability.
Uh, it was a Prometheus case.
And then, of course, did move a little bit like, hey, maybe we shouldn't, uh, have patents on azalearity.
Uh, the Prometheus case is like a medical kind of procedure case.
So it had, um, they had, like, a little bit more of a sympathetic base.
They had, like, sick people who were actually dying because some large company was trying to get this tiny clinic to pay the money for a medical procedure,
which they had patented, which was basically, like, you put the substance into the person, you measure it,
and then you decide if they need more of the substance.
That was the, that was the grant I mentioned there.
Um, so, I mean, I know.
I'm sure it didn't mean that way when they got the patent.
But, um, that was basically, like, you know, you see if people have enough of the drug, or if they're bigger,
or their metabolism is higher than they need more of something.
So, um, so that was, they were like, no, you can't have a patent on that.
So when there are, like, when there's, like, sad sick people on the short end of this day, like, a court can be moved.
So, you know, that's, that's, that's good news, I guess.
Um, so, uh, when we think about, like, going forward, as far as, like, a judicial solution to the patent problem,
um, changes in the judicial system would have an impact on patents that have already been issued,
and then also patents going forward.
So that would be a big sweeping change in the scope of patentability.
So, you know, but with great big change comes great big cost and great big pain in the, you know, what?
Um, the courts are really unlikely to do that, and we would need to relay a cervical strike kind of case,
which means we would have to, or, you know, someone that was thinking clearly about this issue would have to banquerel a case,
and they might have to ban on a couple of them and try and get one of those up to the Supreme Court and get them to make the decision.
So, the Supreme Court would be like, huge to be changed, but it would, you know, it would be a lot of work when it takes some time.
So, uh, that's not to say, don't do it. I just want to let you guys know.
So, some of the other ways that we could kind of change what goes on with the judicial, I think I have a list.
Yeah, that's a big thing. We know that.
Okay. So, one of the things that we could consider doing is finding, like, some sort of a policy lover to lower the plaintiff's incentive to sue.
And so, um, they could set a lower precedent for the amount of damages awarded.
So, right now, um, you, uh, you can, the lost sales rubric is kind of a mess.
So, like, you know, you have, like, a phone, and you're like, oh, we saw that phone for, like, $500, which, of course, nobody does.
You buy a contract, and then you get it for another 70 bucks, whatever.
Um, and the piece of the phone that we're suing you about is, like, maybe, like, two percent of what makes it awesome, you know, depending on what piece it is.
But then, um, after you get juries thinking and talking about this, many of them invention for, like, two weeks or something, they, uh, a lot of much larger percentage of the cost of the device, or the product, uh, then is really necessary.
So, we're saying, like, if you can find, if you can get, like, a tiny piece of, like, a $500 device, then we might give you a large percentage of that for lost sales.
So, the courts could also choose to sort of lower the, uh, incentive by not awarding the lost sales thing in such a, like, an egregious over the top way.
Um, another thing, uh, that, uh, Germany and France and the UK and Japan already do is they have an innocent user defense.
So, you, this would cut out the thing where you see the person who's just using the software, but not, uh, and, but it wouldn't do anything about people who are making software, assuming each other.
Or not practicing any of these, assuming people who are making software.
If you were, assuming somebody was like, I just bought the software and we just use it, then you could say, we're not infringing because we're just using it.
We're not, we didn't make it.
So, there's a couple of ways that we could sort of, like, make that giant pot of gold at the end of the court case a smaller, less exciting pot.
Yeah.
So, it depends on who is doing who, right?
So, um, if a proprietary company that's offering a similar service or a product or functionality, uh, is selling theirs, then they can order you that your free software project is causing them to lose sales.
At whatever cost they sell it at, right?
So, they don't take your price.
So, like, when Apple suits someone, they don't sue for injury prices.
They sue for iPhone prices on lock sales.
Does that mean then?
Which is, you know, yeah.
So, um, the, um, going after the end, do you seriously buy it for sale?
Um, what do you mean?
First, I'm sorry.
I don't know what you basically said.
And people buy something real quick.
Oh.
You know, the reasonable expectation that the person selling it has a right to sell it.
Right.
So, um, so for the innocent user doctor, and this would be like, not, uh, I don't think we're at the point where people who just buy a phone are doing that.
But, like, uh, like a bank that outsources.
So, like, it's a little bit different.
I think I's not covered in the same way.
So, they may have said, like, can you cut some of this a little bit for us, even though they didn't build it in house.
So, it's, but yeah, for, uh, the first sales thing, I think, would still hold for, like, just a regular person who's purchased a phone.
So, just to be, uh, and we're, I don't want to alarm people.
It's already bad enough without being, you're not going to get sued for having a phone.
Or not any time that I know it.
So.
Okay.
So judicial solutions.
Um, so, uh, we could set precedent, or try and push them to set precedent that better upholds the existing statute, which we just read and is actually totally reasonable.
Um, and then, you know, again, we would have to push cases up and get better precedent set.
Um, uh, we could, uh,
we could try and get the, push the courts to set precedent that street software patents differently than other patents.
Um, again, going through the courts, but, um, you know, uh, so I don't know, like, not all of these do I know how they would do.
These are a lot of ideas, and I have opinions about some of them, and some of them are just like, ah, well, you know, we have to look into that.
So, um, oh, I guess that was all I have to learn.
Oh, yeah. Okay.
So.
Moving from judicial, until legislators.
If people have questions about that previous section, will you also try and leave questions about that?
So, um, Congress.
Could we get them to do something?
Uh, yeah.
Exactly, actually, that's the nice thing.
Um, so we just talked about how expensive watches are, uh, Congress also ain't cheap.
Um, so, uh, that said, sometimes they can be moved to do some.
Um, so some of the legislative solutions, just a few years ago, we passed the American Events Act,
and that was meant to be this big, overhaul of the whole patenting system, and some of the things in there were good, and some were not too good.
Um, some of the good things were, uh, it took tax methods, which is basically, like, I patented an awesome way of cheating on my taxes out of the scope of patentability.
They're like, wait a second, that's our money.
No, no, no, no, no. You can have everyone else's, but not ours.
Um, so that was, uh, I guess, a plus.
Uh, we also got more opportunities for third-party, third-party prior art submission, which means, like, uh, the USPTO said, like,
we'd like to hear from people, like, it's come to our attention that maybe there are things we don't know.
And, um, we would like to give you guys more opportunities to school some stuff.
So, um, you know, so that's good.
And then there's awesome more opportunities for post grand opposition, which means, like, after a patent is issued, like, there are more,
there's like a mechanism in place to be like, hey, why'd you create that one?
But, you know, so, uh, not perfect baby steps, right?
Um, and it also, uh, we went from first to file to first to invent, which, uh, harmonizes the US with the rest of the world.
Usually, the harmonizing is, it's usually, it's usually a bad thing. It usually means lowest common denominator.
Um, this means that, uh, the patent gets granted to the first person to file the patent rather than the person who actually invented it.
Unless you could find prior art and use that third-party prior art submission.
Um, stuff that it did not do.
Um, it did not change the funding structure of the US Patent and Trade Office, which is sad.
Because, right now, they have a financial incentive for grant patents.
So, they get, like, you pay money when you apply for a patent, and then you pay more, like, if you get it, then it goes fees into the place that you work.
So, people tend to grant the patents.
So, uh, the USPTO currently grants about 75% of the patents it receives.
So, um, it's like working on commission at the mall.
So, I, someone asked me the last time I talked about this, like, how much money we would need to fully fund the USPTO.
I, I don't know the answer to that.
So, you raise the price of the application, but it's right up to 75% of the price.
Okay. So, we're here.
Yeah. Um, see, uh, raising the, the application price means that then you have more, uh, like, the wealthier players get more patents than the non-wealthy players don't get as many patents.
So, you already have, it creates, it sort of accentuates an imbalance.
Um, there, there are other ways, like, like, doing a, uh, scaled structure of fees.
So, like, if you're a person that has less than, like, five patents, then it doesn't cost your life for it.
Like, there's some other ideas about, um, tinkering with the fee structure, are there?
Yeah.
What's the birth of that application?
I don't actually know that off the top of my head.
A lot, or a little bit?
Um, it is a bunch. It's, uh, and you usually pay an attorney to prepare the patent for you.
So, it's, like, it's kind of a whole bundle, and it depends on, yeah.
When, um, I did my parents in the mid-1980s, they cost the ball company about 50,000 dollars.
Okay. Yeah. That's, um, it might be a little more, like, a little less, you're not like too very, but, uh, yeah.
It's, it, it gets, for me, when I, it's, like, one of those big, big numbers stuff.
Yeah.
Anyway. So, um, okay.
So, uh, other things, people like, let's just get rid of stuff for patents or patents altogether.
Um, which, uh, turning it Congress to do that, um, what, those would be great because it would affect existing patents.
It would also, um, cancel situation going forward.
It could be really difficult to gain support for this because of the, uh, like, well, certainly for patents altogether.
Um, because maybe familiar with the pharmaceutical industry.
Um, so turning your patents altogether, it's sort of, like, you know, to fix the patent tool problem.
This would be, like, pissing off the incredible hallway or already swarmed by tigers.
So, I think, like, unless you have a lot of, like, a ridiculous amount of money and you just buy off the tigers and the whole ball at once.
Um, I don't know what it would take to buy off the farmer.
But, um, more feasibly getting rid of the software patents.
But, again, um, there's, like, a not small amount of money invested in the current system with software patents.
So, um, you know, I'm not saying, don't do it. I'm saying, be aware that, like, you should try and invent something that makes you a lot of money first.
Um, so, uh, that would be, uh, you know, and anyway.
So, like, some, like, the pure macatons are already not supposed to be granted.
So, like, passing a lot of things, like, you can't patent math is, of course, not so useful.
Um, we could, uh, also meet the plan of pay the legal fees.
So, this is, um, saving, I want to, this is one of those,
backerns that came up a little while ago, sort of, um, saving, high-tech innovators from egregious legal disputes.
So, there should be. Right?
Um, and so, the name is cookie, but, um, basically, this, uh, it would make the plaintiff pay if they lose.
And the idea of this, which is not passed since the proposed law, um, is that a lot of the troll suits are just settled because, um,
and they, and they lose a lot, too.
So, like, they, they just kind of play the odds, and they're okay with losing a bunch.
But, if, uh, trolls had to pay the legal fees of the person they sued every time they lost,
then they would at least be pickier about who they sued.
So, that's of, like, some utility, I guess.
Um, but it certainly is not as we've been changed, but it's, uh, it could be worth doing with the right kinds of things in place.
Um, it could also, um, if it was written poorly or broadly applied, it could end up, uh, also kind of hurting worthy litigants,
where someone, like, just a lot of did actually steal your idea, and you're both practicing, and indeed, so.
Um, so, that would just have to be worded carefully, it's all the same.
Um, yeah. So, um, legislative solutions.
Um, people feel, like, Congress is gonna, I don't know.
You can feel in the blink of an eye.
Oh, and then, um, we, as you were talking about with fees, so, like, um, we could raise the maintenance fees on patents.
So, like, one of the huge problems with this offer patents is that they last for 20 years, with, like, some limited, uh, option to, you know, to extend them.
Um, uh, if you keep a patent going, like, you have to pay what's called a maintenance fee.
So, uh, we could kind of make the maintenance fee, like, astronomical, so that, um, you would have, you would have a software patent that you could use for a couple of years.
And then, whenever we decided, it was kind of, like, really stupid for you to continue to have a patent, because it's on software, and the world moves by at a fast pace.
Uh, the maintenance fees could go up, up, up, to maybe discourage the use, uh, of those.
Yes.
Um, oh, like, how many times you can renew?
Um, I don't, you, you have to have a pretty good, uh, you have to do something to get it there, but I don't know if there is a cap, but it does involve...
You have to depend your...
Yeah.
Yeah, you have to, like, there was an interaction that you have to have with the US Pat Mentored Office to, like, extend.
Um, and you have to pay, like, more fees to them.
And again, I'm sorry I don't have, like, super...
There's, I'll have some more, like, some exciting, more reading for you guys if you want.
Um, but, uh, and again, this is, uh, this is the idea that's been floated.
This one does, this is not a proposed legislation.
This is just an academic paper where someone's, like, maybe this would work.
So, I'm sorry if it doesn't have as many numbers on it.
But, um...
I know, on trademark, it's seven, seven, three years or every five years.
It's almost a re-application process, but you have to pray that you continue to use it.
Right, so there's some work and some...
Yeah.
For software, like, the initial 20 years, like, most solutions are focused on that, because that's the real problem.
The initial 20 years is pretty egregious for software.
Yeah, yeah, well, yeah.
So, it's good.
All right, so legislative.
So, the nice part we're going to talk about is potential policy changes.
So, presumably, people work for the government and, like, many of them are employed to try and make businesses go and make things work.
So, on the plus side, some of these could be relatively quick to implement.
So, policy changes at the USPTO or maybe another government agency.
Like, we would just have to convince the agency that they wanted to make a policy change.
But, most of those would likely only affect patents going forward.
So, we'd still have, like, the 20 years of everything that's current, like, right now.
So, the 40,000-year, like, all of those patents would still be around if we pursue a policy solution.
So, you know, all of these have their pluses and minuses.
Probably, what will work the best is some combination of different things.
But, okay.
So, could we meet the USPTO and force the existing statute in the helpful way?
That's the crux of the ideas behind these types of solutions.
So, require written descriptions and definiteness.
So, that means not just saying what the internet is, but showing exactly how it will be implemented.
So, getting rid of all that kind of functional claiming that, like, I have a dream about software.
No, you have that.
Definiteness is another thing that, it means, like, clearly prescribing the boundaries of the patents.
So, instead of, like, broad as possible, you would say, like, these are the only things it applies to.
And they use this for bioinformatics, because they were talking about, like, the whole part where you patent a person is bad.
And so, for bioinformatics patents, you have to clearly prescribe what you're covering and what you're not.
And you have to say what you're going to implement, so we know you're not making, like, pay babies or something.
So, anyway, I think there is some historical background on that being doable.
A lot more resources for software, like we said, the overpaid underwork thing, where, like, you know, each particular application is, like, 18 hours or something over the course of, like, two years of attention from the patent examiner.
And some of that is, like, admin stuff, like, you're so-and-so, I didn't get paid to 17, could you put it inside?
So, a lot of more resources for looking at software.
Right now, when we assume we come from, like, we assume a patent is valid until we can prove that it's not valid, but we could put the burden of proof on the patent application.
And then, the FEC, who have written, like, several 300-page reports about the problem of software patents and trolls, they're aware of it.
They also don't know what they could do, but it's possible that we could go help them and try and figure out something in this whole that they could do.
And then, I'm going to, we're very close then here, so community solutions, like, could screw all the politicians.
So, premium is a tree. What does it do? But, it's a lot of work. So, community solutions means us doing some work.
So, I work at the Open Invention North, which is a defensive patent pool, and so everyone crafts licenses and agrees to not do each other.
So, it doesn't affect, like, patents outside of the pool. It's very targeted on, like, Linux, GNU, like, other, like, free software stuff around the operating system and a couple of, like, and, oh, in the Android system and a couple of Webster.
So, we also, yeah.
That was the Open Invention network finance.
So, it's six large companies that make a lot of money over the new Linux, and they would, like, for smaller companies that share the same technology,
do not get sued and create poor legal precedent, so they opened up and said, we'll fund this. Please, craft license and try to not get sued on stuff that they're going to come after us for a year or two.
So, that's the short, yeah.
Identifying relevant prior art. This works pretty well for the railroad industry. Like, they were, the guy with no trains, as it turned out, didn't have any of the prior art for train breaks.
So, they were able to knock out a lot, invalidate a lot of the patents that were plaguing the railroad industry.
And we run a website in consular, really, a couple of other folks called the Linux Defenders, which works on gathering prior art for the opposite.
So, the DPL, this is, like, Google has been looking at this. The sticky and non-sticky. It's still in beta. They're still working on how to write this.
They've been calling it the GPL for patents. I don't know how you guys feel about that, but that's definitely here.
It's a community license you basically would say, like, using it on my patents, if I can use all your patents,
it's similar to that offensive pool, but it's a little bit more complicated. And the sticky version means, like, patents can never leave the pool.
And then the non-sticky, if, kind of, maybe it's like the LGPL for patents or something, patents can leave the pool. They can be in for a while, and then you can take them out later.
So, and, like I said, this is still in beta, but, you know, that also means, like, Google is interested in hearing from people about it.
Like, if you have ideas, you're like, oh, I know it would make that work. Like, they want to hear from you.
And then, I think, continuing to go to awareness and draw attention to the problem. One of the reasons that I think, like, getting Congress to do anything about this is because, for us, we only are, like, software patents.
But, other people hear about software patents suits, and they're, like, you know, Apple and Microsoft and Samsung all suing each other, like, crime your river. Those guys have, like, 50 houses.
I don't care if they get sued, the pay of stock of them. So, ladies, you will know that that's not the only victim of the problem with software patents.
All right. And I think, this, I have this up or not, a slideshare technique, but so free reading pleasure, and then there's a picture credit.
And then, I think, we have like two minutes for questions. I'm sorry. Okay. Here and then here.
So, everyone, I talked about software as a language. Why does it fall under traffic law and not copyright?
Right. Okay. So, copyright, for folks that are not aware, is traditionally applied to, like, music, poems, movie, like, language type things. Software for a long time.
So, like, the GPL rests on copyright. So, that's, like, the written part of the software.
So, you could just, the way that software works, I assume, let's go at least somewhere else of this, is that you could write two very different programs that accomplish the same function.
So, the patent is on the function, not the specific text that you use to achieve it.
Well, software, the function, yeah, or unability. Right.
Right. But you could still, so, like, you know, I might do a due while, and you might do a for loop, and then, like, feed it in a different order or whatever.
So, like, but we're getting the same thing to happen, even if we're not using it, like, even if you didn't use the same order of loops, or, like, maybe you're, like, oh, I like to do everything with recursion.
And I'm like, oh, that's the pain in the butt. I'm no reason it. Like, but we're able to get to the same place.
So, you could have copyright on the way that you wrote your program. Right. But you can't have copyright on the function. That would be under patent law, if you chose to get it out.
But, yeah.
You have to commercialize the use of that patent in a body, in a real product, within, say, three or five years, like, you've passed all together.
That would be a good one.
That would definitely go to the troll problem. I haven't seen that concept written yet, so I don't know why it hasn't been started. Maybe you could write a paper on it.
But, yeah. I mean, I think the thing is, then, like, it might be difficult to say, implementing, because then, you know, with 1300 shell companies, you might go to get somebody to sell, like, a single item or something.
So, it might, you might end up with, like, anything that kind of attempts to get the troll thing, like, I don't know if you caught, but they're very tricky.
So, like, to make sure that there's not, like, just a way to, like, kind of ease. It's, like, how they get standing in Texas, always using one person using the software in that district to get standing to sue in that district.
So, it's, like, it has to be, it has to be pretty ironclad. So, if we did that, we'd have to figure out a way to work. It was pretty ironclad.
I'm going to go in the back and then we're here.
Sure.
Yeah, actually, the thing where they would have to limit scope and talk about implementation, it's similar to that idea.
And that's basically saying, like, you have to show me that you know how this would be implemented, not just that you have an idea with a goal.
And, like, the deafness where you kind of prescribe the boundary. So, that's a little bit legally, but I think it's getting at the same thing of being, like, can we just ask them to not have dumb patterns.
Oh, yeah. Well, there's for a couple of different audiences. Like, there's legal language on the inside.
And then, if we were to work on, like, an advocacy piece of it, I think we would come up with something better than deafness or whatever.
So, like, and so, like, I agree, like, in order to push any kind of policy change, we would need, like, a good, normal regular person language version of, like, what can happen.
So, I mean, that's the case anytime you try to pass a law, like, it's, people don't really want to read, like, a 40 page law.
I mean, some people do, and that's awesome, I'm glad. But when we're talking to the public, like, anyone who's read EFF stuff, like, I'm sure they have a very complex, like, legalized version of what they're trying to do when they're doing lobbying.
And then, they have, like, a nice two-sentence light so that we know, like, okay, you're the good guys. Also, I'm pleased to keep doing the good stuff.
Does that, does that kind of speak to...
No, that's okay.
Sorry.
And you had your hand up here and then...
So, if there's general agreements with the patent process, big idea wise is generally good.
If I create something brand new, I should be, I have some reward for doing that, be protected from people just popping me.
And software can be broken down to just being entirely math.
Any software break it on the math.
If there are no search engines, and I invent the next tool, it's a brand new thing.
Under, kind of, the general gist of what we've been talking about, that wouldn't be patentable at all.
But it's a brand new thing.
Should I, what part of that would I be protected on if I were to patent that process?
Or should I be protected on?
So...
So, what's the type of...
Right, so, if you were, okay.
There's one side of the type of argument that says all software patents are bad things, or should not be allowed because they're mad.
On the other side of it, I just create something brand new that feels like, in the general gist of patent at large, should have some protection.
What protections actually should I have, do you think?
In what cases do you think that software patents are a good idea?
Right, so that could answer like a moral question.
And I would say, you know, some people believe that there shouldn't be any software patents whatsoever.
I'm closer to that end, but only because there's so much abuse on that side.
I definitely think that if you invented the next search engine, it depends on if you actually know how to make it.
Like, if you're just like, there ought to be a thing for looking stuff up on the web.
Like, you should be able to...
There are things that look stuff up, and I created in fact here.
Right, so then you would need to kind of describe all the steps in that to say like, okay, so like, I use a database, I use a giant server,
I have like this lovely user interface, and I have this like predictive like auto-fill thing.
So you would name all of those specific functions, and perhaps that's worth patterning.
But not just saying like, I do this thing on a computer.
So do you know what I mean?
Like, it's like having some specificity, because it's...
Well, yeah, I could specify that, but I could also say, well, you specify this, but it's all a program.
There is all math.
Therefore, I can copy you, because I am copying math.
Yeah, and that might just...
Yeah, it's supposed to be on the functionality.
So like, it wouldn't be on your code, but I know what you're saying.
I guess I don't know enough about how search engines actually work under the hood.
How much of it is math, and how much of it is a little bit of like the arrangement and execution.
But, yeah, so...
But pattern, it's not on the written stuff, it's on the function.
It's supposed to be, and then like, because of the way that software works, and it's confusing to many people,
we ended up like opening a giant door, and you can just say like, anything, comma, on a computer.
And then that's terrible, so.
Okay, and I think...
I guess this is the last copy of the day.
There was...
Okay.
All right.
There was nothing else in there, and since they're not kicking us out, but...
Oh!
This is sort of...
I don't know if the topic, but I...
Sorry, the last question is that.
Uh...
Not the name, Kim, with software, nothing, if you're going to be from...
Reset, with software, you're all out.
And there are any things that you're going to do.
You're going to spend your time trying to level down, man.
Uh...
That kind of gets to how your software is licensed, so if you're using free software,
then you are always guaranteed the right to share it out.
And so, I would say, do business with software companies that respect you,
and allow you to share with your neighbor.
A lot of times you're not buying software, you're trying to choose the software.
Yeah, that's proprietary.
As soon as you buy it.
I wanted to thank people for coming, because I know a lot of people would like to leave
in an awful mood while we're still chatting, but thank you for coming.
Thank you for coming.
You have been listening to Hacker Public Radio, where Hacker Public Radio does our...
We are a community podcast network that releases shows every weekday,
Monday through Friday.
Today's show, like all our shows, was contributed by a HBR listener by yourself.
If you ever consider recording a podcast, then visit our website to find out how easy it really is.
Hacker Public Radio was founded by the digital dog pound and the economical and computer cloud.
HBR is funded by the binary revolution at binref.com.
All binref projects are crowd-responsive by linear pages.
From shared hosting to custom private clouds, go to lunarpages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under creative comments,
attribution, share alike, feed us our license.
Thank you.
