Episode: 3909
Title: HPR3909: Permission tickets. 
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3909/hpr3909.mp3
Transcribed: 2025-10-25 07:50:24

---

This is Hacker Public Radio Episode 3909 for Thursday the 27th of July 2023.
Today's show is entitled Permission Tickets.
It is hosted by one of Spoons and is about 11 minutes long.
It carries an explicit flag.
The summary is collective delusions of elective conclusions.
Hello Hacker Public Radio, this is one of Spoons.
I've had several non-finished episodes in a directory for more than a year.
Nevertheless, I thought I might be able to stitch together a preview.
I would prefer to submit a more comprehensive episode, but I haven't for such a long time.
I think I should just contribute something to the conversation.
So, briefly, from my perspective, money is permission.
You can work very hard and get none at all because the people who are controlling it,
issuing it, issuing that currency, do not value or want to strongly discourage
whatever behaviour it was that you were expressing.
One of the main problems of money, along with many other social concepts,
is that people are using the same word to describe very different relationships
and the confusion is not resolved and is deliberately used to gain advantage
or maintain power structures in the interests of those of the powerful.
Because it is so contentious, it deserves a thorough definition and discussion,
so I won't try to do that here.
What I can discuss is an implementation and the various applications of a non-mutable ledger
that is a distributed database which once written to is not altered.
You can append to it.
In fact, I imagine you can alter the way it represented, but the state is non-mutable.
I will also attempt to be non-lazy in relation to words like cryptocurrency and cryptography.
Energy costs are rising across Europe, the cost of the customer at any rate,
and this will get back to it later.
I suppose it is part of tokenisation and the economy, the naming of the factors
which are involved in our day-to-day lives.
I suppose before you switch off, I should clarify one opinion or one observation
about cryptographic tokens and the lengths that people will go to get them
or what they are willing to gamble to hold these tokens in the hope that they might gain
some advantage over their fellows or difficult to pry the two things apart,
but very easy actually.
So your network and all of its capabilities, all of the transactional functions,
all of the pointers that you can store and the things to which you can point
and the interactions between these tokens and how they can act as functions
upon each other, all of that ordinary computational and ledger-based,
memory-based stuff will all work regardless of the market price of the token.
So it is difficult for me to say market price of the token,
but people do obtain these tokens with money.
I mean, you can also obtain them by arrangement, just the same as any other token.
Most of the tokens, certainly national currencies.
What I am trying to say is, if you want to use a token as a means of recording a transaction
where you change one currency into Bitcoin and send the Bitcoin to the other side of the world
in 10 seconds and then the person on the other side transfers exchanges
that Bitcoin back into some national currency, then what have they lost?
What's the volatility across 10 seconds? Not very much, really.
And it would literally be limited by how many transactions could transpire.
And so the point is, so long as you're only buying the tokens you need
or obtaining the tokens you need, then you're not losing anything.
You don't hold a cryptocurrency, you don't need to hold it to use the token.
You use the token for its purpose, or you buy, you exchange something,
you obtain a token, and then you use it.
You don't need to buy 10,000 tokens for half of your house, then don't do that.
If you're just trying to send somebody a message, it's going to cost you six pence.
So enough said.
Also, you shouldn't worry that if the market price of some token falls to the floor,
whether that's a penny or whatever, your network still works.
You can still do everything that you could before, except now maybe you've got access to,
well, approaching as close as it approaches to zero than closer to infinite number of tokens you have.
But it still works.
Half of the point of things like Filecoin or certain aspects of why people find cryptocurrency interesting
is that maybe you will find the price where like a fair price.
The price for energy combined with the price for people's time, combined with the fair price for maintaining equipment, all of that bundled in.
So when you're buying tokens, you're paying for what you've used, and that would be,
it would be in a better place if we knew how many resources we had available for which tasks,
because then perhaps we could not expend the planet, the other five planets, which we don't have.
An application of a ledger, there are various schemes, notably in the UK, the Bristol Pound,
there was also the Let's scheme, and I've heard of time sharing, where people recognised that they were all capable of working
and had all the things they needed to work a job if they had an employer who could give them money.
And they would do exactly the same things for the employer as they could do to each other.
So they recognised they could just do all these things for each other and use their own currency,
so long as they asked for the same prices, they just mimicked being paid,
and then sort of IOUs to each other, and there's the issue, the issue is a trust,
so you can use seashells to record how much work one person has done for another,
but someone goes to the beach and picks up some seashells, counterfeit tokens.
So rather than telephone the plumber to see if they fix the taps for the hairdresser,
so that the hairdresser can buy some groceries from the shopkeeper,
you know, you can make your own tokens and record them in this ledger,
which is maintained by thousands of people across the planet,
and you know there's only one place to get those tokens because they're a cryptographic object,
they were issued, you were all present when they were issued, something like that.
So you know that if anybody's got them from anybody else,
then they obtained them in the same way they would obtain ordinary national currency.
You can't stop people giving gifts of that currency, or you know, taking another service,
or even buying some ridiculous piece of artwork or sculpture from somebody for half of the currency,
and you can't stop people from buying your minted currency, your personal currency,
with currency of a state, so someone could buy ten Bristol pounds for ten United Kingdom,
great British pounds. It's the same as using ordinary money in an ordinary bank.
The difference is people who couldn't get a bank account,
or people who couldn't get a national currency, can now have their very own bank account,
and their very own currency.
Or of course, people on the other side of the world could agree with other variously distributed people
to provide financial backing in various other national currencies,
for people whom agree to use this token.
I'm afraid the money schema will continue to haunt us,
but I'm going to re-abstract back to a cryptographic ledger.
I will outline key derivation, and then leave it until next time.
I will mention UTXOs and scripts.
They are unspent transaction outputs and lists of instructions,
which are specific to a particular application of a cryptographic ledger.
Let's try to describe the structure.
You generate, here's a procedure, you would generate a seed phrase,
so you can choose a seed phrase from, I think, 2048 different words.
It's a word list, and you choose, say, 24 words.
They can be not any of these words, because there's a checksum function,
so I think one out of 256 of the possible immense number of possibilities are valid seed phrases,
and then feed this seed phrase into a function which will give you a root private key for a wallet, they call it.
It's a, basically, you've got a root private key, haven't you?
The artifact which exists after you've passed the seed phrase into the function,
and from that root private key are derived, all of the many other keys,
private keys and public keys, verification keys, signing keys,
and then from those keys are derived addresses.
First glance, when you're, you might think the addresses come first,
and then keys are generated from those, but no.
Start with a key, which makes sense, because you'd have a very full block chain already,
if you had a fantastic number of addresses ready to use.
You just, one might never need any of those addresses.
They're a result of a function which iterates many, many times upon a key set,
and then generates an address.
They then exist on the ledger, those addresses you can search for them,
and if they exist, you can find them, and you can query what stored at that address,
there'll be an index of UTXOs.
Addresses can also resolve to scripts.
So as a disclaimer, if it wasn't clear at the beginning,
if you recognise that someone who exchanges a bunch of money for a bunch of cryptographic tokens
is essentially holding next to nothing at all,
then your halfway to recognising that someone who holds a bunch of money
is holding next to nothing at all.
What they need is to convince somebody to exchange or to swap
for the permission tickets, which they have acquired.
Good by Hacker Public Radio.
I hope it wasn't too dull. Choose well and keep well.
You have been listening to Hacker Public Radio at HackerPublicRadio.org.
Today's show was contributed by a HPR listener like yourself.
If you ever thought of recording a podcast,
then click on our contribute link to find out how easy it leads.
Hosting for HPR has been kindly provided by an onsthost.com,
the internet archive and our sync.net.
On this advice status, today's show is released under Creative Commons
Attribution 4.0 International License.
