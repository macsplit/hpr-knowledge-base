Episode: 764
Title: HPR0764: Matt Grove of Miserware - Energy-saving computing
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0764/hpr0764.mp3
Transcribed: 2025-10-08 02:05:24

---

The Full Circle Podcast on Hacker Public Radio, this episode energy-saving computing
with Granola.
Hello World, and welcome to the Full Circle Podcast on Hacker Public Radio.
We're doing our bit to save the planet whilst saving ourselves some money.
It's Granola from Miserware.
The Full Circle Podcast is the companion to Full Circle magazine, the independent magazine
for the Ubuntu community.
Find us at fullcirclemagazine.org forward slash podcast.
Energy-saving computing.
It's a neat concept, saving you money by saving you electricity.
That's money off your electricity bill while you do your bit to save the planet.
Granola is software that improves the energy efficiency of your PC or laptop or your
server farm.
A few weeks ago I spoke to Matt Grove from Miserware who explained how it works.
And our next guest is Mr. Matt Grove from Miserware, Matt, how you doing?
I'm doing okay, how are you?
Very good.
And I suppose the first thing to start off with is who or what is Miserware and where does
Granola fit into the software line?
Sure.
Miserware is a green IT software company.
It's a startup, so it was founded in 2007.
And it's a spin out from Virginia Tech in Virginia in America.
And there was a professor there who has been doing research into high performance computing
and energy-saving computing for about 10 years.
And he started a company to try and turn some of his research into software that people
can actually use on their computers.
And the company that he founded is Miserware.
And the main bit of software that we are showing off at the moment is Granola, which is a
little program for PCs, laptops or servers that will try and save you energy without you
having to turn your machine off or change the way that you use computers.
This is becoming a concern for a lot of people, but the PC industry is now selling hundreds
of millions of machines a year.
The CO2 bill seems to be going up whether or not you believe in the hard science of climate
change.
I'm slightly skeptical.
Maybe we've caught one of those cyclical temperature raises in Earth's atmosphere,
but one way or the other, six billion of us on the planet are certainly not going to
help it.
And we may well accelerate the damage that we could do, which is where does Granola come
into helping us reduce the damage?
Well, apart from the climate change argument, there are two things that you can say as facts.
So the cost of electricity is going up.
So that is happening around the world.
And as you said, there are more computers.
So more computers consuming more electricity means that it's costing people a lot more money.
So that's one thing to consider alongside the green aspect.
At the end of the day, if you can reduce the amount of electricity that a computer is
using, then you are going to cut down your energy bill just for powering the computer.
But you also will cut down your energy bill for having to call your computer, having to
call the facilities with all of your computers in them if they are a data center.
So the electrical bill, if you stop thinking about just your computer that's in your desk
and blow that up into the data centers that some like Google has, is astronomical.
There's a huge amount of electricity.
And when people build their data centers these days, they have to put them next to power
stations to be able to supply enough electricity.
So we're not talking about a tiny little bits of energy or just plugging your one computer
into the National Grid.
We're talking about giant power stations, powering millions of computers around the world.
So there's a huge amount of electricity going into running the internet and running all
of the machines that are plugged into it.
So this is not the trivial amount of electricity.
And it takes a huge amount of energy to produce all of that electricity.
And it's 24.7.
We switched them on and so many of them never get turned off or powered down.
It's just constant and it's...
Sure.
I think in the more geeky world people tend to leave their desktop computers on, whereas
less geeky people tend to turn them off.
Turning your computer off is the best way to save electricity.
At the same time, there are plenty of people that want to have their computers doing things
when they're not sitting at them.
And their data center with a bunch of web servers is a good example of that.
No one's going to really want to turn their web server off in case it needs to serve a
web page.
So there are plenty of machines out there that we don't really have the choice.
So they have to stay on.
And the clever bit about what Miserware does is we make software that means you don't
have to turn your computer off to save electricity.
And that's the big change.
There are people that have tried to do things like this before, but what normally happens
is you compromise some of the performance of the machine in order to provide that energy
saving.
And what we do is be much clever about how we save you the energy, so that we don't
impact the performance of the machine, but we try and save you some electricity.
And that's the real big difference.
And that's where the 10 years of research from Virginia Tech comes into play.
This isn't something that somebody came up with overnight.
This took a long time to figure this kind of stuff out.
I was going to say that this isn't a new idea of trying to reduce the power consumption,
but most of the solutions that have been out and around for the last 10 years or so.
Most of the data center people just throw them out because of the impact on the machines
and the performance.
What's the secret?
Sure.
The big difference between what we do and what other people are doing.
If you look at only people who are trying to save you energy while the machine is on,
so let's forget about telling computers off for a minute.
The big difference between Miserware and what other people are doing is the way that
we choose how much power to use.
So what our software is doing in this version is changing the frequency of your CPU, which
I'm sure everybody listening to this podcast knows about.
Your CPU can change frequency and the modern CPU when it changes frequency can reduce the
amount of electricity that it's consuming.
So the lower the frequency, the lower the power consumption, basically.
And the other solutions, such as the on-demand driver, have a different way of choosing when
to go down frequency.
So what we have is a predictive model where we try and predict the future to know how
much electricity and what frequency to set the CPU up to give you the performance that
you're going to need in the future.
That is the intellectual property.
That's the very clever bit.
The other solutions that people have out there, like some of the open source ones are threshold
based.
So here is they sit there at a certain frequency and when a machine works hard for a certain
amount of time and goes over a threshold, it will increase the frequency and when it's
idle for a certain amount of time, it will reduce the frequency.
The lag between when you're stuck at your low frequency and doing work before the threshold
is reached is your lost productivity.
That period while we're waiting to go up a frequency, you're losing the performance
of your computer.
With a predictive one, we've already jumped into the higher frequency by magically knowing
that we need to get there.
Now of course it isn't magic, but that's the secret bit that differentiates us from
the other people.
So to run that predictive algorithm, you must be collecting some kind of trend information
over time in order to make your predictions.
Yes, so the idea is you look at the utilization of the machine and you feed that into your
predictor.
Now the predictor isn't magic, although we'd like it to be perfect, it isn't.
So sometimes it makes mistakes and what it does when it makes a mistake is it keeps track
of when it gets things wrong and when it gets things right and this allows us to bound
the performance loss.
So we can do something like say, whilst you're trying to save energy, you must never lose
more than 5% of the performance of this machine and what will happen is if it starts guessing
wrong and it gets to the 5% threshold, it will stop bringing the machine to the low
power state until it can guarantee that it's definitely not going to lose you there.
So our software is the only one that you can get where you can say, this is what an acceptable
performance loss is.
And the reason for that is none of the others have a concept of what performance they are
losing.
So they couldn't guarantee you anything apart from full power because they have no idea
what effect they're having because they don't record it.
Whereas it's core to how our predictor works that it looks at your utilization and keeps
track of what it's doing.
So we've just released a new version of Granola.
Yeah, last week we released version 3 and Granola is available for Debian 5, Debian Unstable
Fedora 8, 9, 10, 11, 12, Red Hat Enterprise 4 or 5, Sles 10 and Ubuntu 7 all the way through
10.
So you can download, they unload that for any of those long as distributions and we do
all of that packaging ourselves.
It's also available for Windows but I don't know how many people are listening to this
really go.
So we've got lots of lots of people in mixed environments and a few Mac and Tosh people
as well.
So the nice thing is as well as all of those Linux versions that I said you can also run
this on Windows 7, Windows Vista on Windows XP and that's both the server versions of
the operating system and the desktop ones as well.
So we've pretty much got everybody covered, not yet got the App Mac people done but it
is on the list.
There are plenty of people who have been asking for it so I imagine you'll see that in
the future.
Installation on my test box was painless, in fact I didn't even realize it had finished
it.
It just put everything in that I needed.
We do native packaging for all of the Linux distributions so we don't do something
like give you a tar and then hope that you can instill it on your different, you know,
your different district.
So if you're installing it on Fedora you have a native RPM ready for Fedora and the same
for Ubuntu.
So we also provide like a lot of people do, we have a repository that you can add so you
can just use normal synaptic tools to download things or get this, that's what you want
to do.
So the installation is very painless.
We even write a shell script, we'll add the repository to your machine if you don't want
to do that.
So it's very simple.
And to install it on Windows you just download the executable and double click on the installer
and it's very painless on both of them.
We spent a lot of time and effort trying to package it natively, trying to build software
for Linux that installs perfectly on whatever it is, 15 different distributions.
532 bit and 64 bit, it's not for the faint hearted, but it's something that we're quite
proud of that we can do that for you.
I was pleasantly surprised to see the number of different package types you had up there.
Once you've got it installed and running, what's it like in terms of memory usage and
resources that it needs to do its job?
There are two components to the Linux granola.
You have the little demon that runs in the background all the time, he's doing the
actual power management of your machine, so he's basically changing the frequency of
your processor and keeping track of whether recording what it's been doing in a log file
on that kind of just.
And there's a tiny little demon that was written in CNC++ to be as small as we could possibly
get it so that you would never see it.
So it's basically transparent and stays out of the way.
And certainly on running it now on my laptop, if I type top, I can't see granola on the
first page that I'll do it for you.
So Skype is right at the top and then Chrome and some other bits and bobs and more terminal,
but there is no, I can't see granola there.
The second bit of the software is the GUI, which is a Python program that we've written
that actually has a BSD license, so you can change it and fiddle with it if you show
which is completely open source of the GUI part.
All that does is take the log files that are coming from the demon and display them for
you in such a way that they make sense.
So they'll tell you how much lectures that you've been saving, what that translates
to in pounds, how much CO2 that is, that kind of stuff.
And the big change that we recently made to the software is if you would like it to, it
can upload those numbers to the granola website.
And if you use the same account for multiple machines, it will put all of your savings on
one web page for you and do all of the adding up.
So if you have a bunch of computers, like a lot of people do these days, you can see all
of your savings on one page.
And that's something that we are adding more features to every day now.
That's really the, it's useful, but it's also a fun tool for us to use the ads, the
reason for us what people ask for.
Everyone wants to know the details about what their computers are doing.
And one of the, turns out that one of the big differences between granola and the other
power saving tools is they're reporting to be able to actually see what's going on.
And people really like that.
Different people like it for different reasons, but it's been a very positive thing for
us to add it, add to the software, and only see us adding more and more of that kind
of stuff to it.
So if you're in a corporate environment and you have a thousand computers, you don't
really want to go around and have somebody add them all up, although we do have someone
that has an intern that does that with a piece of paper and calculations.
So you don't have to do that anymore, you can now look onto the website and see what all
of your savings are.
So that's the big difference.
And you have to be surprised how addictive it is sitting there watching your numbers
take up.
And now that you've got that capability of tracking back, how much and what level of data
you're collecting back, because I imagine that that is very useful for refining your predictive
algorithms, performance measures, but to what level are you interested in what people
use their machines for?
Although we don't automatically report it back, we're very interested in all of the different
work loads that people run.
So the interesting thing for us is everyone's got different things that they do with their
computer.
And even when your computer's running flat out, there are still ways for us to save energy
with our algorithm.
So we are very interested to hear from people that have strange uses for their computers
or they have a large number of computers doing something very specific to run with
an overlap and tell us what their savings are or tell us to have a look for them.
If there's anything that we can do to tune the algorithm further for specific people,
we are very interested in doing that.
So the workload for PC, for a normal desktop PC that someone runs at home, is very diverse.
The start as the operating system can be completely different.
You've got Ubuntu, I don't know, your brother might have Windows 7, that's very different.
And you may do completely different things with the computer.
So the sky is limit really for profiling the different workloads.
And although we run dozens of them in the office, there's nothing quite like being
able to talk to people because there are thousands of people using Grinola now and every single
one of them is unique and does something slightly different with their computer.
So that it's really a team effort to try and dial in the software.
Not only is it a team effort to try and improve the software, the more people that run it,
we were saying earlier about there being thousands of computers.
If everybody runs Grinola on their computer, then we're going to drastically reduce the
amount of electricity that is used around the whole world for computers.
Really, don't think about it just as you're installing on your one machine and saving
yourself a few pounds a year.
Imagine how many trees equivalent you are planting as a team effort with everybody that's
installing it.
So right now, my website is telling me that the community together has currently done
the equivalent of planting 76,544 trees to offset the CO2 that their computers would have
generated if they hadn't been running Grinola.
So the numbers get quite big quite quickly.
The compelling thing is the more people do it, the bigger the number gets, spread the
word.
Don't think of just yourself using it on your computer.
Tell other people about this.
So how large is that community at the moment?
The 76,000 trees equates to more than 80,000 users, I can't look it up at the moment, but
there's more than 80,000 people using it at the moment.
How's that distributed across the planet?
I know that you're pretty much all over the place now.
It was very English to start with, mostly thanks to Alan Pope telling everybody about
it.
And then we spread across to America, where obviously we are based.
And since we opened out from beta and allowed anyone to install it, we have a lot of people
from all over the world.
And we get lots of requests for translations.
And the GUI has, when it tells you how much money you're saving, it has the, you know,
originally it had a dollar sign.
And then we had all the English people rock up.
So we added the balance.
And now due to popular demand and a lot of shouting at us, we've added the Euro symbol.
So then we've got requests for pretty much every currency in every language that there
is now.
So our graphic designer is diligently churning out lots of new icons.
So no, it's great.
It's nice to see how it's spread about the place.
It's also interesting having people write about your software and languages that you can't
read and wondering what exactly they're saying about you.
It's all been very positive.
And we're really happy with the reception that it's had globally now.
If you look at, I don't know, say you look at a machine profile, can you look at its
power consumption and say, oh, yes, that's an exchange server.
That's somebody sitting on YouTube when they should be working.
That's somebody who's just sitting there with open office.
If we do the profiling, we can figure out what machines are up to.
What we normally do with the workload that's like an interesting workload is we will
run it ourselves at Moiserware on one of our test computers and we hook them up to power
meters.
And these aren't like 10 pound power meters.
These are custom built thousands of pounds worth of kit that will do very accurate, very
fine grain reporting on what the computer is up to.
And then we do a profile of the utilization and the power consumption and what the software
is doing.
And we have in order to get the benchmarking to work, we have to make a repeatable workload
that you can do virtually the same thing with every single time, which is actually very
difficult.
And it makes doing the benchmarking of this kind of software very tricky.
There's a lot of things that take a lot of time to set up to try and get accurate readings.
But we basically will try and copy your workload and then try and improve things if something
we're just going on or at least understand, try and understand what is happening.
But we have everything set up to do that at Moiserware.
There are documents that describe how to do your own benchmarking, but it's not for
the faint hearted.
It's not quite just stick a power meter in the wall and have a look at what's going on.
It is quite a serious process.
Yes, so if you're going to do any kind of proper benchmarking worth having, you've got
to be very scientific and very rigorous that much I know.
So we wrote a PDF to try and help you all.
So if you go to the Granola website, there is actually, we did our best to put together
a document to try and point everyone in the right direction or at least give you the
benefit of our experience so that you don't have to fight with it quite as much as we
have had to over the years.
OK.
And I guess one of the things that everybody is going to ask about is licensing because
I've installed the free and gratis version, which is great.
And what else is Granola doing to make some money to keep doing the research and keep
developing?
There is a software that Miserware makes.
We have a thing called ServeMiserES, which is basically a headless version of Granola
that's set up for running across large numbers of computers.
It's designed to be scalable to the thousands and work within your data center.
So that's not free software.
That's one of our solid products.
The other thing that we're doing now is adding more things to Granola.
Now that we've finally got Granola finished and out the door, the idea is to try and add
more things that are useful that people keep asking for for the enterprise market.
So not just the kind of things that we all want Granola to do at home, but the kind of
things that somebody with a thousand desktop computers would like to do.
So the demon and the features that you have at the moment are completely free for you
guys to use.
They're reporting stuff to the website or track up to five computers completely for free.
And then after that, when you start getting into the large numbers of machines, we would
talk to you about a site license for the software so that you could run it on all of your
computers and get your support and a typical sort of sales model where the support is
really the thing that you're paying for.
And do you want to just give out the website address, which I think is really clever little
address actually.
So the software is called Granola and the domain name is q-r-a-n-o-dot-l-a.
So it is the word Granola, but with a dot between the O and the L. And the layoffs sold all
of their domain names to the city of L.A. And that's where all those domain names are.
The easiest way to find a Miserware is to type Miserware into Google and you'll be presented
with a whole page for lots of us.
And once I'd heard about Granola, I didn't even have to think about what the address is.
Granola.l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-dot-l-a-n-o-
So, no excuses, but to tune your machines to use less electricity. And if you want to give Granola a try, the web address is in the show notes.
The full-circle podcast will be back on Hacker Public Radio very soon. I'm Robin Kathleen, goodbye for now.
Thank you very much.
Thank you.
