Episode: 1494
Title: HPR1494: The Next Gen is You (2/2)
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1494/hpr1494.mp3
Transcribed: 2025-10-18 04:13:22

---

...
Hi everyone, this is Clath 2 and this is part 2 of my Hacker Public Radio series on Steam
OS.
It's probably the last episode of it.
It's a two part series.
So, the last time we picked out the computer parts and actually if you want really to
see my stuff that I picked out, I should have probably said this in the previous episode.
You can go to straightedgelinux.com, go to how to section, no not how to, go to the
Opinions section, and go to the MyBox link.
And here you will see all the specs of the build that I did for myself, which it's not
an exclusively, it's not like it doesn't live its life as a steam machine, that's not
all it does.
I built it with that in mind, so I would say that this was a fairly low mid-range gaming
computer.
It's definitely not the nicest box you could possibly build.
But for the money and for what I need it for, it works quite nicely and everything,
every single part on it was pretty much plug and play, so that was kind of nice.
No compatibility issues, so if you just need something like a little bit of a head start
or an earning example, stop by that place.
So putting the computer together is shockingly easy, I had a friend of mine helped me build
my computer because she was curious about building computers, so I actually, when I say help
me build the computer, I mean she built the entire computer herself, I did not touch
anything.
And about midway through, she was like wow, this is it, like this is all you do, it's
like a kit.
And it is, it's honestly, it's like a very, very basic model kit.
It's click things together, screw some stuff down, that's it.
So the case and the motherboard will probably come, either the case or the motherboard possibly
both, will probably come with assembly directions.
So as long as you can read and follow instructions, really it's not that hard.
But the idea is that you place the motherboard in the case, you put the CPU into the CPU
socket very, very, very carefully, kind of lock it down, put the heat sink in the fan
on top of the CPU, you pop in the RAM, you start plugging all the different things into
the motherboard, like the power supply, which I guess you should probably put in there
too.
And the fans and the heart and stuff like that, and then you put the hard drives in, plug
those into the motherboard, you know, obviously everything gets plugged into the motherboard.
And the hard drives need obviously the data cable and the power cable to them, you pop
in your PCI cards, like your graphics card, your wireless card, whatever else you got.
Possibly you may need to put power to the graphics card.
I used to have a card at my old job where, you know, kind of doing really big multimedia
stuff all the time.
That actually required more power.
It was like, it plugged into the PCI, but then it also required a power cable into the
back of it from the motherboard, or from the power supply rather.
Once all that's done, you close up the case, plug it in, turn it on, and you should start
seeing computer-y things happening.
And believe me, the amount of satisfaction that is involved is just palpable, you know,
after you sit down and you go through all the specs, figure out what you're going to
buy and save up all your money for it, and this is what you're going to get.
Get it all in the mail or whatever, and you sit down, and you put it all together, and
you sweat a little bit, and you're worried that your screen things up, and you don't
know if it's going to work.
And then you turn it on, and it's just, it lights up, and everything's cool.
It's a great experience.
Before you turn it on, I usually go ahead and burn a, not burn, but copy a Linux distro
to a thumb drive, and then boot to the thumb drive, just to make sure everything's being
detected properly.
So that's, it's a great experience, and everyone should, every geek should do this at
least once, honestly.
I didn't, I wouldn't have said that a long time ago, but after having done computer
builds now for quite a few builds, I mean for work, and for fun, and for friends, it's
a great feeling, so go do that if you haven't.
It's really cool.
It honestly helps you understand how computers work.
Like when you put them together, you really start to find, everything comes together, you
know?
Like all of those things that people talk about in kernel configurations, and about, you
know, when they're troubleshooting, all that stuff starts to make so much more sense.
Even though you, you knew that there was a hard drive in there, but why, you know, how
does one get SDA, and the other one gets SDB, and so on?
And then you see it, and you're like, oh, this is plugged into SATA1, and this is plugged
into SATA2, I guess, I guess this is the one that's going to grab SDA first, probably,
and sure enough, it does, you know, just little things like that.
It makes, it kind of puts hardware to all the theory.
Okay, enough of me espousing the virtues of building your own computer, but it is worth
doing.
So, the next thing after that, we'll be putting the software on the computer.
Now, there's a lot of different ways to do this, well, I should say there are three.
One is the steam slash valve approved method, which is downloading this little bootloader
of theirs, putting that on a thumb drive, booting your computer off of the thumb drive.
What that does is kick in an instance of clonezilla, and it pulls the image, the entire
image of the OS from valve servers, and puts it onto your hard drive.
That's their approved method, I believe they said that that took one terabyte drive.
I don't have a terabyte drive, so I didn't do this method.
The other approved method, or the other, well, yeah, it's approved by them, it's on their
site.
The other method is to just do, it's essentially just a devian install.
So, if you've installed Linux before, it's going to be trivial.
If you've not installed Linux before, as long as you can follow instructions, you should
be okay, but you should still be careful because you're installing stuff, and it will
erase data off of your hard drive, so do that intelligently.
But I'm not going to step through the install, because it really is basically just a Linux
install, and it's pretty friendly, to be honest.
But you do want to make sure that you have, I mean, they recommend 500 gigabyte drive.
You need to make sure that you've got enough for everything to sort of work well for you.
And remember that modern games are big, they're very big.
I mean, if we're talking about the AAA titles, they're not small downloads, they are things
that you want to have some hard drive space for.
And unlike a console, or like a traditional, you know, what we would call a traditional
console, the data isn't sitting on a blue ray waiting to be loaded into memory, once
you get to that waypoint or whatever.
This is all on the hard drive, this is everything that's getting installed onto the hard drive.
And you know, back when PS3s were selling with 40 and 80 gigabyte hard drives, that was
people used to get angry when a game would install 5 or 10 gigs of data onto their console
hard drive.
Well, you're installing the entire game to your drive, so you want space, that's the point.
Probably should have pointed that out in the hardware episode, huh?
Oh well.
So yeah, you want to make sure that you've got a hard drive that can store all of this stuff
in order to be happy with your system.
Other than that, the Steam install is pretty simple.
It takes you, when you reboot, it takes you into the default Steam interface.
So it's really, it kind of, it completes that console experience, or it meets the console
experience quite early, you know, you boot, and it boots not to like a desktop or anything
like that.
It goes straight into, you know, this is your Steam machine, if you want a desktop, you
have to enable that in some options somewhere.
So it's very much geared towards, hey, you've just built yourself a console, it's really
not all about like, you know, let's sit down and do some desktop work here, and then we'll
get around to doing some gaming, it's a gaming machine, first and foremost.
So for real life, for me, this desktop that I built is not just a gaming machine.
So I, I installed the normal Linux distribution, and the ones that I would suggest today lately
are like elementary OS, which is basically based on Ubuntu, so there's a lot of sort of
guaranteed inbuilt compatibility between stuff that Steam is putting out, and stuff that,
you know, something like elementary OS would do, or Mint, Mint again, based on Ubuntu,
so it's going to be, you know, you shouldn't have any compatibility issues, or if you wanted
to do Ubuntu, you could do that, and then you'd have, you know, a very similar environment
as what the Steam OS is kind of geared towards.
So if you do that, then installing Steam is fairly trivial, you simply install Steam
the application onto your desktop, or, you know, onto your machine, and it becomes an
application that you can launch.
It has a full, what do they call it, big screen mode or something like that, which is sort
of optimized for, you know, being on a big screen.
But it is, it's very much, and this is kind of where I segue into the whole console versus
desktop kind of paradigm, this is, this is an application on a desktop, so you have
a keyboard and a mouse available, and the thing about Steam OS and the thing about getting
the gaming companies to release things with Linux compatibility, but geared toward a console
experience is that these games that are being released now are going to be provided with
console, with a gamepad support built in, which is not normal, right?
Usually PC games are released really more with the expectation that you're playing with
a mouse and WASD, and that's kind of what they default configuration is frequently that.
So Steam OS is trying to shift that paradigm to, you know, away from the keyboard and
mouse, and towards a console on a custom built PC, again, this is kind of why it's an exciting
thing.
Right now, only the games that are being essentially, you know, released for Steam OS are going to
just come ready made for gamepad support.
Other games, you're not going to find that to be the case.
So I'm, like I say, not really a hugely serious gamer, and while I have played a couple
of big AAA titles on this thing, mostly I just kind of mess around with, you know, some
of those little games that I find on humble bundle or whatever it's called, and one, like,
Kickstarter game called Legends of Asterious, I think.
Yeah, Asterious.
And those were, again, those were all PC games.
I mean, they were released for, or at least the way that I downloaded them, you know, when
they said, okay, we're going to release them for Linux, it was, we're going to release
them for Linux so that you are sitting in front of Linux with a keyboard and a mouse.
No one thought, okay, we're going to release this for Steam OS, i.e., we're going to release
it for game, assuming you're using a gamepad.
So you will find that when you start up a game, like Shadow Grounds or Survivor by Frost
or Rochard, Rochard or Braid or all of these other games trying torch light, all these games,
they don't come with either great gamepad support or any gamepad support built in.
What you need to do in that case is get some kind of application to sit between your gamepad
and the game and translate your gamepad input into keyboard and mouse input.
The old de facto for this used to be an application called QJoyStick or QJoyPad, I don't
remember which one, but it's still around, the code is online, but it hasn't been updated
in a long time. I think I tried to compile it and it failed, and before I could sit there
and start troubleshooting, I found out about something else called anti-micro, A-N-T-I-M-I-C-R-O.
This is a great little application that very, very accurately and very, very easily.
You fire it up and you can configure all of your gamepad controls to whatever you want.
You know, I mean, just all you do is you move the little analog stick and it detects it on
anti-micro, and then you tell it, okay, this is what I want that to mean in the game.
I'll give you a little example of the keyboard controls in left for dead too, this little
little game on Steam that you can get for Linux. So, W of course is moving forward, S is moving
backwards, A-N-D or left and right. Spacebar is jump and let's just go with like the left mouse button
is firing your main weapon. Let's just take those as our examples. Now, if you plug in your
game controller and try to play left for dead out of the box, at least currently, nothing really
happens. I mean, once you get a Steam controller, I don't know if they'll have drivers that will kick
in and intercept that stuff or not, but if you're just doing this on a Linux distribution with Steam
installed, you're not going to find that this is controlling your character the way that you would
want it to control. And sometimes, I've also found on other games that it does pick up parts
of the controller, but then other things do not work. So, like, you can move your character back
and forth, but you'll find that maybe the camera won't move around with your controller, little
things like that. So, what you do is you fire up this anti-micro application and you create a new
profile for it or a schema, really, I guess is what I would call it, and you maybe would call the
left for dead schema. And then you click the, you know, you click a button on your controller and
you can see what button that corresponds to in the anti-micro interface. So, maybe it's called button,
button 1, 2, 3, 4. So, let's say it's button 2 on the controller. So, see that on the anti-micro,
you see that on the controller, you kind of get the idea, okay, this is definitely button 2. That's
a signal it's sending to the computer. So, what I need to do is tell anti-micro to intercept that
signal and replace it with, for instance, a left mouse button click. Now, if you press 2 in game,
you will be firing your main weapon. Now, if you don't want that, maybe that's not convenient for
you. Maybe you'd rather use one of the shoulder buttons or the bumper buttons or whatever they
call them, the things on the back of the controller. If you want to use those as your trigger, so you
could map that to your trigger instead. So, you can do that with everything including the analog
sticks, the D pad, the select, the start, all the buttons on the controller. You can map with
anti-micro. Try that out. It makes the game play very, very fluid. It just works perfectly.
Now, that kind of overwhelmed me and I found myself spending way too much time on the configuration
of things and not, you know, as usual. I'm sitting there setting everything up to play a game,
and then when I start playing the game, I get bored and go back to doing geekier things.
But the way that I figured out to try to get myself to play some of these games is to sit down
with my game pad thing and the anti-micro and figure out which button is which. And then go,
I went and looked at a lot of the game's default settings and a lot of them, you know, they have
WASD for up, left, down, right. A lot of them seem to use E and C and R and Q, you know, the keys
predictably near the sort of WASD sequence. So, you know, you can kind of come up with some
sensible defaults for yourself on the game pad and make that your typical your game pad configuration.
And then when you go into a game, if you're playing and you think, oh, I don't really want to jump
with, you know, this one button, I want the jump to beat this other button, then go into that
game setting and just switch things around so that it matches your input on the game pad.
That's kind of the happy medium that I found. If you let yourself get too precise about all that
stuff that gets really dangerous and you start spending hours just configuring your game pad,
you're just like, I was supposed to be playing the game right now. Instead, I've got like the
best configuration for a game pad in the world, but haven't gotten any game playing actually done.
So yeah, you kind of have to develop your own game pad default schema and then just change
things in the game on the fly as needed. That's my advice. Unless you just want to spend all day
configuring your game pad, which believe me is a lot of fun. So that's anti-micro. Other than that,
I mean, everything just kind of works really, really smoothly. You start up steam or you're in SteamOS
and you can download your games or you can activate them if they're humble bundle.
Humble bundles a bit weird because some of them, I mean, or many of them were released for Linux,
but not all of them were released for Linux through Steam. So luckily within Steam, you can add
your humble bundle games so that they appear in Steam. Steam is simply launching them externally
out Steam. It's just like, hey, Steam, be aware of this launcher, which exists over here in
FlashUSR, FlashLocalS, FlashGames, FlashTrying, and when I click Play, then make Trine Launch.
It's a workaround, but it works well. Now, if you're doing SteamOS, you should have really no issue
with most of the games that you find. If you're doing your own distribution plus Steam the application,
or if you're doing SteamOS with some of the humble bundle stuff that was not packaged for Steam on,
you know, for Linux through Steam, then you may have some extra configuration to do.
This is kind of, I think of it as sort of the rift between where SteamOS is going to be,
which is like this pre-packaged, everything is going to be working because they're controlling the OS
plus the Steam environment, and they're telling the developers, here's the exact standard,
you know, base that you can develop for. It's going to be very, it is very nice already. I have
noticed in some of the humble bundle games, and I'm not going to mention names because it seems
crass to criticize gaming companies that are supporting, you know, that are releasing for Linux,
and then to criticize them by name, you know, and say that, oh, your support for Linux was done
incorrectly. But frankly, that is what happens sometimes, and I've realized that a lot of the
rhetoric that we got from gaming companies about, oh, Linux is too hard to develop for,
it's in moving target, it's this, it's that, it's not standardized, whatever, all that really
meant, like the translation that we can take from that is, quote, we don't know how to do it
end quote. That's all they were really saying was, we don't know how to do this right, so,
I mean, really, the humble bundle games that either were created with, you know, for Linux from
the beginning, like World of Goo or something, by what 2D Boy, brilliant, brilliant Linux support.
I mean, it just, it just keeps running on any Linux distribution that I put it on to, it was
done very well. The games that were ported by Iqlis, brilliant Linux support. I mean, I've seen Iqlis
talk at a conference. The guy is brilliant, he is clearly brilliant, he knows what he's doing,
his Linux ports are, you know, they just, they run again on, on, on any distribution for the last
support, it doesn't go away, it just, it just, it works. And then there are other games which,
I believe, were ported to Linux hastily, even as just kind of an average Joe Linux packageer,
I can totally see the things that they've been doing wrong. And luckily, I can go in and fix
a lot of the problems, but it's, it's not pretty, you know, and you think, well, that's why,
that's why you think this is too hard, because you're not doing it right. You're linking to these
libraries that aren't going to be there the next release. And, and there's a way not to do it that
way, but you're not doing it that way. And so to you, yes, this is, this is hard and impossible
to maintain. So someone who knows what they're doing, on the other hand, it's very easy and
doesn't really take any maintenance, it just continues to work. So be aware of that. Some of the
independent games that were done by people who, or, I mean, any game, I mean, doesn't have to be
independent, but that's what the experience that I've had, independent games that were done
by people who didn't really know what they were doing for, you know, packaging up for Linux,
may take a little bit of tweaking. And that's okay. You can do that. And if you're in SteamOS,
you can do that from the desktop, but you have to enable desktop from the settings in order to
be able to sort of get behind the scenes and figure out what's going on. I do believe that's
all I've got for you. Again, SteamOS, really, really exciting is bringing all kinds of different
gaming into your Linux computer. You know, people are not going to have to have that obligatory OS
on their computer at this point. They're going to be able to have a free OS with Steam and then
spend all their money on the games, which are non-free and it's great. And you'll enjoy it. It really
is cool. It's just funny, I think retrospectively. You know, we all kind of, as Linux users,
we were all sitting around thinking, saying, out loud to each other, you know, it's ridiculous,
gaming company should be releasing for us. And the gaming companies were saying, oh, it's not,
you know, Linux isn't up to snuff. It doesn't have the same performance. And then we're sitting
over here and moving studios, like doing all kinds of 3D stuff and animation. And we're like,
you sure we don't have the performance that we need on Linux because it really feels like we do.
And then the gaming companies were saying, well, yeah, but it's too hard to develop for Linux because
it's just this moving target and it's got these libraries that always change while we're blocked.
And again, you know, I mean, it's just, we all knew that it was untrue. We knew that it was a bunch
of excuses. And now that Valve is behind it, suddenly there are all these Linux ports. All these
Linux releases are coming out. And it's just fantastic. And seeing some of the ones that were done
poorly is kind of funny too because you just think, yep, that's why you thought you couldn't do
it because you have been doing it wrong this whole time. Maybe if you just asked for a little bit
of help, it would have, it would have been something. Maybe if you'd hired someone, like Ikea,
to port it, you know, the right way that would have worked out for you. No matter. SteamOS,
this, now you can get a cheap gamepad. A really nice computer built exactly to the specifications
of your, of your very whim and, and play games on Linux with fantastic performance. And I think
you'll really enjoy it. So give it a shot. Try it out. I think we're in for a very, very good ride.
You have been listening to Hacker Public Radio, where Hacker Public Radio does our. We are a
community podcast network that releases shows every weekday Monday through Friday. Today's show,
like all our shows, was contributed by a HBR listener like yourself. If you ever consider
recording a podcast, then visit our website to find out how easy it really is. Hacker Public Radio
was founded by the Digital Dark Pound and the Emponominical Computer Club. HBR is funded by
the Binary Revolution at binref.com. All binref projects are crowd- Exponsored by LUNA pages.
From shared hosting to custom private clouds, go to LUNA pages.com for all your hosting needs.
Unless otherwise stasis, today's show is released under a creative commons,
attribution, share a like, lead us our license.
