Episode: 2115
Title: HPR2115: Apt Spelunking 3: nodm, cmus, and parecord
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr2115/hpr2115.mp3
Transcribed: 2025-10-18 14:31:24

---

This is HPR Episode 2115 entitled Up to Pelunkin Free, Nodham, Seema, and Parcord.
It is hosted by Windigo and is about 13 minutes long.
The summer is, Windigo wades through the Deviant Repositories and brings attention to some
of the good stuff.
This episode of HPR is brought to you by an Honesthost.com.
Get 15% discount on all shared hosting with the offer code HPR15, that's HPR15.
Better web hosting that's Honest and Fair at An Honesthost.com.
Hello, this is Windigo and welcome to another episode of HPR15.
This is the third episode in the series, so if you've missed the first episode, then
you also probably missed the second episode.
They were fantastic, I assure you, and no need to go back and watch them.
This one is just plenty.
This series is about finding uncommon packages that are buried in the Deviant Repositories,
Deviant being my preferred Linux distribution.
It could very well be done for the other distributions, other packaging formats and repositories,
but no arch Fedora Ubuntu or OpenSucy users are smart and or handsome enough to contribute
an episode apparently.
We are only going to see the preferred Deviant approach to all of these packages.
One of the other distributions must have anything good in the repository because nobody
has ever done a companion episode.
So anyhow, in no particular order, here are three random packages I've discovered and
use in my computing.
The first package is called NoDM, and NoDM is a very small, very, very specific utility
that starts an accession automatically when a computer is turned on.
On Deviant, you configure NoDM with the configuration file located at slash Etsy, slash default, slash
NoDM.
You can specify whether or not NoDM starts or which user it's run as and which accession
you want it to run.
And if you've never set up a really barebone window manager distribution from scratch, you
might not really understand the point of this utility.
When you set up your own desktop environment, you kind of have to bootstrap everything
yourself.
If you just install a minimal Debian or Ubuntu distribution or anything really arched,
I'm pretty sure arched starts out this way as well.
You just get dropped at a bash prompt on the console, which is, you know, it's a working
system, but not as graphical as most people are looking for.
So as long as you have an X server installed, X server being the graphical interface, that's
what actually displays windows and it lets you use your mouse a little bit with the graphical
user interface, you have to start that by typing start X or X in it.
And it's just a little bit of a hassle if you have to go through that every single time
you turn on your computer.
So NoDM or display managers in general, NoDM isn't the only one.
Kind of kick off that process.
When you are presented with a login screen in Linux, it's usually a display manager.
This display manager is a pretty basic one that comes with the X server.
Users of the GNOME desktop environment are familiar with GDM.
That's your login box.
That's what comes up and kicks everything off.
LightDM is another popular one, Slim.
I think Slim still around is another one, but NoDM is just no frills barebone.
It just kind of circummates that whole login display manager process.
It just says, okay, we're starting the computer, fire up an X session.
As this user go, while it's hugely, hugely insecure, NoDM is a great way to avoid the hassle
of dealing with that full display manager like GDM.
They're not really bad, but they're a little bit more comprehensive and bulky than you
need all the time.
NoDM is extremely lightweight, which is great for my mini-9, which is pretty low resources.
It gets me right into my i3 window manager without a lot of fuss.
If you've got your own custom desktop setup and don't really need to worry about the
security of logging in as a user, for instance, if you're doing a kiosk or if you have your
hard disk encrypted, that will kind of log you as long as it's a single user computer.
Turning on your computer will prompt you for your hard disk encryption password.
That's as much of a login as I need.
NoDM just is a nice way to circumvent all the rest of the stuff and get you straight
to a desktop.
The second package I'd like to discuss is called CMUS.
CMUS is the command, and it's a very comprehensive console-based music player.
It stands for C music player, or the name actually has an asterisk after the C, so it's C star
music player.
Not Koganut Monkey umbrella stand as I thought originally, which is unfortunate, because
that's, you know, I suppose that's fun.
So anyhow, I received CMUS as a recommendation from Chalka-Hom, Chalka-Hom.
His name's Gavin.
He's a member of the Defercast, and he happens to also be on FragDev's GNU social instance,
which is fun.
So I mentioned I was looking for an audio player, and he suggested that one.
CMUS is very, very suitable for the Mini-9 in that it is a lightweight, it's console-based,
and just really fit the application that I was looking for.
It was actually a suggestion for my terrible alarm clock scripts that are still terrible
at the moment.
Maybe I'll do a follow-up episode.
So the interface of CMUS is slightly strange and takes some getting used to.
It's broken up into seven views, which are accessed using the number keys, numbers 1 through
7.
The views are library, sorted library, playlist, play queue, rouser, filters, and settings.
And to be very, very honest, I still don't really understand most of them.
I still haven't given CMUS a fair shake.
It seems like an excellent little utility.
It seems like it would really do just about everything I want it to, but I'm so lazy.
I would love to be able to say that I've got this minimal console-based music player that
I use all the time, but I'm just far too lazy to learn a new audio player.
I'm stuck on audacity, or audacity audacious, which is essentially a clone of XMS or XMMS,
which is a clone of WinAMP, which is what I started using in 96 or whatever.
So as of yet, I'm still stuck in that ELD media player paradigm.
But now that I've mentioned it on an HDR episode, I've reaffirmed my commitment to
trying CMUS.
It's really, really good, and it seems to do everything that I want.
I just need to use it for a week so that I can get used to the commands.
And there's, I feel like there's a pretty decent help system in there as well.
So if I really just used it for a handful of days, I feel like it would be exactly what
I'm looking for.
So this is when to go again saying that I'm going to try CMUS out if it kills me, but not
right now.
Right now I'm recording this episode, so we'll just move on to the next utility.
The next utility is called PA Record, and that's all one word, P-A-R-E-C-O-R-D.
And it stands for Pulse Audio Record.
I'm assuming because it comes with Pulse Audio.
Pulse Audio comes with a bunch of very handy command line utilities that can play and
or record audio from Pulse Audio.
The reason I picked PA Record is because I'm using it to record this episode.
Ordinarily I do all my podcast recording with A record, which is the ALSA utility for
this sort of thing.
But I don't know what I've done or what I've changed, but the last time I tried to record
some audio with a record, Audacity just choked terribly on it.
When I imported it into Audacity, I sounded like a chipmunk, and then Audacity crashed.
So I'm guessing maybe there's some sort of sample rate off, or maybe it's just, there's
I don't know, something wrong with one of Audacity's plugins, but something was not working
with something else, and I'm not going to be bothered by fixing it.
So I'm just going to switch utilities.
Because PA Record is a very nice alternative to A record.
Not only does it do its recording, and it's a nice command line utility, but it also encodes
the file on the fly.
There may be an ALSA equivalent that also encodes your audio, or you could just combine
A record with another utility to convert that audio into something better, or more compact,
or I don't know, any format you want, really.
Something like AV, convert, AV, C-O-N-V would probably do the trick, but PA Record does
everything in a single utility.
So why reinvent the wheel?
Using PA Record, I can specify the file format with the dash, dash, file, dash format flag,
and it just records to flag.
Since we upload our HPR episodes as flag files, this is perfect.
Plus flag is not a lossy format, so it's full quality, just like the wave output that
A record developed, it's just compressed, so it takes up less space.
If you really, really want to record raw audio data, then I don't even know if A record
recorded true raw audio data, it recorded wave data, essentially.
But I don't know enough about audio to know the difference, but anyways, the PA utilities
does have a raw data command called PA Rec, so P-A-R-E-C that will just dump out raw
audio data, but that is pretty far outside of the scope of this podcast, and I just really
don't know anything about that level of audio data.
So I'm going to skip right over it.
So those are three more random utilities.
I hope that you can use at least one or two of them.
They're really helpful to me, except for CMU's, which I have still yet to try, because
I'm a jerk.
And yeah, I hope somebody else finds them useful.
If you've got your own set of utilities that you find useful, why don't you record an
episode and tell me about it, because I've just been sending out recommendations and getting
nothing in return.
So somebody else record one of these blunking episodes.
I would love to hear additional programs that other people find useful.
In conclusion, this has been Windigo recording for Hacker Public Radio.
And if you need to contact me, just go to fragdev.com, it's easiest.
Otherwise, I will wait to hear you on Hacker Public Radio.
You've been listening to Hacker Public Radio at HackerPublicRadio.org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HBR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out
how easy it really is.
Hacker Public Radio was founded by the Digital Dog Pound and the Infonomicon Computer Club,
and is part of the binary revolution at binrev.com.
If you have comments on today's show, please email the host directly, leave a comment on
the website or record a follow-up episode yourself.
Unless otherwise stated, today's show is released on the create of comments, attribution,
share a like, 3.0 license.
