Episode: 1602
Title: HPR1602: An Open Source News Break from Opensource.com
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr1602/hpr1602.mp3
Transcribed: 2025-10-18 05:40:48

---

This episode of HBR is brought to you by AnanasThost.com.
Get 15% discount on all shared hosting with the offer code HBR15.
That's HBR15.
Better web hosting that's Aniston Fair at AnanasThost.com.
Hello, fine folks at Hacker Public Radio.
This is Semiotic Robotic here with another open source news break from opensource.com.
Joining me today is opensource.com content manager Jen Wike.
Hi everyone.
Here are just a few of the stories the opensource.com community has been discussing lately.
First, in our life channel, community moderator and tech writer, Scott Nesbitt,
asks an important question, is open data living up to the hype?
To explore this question, Nesbitt brings us an interview with Nicholas Kaiser-Brill,
co-founder of Journalism Plus Plus, an organization that helps journalists leverage open source tools
to tell stories using large data sets.
Kaiser-Brill walks readers through the open source technologies on which journalism plus
plus tools are based and discusses the way open data gives new organizations a competitive advantage.
He also offers a sobering warning to journalists working with so-called open data from governments.
Governments don't open public data, says Kaiser-Brill. They simply select a set of non-controversial
material that they publish online. Journalists should be extremely careful before reusing a data set
that was proactively published by a government. They need to ask themselves, was a column removed?
Why was this data set published? Are there other data sets on this issue that have not been made
public? And quote, so great interview here from Scott. Great interview from Scott.
Scott is one of our community moderators and he's a great writer and he also has a background
in journalism. So this came in and was a great story based on open source for journalists.
How did he hook up with this with Kaiser-Brill? Do you remember how he got in touch with them?
I don't, I mean, how did this story come about? I'm not sure how it came about to be honest with you.
Scott just has so many connections and stories in the works that this was just one of his many
connections as far as I know and maybe he just knew the story was there and needed to be told.
So he connected with Kaiser-Brill and got this great interview. Yeah, it was an amazing interview.
I really enjoyed reading it and I'm reading a lot more about journalists now doing sort of
data journalism. Data journalism is obviously a large trend right now and it's something that folks
on our side, they come to our side looking for I feel like and it was just great to offer those
folks something to read, which is great. And I guess as con, oh I'm sorry, go ahead.
Yeah, I totally agree. We don't typically cover journalism but honestly the few times that we do,
it does really well on the site. Our readers really pick it up. We covered .rive
several months ago and that is a product that actually one of our local news reports came out with
an open source data product. So it is great to see this content on the site.
Really great. Yeah, really great. And I was at an open source conference about two years ago and
it was almost entirely, it was a small conference but it was almost entirely computer science folks
that were attending this conference. But there was a journalism professor there and I interviewed
her for that conference. I said, what brings you here? And she said the future of open data is the
future of journalism and vice versa. And she said open source values like transparency and
collaborative storytelling and sifting through the ability to sift through open materials.
Those values align very, very well with journalistic values from any era. So she was very,
very interested in this thing called open source and so it was a great, she was a great person to
talk to. And you can see that with, you know, in the very intro of this article, Nesbitt talks
about the New York Times has recently unveiled an open source content management system and they
also recently open source data editor. Yeah, that's right. That's right. If you get a chance to
check those out, I did that earlier today and they're very interesting. Yeah, that sounds cool,
very cool. So this must get you pretty excited when an interview that's this strong,
comes in your content manager at opensource.com. So tell us a little bit about what that means.
What does it mean to be the content manager of open source.com? What kinds of stuff do you do?
So I maintain relationships with our writers. I am their port of contact. So they contact me and
say, hey, I'd really like to write about this. What do you think? And so we brainstorm a little bit
about topic ideas. I also just feel just straight up submissions that come into our web form,
our contact submission form, and review those that give back to people. So basically,
you know, taking articles and whatever stage they're in and turning them into publishable content.
Right. Yeah, content ninja, right? I mean, you can do just about anything with anything as far
as I've seen, right? We get stories from all over the world in all kinds of preparedness,
from short paragraphs saying, I'd like to do a story about this from a full fledged. Here's
an article that I just whipped up today and I want you to edit it and get it on the site. So,
you know, we take stuff from from all over the place and all sorts of readiness.
States of readiness. It's a fun job. It's challenging and I like it that way. Yeah, great, great.
Next up is a tutorial first published by our friends at Fedora magazine writer Joe Brockmeyer teaches
us how to use the open source command line tool pass to save and most importantly, to protect
our passwords. It's never been a good idea to use the same username and password with multiple
services, right? It's Brockmeyer. But in today's world, it's potentially disastrous. So Brockmeyer
suggests the tiny but effective pass for creating an encrypted file containing all of your passwords.
The application hooks into tried and true utilities like GNU PG and PW Gen to automatically generate
difficult to crack passwords and stash them in a local encrypted master file. Users can even
manage versions of this file with Gid. I've been using pass for some time now and it's been a
life saver, Brockmeyer says. I hope it serves you as well as it has me end quote. So, Jen,
how do you store your passwords? How do you remember them all? I used last pass. Last pass, okay.
He was using a Google dot before and now using last pass. So I feel good about it. So in his last
pass, I don't use last pass, but I've been meeting to to check it out. Does it automatically generate
passwords for you? It does not. Okay. So you generate your own password and it stores it
encryptedly for you. You know what? I shouldn't. I don't know 100% sure if it does not because it
possibly could, but we, I did not do it that way. Okay. Gotcha. So you create your own and then
you stash them in there and it encrypts them and keeps them safe. Right. Very cool. And so there's
a pass phrase to get in. Right. Right. Right. And last pass. Is that open source? Is last pass
a source? I don't think so. Oh, okay. All right. Great. So I know there's last pass and there's
last pass. Which one were you saying? Last pass. Last pass. I thought there was another one called
last pass, but I'll have to check that one out sometime. But, yeah. This is a, you know, podcast
goal right here is Jen and I get on our computers and start googling and start googling for password
management tools. But I could be very wrong. But last pass is what I've heard most people use and
I think I'm going to get my parents on this. Right. And their Christmas gift is going to be a,
it's a yearly subscription fee to use last pass or not. I'm using the free version. Okay. Okay.
And it's, it's great. It, you know, pops up whenever you enter a password and ask you to save
and then it remembers your passwords for you and. Gotcha. It's very convenient. Yeah. Well,
this was a great, um, great article for opensource.com, uh, on pass and, uh, it did really well on the site.
Right. It did very well. Yeah. Um, we occasionally repost content that's been previously written
and published elsewhere, um, that might do well on the site with partners of ours and Fedora
Magazine is one of those great partners. Um, and it did very well. We had a lot of people interested
in passwords as is, I guess not too much of a surprise, you know, security is a big issue right now
and we've seen some kind of crazy things happening. Yes. To passwords. So, yeah, it's top of mind,
I think, for people. I think that's, uh, well put and, um, you know, I think that, uh, you know,
doing it the open source way, doing password management, the open source way has been, it was a,
it was a nice hook for people. Um, we had a lot of folks in the comments recommending their favorite
tools. We had a lot of folks in the comments trying to, um, think about holes in the past system,
right? So is this system secure? Here's, well, here's how, here's one way that it might be
insecure, right? Right. Which is the great sort of cat and mouse mental game you get to play with
yourself and with others when you're talking about any security solution or any kind of password
management solution. But what's really great about this article is that it's, it's, um, it does
a command pass as a command line tool. Uh, and so it's great for folks who spend a lot of time in
the shell. It's great for folks who spend a lot of time in the command line. But the tutorial
makes it super, super easy to understand, um, you know, Braggmire just did a great, great job,
um, giving readers step by step instructions, which for our readers is something that we want to
provide. I mean, opensource.com, obviously, interested in helping folks who are new to open
source, who are exploring open source, um, and sort of empower them to, to learn more and to do
more with open source tools. And that's why we love articles like this is because it, you know,
the reason is, is because it takes something that seems like it could be a herculean task,
like managing hundreds of passwords, uh, with that, with, from an interface that doesn't even
have pictures, uh, and, and makes it so super easy. So I think that's another reason why I did
really well. No, that's exactly right. A lot of what we try to do on the site is demystify open
source. Mm-hmm. And so articles like this, um, help us do that. Yep. Well put.
And finally, Jen brings us an interview with Zack Supala of open source electronics company,
Spark, makers of Spark Core, a development kit for open Wi-Fi, on a Wi-Fi enabled devices.
Supala explains his company's incredible success on Kickstarter and shows us its newest project,
a nest-like thermostat you can build yourself. All the plans and the software are online.
Just visit spark.io. I think that electronic, the electronics world has been proprietary for a long
time, Supala told Jen, but open source is taking its hold and will eventually play a huge role,
just like it does in software. The internet is built on open source underpinnings like
GNU Linux, and I hope that soon the hardware world will be too, he said. Great interview.
Great interview. Zack is an interesting guy doing some great stuff in open hardware,
and if you get a chance to check out this article or check out spark.io, there's a neat video on
homepage explaining how he's building some neat products for the internet of things, which is
another topic of interest for people right now. Yes, absolutely. Absolutely. And not a day or two
after we published this interview initially, when we initially published it, we read that spark
did very well. It was raising some venture capital, $4.9 million. That's right.
So there's a future in open electronics, I think. I think so too. It does seem like another
interesting point on this interview is that Zack's father is deaf, and so that's where he got his
start in his business to connect products and hardware. So in your interview, he's talking about
that his initial design, and what was that design for his deaf father? It was called the spark
socket. And he put that on Kickstarter. It didn't do so well, but he has a great point about
Kickstarter is that you can learn what people want from Kickstarter. If it doesn't do well,
it's not such a bad thing because you're testing your product with prototyping and iterations
and the open source way of creating and building. So then he created spark core, which did wonderful
and Kickstarter had, let's see, they were asking for 10k and they raised over $600,000 in 30 days.
Yeah, in 30 days. That was obviously not too shabby. People wanted.
Yes, right. And the thermostat, of course, really huge right now when we're talking about,
you know, it says everybody's comparing it to NEST, right, the recent Google acquisition.
But it's a neat little thermostat. Home automation is just, on everybody's mind right now,
in terms of, because Google was introducing their sort of home management solution in their
rumors that Apple's going to enter that market and home automation. And as you said, the internet
of things earlier, it just really, really trendy right now, right? So, right, it's like it's the
next big thing is, you know, how do we take the internet off of our laptops and into our homes?
Right, right. And now you can build your own internet enabled appliances and electronics where
all the code is open. So folks who are worried about, for example, whether or not their thermostat
is collecting data about them and reporting it to advertisers or other companies can rest
more easily now if they can build their own open source and open hardware thermostat, which is,
which is really neat. It's also neat because you have the concern that things are going to be too
expensive for everybody to have. And so, open sourcing them and allowing other people to build them,
produces cost and hopefully opens up the technology to everyone. And what a cool project to do with
your family, for example. Yeah, very fun. And then when people come over, I mean, the thermostat's
out. It's out in the open. So people can comment on it. You can show it off. You can show off your
project and it has some utility. You know, it's pretty neat. It's really neat. And there's, of course,
as part of the article and the links we have coming from the article, you can see the thermostat
in action. And you can see, you know, folks putting mirrors together and you can see, you know,
the boards and the circuit designs and everything. Even the laser, the laser cutting, it's neat to watch.
It is very neat. Well, folks, that's all for this open source news break from opensource.com.
My thanks to openstores.com content manager Jen White for chatting with me today.
Jen, while you tell everybody how they can get in touch with us and how they can submit their
stories to opensource.com where they can find us online. Absolutely. Please do. If you would
like to submit your open source story to us, please email us at osdc-admin at redhat.com.
You can find those links at the top of our homepage at the submit your story page.
And we would love to hear from you. Great. Sounds wonderful. And as always, folks, you can follow us
on, like us on Facebook and follow us on Twitter at opensourceway. You'll find links to the stories
we've discussed in this show, in the show notes for this episode. Until next time, HPR friends,
this is semiatic robotic wishing you peace, love, and open source.
You've been listening to Hacker Public Radio at Hacker Public Radio dot org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HPR listener like yourself.
If you ever thought of recording a podcast, then click on our contributing to find out how
easy it really is. Hacker Public Radio was founded by the digital dog pound and the
infonomican computer club and is part of the binary revolution at binrev.com. If you have
comments on today's show, please email the host directly, leave a comment on the website
or record a follow-up episode yourself. Unless otherwise status, today's show is released on
creative comments, attribution, share a light, 3.0 license.
