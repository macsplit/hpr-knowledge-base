Episode: 3442
Title: HPR3442: What is this thing called science
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr3442/hpr3442.mp3
Transcribed: 2025-10-24 23:31:33

---

This is Hacker Public Radio Episode 3442 Fortuzzi, the 12th of October 2021.
Today's show is entitled, What Is This Thing Called Science?
It is hosted by Klaatu and is about 13 minutes long and carries a clean flag.
The summary is, critical thinking is only part of the equation.
Here's the other part.
This episode of HBR is brought to you by an honest host.com.
Get 15% discount on all shared hosting with the offer code HBR-15.
That's HBR-15.
Better web hosting that's honest and fair at An Honesthost.com.
Hey everybody, this is Klaatu.
You're listening to Hacker Public Radio some time ago.
I did some episodes in which I ostensibly demonstrated how to create a PDF
with Scribus, an open source application for page layout.
Secretly, I was actually demonstrating how unexpected payloads could be embedded into a PDF file.
So this episode that you're listening to right now is a direct response to episode 34-14,
which came up on the Hacker Public Radio mailing list recently.
If you're not on the Hacker Public Radio mailing list, you should subscribe.
It's low traffic, but some important discussions happen on it, such as this one.
So my question for this episode, the one that you're listening to,
did the PDF I upload as part of that Scribus episode no longer contain a payload?
If the listener who downloaded it wasn't aware that the payload existed.
I'll leave you with that question for a little while and talk about something else.
For instance, I've been diagnosed, shall we say, by educators as a lifelong learner,
which as far as I can tell is kind of a buzzword within the educational sector,
referring to someone who takes pleasure in learning new things.
I think the term to us would just be Hacker, people who enjoy learning and exploring new ideas,
taking apart gadgets to see what makes them tick, reverse engineering, code and data,
to understand how it gets processed, whatever else.
The thing about being a hacker or a lifelong learner, whatever you want to call it,
is that there's a lot of stuff out there that wants to be hacked or learned,
and it turns out that it's just not possible to learn everything.
Sometimes you're just out of your depth.
It can be tricky to recognize when you're out of your depth,
and I think there's a certain learnable skill to knowing when you don't know something.
There's a lot of value to this skill because when you can recognize
that you don't have expertise on something, you're able to learn,
you're able to look around you and find someone else who does have that expertise,
and then you can learn from them.
In my own humdrum life before getting a full-time job at a tech company,
I was commissioned on several occasions to build infrastructure for one thing or another.
I've built infrastructure for video game development for an indie radio station,
various multimedia projects, and so on, and when I took those roles, I became really the
resident expert. People turned to me for the authoritative word on what technological solutions
should be used. When I told them, they were more or less obligated to listen because that was
the role that I'd been hired to do. If they were to ask me what a workstation should run,
and I said Linux, but they went and bought a Mac instead, then my role would have been pretty
much inarguably redundant. They could just as easily type their question into a search engine
on the internet and then ignore the result, or they could roll a die or whatever. In those cases,
it's a question of my opinion compared to someone else's opinion. Both are valid because I was the
architect, my opinion mattered more to the long-term plan, but I mean it's just a long-term plan,
you can change it. So if we had changed the long-term plan from having a highly available cluster
for fast 3D model rendering to having workstations with a familiar desktop, then my opinion would
have been less valid. There are some areas in life, though, where the opinions don't matter,
and specifically that area is science. Okay, so science, what is that? People talk about science a lot,
but it took me honestly a long time, especially because I came largely from sort of, I guess,
what you would call an artistic background. It took me forever to comprehend the significance of
the term science, much less how it worked. I find it helpful to just forget all about the stuff
in high school and the pop dieticians and pop physicists that we see in bookstores and stuff.
Science is a framework, and I know framework is a little bit of a buzzword in tech as well,
but for me that makes sense. Science is a framework. It's a set of principles designed to help our
human brains hack the world around us in a methodical and precise and exact way. Instead of
letting our opinions, which may or may not be relevant, depending on whatever the long-term goal
is or whatever, instead of opinions influencing the conclusions and decisions that we make science
looks at the results of controlled input and output. Wait a minute, input and output. Those are
words we understand. Those are computer terms. Yeah, as it turns out, computers are the product of
science, and in fact, building computers and programming computers is a form of computer science.
Those are just words we made up, but they reveal a lot about what we computer hackers do all day,
because computers don't understand the influence of opinion or your force of will or the power of
faith. Computers are a form of a product of science. They take input, they produce output, and they do
this very, very reliably. I don't know whether you've ever tried, but it's really hard to build
to make a computer. Comprehending how a CPU processes rudimentary electrical pulses to
transform them into complex instruction sets is, at least to me, mind bending. I've sat down,
thought about it critically. I've set up a few experiments, and I'm not even kidding. I've
set up a few experiments. There's one that you can do with dominoes, believe it or not, that
can help you build a logic circuit out of dominoes. There's a, it's on YouTube number file,
go check it out. It's fascinating stuff. There's a touring machine you can build with magic
the gathering cards. There's an electronics kit that will help you build an eight-bit computer out
of just like electrical components. But even with all those experiments, the, say, open
risk 5 CPU still eludes my comprehension. And just to be clear, back in 2008 or so,
I was hired to stress test a risk CPU, not risk 5, but a risk architecture CPU to determine
whether it was efficient at rendering massive amounts of video. I designed tests because I was
paid to in an attempt to prove that a risk CPU could not outperform the latest Intel Core 2 Duo,
I think, or maybe it was the Intel Z on. And I was not able, I don't remember. I wasn't able to
achieve that goal. Risk did turn out to be better for that specific task. So my affinity for risk
is far from just a passing interest. I have a vested interest in risk. It's something that I'm
very fond of, but I cannot build a risk 5 or even really explain how risk 5 works. For that,
I understand that there are experts. These aren't just people I call experts because it's labeled
that way on their shirt pocket. Like, these are experts because they're building the risk 5.
It demonstrably works. I met some of them back at OS, was it OS-Scon? I think OS-Scon. In 2019,
I recognized their expertise because they're proving their knowledge. So let's say I had approached
the risk 5 booth with the preconception that X86 was superior. After all, why would most consumer
computers be running X86 if they weren't the best? I might be skeptical if I were told by
the reps that risk 5 is superior for some tasks. I might think maybe they have ulterior motives. Could
they have been paid off by big silicon to lie about risks performance in order to hurt X86
market share? Yeah, it could happen. And that skepticism is important. It's arguably part of the
scientific... Well, it is part of the scientific process. Look at the results of an experiment,
replicate the input and ensure that the output is reliably the same, and then you're part of
the scientific process. Just standing there and saying that you doubt the veracity of these
experiments, that's not part of the scientific process. You have to take it that extra step and
actually demonstrate how the output is different under the same conditions. And you just can't be
sure until you've duplicated the experiments that make the claim in the first place. In a lot of
the cases that I'm talking about here, like the high up cases, this requires like controlled
environments and possibly some pre-high end equipment. And you know, I'm never going to do that.
I'm never going to have access to those resources. I'm not going to be able to sit down and have
the understanding of all the potential variables involved. I just don't have that expertise,
but I'm willing to trust the expertise of a lot of people from all over the world working on,
for instance, the Risk 5 Project. I'm going to trust that because they all agree on similar
findings that they're saying about the design and architecture of this CPU that there's a
high likelihood that their findings are indeed correct. And the same goes as it turns out for
biological sciences. No matter how many one-off experiments discover that, I don't know, cigarette
smoking is beneficial for your health. The wider scientific consensus is that it's harmful. No
matter how many free thinkers on the internet discover that COVID-19 is actually no worse than
the common cold, the worldwide scientific community asserts that it's actually quite harmful.
And medical staffs across the globe assert that increased cases of COVID-19 cause bed
and healthcare shortages for everyone else. Somebody online may assert that it's an impossible
unified globe-spanning political plot, but that relies on a bunch of untestable opinions and
interpretations of reality that fall well outside any scientific framework. And it seems to me that
this line of speculation makes about as much sense as asking whether your computer CPU can really
still add numbers accurately. I mean, couldn't it occasionally be lying to you? The device you're
using to listen to my voice right now and trusting not to scramble what I'm saying and accurately
play what I recorded in the first place is based on the same scientific principles used by those
in biological sciences. We're feeding data into functions whether that function is written in
code forged in silicon or written on paper as a mathematical formula. We're doing that and we're
observing the results. When every expert in their field across the entire globe agrees on the
output, I think we do too. It's either that or we'd better all go start building our own eight-bit
circuits out of chicken wire and batteries and just start to rebuild from the ground up. So the
PDF that I uploaded as part of my scribus experiment, even if a listener downloaded that PDF,
even if they they looked for a hidden file for some reason. I don't know why they would have,
but if they had, they could have investigated. They could have felt pretty good about that PDF.
They might have been very, very confident about their findings. They could have recorded
an episode about how how outstanding Clatu was and how Clatu was totally not a liar and totally
didn't upload a PDF containing embedded data. In the end, you and I know with the benefit of
hindsight that that listener would be incorrect. Their experiments, whatever those experiments would
have been, would have been insufficient to reveal the secret thing that I had done to that PDF.
The payload did exist, but it was just outside this imaginary listener's detection or comprehension.
Critical thinking is important. It'll get you very far in life, but at the same time,
the scientific framework requires more than just critical thinking. Just as building a risk-five
process or takes a heck of a lot more than just being a fan of the risk architecture and solving
the COVID-19 crisis takes a lot more than just critical thinking and a couple of backyard experiments.
We're not in the dark ages anymore, folks. Go get vaccinated and stay safe. Thanks for listening.
I'll talk to you next time.
You've been listening to Hacker Public Radio at Hacker Public Radio dot org.
We are a community podcast network that releases shows every weekday, Monday through Friday.
Today's show, like all our shows, was contributed by an HPR listener like yourself.
If you ever thought of recording a podcast and click on our contributing to find out how easy it
really is, Hacker Public Radio was founded by the digital dot org pound and the Infonomicon
Computer Club and is part of the binary revolution at binrev.com. If you have comments on
today's show, please email the host directly, leave a comment on the website or record a follow-up
episode yourself. Unless otherwise status, today's show is released under Creative Commons,
Attribution, ShareLight, free dot org license.
