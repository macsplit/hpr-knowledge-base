Episode: 268
Title: HPR0268: Lightweight Web Browsing With Arora
Source: https://hub.hackerpublicradio.org/ccdn.php?filename=/eps/hpr0268/hpr0268.mp3
Transcribed: 2025-10-07 15:05:05

---

Thanks for watching!
Hey, it's Steve Geek and welcome to another episode of Hacker Public Radio.
Today let's discuss the problem of inter-web browsing and follow it up with a quick review
of a lightweight inter-web browser called Aurora.
When it comes to the concept of lightweight applications and web browsing, we come to
the crux of a problem, the problem challenges the concept of running a lightweight system
itself.
One problem is the flexibility of the concept itself.
One person's idea of lightweight is a matter of opinion that differs from person to person.
I always love to read descriptions of Firefox, by the way, I'm a devian guy, so for me
that's ice-weasel, but that's another story.
Firefox considers itself to be a lightweight browser.
I personally don't consider anything that takes a few seconds to launch to be a lightweight
myself.
In order to understand this situation, we need to get philosophical and look at a quick
history of the web browser situation.
Back in the 90s, things were very different.
First, the free software scene was not as well developed as it is today, so it was not
ready for prime time yet.
However, already, this satisfaction with Microsoft's monopoly practices was developing.
Along came the Netscape browser, which owed its origins to the Mosaic browser, and it
threatened Microsoft.
This threat was known as the middle-west threat.
Because you could run things inside of a web browser in order to escape Microsoft software,
yes, it was a prototypical concept for what we now call cloud computing.
The feature set of the browser was aggressively expanded to encourage this.
Now Firefox, which is a descendant of Netscape, is tuning its code, so it runs with less
and less resource waste.
Also, looking back, the expectations of the Intel web have changed.
There is still a place for old-school basic HTML for informational sites, but for things
like web banking, shopping, and forums, flat file HTML no longer cuts it.
This last idea allows me to segue nicely into our software review.
I currently have a need for Firefox as my heavy browser, but I need something light for
my day-to-day needs.
So I use Aurora now.
Let me spell it for you.
Alpha, Romeo, Oscar, Romeo, Alpha, Aurora is lightweight, written only 10,000 lines of
code and based on the WebKit rendering engine.
Why WebKit?
Well, it's a matter of preference.
When I switched to Linux, I used Conqueror, which used its own Freedom Orient rendering
engine.
This engine was forked by Apple for this far browser, but is usable by other products.
Aurora was originally a little demo program for the QT application projects, but grew to
be a usable day-to-day browser.
I don't like to run a full-blown browser when I'm just running around the interweb.
Call me a paranoid, but you may run a script on my interweb browser only when I give you
permission.
Aurora allows me to configure a JavaScript-less cookie list and flash-turbation list experience
I need for my interweb running around.
Aurora has a private browsing mode.
This mode does not do the following, store cookie data, cache icons, store browser history
items.
That's a pretty sweet feature for the privacy conscious.
However, it still has features you expect, like regular handling of bookmarks, a little
download manager.
You can have JavaScript, but it's a little spotty, as they say.
It does cookies, too, allowing you to choose between a few different popular behaviors
for cookie management.
Why a WebKit-based browser?
Well, like I said, I originally used Conquer extensively, so the way Conquer renders
a web page is the way my brain thinks the interweb should look.
The major engines for web browsing are Trident for Microsoft Line, Presto for the Opera
Line, Gecko for the Mosaic Netscape Firefox Line, and WebKit-KHGML for the Conqueror Safari
Aurora line of browsers.
My geek tidbit for today is a quick look at some interesting add-on web browsing technology.
If, like me, you keep a command line browser on your system as an alternate, you may want
to check out the Surf Roar Package.
Surf Roar makes text web searching a faster-than-light experience.
By converting popular search engines into commands, for example, you can use Surf Roar's
Google tool to just launch Google's highest ranked web page for a search query without
images and ads, and not having to stop first at Google.
This is a blink of the eye exercise in information retrieval.
An important add-on for Firefox is the user agent's switcher, browsers identify what they
are to websites they visit.
This tool allows you to circumvent pages written with this.
This page is only for Internet Explorer users' mentality.
Really, these pages will be just fine if only you set up your browser to lie to them
about what software you run.
For added fun, you can try to impersonate Google search robot as you surf the interweb.
If you ever want to kidnap a few web designers who make these pages and chain them to terminal
browsing the web using rat poison and links, let me know.
I'm up for it.
The Uber Paranoid Geeks Firefox is just not complete without running the no-scripts plugin
on it.
Browse the interweb script list until you whitelist only a few domains to run scripts and flash
on your system.
Thanks for listening.
I hope you enjoyed it.
Happy anniversary Hacker Public Radio, and thanks for listening to me and the series.
So head on over to C-A-R-O dot-A-T for all of those of you.
Thank you very much for listening to C-A-R-O dot-A-T.
